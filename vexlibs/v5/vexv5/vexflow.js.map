{"version":3,"file":"vexflow.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/glyphs.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./entry/vexflow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let midLine = b + (a - b) / 2;\n    if (midLine % 2 > 0) {\n        midLine = roundN(midLine * 10, 5) / 10;\n    }\n    return midLine;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * @param s\n * @returns `s` with the first letter capitalized.\n */\nexport function upperFirst(s = '') {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n/**\n * Return the sum of an array of numbers.\n */\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// @author Joshua Koo / @zz85\n// @author @incompleteopus\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _Fraction_fractionA, _Fraction_fractionB;\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(compare).simplify();\n        const b = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionB).copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n_a = Fraction;\n// Cached objects for comparisons.\n_Fraction_fractionA = { value: new Fraction() };\n_Fraction_fractionB = { value: new Fraction() };\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// This file was generated by `glyph_codes.js'\n// The enum includes all SMuFL glyphs, and a few others that VexFlow uses.\n// See the list of SMuFL glyphs:\n//   https://w3c.github.io/smufl/latest/tables/\n//   https://raw.githubusercontent.com/w3c/smufl/gh-pages/metadata/glyphnames.json\n// We renamed the two SMuFL names that start with a digit:\n//   4stringTabClef => fourStringTabClef\n//   6stringTabClef => sixStringTabClef\n//\nexport var Glyphs;\n(function (Glyphs) {\n    ////// SPECIAL GLYPHS ///////////////////////////////////////\n    // Null character\n    Glyphs[\"null\"] = \"\\0\";\n    ////// SMuFL GLYPHS /////////////////////////////////////////\n    // U+E06E  4-string tab clef\n    Glyphs[\"fourStringTabClef\"] = \"\\uE06E\";\n    // U+E06D  6-string tab clef\n    Glyphs[\"sixStringTabClef\"] = \"\\uE06D\";\n    // U+E30D  11 large diesis down, 3° down [46 EDO]\n    Glyphs[\"accSagittal11LargeDiesisDown\"] = \"\\uE30D\";\n    // U+E30C  11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO]\n    Glyphs[\"accSagittal11LargeDiesisUp\"] = \"\\uE30C\";\n    // U+E30B  11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down\n    Glyphs[\"accSagittal11MediumDiesisDown\"] = \"\\uE30B\";\n    // U+E30A  11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up\n    Glyphs[\"accSagittal11MediumDiesisUp\"] = \"\\uE30A\";\n    // U+E3AB  11:19 large diesis down\n    Glyphs[\"accSagittal11v19LargeDiesisDown\"] = \"\\uE3AB\";\n    // U+E3AA  11:19 large diesis up, (11:19L, apotome less 11:19M)\n    Glyphs[\"accSagittal11v19LargeDiesisUp\"] = \"\\uE3AA\";\n    // U+E3A3  11:19 medium diesis down\n    Glyphs[\"accSagittal11v19MediumDiesisDown\"] = \"\\uE3A3\";\n    // U+E3A2  11:19 medium diesis up, (11:19M, 11M plus 19s)\n    Glyphs[\"accSagittal11v19MediumDiesisUp\"] = \"\\uE3A2\";\n    // U+E397  11:49 comma down\n    Glyphs[\"accSagittal11v49CommaDown\"] = \"\\uE397\";\n    // U+E396  11:49 comma up, (11:49C, 11M less 49C)\n    Glyphs[\"accSagittal11v49CommaUp\"] = \"\\uE396\";\n    // U+E395  143 comma down\n    Glyphs[\"accSagittal143CommaDown\"] = \"\\uE395\";\n    // U+E394  143 comma up, (143C, 13L less 11M)\n    Glyphs[\"accSagittal143CommaUp\"] = \"\\uE394\";\n    // U+E343  17 comma down\n    Glyphs[\"accSagittal17CommaDown\"] = \"\\uE343\";\n    // U+E342  17 comma up, (17C)\n    Glyphs[\"accSagittal17CommaUp\"] = \"\\uE342\";\n    // U+E393  17 kleisma down\n    Glyphs[\"accSagittal17KleismaDown\"] = \"\\uE393\";\n    // U+E392  17 kleisma up, (17k)\n    Glyphs[\"accSagittal17KleismaUp\"] = \"\\uE392\";\n    // U+E399  19 comma down\n    Glyphs[\"accSagittal19CommaDown\"] = \"\\uE399\";\n    // U+E398  19 comma up, (19C)\n    Glyphs[\"accSagittal19CommaUp\"] = \"\\uE398\";\n    // U+E391  19 schisma down\n    Glyphs[\"accSagittal19SchismaDown\"] = \"\\uE391\";\n    // U+E390  19 schisma up, (19s)\n    Glyphs[\"accSagittal19SchismaUp\"] = \"\\uE390\";\n    // U+E3F5  1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down\n    Glyphs[\"accSagittal1MinaDown\"] = \"\\uE3F5\";\n    // U+E3F4  1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up\n    Glyphs[\"accSagittal1MinaUp\"] = \"\\uE3F4\";\n    // U+E3F9  1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down\n    Glyphs[\"accSagittal1TinaDown\"] = \"\\uE3F9\";\n    // U+E3F8  1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up\n    Glyphs[\"accSagittal1TinaUp\"] = \"\\uE3F8\";\n    // U+E371  23 comma down, 2° down [96 EDO], 1/8-tone down\n    Glyphs[\"accSagittal23CommaDown\"] = \"\\uE371\";\n    // U+E370  23 comma up, (23C), 2° up [96 EDO], 1/8-tone up\n    Glyphs[\"accSagittal23CommaUp\"] = \"\\uE370\";\n    // U+E39F  23 small diesis down\n    Glyphs[\"accSagittal23SmallDiesisDown\"] = \"\\uE39F\";\n    // U+E39E  23 small diesis up, (23S)\n    Glyphs[\"accSagittal23SmallDiesisUp\"] = \"\\uE39E\";\n    // U+E307  25 small diesis down, 2° down [53 EDO]\n    Glyphs[\"accSagittal25SmallDiesisDown\"] = \"\\uE307\";\n    // U+E306  25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO]\n    Glyphs[\"accSagittal25SmallDiesisUp\"] = \"\\uE306\";\n    // U+E3F7  2 minas down, 65/77-schismina down, 0.83 cents down\n    Glyphs[\"accSagittal2MinasDown\"] = \"\\uE3F7\";\n    // U+E3F6  2 minas up, 65/77-schismina up, 0.83 cents up\n    Glyphs[\"accSagittal2MinasUp\"] = \"\\uE3F6\";\n    // U+E3FB  2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down\n    Glyphs[\"accSagittal2TinasDown\"] = \"\\uE3FB\";\n    // U+E3FA  2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up\n    Glyphs[\"accSagittal2TinasUp\"] = \"\\uE3FA\";\n    // U+E30F  35 large diesis down, 2° down [50 EDO], 5/18-tone down\n    Glyphs[\"accSagittal35LargeDiesisDown\"] = \"\\uE30F\";\n    // U+E30E  35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up\n    Glyphs[\"accSagittal35LargeDiesisUp\"] = \"\\uE30E\";\n    // U+E309  35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down\n    Glyphs[\"accSagittal35MediumDiesisDown\"] = \"\\uE309\";\n    // U+E308  35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up\n    Glyphs[\"accSagittal35MediumDiesisUp\"] = \"\\uE308\";\n    // U+E3FD  3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down\n    Glyphs[\"accSagittal3TinasDown\"] = \"\\uE3FD\";\n    // U+E3FC  3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up\n    Glyphs[\"accSagittal3TinasUp\"] = \"\\uE3FC\";\n    // U+E3A9  49 large diesis down\n    Glyphs[\"accSagittal49LargeDiesisDown\"] = \"\\uE3A9\";\n    // U+E3A8  49 large diesis up, (49L, ~31L, apotome less 49M)\n    Glyphs[\"accSagittal49LargeDiesisUp\"] = \"\\uE3A8\";\n    // U+E3A5  49 medium diesis down\n    Glyphs[\"accSagittal49MediumDiesisDown\"] = \"\\uE3A5\";\n    // U+E3A4  49 medium diesis up, (49M, ~31M, 7C plus 7C)\n    Glyphs[\"accSagittal49MediumDiesisUp\"] = \"\\uE3A4\";\n    // U+E39D  49 small diesis down\n    Glyphs[\"accSagittal49SmallDiesisDown\"] = \"\\uE39D\";\n    // U+E39C  49 small diesis up, (49S, ~31S)\n    Glyphs[\"accSagittal49SmallDiesisUp\"] = \"\\uE39C\";\n    // U+E3FF  4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down\n    Glyphs[\"accSagittal4TinasDown\"] = \"\\uE3FF\";\n    // U+E3FE  4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up\n    Glyphs[\"accSagittal4TinasUp\"] = \"\\uE3FE\";\n    // U+E345  55 comma down, 3° down [96 EDO], 3/16-tone down\n    Glyphs[\"accSagittal55CommaDown\"] = \"\\uE345\";\n    // U+E344  55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up\n    Glyphs[\"accSagittal55CommaUp\"] = \"\\uE344\";\n    // U+E303  5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down\n    Glyphs[\"accSagittal5CommaDown\"] = \"\\uE303\";\n    // U+E302  5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up\n    Glyphs[\"accSagittal5CommaUp\"] = \"\\uE302\";\n    // U+E401  5 tinas down, 7⁴/25-schismina down, 0.72 cents down\n    Glyphs[\"accSagittal5TinasDown\"] = \"\\uE401\";\n    // U+E400  5 tinas up, 7⁴/25-schismina up, 0.72 cents up\n    Glyphs[\"accSagittal5TinasUp\"] = \"\\uE400\";\n    // U+E349  5:11 small diesis down\n    Glyphs[\"accSagittal5v11SmallDiesisDown\"] = \"\\uE349\";\n    // U+E348  5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C)\n    Glyphs[\"accSagittal5v11SmallDiesisUp\"] = \"\\uE348\";\n    // U+E3AD  5:13 large diesis down\n    Glyphs[\"accSagittal5v13LargeDiesisDown\"] = \"\\uE3AD\";\n    // U+E3AC  5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M)\n    Glyphs[\"accSagittal5v13LargeDiesisUp\"] = \"\\uE3AC\";\n    // U+E3A1  5:13 medium diesis down\n    Glyphs[\"accSagittal5v13MediumDiesisDown\"] = \"\\uE3A1\";\n    // U+E3A0  5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C)\n    Glyphs[\"accSagittal5v13MediumDiesisUp\"] = \"\\uE3A0\";\n    // U+E373  5:19 comma down, 1/20-tone down\n    Glyphs[\"accSagittal5v19CommaDown\"] = \"\\uE373\";\n    // U+E372  5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up\n    Glyphs[\"accSagittal5v19CommaUp\"] = \"\\uE372\";\n    // U+E375  5:23 small diesis down, 2° down [60 EDO], 1/5-tone down\n    Glyphs[\"accSagittal5v23SmallDiesisDown\"] = \"\\uE375\";\n    // U+E374  5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up\n    Glyphs[\"accSagittal5v23SmallDiesisUp\"] = \"\\uE374\";\n    // U+E3A7  5:49 medium diesis down\n    Glyphs[\"accSagittal5v49MediumDiesisDown\"] = \"\\uE3A7\";\n    // U+E3A6  5:49 medium diesis up, (5:49M, half apotome)\n    Glyphs[\"accSagittal5v49MediumDiesisUp\"] = \"\\uE3A6\";\n    // U+E301  5:7 kleisma down\n    Glyphs[\"accSagittal5v7KleismaDown\"] = \"\\uE301\";\n    // U+E300  5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C)\n    Glyphs[\"accSagittal5v7KleismaUp\"] = \"\\uE300\";\n    // U+E403  6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down\n    Glyphs[\"accSagittal6TinasDown\"] = \"\\uE403\";\n    // U+E402  6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up\n    Glyphs[\"accSagittal6TinasUp\"] = \"\\uE402\";\n    // U+E305  7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down\n    Glyphs[\"accSagittal7CommaDown\"] = \"\\uE305\";\n    // U+E304  7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up\n    Glyphs[\"accSagittal7CommaUp\"] = \"\\uE304\";\n    // U+E405  7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down\n    Glyphs[\"accSagittal7TinasDown\"] = \"\\uE405\";\n    // U+E404  7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up\n    Glyphs[\"accSagittal7TinasUp\"] = \"\\uE404\";\n    // U+E347  7:11 comma down, 1° down [60 EDO], 1/10-tone down\n    Glyphs[\"accSagittal7v11CommaDown\"] = \"\\uE347\";\n    // U+E346  7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO]\n    Glyphs[\"accSagittal7v11CommaUp\"] = \"\\uE346\";\n    // U+E341  7:11 kleisma down\n    Glyphs[\"accSagittal7v11KleismaDown\"] = \"\\uE341\";\n    // U+E340  7:11 kleisma up, (7:11k, ~29k)\n    Glyphs[\"accSagittal7v11KleismaUp\"] = \"\\uE340\";\n    // U+E39B  7:19 comma down\n    Glyphs[\"accSagittal7v19CommaDown\"] = \"\\uE39B\";\n    // U+E39A  7:19 comma up, (7:19C, 7C less 19s)\n    Glyphs[\"accSagittal7v19CommaUp\"] = \"\\uE39A\";\n    // U+E407  8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down\n    Glyphs[\"accSagittal8TinasDown\"] = \"\\uE407\";\n    // U+E406  8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up\n    Glyphs[\"accSagittal8TinasUp\"] = \"\\uE406\";\n    // U+E409  9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down\n    Glyphs[\"accSagittal9TinasDown\"] = \"\\uE409\";\n    // U+E408  9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up\n    Glyphs[\"accSagittal9TinasUp\"] = \"\\uE408\";\n    // U+E3F2  Acute, 5 schisma up (5s), 2 cents up\n    Glyphs[\"accSagittalAcute\"] = \"\\uE3F2\";\n    // U+E335  Double flat, (2 apotomes down)[almost all EDOs], whole-tone down\n    Glyphs[\"accSagittalDoubleFlat\"] = \"\\uE335\";\n    // U+E3E9  Double flat 11:49C-up\n    Glyphs[\"accSagittalDoubleFlat11v49CUp\"] = \"\\uE3E9\";\n    // U+E3EB  Double flat 143C-up\n    Glyphs[\"accSagittalDoubleFlat143CUp\"] = \"\\uE3EB\";\n    // U+E365  Double flat 17C-up\n    Glyphs[\"accSagittalDoubleFlat17CUp\"] = \"\\uE365\";\n    // U+E3ED  Double flat 17k-up\n    Glyphs[\"accSagittalDoubleFlat17kUp\"] = \"\\uE3ED\";\n    // U+E3E7  Double flat 19C-up\n    Glyphs[\"accSagittalDoubleFlat19CUp\"] = \"\\uE3E7\";\n    // U+E3EF  Double flat 19s-up\n    Glyphs[\"accSagittalDoubleFlat19sUp\"] = \"\\uE3EF\";\n    // U+E387  Double flat 23C-up, 14° down [96 EDO], 7/8-tone down\n    Glyphs[\"accSagittalDoubleFlat23CUp\"] = \"\\uE387\";\n    // U+E3E1  Double flat 23S-up\n    Glyphs[\"accSagittalDoubleFlat23SUp\"] = \"\\uE3E1\";\n    // U+E32D  Double flat 25S-up, 8°down [53 EDO]\n    Glyphs[\"accSagittalDoubleFlat25SUp\"] = \"\\uE32D\";\n    // U+E3E3  Double flat 49S-up\n    Glyphs[\"accSagittalDoubleFlat49SUp\"] = \"\\uE3E3\";\n    // U+E363  Double flat 55C-up, 13° down [96 EDO], 13/16-tone down\n    Glyphs[\"accSagittalDoubleFlat55CUp\"] = \"\\uE363\";\n    // U+E331  Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down\n    Glyphs[\"accSagittalDoubleFlat5CUp\"] = \"\\uE331\";\n    // U+E35F  Double flat 5:11S-up\n    Glyphs[\"accSagittalDoubleFlat5v11SUp\"] = \"\\uE35F\";\n    // U+E385  Double flat 5:19C-up, 19/20-tone down\n    Glyphs[\"accSagittalDoubleFlat5v19CUp\"] = \"\\uE385\";\n    // U+E383  Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down\n    Glyphs[\"accSagittalDoubleFlat5v23SUp\"] = \"\\uE383\";\n    // U+E333  Double flat 5:7k-up\n    Glyphs[\"accSagittalDoubleFlat5v7kUp\"] = \"\\uE333\";\n    // U+E32F  Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down\n    Glyphs[\"accSagittalDoubleFlat7CUp\"] = \"\\uE32F\";\n    // U+E361  Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down\n    Glyphs[\"accSagittalDoubleFlat7v11CUp\"] = \"\\uE361\";\n    // U+E367  Double flat 7:11k-up\n    Glyphs[\"accSagittalDoubleFlat7v11kUp\"] = \"\\uE367\";\n    // U+E3E5  Double flat 7:19C-up\n    Glyphs[\"accSagittalDoubleFlat7v19CUp\"] = \"\\uE3E5\";\n    // U+E334  Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up\n    Glyphs[\"accSagittalDoubleSharp\"] = \"\\uE334\";\n    // U+E3E8  Double sharp 11:49C-down\n    Glyphs[\"accSagittalDoubleSharp11v49CDown\"] = \"\\uE3E8\";\n    // U+E3EA  Double sharp 143C-down\n    Glyphs[\"accSagittalDoubleSharp143CDown\"] = \"\\uE3EA\";\n    // U+E364  Double sharp 17C-down\n    Glyphs[\"accSagittalDoubleSharp17CDown\"] = \"\\uE364\";\n    // U+E3EC  Double sharp 17k-down\n    Glyphs[\"accSagittalDoubleSharp17kDown\"] = \"\\uE3EC\";\n    // U+E3E6  Double sharp 19C-down\n    Glyphs[\"accSagittalDoubleSharp19CDown\"] = \"\\uE3E6\";\n    // U+E3EE  Double sharp 19s-down\n    Glyphs[\"accSagittalDoubleSharp19sDown\"] = \"\\uE3EE\";\n    // U+E386  Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up\n    Glyphs[\"accSagittalDoubleSharp23CDown\"] = \"\\uE386\";\n    // U+E3E0  Double sharp 23S-down\n    Glyphs[\"accSagittalDoubleSharp23SDown\"] = \"\\uE3E0\";\n    // U+E32C  Double sharp 25S-down, 8°up [53 EDO]\n    Glyphs[\"accSagittalDoubleSharp25SDown\"] = \"\\uE32C\";\n    // U+E3E2  Double sharp 49S-down\n    Glyphs[\"accSagittalDoubleSharp49SDown\"] = \"\\uE3E2\";\n    // U+E362  Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up\n    Glyphs[\"accSagittalDoubleSharp55CDown\"] = \"\\uE362\";\n    // U+E330  Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up\n    Glyphs[\"accSagittalDoubleSharp5CDown\"] = \"\\uE330\";\n    // U+E35E  Double sharp 5:11S-down\n    Glyphs[\"accSagittalDoubleSharp5v11SDown\"] = \"\\uE35E\";\n    // U+E384  Double sharp 5:19C-down, 19/20-tone up\n    Glyphs[\"accSagittalDoubleSharp5v19CDown\"] = \"\\uE384\";\n    // U+E382  Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up\n    Glyphs[\"accSagittalDoubleSharp5v23SDown\"] = \"\\uE382\";\n    // U+E332  Double sharp 5:7k-down\n    Glyphs[\"accSagittalDoubleSharp5v7kDown\"] = \"\\uE332\";\n    // U+E32E  Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up\n    Glyphs[\"accSagittalDoubleSharp7CDown\"] = \"\\uE32E\";\n    // U+E360  Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up\n    Glyphs[\"accSagittalDoubleSharp7v11CDown\"] = \"\\uE360\";\n    // U+E366  Double sharp 7:11k-down\n    Glyphs[\"accSagittalDoubleSharp7v11kDown\"] = \"\\uE366\";\n    // U+E3E4  Double sharp 7:19C-down\n    Glyphs[\"accSagittalDoubleSharp7v19CDown\"] = \"\\uE3E4\";\n    // U+E319  Flat, (apotome down)[almost all EDOs], 1/2-tone down\n    Glyphs[\"accSagittalFlat\"] = \"\\uE319\";\n    // U+E329  Flat 11L-down, 8° up [46 EDO]\n    Glyphs[\"accSagittalFlat11LDown\"] = \"\\uE329\";\n    // U+E327  Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down\n    Glyphs[\"accSagittalFlat11MDown\"] = \"\\uE327\";\n    // U+E3DB  Flat 11:19L-down\n    Glyphs[\"accSagittalFlat11v19LDown\"] = \"\\uE3DB\";\n    // U+E3D3  Flat 11:19M-down\n    Glyphs[\"accSagittalFlat11v19MDown\"] = \"\\uE3D3\";\n    // U+E3C7  Flat 11:49C-down\n    Glyphs[\"accSagittalFlat11v49CDown\"] = \"\\uE3C7\";\n    // U+E3B9  Flat 11:49C-up\n    Glyphs[\"accSagittalFlat11v49CUp\"] = \"\\uE3B9\";\n    // U+E3C5  Flat 143C-down\n    Glyphs[\"accSagittalFlat143CDown\"] = \"\\uE3C5\";\n    // U+E3BB  Flat 143C-up\n    Glyphs[\"accSagittalFlat143CUp\"] = \"\\uE3BB\";\n    // U+E357  Flat 17C-down\n    Glyphs[\"accSagittalFlat17CDown\"] = \"\\uE357\";\n    // U+E351  Flat 17C-up\n    Glyphs[\"accSagittalFlat17CUp\"] = \"\\uE351\";\n    // U+E3C3  Flat 17k-down\n    Glyphs[\"accSagittalFlat17kDown\"] = \"\\uE3C3\";\n    // U+E3BD  Flat 17k-up\n    Glyphs[\"accSagittalFlat17kUp\"] = \"\\uE3BD\";\n    // U+E3C9  Flat 19C-down\n    Glyphs[\"accSagittalFlat19CDown\"] = \"\\uE3C9\";\n    // U+E3B7  Flat 19C-up\n    Glyphs[\"accSagittalFlat19CUp\"] = \"\\uE3B7\";\n    // U+E3C1  Flat 19s-down\n    Glyphs[\"accSagittalFlat19sDown\"] = \"\\uE3C1\";\n    // U+E3BF  Flat 19s-up\n    Glyphs[\"accSagittalFlat19sUp\"] = \"\\uE3BF\";\n    // U+E37D  Flat 23C-down, 10° down [96 EDO], 5/8-tone down\n    Glyphs[\"accSagittalFlat23CDown\"] = \"\\uE37D\";\n    // U+E37B  Flat 23C-up, 6° down [96 EDO], 3/8-tone down\n    Glyphs[\"accSagittalFlat23CUp\"] = \"\\uE37B\";\n    // U+E3CF  Flat 23S-down\n    Glyphs[\"accSagittalFlat23SDown\"] = \"\\uE3CF\";\n    // U+E3B1  Flat 23S-up\n    Glyphs[\"accSagittalFlat23SUp\"] = \"\\uE3B1\";\n    // U+E323  Flat 25S-down, 7° down [53 EDO]\n    Glyphs[\"accSagittalFlat25SDown\"] = \"\\uE323\";\n    // U+E311  Flat 25S-up, 3° down [53 EDO]\n    Glyphs[\"accSagittalFlat25SUp\"] = \"\\uE311\";\n    // U+E32B  Flat 35L-down, 5° down [50 EDO]\n    Glyphs[\"accSagittalFlat35LDown\"] = \"\\uE32B\";\n    // U+E325  Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down\n    Glyphs[\"accSagittalFlat35MDown\"] = \"\\uE325\";\n    // U+E3D9  Flat 49L-down\n    Glyphs[\"accSagittalFlat49LDown\"] = \"\\uE3D9\";\n    // U+E3D5  Flat 49M-down\n    Glyphs[\"accSagittalFlat49MDown\"] = \"\\uE3D5\";\n    // U+E3CD  Flat 49S-down\n    Glyphs[\"accSagittalFlat49SDown\"] = \"\\uE3CD\";\n    // U+E3B3  Flat 49S-up\n    Glyphs[\"accSagittalFlat49SUp\"] = \"\\uE3B3\";\n    // U+E359  Flat 55C-down, 11° down [96 EDO], 11/16-tone down\n    Glyphs[\"accSagittalFlat55CDown\"] = \"\\uE359\";\n    // U+E34F  Flat 55C-up, 5° down [96 EDO], 5/16-tone down\n    Glyphs[\"accSagittalFlat55CUp\"] = \"\\uE34F\";\n    // U+E31F  Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down\n    Glyphs[\"accSagittalFlat5CDown\"] = \"\\uE31F\";\n    // U+E315  Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down\n    Glyphs[\"accSagittalFlat5CUp\"] = \"\\uE315\";\n    // U+E35D  Flat 5:11S-down\n    Glyphs[\"accSagittalFlat5v11SDown\"] = \"\\uE35D\";\n    // U+E34B  Flat 5:11S-up\n    Glyphs[\"accSagittalFlat5v11SUp\"] = \"\\uE34B\";\n    // U+E3DD  Flat 5:13L-down\n    Glyphs[\"accSagittalFlat5v13LDown\"] = \"\\uE3DD\";\n    // U+E3D1  Flat 5:13M-down\n    Glyphs[\"accSagittalFlat5v13MDown\"] = \"\\uE3D1\";\n    // U+E37F  Flat 5:19C-down, 11/20-tone down\n    Glyphs[\"accSagittalFlat5v19CDown\"] = \"\\uE37F\";\n    // U+E379  Flat 5:19C-up, 9/20-tone down\n    Glyphs[\"accSagittalFlat5v19CUp\"] = \"\\uE379\";\n    // U+E381  Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down\n    Glyphs[\"accSagittalFlat5v23SDown\"] = \"\\uE381\";\n    // U+E377  Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down\n    Glyphs[\"accSagittalFlat5v23SUp\"] = \"\\uE377\";\n    // U+E3D7  Flat 5:49M-down\n    Glyphs[\"accSagittalFlat5v49MDown\"] = \"\\uE3D7\";\n    // U+E31D  Flat 5:7k-down\n    Glyphs[\"accSagittalFlat5v7kDown\"] = \"\\uE31D\";\n    // U+E317  Flat 5:7k-up\n    Glyphs[\"accSagittalFlat5v7kUp\"] = \"\\uE317\";\n    // U+E321  Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down\n    Glyphs[\"accSagittalFlat7CDown\"] = \"\\uE321\";\n    // U+E313  Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down\n    Glyphs[\"accSagittalFlat7CUp\"] = \"\\uE313\";\n    // U+E35B  Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down\n    Glyphs[\"accSagittalFlat7v11CDown\"] = \"\\uE35B\";\n    // U+E34D  Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down\n    Glyphs[\"accSagittalFlat7v11CUp\"] = \"\\uE34D\";\n    // U+E355  Flat 7:11k-down\n    Glyphs[\"accSagittalFlat7v11kDown\"] = \"\\uE355\";\n    // U+E353  Flat 7:11k-up\n    Glyphs[\"accSagittalFlat7v11kUp\"] = \"\\uE353\";\n    // U+E3CB  Flat 7:19C-down\n    Glyphs[\"accSagittalFlat7v19CDown\"] = \"\\uE3CB\";\n    // U+E3B5  Flat 7:19C-up\n    Glyphs[\"accSagittalFlat7v19CUp\"] = \"\\uE3B5\";\n    // U+E40B  Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down\n    Glyphs[\"accSagittalFractionalTinaDown\"] = \"\\uE40B\";\n    // U+E40A  Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up\n    Glyphs[\"accSagittalFractionalTinaUp\"] = \"\\uE40A\";\n    // U+E3F3  Grave, 5 schisma down, 2 cents down\n    Glyphs[\"accSagittalGrave\"] = \"\\uE3F3\";\n    // U+E3F1  Shaft down, (natural for use with only diacritics down)\n    Glyphs[\"accSagittalShaftDown\"] = \"\\uE3F1\";\n    // U+E3F0  Shaft up, (natural for use with only diacritics up)\n    Glyphs[\"accSagittalShaftUp\"] = \"\\uE3F0\";\n    // U+E318  Sharp, (apotome up)[almost all EDOs], 1/2-tone up\n    Glyphs[\"accSagittalSharp\"] = \"\\uE318\";\n    // U+E328  Sharp 11L-up, 8° up [46 EDO]\n    Glyphs[\"accSagittalSharp11LUp\"] = \"\\uE328\";\n    // U+E326  Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up\n    Glyphs[\"accSagittalSharp11MUp\"] = \"\\uE326\";\n    // U+E3DA  Sharp 11:19L-up\n    Glyphs[\"accSagittalSharp11v19LUp\"] = \"\\uE3DA\";\n    // U+E3D2  Sharp 11:19M-up\n    Glyphs[\"accSagittalSharp11v19MUp\"] = \"\\uE3D2\";\n    // U+E3B8  Sharp 11:49C-down\n    Glyphs[\"accSagittalSharp11v49CDown\"] = \"\\uE3B8\";\n    // U+E3C6  Sharp 11:49C-up\n    Glyphs[\"accSagittalSharp11v49CUp\"] = \"\\uE3C6\";\n    // U+E3BA  Sharp 143C-down\n    Glyphs[\"accSagittalSharp143CDown\"] = \"\\uE3BA\";\n    // U+E3C4  Sharp 143C-up\n    Glyphs[\"accSagittalSharp143CUp\"] = \"\\uE3C4\";\n    // U+E350  Sharp 17C-down\n    Glyphs[\"accSagittalSharp17CDown\"] = \"\\uE350\";\n    // U+E356  Sharp 17C-up\n    Glyphs[\"accSagittalSharp17CUp\"] = \"\\uE356\";\n    // U+E3BC  Sharp 17k-down\n    Glyphs[\"accSagittalSharp17kDown\"] = \"\\uE3BC\";\n    // U+E3C2  Sharp 17k-up\n    Glyphs[\"accSagittalSharp17kUp\"] = \"\\uE3C2\";\n    // U+E3B6  Sharp 19C-down\n    Glyphs[\"accSagittalSharp19CDown\"] = \"\\uE3B6\";\n    // U+E3C8  Sharp 19C-up\n    Glyphs[\"accSagittalSharp19CUp\"] = \"\\uE3C8\";\n    // U+E3BE  Sharp 19s-down\n    Glyphs[\"accSagittalSharp19sDown\"] = \"\\uE3BE\";\n    // U+E3C0  Sharp 19s-up\n    Glyphs[\"accSagittalSharp19sUp\"] = \"\\uE3C0\";\n    // U+E37A  Sharp 23C-down, 6° up [96 EDO], 3/8-tone up\n    Glyphs[\"accSagittalSharp23CDown\"] = \"\\uE37A\";\n    // U+E37C  Sharp 23C-up, 10° up [96 EDO], 5/8-tone up\n    Glyphs[\"accSagittalSharp23CUp\"] = \"\\uE37C\";\n    // U+E3B0  Sharp 23S-down\n    Glyphs[\"accSagittalSharp23SDown\"] = \"\\uE3B0\";\n    // U+E3CE  Sharp 23S-up\n    Glyphs[\"accSagittalSharp23SUp\"] = \"\\uE3CE\";\n    // U+E310  Sharp 25S-down, 3° up [53 EDO]\n    Glyphs[\"accSagittalSharp25SDown\"] = \"\\uE310\";\n    // U+E322  Sharp 25S-up, 7° up [53 EDO]\n    Glyphs[\"accSagittalSharp25SUp\"] = \"\\uE322\";\n    // U+E32A  Sharp 35L-up, 5° up [50 EDO]\n    Glyphs[\"accSagittalSharp35LUp\"] = \"\\uE32A\";\n    // U+E324  Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up\n    Glyphs[\"accSagittalSharp35MUp\"] = \"\\uE324\";\n    // U+E3D8  Sharp 49L-up\n    Glyphs[\"accSagittalSharp49LUp\"] = \"\\uE3D8\";\n    // U+E3D4  Sharp 49M-up\n    Glyphs[\"accSagittalSharp49MUp\"] = \"\\uE3D4\";\n    // U+E3B2  Sharp 49S-down\n    Glyphs[\"accSagittalSharp49SDown\"] = \"\\uE3B2\";\n    // U+E3CC  Sharp 49S-up\n    Glyphs[\"accSagittalSharp49SUp\"] = \"\\uE3CC\";\n    // U+E34E  Sharp 55C-down, 5° up [96 EDO], 5/16-tone up\n    Glyphs[\"accSagittalSharp55CDown\"] = \"\\uE34E\";\n    // U+E358  Sharp 55C-up, 11° up [96 EDO], 11/16-tone up\n    Glyphs[\"accSagittalSharp55CUp\"] = \"\\uE358\";\n    // U+E314  Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up\n    Glyphs[\"accSagittalSharp5CDown\"] = \"\\uE314\";\n    // U+E31E  Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up\n    Glyphs[\"accSagittalSharp5CUp\"] = \"\\uE31E\";\n    // U+E34A  Sharp 5:11S-down\n    Glyphs[\"accSagittalSharp5v11SDown\"] = \"\\uE34A\";\n    // U+E35C  Sharp 5:11S-up\n    Glyphs[\"accSagittalSharp5v11SUp\"] = \"\\uE35C\";\n    // U+E3DC  Sharp 5:13L-up\n    Glyphs[\"accSagittalSharp5v13LUp\"] = \"\\uE3DC\";\n    // U+E3D0  Sharp 5:13M-up\n    Glyphs[\"accSagittalSharp5v13MUp\"] = \"\\uE3D0\";\n    // U+E378  Sharp 5:19C-down, 9/20-tone up\n    Glyphs[\"accSagittalSharp5v19CDown\"] = \"\\uE378\";\n    // U+E37E  Sharp 5:19C-up, 11/20-tone up\n    Glyphs[\"accSagittalSharp5v19CUp\"] = \"\\uE37E\";\n    // U+E376  Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up\n    Glyphs[\"accSagittalSharp5v23SDown\"] = \"\\uE376\";\n    // U+E380  Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up\n    Glyphs[\"accSagittalSharp5v23SUp\"] = \"\\uE380\";\n    // U+E3D6  Sharp 5:49M-up, (one and a half apotomes)\n    Glyphs[\"accSagittalSharp5v49MUp\"] = \"\\uE3D6\";\n    // U+E316  Sharp 5:7k-down\n    Glyphs[\"accSagittalSharp5v7kDown\"] = \"\\uE316\";\n    // U+E31C  Sharp 5:7k-up\n    Glyphs[\"accSagittalSharp5v7kUp\"] = \"\\uE31C\";\n    // U+E312  Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up\n    Glyphs[\"accSagittalSharp7CDown\"] = \"\\uE312\";\n    // U+E320  Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up\n    Glyphs[\"accSagittalSharp7CUp\"] = \"\\uE320\";\n    // U+E34C  Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up\n    Glyphs[\"accSagittalSharp7v11CDown\"] = \"\\uE34C\";\n    // U+E35A  Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up\n    Glyphs[\"accSagittalSharp7v11CUp\"] = \"\\uE35A\";\n    // U+E352  Sharp 7:11k-down\n    Glyphs[\"accSagittalSharp7v11kDown\"] = \"\\uE352\";\n    // U+E354  Sharp 7:11k-up\n    Glyphs[\"accSagittalSharp7v11kUp\"] = \"\\uE354\";\n    // U+E3B4  Sharp 7:19C-down\n    Glyphs[\"accSagittalSharp7v19CDown\"] = \"\\uE3B4\";\n    // U+E3CA  Sharp 7:19C-up\n    Glyphs[\"accSagittalSharp7v19CUp\"] = \"\\uE3CA\";\n    // U+E31A  Unused\n    Glyphs[\"accSagittalUnused1\"] = \"\\uE31A\";\n    // U+E31B  Unused\n    Glyphs[\"accSagittalUnused2\"] = \"\\uE31B\";\n    // U+E3DE  Unused\n    Glyphs[\"accSagittalUnused3\"] = \"\\uE3DE\";\n    // U+E3DF  Unused\n    Glyphs[\"accSagittalUnused4\"] = \"\\uE3DF\";\n    // U+E8CA  Combining accordion coupler dot\n    Glyphs[\"accdnCombDot\"] = \"\\uE8CA\";\n    // U+E8C8  Combining left hand, 2 ranks, empty\n    Glyphs[\"accdnCombLH2RanksEmpty\"] = \"\\uE8C8\";\n    // U+E8C9  Combining left hand, 3 ranks, empty (square)\n    Glyphs[\"accdnCombLH3RanksEmptySquare\"] = \"\\uE8C9\";\n    // U+E8C6  Combining right hand, 3 ranks, empty\n    Glyphs[\"accdnCombRH3RanksEmpty\"] = \"\\uE8C6\";\n    // U+E8C7  Combining right hand, 4 ranks, empty\n    Glyphs[\"accdnCombRH4RanksEmpty\"] = \"\\uE8C7\";\n    // U+E079  Diatonic accordion clef\n    Glyphs[\"accdnDiatonicClef\"] = \"\\uE079\";\n    // U+E8BC  Left hand, 2 ranks, 16' stop (round)\n    Glyphs[\"accdnLH2Ranks16Round\"] = \"\\uE8BC\";\n    // U+E8BD  Left hand, 2 ranks, 8' stop + 16' stop (round)\n    Glyphs[\"accdnLH2Ranks8Plus16Round\"] = \"\\uE8BD\";\n    // U+E8BB  Left hand, 2 ranks, 8' stop (round)\n    Glyphs[\"accdnLH2Ranks8Round\"] = \"\\uE8BB\";\n    // U+E8C0  Left hand, 2 ranks, full master (round)\n    Glyphs[\"accdnLH2RanksFullMasterRound\"] = \"\\uE8C0\";\n    // U+E8BF  Left hand, 2 ranks, master + 16' stop (round)\n    Glyphs[\"accdnLH2RanksMasterPlus16Round\"] = \"\\uE8BF\";\n    // U+E8BE  Left hand, 2 ranks, master (round)\n    Glyphs[\"accdnLH2RanksMasterRound\"] = \"\\uE8BE\";\n    // U+E8C4  Left hand, 3 ranks, 2' stop + 8' stop (square)\n    Glyphs[\"accdnLH3Ranks2Plus8Square\"] = \"\\uE8C4\";\n    // U+E8C2  Left hand, 3 ranks, 2' stop (square)\n    Glyphs[\"accdnLH3Ranks2Square\"] = \"\\uE8C2\";\n    // U+E8C1  Left hand, 3 ranks, 8' stop (square)\n    Glyphs[\"accdnLH3Ranks8Square\"] = \"\\uE8C1\";\n    // U+E8C3  Left hand, 3 ranks, double 8' stop (square)\n    Glyphs[\"accdnLH3RanksDouble8Square\"] = \"\\uE8C3\";\n    // U+E8C5  Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square)\n    Glyphs[\"accdnLH3RanksTuttiSquare\"] = \"\\uE8C5\";\n    // U+E8CC  Pull\n    Glyphs[\"accdnPull\"] = \"\\uE8CC\";\n    // U+E8CB  Push\n    Glyphs[\"accdnPush\"] = \"\\uE8CB\";\n    // U+E8AC  Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion)\n    Glyphs[\"accdnRH3RanksAccordion\"] = \"\\uE8AC\";\n    // U+E8A8  Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette)\n    Glyphs[\"accdnRH3RanksAuthenticMusette\"] = \"\\uE8A8\";\n    // U+E8AB  Right hand, 3 ranks, 8' stop + 16' stop (bandoneón)\n    Glyphs[\"accdnRH3RanksBandoneon\"] = \"\\uE8AB\";\n    // U+E8A4  Right hand, 3 ranks, 16' stop (bassoon)\n    Glyphs[\"accdnRH3RanksBassoon\"] = \"\\uE8A4\";\n    // U+E8A1  Right hand, 3 ranks, 8' stop (clarinet)\n    Glyphs[\"accdnRH3RanksClarinet\"] = \"\\uE8A1\";\n    // U+E8B1  Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop\n    Glyphs[\"accdnRH3RanksDoubleTremoloLower8ve\"] = \"\\uE8B1\";\n    // U+E8B2  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksDoubleTremoloUpper8ve\"] = \"\\uE8B2\";\n    // U+E8B3  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop\n    Glyphs[\"accdnRH3RanksFullFactory\"] = \"\\uE8B3\";\n    // U+E8AA  Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium)\n    Glyphs[\"accdnRH3RanksHarmonium\"] = \"\\uE8AA\";\n    // U+E8A7  Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette)\n    Glyphs[\"accdnRH3RanksImitationMusette\"] = \"\\uE8A7\";\n    // U+E8A3  Right hand, 3 ranks, lower tremolo 8' stop\n    Glyphs[\"accdnRH3RanksLowerTremolo8\"] = \"\\uE8A3\";\n    // U+E8AD  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master)\n    Glyphs[\"accdnRH3RanksMaster\"] = \"\\uE8AD\";\n    // U+E8A5  Right hand, 3 ranks, 4' stop + 8' stop (oboe)\n    Glyphs[\"accdnRH3RanksOboe\"] = \"\\uE8A5\";\n    // U+E8A9  Right hand, 3 ranks, 4' stop + 16' stop (organ)\n    Glyphs[\"accdnRH3RanksOrgan\"] = \"\\uE8A9\";\n    // U+E8A0  Right hand, 3 ranks, 4' stop (piccolo)\n    Glyphs[\"accdnRH3RanksPiccolo\"] = \"\\uE8A0\";\n    // U+E8AF  Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop\n    Glyphs[\"accdnRH3RanksTremoloLower8ve\"] = \"\\uE8AF\";\n    // U+E8B0  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksTremoloUpper8ve\"] = \"\\uE8B0\";\n    // U+E8AE  Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksTwoChoirs\"] = \"\\uE8AE\";\n    // U+E8A2  Right hand, 3 ranks, upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksUpperTremolo8\"] = \"\\uE8A2\";\n    // U+E8A6  Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin)\n    Glyphs[\"accdnRH3RanksViolin\"] = \"\\uE8A6\";\n    // U+E8B5  Right hand, 4 ranks, alto\n    Glyphs[\"accdnRH4RanksAlto\"] = \"\\uE8B5\";\n    // U+E8BA  Right hand, 4 ranks, bass/alto\n    Glyphs[\"accdnRH4RanksBassAlto\"] = \"\\uE8BA\";\n    // U+E8B7  Right hand, 4 ranks, master\n    Glyphs[\"accdnRH4RanksMaster\"] = \"\\uE8B7\";\n    // U+E8B8  Right hand, 4 ranks, soft bass\n    Glyphs[\"accdnRH4RanksSoftBass\"] = \"\\uE8B8\";\n    // U+E8B9  Right hand, 4 ranks, soft tenor\n    Glyphs[\"accdnRH4RanksSoftTenor\"] = \"\\uE8B9\";\n    // U+E8B4  Right hand, 4 ranks, soprano\n    Glyphs[\"accdnRH4RanksSoprano\"] = \"\\uE8B4\";\n    // U+E8B6  Right hand, 4 ranks, tenor\n    Glyphs[\"accdnRH4RanksTenor\"] = \"\\uE8B6\";\n    // U+E8CD  Ricochet (2 tones)\n    Glyphs[\"accdnRicochet2\"] = \"\\uE8CD\";\n    // U+E8CE  Ricochet (3 tones)\n    Glyphs[\"accdnRicochet3\"] = \"\\uE8CE\";\n    // U+E8CF  Ricochet (4 tones)\n    Glyphs[\"accdnRicochet4\"] = \"\\uE8CF\";\n    // U+E8D0  Ricochet (5 tones)\n    Glyphs[\"accdnRicochet5\"] = \"\\uE8D0\";\n    // U+E8D1  Ricochet (6 tones)\n    Glyphs[\"accdnRicochet6\"] = \"\\uE8D1\";\n    // U+E8D2  Combining ricochet for stem (2 tones)\n    Glyphs[\"accdnRicochetStem2\"] = \"\\uE8D2\";\n    // U+E8D3  Combining ricochet for stem (3 tones)\n    Glyphs[\"accdnRicochetStem3\"] = \"\\uE8D3\";\n    // U+E8D4  Combining ricochet for stem (4 tones)\n    Glyphs[\"accdnRicochetStem4\"] = \"\\uE8D4\";\n    // U+E8D5  Combining ricochet for stem (5 tones)\n    Glyphs[\"accdnRicochetStem5\"] = \"\\uE8D5\";\n    // U+E8D6  Combining ricochet for stem (6 tones)\n    Glyphs[\"accdnRicochetStem6\"] = \"\\uE8D6\";\n    // U+E454  1-comma flat\n    Glyphs[\"accidental1CommaFlat\"] = \"\\uE454\";\n    // U+E450  1-comma sharp\n    Glyphs[\"accidental1CommaSharp\"] = \"\\uE450\";\n    // U+E455  2-comma flat\n    Glyphs[\"accidental2CommaFlat\"] = \"\\uE455\";\n    // U+E451  2-comma sharp\n    Glyphs[\"accidental2CommaSharp\"] = \"\\uE451\";\n    // U+E456  3-comma flat\n    Glyphs[\"accidental3CommaFlat\"] = \"\\uE456\";\n    // U+E452  3-comma sharp\n    Glyphs[\"accidental3CommaSharp\"] = \"\\uE452\";\n    // U+E457  4-comma flat\n    Glyphs[\"accidental4CommaFlat\"] = \"\\uE457\";\n    // U+E453  5-comma sharp\n    Glyphs[\"accidental5CommaSharp\"] = \"\\uE453\";\n    // U+E27B  Arrow down (lower by one quarter-tone)\n    Glyphs[\"accidentalArrowDown\"] = \"\\uE27B\";\n    // U+E27A  Arrow up (raise by one quarter-tone)\n    Glyphs[\"accidentalArrowUp\"] = \"\\uE27A\";\n    // U+E442  Bakiye (flat)\n    Glyphs[\"accidentalBakiyeFlat\"] = \"\\uE442\";\n    // U+E445  Bakiye (sharp)\n    Glyphs[\"accidentalBakiyeSharp\"] = \"\\uE445\";\n    // U+E26C  Accidental bracket, left\n    Glyphs[\"accidentalBracketLeft\"] = \"\\uE26C\";\n    // U+E26D  Accidental bracket, right\n    Glyphs[\"accidentalBracketRight\"] = \"\\uE26D\";\n    // U+E440  Büyük mücenneb (flat)\n    Glyphs[\"accidentalBuyukMucennebFlat\"] = \"\\uE440\";\n    // U+E447  Büyük mücenneb (sharp)\n    Glyphs[\"accidentalBuyukMucennebSharp\"] = \"\\uE447\";\n    // U+E2EF  Combining close curly brace\n    Glyphs[\"accidentalCombiningCloseCurlyBrace\"] = \"\\uE2EF\";\n    // U+E2E6  Combining lower by one 17-limit schisma\n    Glyphs[\"accidentalCombiningLower17Schisma\"] = \"\\uE2E6\";\n    // U+E2E8  Combining lower by one 19-limit schisma\n    Glyphs[\"accidentalCombiningLower19Schisma\"] = \"\\uE2E8\";\n    // U+E2EA  Combining lower by one 23-limit comma\n    Glyphs[\"accidentalCombiningLower23Limit29LimitComma\"] = \"\\uE2EA\";\n    // U+EE50  Combining lower by one 29-limit comma\n    Glyphs[\"accidentalCombiningLower29LimitComma\"] = \"\\uEE50\";\n    // U+E2EC  Combining lower by one 31-limit schisma\n    Glyphs[\"accidentalCombiningLower31Schisma\"] = \"\\uE2EC\";\n    // U+EE52  Combining lower by one 37-limit quartertone\n    Glyphs[\"accidentalCombiningLower37Quartertone\"] = \"\\uEE52\";\n    // U+EE54  Combining lower by one 41-limit comma\n    Glyphs[\"accidentalCombiningLower41Comma\"] = \"\\uEE54\";\n    // U+EE56  Combining lower by one 43-limit comma\n    Glyphs[\"accidentalCombiningLower43Comma\"] = \"\\uEE56\";\n    // U+EE58  Combining lower by one 47-limit quartertone\n    Glyphs[\"accidentalCombiningLower47Quartertone\"] = \"\\uEE58\";\n    // U+E2F7  Combining lower by one 53-limit comma\n    Glyphs[\"accidentalCombiningLower53LimitComma\"] = \"\\uE2F7\";\n    // U+E2EE  Combining open curly brace\n    Glyphs[\"accidentalCombiningOpenCurlyBrace\"] = \"\\uE2EE\";\n    // U+E2E7  Combining raise by one 17-limit schisma\n    Glyphs[\"accidentalCombiningRaise17Schisma\"] = \"\\uE2E7\";\n    // U+E2E9  Combining raise by one 19-limit schisma\n    Glyphs[\"accidentalCombiningRaise19Schisma\"] = \"\\uE2E9\";\n    // U+E2EB  Combining raise by one 23-limit comma\n    Glyphs[\"accidentalCombiningRaise23Limit29LimitComma\"] = \"\\uE2EB\";\n    // U+EE51  Combining raise by one 29-limit comma\n    Glyphs[\"accidentalCombiningRaise29LimitComma\"] = \"\\uEE51\";\n    // U+E2ED  Combining raise by one 31-limit schisma\n    Glyphs[\"accidentalCombiningRaise31Schisma\"] = \"\\uE2ED\";\n    // U+EE53  Combining raise by one 37-limit quartertone\n    Glyphs[\"accidentalCombiningRaise37Quartertone\"] = \"\\uEE53\";\n    // U+EE55  Combining raise by one 41-limit comma\n    Glyphs[\"accidentalCombiningRaise41Comma\"] = \"\\uEE55\";\n    // U+EE57  Combining raise by one 43-limit comma\n    Glyphs[\"accidentalCombiningRaise43Comma\"] = \"\\uEE57\";\n    // U+EE59  Combining raise by one 47-limit quartertone\n    Glyphs[\"accidentalCombiningRaise47Quartertone\"] = \"\\uEE59\";\n    // U+E2F8  Combining raise by one 53-limit comma\n    Glyphs[\"accidentalCombiningRaise53LimitComma\"] = \"\\uE2F8\";\n    // U+E47A  Syntonic/Didymus comma (80:81) down (Bosanquet)\n    Glyphs[\"accidentalCommaSlashDown\"] = \"\\uE47A\";\n    // U+E479  Syntonic/Didymus comma (80:81) up (Bosanquet)\n    Glyphs[\"accidentalCommaSlashUp\"] = \"\\uE479\";\n    // U+E264  Double flat\n    Glyphs[\"accidentalDoubleFlat\"] = \"\\uE264\";\n    // U+1D12B  Double flat\n    Glyphs[\"accidentalDoubleFlatAlternate\"] = \"\\uD834\\uDD2B\";\n    // U+ED30  Arabic double flat\n    Glyphs[\"accidentalDoubleFlatArabic\"] = \"\\uED30\";\n    // U+E2F0  Double flat equal tempered semitone\n    Glyphs[\"accidentalDoubleFlatEqualTempered\"] = \"\\uE2F0\";\n    // U+E2C0  Double flat lowered by one syntonic comma\n    Glyphs[\"accidentalDoubleFlatOneArrowDown\"] = \"\\uE2C0\";\n    // U+E2C5  Double flat raised by one syntonic comma\n    Glyphs[\"accidentalDoubleFlatOneArrowUp\"] = \"\\uE2C5\";\n    // U+E483  Reversed double flat\n    Glyphs[\"accidentalDoubleFlatReversed\"] = \"\\uE483\";\n    // U+E2D4  Double flat lowered by three syntonic commas\n    Glyphs[\"accidentalDoubleFlatThreeArrowsDown\"] = \"\\uE2D4\";\n    // U+E2D9  Double flat raised by three syntonic commas\n    Glyphs[\"accidentalDoubleFlatThreeArrowsUp\"] = \"\\uE2D9\";\n    // U+E485  Turned double flat\n    Glyphs[\"accidentalDoubleFlatTurned\"] = \"\\uE485\";\n    // U+E2CA  Double flat lowered by two syntonic commas\n    Glyphs[\"accidentalDoubleFlatTwoArrowsDown\"] = \"\\uE2CA\";\n    // U+E2CF  Double flat raised by two syntonic commas\n    Glyphs[\"accidentalDoubleFlatTwoArrowsUp\"] = \"\\uE2CF\";\n    // U+E263  Double sharp\n    Glyphs[\"accidentalDoubleSharp\"] = \"\\uE263\";\n    // U+1D12A  Double sharp\n    Glyphs[\"accidentalDoubleSharpAlternate\"] = \"\\uD834\\uDD2A\";\n    // U+ED38  Arabic double sharp\n    Glyphs[\"accidentalDoubleSharpArabic\"] = \"\\uED38\";\n    // U+E2F4  Double sharp equal tempered semitone\n    Glyphs[\"accidentalDoubleSharpEqualTempered\"] = \"\\uE2F4\";\n    // U+E2C4  Double sharp lowered by one syntonic comma\n    Glyphs[\"accidentalDoubleSharpOneArrowDown\"] = \"\\uE2C4\";\n    // U+E2C9  Double sharp raised by one syntonic comma\n    Glyphs[\"accidentalDoubleSharpOneArrowUp\"] = \"\\uE2C9\";\n    // U+E2D8  Double sharp lowered by three syntonic commas\n    Glyphs[\"accidentalDoubleSharpThreeArrowsDown\"] = \"\\uE2D8\";\n    // U+E2DD  Double sharp raised by three syntonic commas\n    Glyphs[\"accidentalDoubleSharpThreeArrowsUp\"] = \"\\uE2DD\";\n    // U+E2CE  Double sharp lowered by two syntonic commas\n    Glyphs[\"accidentalDoubleSharpTwoArrowsDown\"] = \"\\uE2CE\";\n    // U+E2D3  Double sharp raised by two syntonic commas\n    Glyphs[\"accidentalDoubleSharpTwoArrowsUp\"] = \"\\uE2D3\";\n    // U+E2FA  Enharmonically reinterpret accidental almost equal to\n    Glyphs[\"accidentalEnharmonicAlmostEqualTo\"] = \"\\uE2FA\";\n    // U+E2FB  Enharmonically reinterpret accidental equals\n    Glyphs[\"accidentalEnharmonicEquals\"] = \"\\uE2FB\";\n    // U+E2F9  Enharmonically reinterpret accidental tilde\n    Glyphs[\"accidentalEnharmonicTilde\"] = \"\\uE2F9\";\n    // U+E296  Filled reversed flat and flat\n    Glyphs[\"accidentalFilledReversedFlatAndFlat\"] = \"\\uE296\";\n    // U+E298  Filled reversed flat and flat with arrow down\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowDown\"] = \"\\uE298\";\n    // U+E297  Filled reversed flat and flat with arrow up\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowUp\"] = \"\\uE297\";\n    // U+E293  Filled reversed flat with arrow down\n    Glyphs[\"accidentalFilledReversedFlatArrowDown\"] = \"\\uE293\";\n    // U+E292  Filled reversed flat with arrow up\n    Glyphs[\"accidentalFilledReversedFlatArrowUp\"] = \"\\uE292\";\n    // U+E279  Five-quarter-tones flat\n    Glyphs[\"accidentalFiveQuarterTonesFlatArrowDown\"] = \"\\uE279\";\n    // U+E276  Five-quarter-tones sharp\n    Glyphs[\"accidentalFiveQuarterTonesSharpArrowUp\"] = \"\\uE276\";\n    // U+E260  Flat\n    Glyphs[\"accidentalFlat\"] = \"\\uE260\";\n    // U+266D  Flat\n    Glyphs[\"accidentalFlatAlternate\"] = \"\\u266D\";\n    // U+ED32  Arabic half-tone flat\n    Glyphs[\"accidentalFlatArabic\"] = \"\\uED32\";\n    // U+E2F1  Flat equal tempered semitone\n    Glyphs[\"accidentalFlatEqualTempered\"] = \"\\uE2F1\";\n    // U+ED53  Lowered flat (Stockhausen)\n    Glyphs[\"accidentalFlatLoweredStockhausen\"] = \"\\uED53\";\n    // U+E2C1  Flat lowered by one syntonic comma\n    Glyphs[\"accidentalFlatOneArrowDown\"] = \"\\uE2C1\";\n    // U+E2C6  Flat raised by one syntonic comma\n    Glyphs[\"accidentalFlatOneArrowUp\"] = \"\\uE2C6\";\n    // U+ED52  Raised flat (Stockhausen)\n    Glyphs[\"accidentalFlatRaisedStockhausen\"] = \"\\uED52\";\n    // U+ED5C  Repeated flat, note on line (Stockhausen)\n    Glyphs[\"accidentalFlatRepeatedLineStockhausen\"] = \"\\uED5C\";\n    // U+ED5B  Repeated flat, note in space (Stockhausen)\n    Glyphs[\"accidentalFlatRepeatedSpaceStockhausen\"] = \"\\uED5B\";\n    // U+E2D5  Flat lowered by three syntonic commas\n    Glyphs[\"accidentalFlatThreeArrowsDown\"] = \"\\uE2D5\";\n    // U+E2DA  Flat raised by three syntonic commas\n    Glyphs[\"accidentalFlatThreeArrowsUp\"] = \"\\uE2DA\";\n    // U+E484  Turned flat\n    Glyphs[\"accidentalFlatTurned\"] = \"\\uE484\";\n    // U+E2CB  Flat lowered by two syntonic commas\n    Glyphs[\"accidentalFlatTwoArrowsDown\"] = \"\\uE2CB\";\n    // U+E2D0  Flat raised by two syntonic commas\n    Glyphs[\"accidentalFlatTwoArrowsUp\"] = \"\\uE2D0\";\n    // U+EE65  Quarter-tone higher (Alois Hába)\n    Glyphs[\"accidentalHabaFlatQuarterToneHigher\"] = \"\\uEE65\";\n    // U+EE69  Three quarter-tones lower (Alois Hába)\n    Glyphs[\"accidentalHabaFlatThreeQuarterTonesLower\"] = \"\\uEE69\";\n    // U+EE64  Quarter-tone higher (Alois Hába)\n    Glyphs[\"accidentalHabaQuarterToneHigher\"] = \"\\uEE64\";\n    // U+EE67  Quarter-tone lower (Alois Hába)\n    Glyphs[\"accidentalHabaQuarterToneLower\"] = \"\\uEE67\";\n    // U+EE68  Quarter-tone lower (Alois Hába)\n    Glyphs[\"accidentalHabaSharpQuarterToneLower\"] = \"\\uEE68\";\n    // U+EE66  Three quarter-tones higher (Alois Hába)\n    Glyphs[\"accidentalHabaSharpThreeQuarterTonesHigher\"] = \"\\uEE66\";\n    // U+E29A  Half sharp with arrow down\n    Glyphs[\"accidentalHalfSharpArrowDown\"] = \"\\uE29A\";\n    // U+E299  Half sharp with arrow up\n    Glyphs[\"accidentalHalfSharpArrowUp\"] = \"\\uE299\";\n    // U+E2B6  Thirteen (raise by 65:64)\n    Glyphs[\"accidentalJohnston13\"] = \"\\uE2B6\";\n    // U+E2B7  Inverted 13 (lower by 65:64)\n    Glyphs[\"accidentalJohnston31\"] = \"\\uE2B7\";\n    // U+E2B5  Down arrow (lower by 33:32)\n    Glyphs[\"accidentalJohnstonDown\"] = \"\\uE2B5\";\n    // U+E2B2  Inverted seven (raise by 36:35)\n    Glyphs[\"accidentalJohnstonEl\"] = \"\\uE2B2\";\n    // U+E2B1  Minus (lower by 81:80)\n    Glyphs[\"accidentalJohnstonMinus\"] = \"\\uE2B1\";\n    // U+E2B0  Plus (raise by 81:80)\n    Glyphs[\"accidentalJohnstonPlus\"] = \"\\uE2B0\";\n    // U+E2B3  Seven (lower by 36:35)\n    Glyphs[\"accidentalJohnstonSeven\"] = \"\\uE2B3\";\n    // U+E2B4  Up arrow (raise by 33:32)\n    Glyphs[\"accidentalJohnstonUp\"] = \"\\uE2B4\";\n    // U+E443  Koma (flat)\n    Glyphs[\"accidentalKomaFlat\"] = \"\\uE443\";\n    // U+E444  Koma (sharp)\n    Glyphs[\"accidentalKomaSharp\"] = \"\\uE444\";\n    // U+E460  Koron (quarter tone flat)\n    Glyphs[\"accidentalKoron\"] = \"\\uE460\";\n    // U+E441  Küçük mücenneb (flat)\n    Glyphs[\"accidentalKucukMucennebFlat\"] = \"\\uE441\";\n    // U+E446  Küçük mücenneb (sharp)\n    Glyphs[\"accidentalKucukMucennebSharp\"] = \"\\uE446\";\n    // U+E47D  Large double sharp\n    Glyphs[\"accidentalLargeDoubleSharp\"] = \"\\uE47D\";\n    // U+E2DE  Lower by one septimal comma\n    Glyphs[\"accidentalLowerOneSeptimalComma\"] = \"\\uE2DE\";\n    // U+E2E4  Lower by one tridecimal quartertone\n    Glyphs[\"accidentalLowerOneTridecimalQuartertone\"] = \"\\uE2E4\";\n    // U+E2E2  Lower by one undecimal quartertone\n    Glyphs[\"accidentalLowerOneUndecimalQuartertone\"] = \"\\uE2E2\";\n    // U+E2E0  Lower by two septimal commas\n    Glyphs[\"accidentalLowerTwoSeptimalCommas\"] = \"\\uE2E0\";\n    // U+ED51  Lowered (Stockhausen)\n    Glyphs[\"accidentalLoweredStockhausen\"] = \"\\uED51\";\n    // U+E284  Narrow reversed flat(quarter-tone flat)\n    Glyphs[\"accidentalNarrowReversedFlat\"] = \"\\uE284\";\n    // U+E285  Narrow reversed flat and flat(three-quarter-tones flat)\n    Glyphs[\"accidentalNarrowReversedFlatAndFlat\"] = \"\\uE285\";\n    // U+E261  Natural\n    Glyphs[\"accidentalNatural\"] = \"\\uE261\";\n    // U+266E  Natural\n    Glyphs[\"accidentalNaturalAlternate\"] = \"\\u266E\";\n    // U+ED34  Arabic natural\n    Glyphs[\"accidentalNaturalArabic\"] = \"\\uED34\";\n    // U+E2F2  Natural equal tempered semitone\n    Glyphs[\"accidentalNaturalEqualTempered\"] = \"\\uE2F2\";\n    // U+E267  Natural flat\n    Glyphs[\"accidentalNaturalFlat\"] = \"\\uE267\";\n    // U+ED55  Lowered natural (Stockhausen)\n    Glyphs[\"accidentalNaturalLoweredStockhausen\"] = \"\\uED55\";\n    // U+E2C2  Natural lowered by one syntonic comma\n    Glyphs[\"accidentalNaturalOneArrowDown\"] = \"\\uE2C2\";\n    // U+E2C7  Natural raised by one syntonic comma\n    Glyphs[\"accidentalNaturalOneArrowUp\"] = \"\\uE2C7\";\n    // U+ED54  Raised natural (Stockhausen)\n    Glyphs[\"accidentalNaturalRaisedStockhausen\"] = \"\\uED54\";\n    // U+E482  Reversed natural\n    Glyphs[\"accidentalNaturalReversed\"] = \"\\uE482\";\n    // U+E268  Natural sharp\n    Glyphs[\"accidentalNaturalSharp\"] = \"\\uE268\";\n    // U+E2D6  Natural lowered by three syntonic commas\n    Glyphs[\"accidentalNaturalThreeArrowsDown\"] = \"\\uE2D6\";\n    // U+E2DB  Natural raised by three syntonic commas\n    Glyphs[\"accidentalNaturalThreeArrowsUp\"] = \"\\uE2DB\";\n    // U+E2CC  Natural lowered by two syntonic commas\n    Glyphs[\"accidentalNaturalTwoArrowsDown\"] = \"\\uE2CC\";\n    // U+E2D1  Natural raised by two syntonic commas\n    Glyphs[\"accidentalNaturalTwoArrowsUp\"] = \"\\uE2D1\";\n    // U+E29C  One and a half sharps with arrow down\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowDown\"] = \"\\uE29C\";\n    // U+E29B  One and a half sharps with arrow up\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowUp\"] = \"\\uE29B\";\n    // U+E48F  One-quarter-tone flat (Ferneyhough)\n    Glyphs[\"accidentalOneQuarterToneFlatFerneyhough\"] = \"\\uE48F\";\n    // U+ED59  One-quarter-tone flat (Stockhausen)\n    Glyphs[\"accidentalOneQuarterToneFlatStockhausen\"] = \"\\uED59\";\n    // U+E48E  One-quarter-tone sharp (Ferneyhough)\n    Glyphs[\"accidentalOneQuarterToneSharpFerneyhough\"] = \"\\uE48E\";\n    // U+ED58  One-quarter-tone sharp (Stockhausen)\n    Glyphs[\"accidentalOneQuarterToneSharpStockhausen\"] = \"\\uED58\";\n    // U+E48B  One-third-tone flat (Ferneyhough)\n    Glyphs[\"accidentalOneThirdToneFlatFerneyhough\"] = \"\\uE48B\";\n    // U+E48A  One-third-tone sharp (Ferneyhough)\n    Glyphs[\"accidentalOneThirdToneSharpFerneyhough\"] = \"\\uE48A\";\n    // U+E26A  Accidental parenthesis, left\n    Glyphs[\"accidentalParensLeft\"] = \"\\uE26A\";\n    // U+E26B  Accidental parenthesis, right\n    Glyphs[\"accidentalParensRight\"] = \"\\uE26B\";\n    // U+E2F5  Lower by one equal tempered quarter-tone\n    Glyphs[\"accidentalQuarterFlatEqualTempered\"] = \"\\uE2F5\";\n    // U+E2F6  Raise by one equal tempered quarter tone\n    Glyphs[\"accidentalQuarterSharpEqualTempered\"] = \"\\uE2F6\";\n    // U+E47F  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlat4\"] = \"\\uE47F\";\n    // U+1D133  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlat4Alternate\"] = \"\\uD834\\uDD33\";\n    // U+ED33  Arabic quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatArabic\"] = \"\\uED33\";\n    // U+E270  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatArrowUp\"] = \"\\uE270\";\n    // U+1D12C  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatArrowUpAlternate\"] = \"\\uD834\\uDD2C\";\n    // U+E480  Filled reversed flat (quarter-tone flat)\n    Glyphs[\"accidentalQuarterToneFlatFilledReversed\"] = \"\\uE480\";\n    // U+E273  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatNaturalArrowDown\"] = \"\\uE273\";\n    // U+1D12F  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatNaturalArrowDownAlternate\"] = \"\\uD834\\uDD2F\";\n    // U+E478  Quarter tone flat (Penderecki)\n    Glyphs[\"accidentalQuarterToneFlatPenderecki\"] = \"\\uE478\";\n    // U+E280  Reversed flat (quarter-tone flat) (Stein)\n    Glyphs[\"accidentalQuarterToneFlatStein\"] = \"\\uE280\";\n    // U+E488  Quarter-tone flat (van Blankenburg)\n    Glyphs[\"accidentalQuarterToneFlatVanBlankenburg\"] = \"\\uE488\";\n    // U+E47E  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharp4\"] = \"\\uE47E\";\n    // U+1D132  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharp4Alternate\"] = \"\\uD834\\uDD32\";\n    // U+ED35  Arabic quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpArabic\"] = \"\\uED35\";\n    // U+E275  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpArrowDown\"] = \"\\uE275\";\n    // U+1D131  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpArrowDownAlternate\"] = \"\\uD834\\uDD31\";\n    // U+E472  Quarter tone sharp (Bussotti)\n    Glyphs[\"accidentalQuarterToneSharpBusotti\"] = \"\\uE472\";\n    // U+E272  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpNaturalArrowUp\"] = \"\\uE272\";\n    // U+1D12E  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpNaturalArrowUpAlternate\"] = \"\\uD834\\uDD2E\";\n    // U+E282  Half sharp (quarter-tone sharp) (Stein)\n    Glyphs[\"accidentalQuarterToneSharpStein\"] = \"\\uE282\";\n    // U+E475  Quarter tone sharp with wiggly tail\n    Glyphs[\"accidentalQuarterToneSharpWiggle\"] = \"\\uE475\";\n    // U+E2DF  Raise by one septimal comma\n    Glyphs[\"accidentalRaiseOneSeptimalComma\"] = \"\\uE2DF\";\n    // U+E2E5  Raise by one tridecimal quartertone\n    Glyphs[\"accidentalRaiseOneTridecimalQuartertone\"] = \"\\uE2E5\";\n    // U+E2E3  Raise by one undecimal quartertone\n    Glyphs[\"accidentalRaiseOneUndecimalQuartertone\"] = \"\\uE2E3\";\n    // U+E2E1  Raise by two septimal commas\n    Glyphs[\"accidentalRaiseTwoSeptimalCommas\"] = \"\\uE2E1\";\n    // U+ED50  Raised (Stockhausen)\n    Glyphs[\"accidentalRaisedStockhausen\"] = \"\\uED50\";\n    // U+E295  Reversed flat and flat with arrow down\n    Glyphs[\"accidentalReversedFlatAndFlatArrowDown\"] = \"\\uE295\";\n    // U+E294  Reversed flat and flat with arrow up\n    Glyphs[\"accidentalReversedFlatAndFlatArrowUp\"] = \"\\uE294\";\n    // U+E291  Reversed flat with arrow down\n    Glyphs[\"accidentalReversedFlatArrowDown\"] = \"\\uE291\";\n    // U+E290  Reversed flat with arrow up\n    Glyphs[\"accidentalReversedFlatArrowUp\"] = \"\\uE290\";\n    // U+E262  Sharp\n    Glyphs[\"accidentalSharp\"] = \"\\uE262\";\n    // U+266F  Sharp\n    Glyphs[\"accidentalSharpAlternate\"] = \"\\u266F\";\n    // U+ED36  Arabic half-tone sharp\n    Glyphs[\"accidentalSharpArabic\"] = \"\\uED36\";\n    // U+E2F3  Sharp equal tempered semitone\n    Glyphs[\"accidentalSharpEqualTempered\"] = \"\\uE2F3\";\n    // U+ED57  Lowered sharp (Stockhausen)\n    Glyphs[\"accidentalSharpLoweredStockhausen\"] = \"\\uED57\";\n    // U+E2C3  Sharp lowered by one syntonic comma\n    Glyphs[\"accidentalSharpOneArrowDown\"] = \"\\uE2C3\";\n    // U+E2C8  Sharp raised by one syntonic comma\n    Glyphs[\"accidentalSharpOneArrowUp\"] = \"\\uE2C8\";\n    // U+E473  One or three quarter tones sharp\n    Glyphs[\"accidentalSharpOneHorizontalStroke\"] = \"\\uE473\";\n    // U+ED56  Raised sharp (Stockhausen)\n    Glyphs[\"accidentalSharpRaisedStockhausen\"] = \"\\uED56\";\n    // U+ED5E  Repeated sharp, note on line (Stockhausen)\n    Glyphs[\"accidentalSharpRepeatedLineStockhausen\"] = \"\\uED5E\";\n    // U+ED5D  Repeated sharp, note in space (Stockhausen)\n    Glyphs[\"accidentalSharpRepeatedSpaceStockhausen\"] = \"\\uED5D\";\n    // U+E481  Reversed sharp\n    Glyphs[\"accidentalSharpReversed\"] = \"\\uE481\";\n    // U+E269  Sharp sharp\n    Glyphs[\"accidentalSharpSharp\"] = \"\\uE269\";\n    // U+E2D7  Sharp lowered by three syntonic commas\n    Glyphs[\"accidentalSharpThreeArrowsDown\"] = \"\\uE2D7\";\n    // U+E2DC  Sharp raised by three syntonic commas\n    Glyphs[\"accidentalSharpThreeArrowsUp\"] = \"\\uE2DC\";\n    // U+E2CD  Sharp lowered by two syntonic commas\n    Glyphs[\"accidentalSharpTwoArrowsDown\"] = \"\\uE2CD\";\n    // U+E2D2  Sharp raised by two syntonic commas\n    Glyphs[\"accidentalSharpTwoArrowsUp\"] = \"\\uE2D2\";\n    // U+E2A0  1/12 tone low\n    Glyphs[\"accidentalSims12Down\"] = \"\\uE2A0\";\n    // U+E2A3  1/12 tone high\n    Glyphs[\"accidentalSims12Up\"] = \"\\uE2A3\";\n    // U+E2A2  1/4 tone low\n    Glyphs[\"accidentalSims4Down\"] = \"\\uE2A2\";\n    // U+E2A5  1/4 tone high\n    Glyphs[\"accidentalSims4Up\"] = \"\\uE2A5\";\n    // U+E2A1  1/6 tone low\n    Glyphs[\"accidentalSims6Down\"] = \"\\uE2A1\";\n    // U+E2A4  1/6 tone high\n    Glyphs[\"accidentalSims6Up\"] = \"\\uE2A4\";\n    // U+E461  Sori (quarter tone sharp)\n    Glyphs[\"accidentalSori\"] = \"\\uE461\";\n    // U+E477  Byzantine-style Bakiye flat (Tavener)\n    Glyphs[\"accidentalTavenerFlat\"] = \"\\uE477\";\n    // U+E476  Byzantine-style Büyük mücenneb sharp (Tavener)\n    Glyphs[\"accidentalTavenerSharp\"] = \"\\uE476\";\n    // U+ED31  Arabic three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArabic\"] = \"\\uED31\";\n    // U+E271  Three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowDown\"] = \"\\uE271\";\n    // U+1D12D  Three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowDownAlternate\"] = \"\\uD834\\uDD2D\";\n    // U+E278  Three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowUp\"] = \"\\uE278\";\n    // U+E489  Three-quarter-tones flat (Couper)\n    Glyphs[\"accidentalThreeQuarterTonesFlatCouper\"] = \"\\uE489\";\n    // U+E486  Three-quarter-tones flat (Grisey)\n    Glyphs[\"accidentalThreeQuarterTonesFlatGrisey\"] = \"\\uE486\";\n    // U+E487  Three-quarter-tones flat (Tartini)\n    Glyphs[\"accidentalThreeQuarterTonesFlatTartini\"] = \"\\uE487\";\n    // U+E281  Reversed flat and flat (three-quarter-tones flat) (Zimmermann)\n    Glyphs[\"accidentalThreeQuarterTonesFlatZimmermann\"] = \"\\uE281\";\n    // U+ED37  Arabic three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArabic\"] = \"\\uED37\";\n    // U+E277  Three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowDown\"] = \"\\uE277\";\n    // U+E274  Three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowUp\"] = \"\\uE274\";\n    // U+1D130  Three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowUpAlternate\"] = \"\\uD834\\uDD30\";\n    // U+E474  Three quarter tones sharp (Bussotti)\n    Glyphs[\"accidentalThreeQuarterTonesSharpBusotti\"] = \"\\uE474\";\n    // U+E283  One and a half sharps (three-quarter-tones sharp) (Stein)\n    Glyphs[\"accidentalThreeQuarterTonesSharpStein\"] = \"\\uE283\";\n    // U+ED5A  Three-quarter-tones sharp (Stockhausen)\n    Glyphs[\"accidentalThreeQuarterTonesSharpStockhausen\"] = \"\\uED5A\";\n    // U+E266  Triple flat\n    Glyphs[\"accidentalTripleFlat\"] = \"\\uE266\";\n    // U+E265  Triple sharp\n    Glyphs[\"accidentalTripleSharp\"] = \"\\uE265\";\n    // U+E48D  Two-third-tones flat (Ferneyhough)\n    Glyphs[\"accidentalTwoThirdTonesFlatFerneyhough\"] = \"\\uE48D\";\n    // U+E48C  Two-third-tones sharp (Ferneyhough)\n    Glyphs[\"accidentalTwoThirdTonesSharpFerneyhough\"] = \"\\uE48C\";\n    // U+EE61  Accidental down\n    Glyphs[\"accidentalUpsAndDownsDown\"] = \"\\uEE61\";\n    // U+EE63  Accidental less\n    Glyphs[\"accidentalUpsAndDownsLess\"] = \"\\uEE63\";\n    // U+EE62  Accidental more\n    Glyphs[\"accidentalUpsAndDownsMore\"] = \"\\uEE62\";\n    // U+EE60  Accidental up\n    Glyphs[\"accidentalUpsAndDownsUp\"] = \"\\uEE60\";\n    // U+E47C  Wilson minus (5 comma down)\n    Glyphs[\"accidentalWilsonMinus\"] = \"\\uE47C\";\n    // U+E47B  Wilson plus (5 comma up)\n    Glyphs[\"accidentalWilsonPlus\"] = \"\\uE47B\";\n    // U+E434  5/6 tone flat\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsFlat\"] = \"\\uE434\";\n    // U+E429  5/6 tone sharp\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsSharp\"] = \"\\uE429\";\n    // U+E435  11/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsFlat\"] = \"\\uE435\";\n    // U+E42A  11/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsSharp\"] = \"\\uE42A\";\n    // U+E42B  1/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsFlat\"] = \"\\uE42B\";\n    // U+E420  1/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsSharp\"] = \"\\uE420\";\n    // U+E42C  1/6 tone flat\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsFlat\"] = \"\\uE42C\";\n    // U+E421  1/6 tone sharp\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsSharp\"] = \"\\uE421\";\n    // U+E42D  1/4 tone flat\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsFlat\"] = \"\\uE42D\";\n    // U+E422  1/4 tone sharp\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsSharp\"] = \"\\uE422\";\n    // U+E42E  1/3 tone flat\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsFlat\"] = \"\\uE42E\";\n    // U+E423  1/3 tone sharp\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsSharp\"] = \"\\uE423\";\n    // U+E42F  5/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsFlat\"] = \"\\uE42F\";\n    // U+E424  5/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsSharp\"] = \"\\uE424\";\n    // U+E430  1/2 tone flat\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsFlat\"] = \"\\uE430\";\n    // U+E425  1/2 tone sharp\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsSharp\"] = \"\\uE425\";\n    // U+E431  7/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsFlat\"] = \"\\uE431\";\n    // U+E426  7/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsSharp\"] = \"\\uE426\";\n    // U+E432  2/3 tone flat\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsFlat\"] = \"\\uE432\";\n    // U+E427  2/3 tone sharp\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsSharp\"] = \"\\uE427\";\n    // U+E433  3/4 tone flat\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsFlat\"] = \"\\uE433\";\n    // U+E428  3/4 tone sharp\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsSharp\"] = \"\\uE428\";\n    // U+E470  One-third-tone sharp (Xenakis)\n    Glyphs[\"accidentalXenakisOneThirdToneSharp\"] = \"\\uE470\";\n    // U+E471  Two-third-tones sharp (Xenakis)\n    Glyphs[\"accidentalXenakisTwoThirdTonesSharp\"] = \"\\uE471\";\n    // U+E86A  Choralmelodie (Berg)\n    Glyphs[\"analyticsChoralmelodie\"] = \"\\uE86A\";\n    // U+E863  End of stimme\n    Glyphs[\"analyticsEndStimme\"] = \"\\uE863\";\n    // U+1D1A8  End of stimme\n    Glyphs[\"analyticsEndStimmeAlternate\"] = \"\\uD834\\uDDA8\";\n    // U+E86B  Hauptrhythmus (Berg)\n    Glyphs[\"analyticsHauptrhythmus\"] = \"\\uE86B\";\n    // U+E860  Hauptstimme\n    Glyphs[\"analyticsHauptstimme\"] = \"\\uE860\";\n    // U+1D1A6  Hauptstimme\n    Glyphs[\"analyticsHauptstimmeAlternate\"] = \"\\uD834\\uDDA6\";\n    // U+E869  Inversion 1\n    Glyphs[\"analyticsInversion1\"] = \"\\uE869\";\n    // U+E861  Nebenstimme\n    Glyphs[\"analyticsNebenstimme\"] = \"\\uE861\";\n    // U+1D1A7  Nebenstimme\n    Glyphs[\"analyticsNebenstimmeAlternate\"] = \"\\uD834\\uDDA7\";\n    // U+E862  Start of stimme\n    Glyphs[\"analyticsStartStimme\"] = \"\\uE862\";\n    // U+E864  Theme\n    Glyphs[\"analyticsTheme\"] = \"\\uE864\";\n    // U+E868  Theme 1\n    Glyphs[\"analyticsTheme1\"] = \"\\uE868\";\n    // U+E867  Inversion of theme\n    Glyphs[\"analyticsThemeInversion\"] = \"\\uE867\";\n    // U+E865  Retrograde of theme\n    Glyphs[\"analyticsThemeRetrograde\"] = \"\\uE865\";\n    // U+E866  Retrograde inversion of theme\n    Glyphs[\"analyticsThemeRetrogradeInversion\"] = \"\\uE866\";\n    // U+E63C  Arpeggiato\n    Glyphs[\"arpeggiato\"] = \"\\uE63C\";\n    // U+E635  Arpeggiato down\n    Glyphs[\"arpeggiatoDown\"] = \"\\uE635\";\n    // U+1D184  Arpeggiato down\n    Glyphs[\"arpeggiatoDownAlternate\"] = \"\\uD834\\uDD84\";\n    // U+E634  Arpeggiato up\n    Glyphs[\"arpeggiatoUp\"] = \"\\uE634\";\n    // U+1D183  Arpeggiato up\n    Glyphs[\"arpeggiatoUpAlternate\"] = \"\\uD834\\uDD83\";\n    // U+EB64  Black arrow down (S)\n    Glyphs[\"arrowBlackDown\"] = \"\\uEB64\";\n    // U+EB65  Black arrow down-left (SW)\n    Glyphs[\"arrowBlackDownLeft\"] = \"\\uEB65\";\n    // U+EB63  Black arrow down-right (SE)\n    Glyphs[\"arrowBlackDownRight\"] = \"\\uEB63\";\n    // U+EB66  Black arrow left (W)\n    Glyphs[\"arrowBlackLeft\"] = \"\\uEB66\";\n    // U+EB62  Black arrow right (E)\n    Glyphs[\"arrowBlackRight\"] = \"\\uEB62\";\n    // U+EB60  Black arrow up (N)\n    Glyphs[\"arrowBlackUp\"] = \"\\uEB60\";\n    // U+EB67  Black arrow up-left (NW)\n    Glyphs[\"arrowBlackUpLeft\"] = \"\\uEB67\";\n    // U+EB61  Black arrow up-right (NE)\n    Glyphs[\"arrowBlackUpRight\"] = \"\\uEB61\";\n    // U+EB74  Open arrow down (S)\n    Glyphs[\"arrowOpenDown\"] = \"\\uEB74\";\n    // U+EB75  Open arrow down-left (SW)\n    Glyphs[\"arrowOpenDownLeft\"] = \"\\uEB75\";\n    // U+EB73  Open arrow down-right (SE)\n    Glyphs[\"arrowOpenDownRight\"] = \"\\uEB73\";\n    // U+EB76  Open arrow left (W)\n    Glyphs[\"arrowOpenLeft\"] = \"\\uEB76\";\n    // U+EB72  Open arrow right (E)\n    Glyphs[\"arrowOpenRight\"] = \"\\uEB72\";\n    // U+EB70  Open arrow up (N)\n    Glyphs[\"arrowOpenUp\"] = \"\\uEB70\";\n    // U+EB77  Open arrow up-left (NW)\n    Glyphs[\"arrowOpenUpLeft\"] = \"\\uEB77\";\n    // U+EB71  Open arrow up-right (NE)\n    Glyphs[\"arrowOpenUpRight\"] = \"\\uEB71\";\n    // U+EB6C  White arrow down (S)\n    Glyphs[\"arrowWhiteDown\"] = \"\\uEB6C\";\n    // U+EB6D  White arrow down-left (SW)\n    Glyphs[\"arrowWhiteDownLeft\"] = \"\\uEB6D\";\n    // U+EB6B  White arrow down-right (SE)\n    Glyphs[\"arrowWhiteDownRight\"] = \"\\uEB6B\";\n    // U+EB6E  White arrow left (W)\n    Glyphs[\"arrowWhiteLeft\"] = \"\\uEB6E\";\n    // U+EB6A  White arrow right (E)\n    Glyphs[\"arrowWhiteRight\"] = \"\\uEB6A\";\n    // U+EB68  White arrow up (N)\n    Glyphs[\"arrowWhiteUp\"] = \"\\uEB68\";\n    // U+EB6F  White arrow up-left (NW)\n    Glyphs[\"arrowWhiteUpLeft\"] = \"\\uEB6F\";\n    // U+EB69  White arrow up-right (NE)\n    Glyphs[\"arrowWhiteUpRight\"] = \"\\uEB69\";\n    // U+EB7C  Black arrowhead down (S)\n    Glyphs[\"arrowheadBlackDown\"] = \"\\uEB7C\";\n    // U+EB7D  Black arrowhead down-left (SW)\n    Glyphs[\"arrowheadBlackDownLeft\"] = \"\\uEB7D\";\n    // U+EB7B  Black arrowhead down-right (SE)\n    Glyphs[\"arrowheadBlackDownRight\"] = \"\\uEB7B\";\n    // U+EB7E  Black arrowhead left (W)\n    Glyphs[\"arrowheadBlackLeft\"] = \"\\uEB7E\";\n    // U+EB7A  Black arrowhead right (E)\n    Glyphs[\"arrowheadBlackRight\"] = \"\\uEB7A\";\n    // U+EB78  Black arrowhead up (N)\n    Glyphs[\"arrowheadBlackUp\"] = \"\\uEB78\";\n    // U+EB7F  Black arrowhead up-left (NW)\n    Glyphs[\"arrowheadBlackUpLeft\"] = \"\\uEB7F\";\n    // U+EB79  Black arrowhead up-right (NE)\n    Glyphs[\"arrowheadBlackUpRight\"] = \"\\uEB79\";\n    // U+EB8C  Open arrowhead down (S)\n    Glyphs[\"arrowheadOpenDown\"] = \"\\uEB8C\";\n    // U+EB8D  Open arrowhead down-left (SW)\n    Glyphs[\"arrowheadOpenDownLeft\"] = \"\\uEB8D\";\n    // U+EB8B  Open arrowhead down-right (SE)\n    Glyphs[\"arrowheadOpenDownRight\"] = \"\\uEB8B\";\n    // U+EB8E  Open arrowhead left (W)\n    Glyphs[\"arrowheadOpenLeft\"] = \"\\uEB8E\";\n    // U+EB8A  Open arrowhead right (E)\n    Glyphs[\"arrowheadOpenRight\"] = \"\\uEB8A\";\n    // U+EB88  Open arrowhead up (N)\n    Glyphs[\"arrowheadOpenUp\"] = \"\\uEB88\";\n    // U+EB8F  Open arrowhead up-left (NW)\n    Glyphs[\"arrowheadOpenUpLeft\"] = \"\\uEB8F\";\n    // U+EB89  Open arrowhead up-right (NE)\n    Glyphs[\"arrowheadOpenUpRight\"] = \"\\uEB89\";\n    // U+EB84  White arrowhead down (S)\n    Glyphs[\"arrowheadWhiteDown\"] = \"\\uEB84\";\n    // U+EB85  White arrowhead down-left (SW)\n    Glyphs[\"arrowheadWhiteDownLeft\"] = \"\\uEB85\";\n    // U+EB83  White arrowhead down-right (SE)\n    Glyphs[\"arrowheadWhiteDownRight\"] = \"\\uEB83\";\n    // U+EB86  White arrowhead left (W)\n    Glyphs[\"arrowheadWhiteLeft\"] = \"\\uEB86\";\n    // U+EB82  White arrowhead right (E)\n    Glyphs[\"arrowheadWhiteRight\"] = \"\\uEB82\";\n    // U+EB80  White arrowhead up (N)\n    Glyphs[\"arrowheadWhiteUp\"] = \"\\uEB80\";\n    // U+EB87  White arrowhead up-left (NW)\n    Glyphs[\"arrowheadWhiteUpLeft\"] = \"\\uEB87\";\n    // U+EB81  White arrowhead up-right (NE)\n    Glyphs[\"arrowheadWhiteUpRight\"] = \"\\uEB81\";\n    // U+E4A0  Accent above\n    Glyphs[\"articAccentAbove\"] = \"\\uE4A0\";\n    // U+1D17B  Accent above\n    Glyphs[\"articAccentAboveAlternate\"] = \"\\uD834\\uDD7B\";\n    // U+E4A1  Accent below\n    Glyphs[\"articAccentBelow\"] = \"\\uE4A1\";\n    // U+E4B0  Accent-staccato above\n    Glyphs[\"articAccentStaccatoAbove\"] = \"\\uE4B0\";\n    // U+1D181  Accent-staccato above\n    Glyphs[\"articAccentStaccatoAboveAlternate\"] = \"\\uD834\\uDD81\";\n    // U+E4B1  Accent-staccato below\n    Glyphs[\"articAccentStaccatoBelow\"] = \"\\uE4B1\";\n    // U+E4BA  Laissez vibrer (l.v.) above\n    Glyphs[\"articLaissezVibrerAbove\"] = \"\\uE4BA\";\n    // U+E4BB  Laissez vibrer (l.v.) below\n    Glyphs[\"articLaissezVibrerBelow\"] = \"\\uE4BB\";\n    // U+E4AC  Marcato above\n    Glyphs[\"articMarcatoAbove\"] = \"\\uE4AC\";\n    // U+1D17F  Marcato above\n    Glyphs[\"articMarcatoAboveAlternate\"] = \"\\uD834\\uDD7F\";\n    // U+E4AD  Marcato below\n    Glyphs[\"articMarcatoBelow\"] = \"\\uE4AD\";\n    // U+E4AE  Marcato-staccato above\n    Glyphs[\"articMarcatoStaccatoAbove\"] = \"\\uE4AE\";\n    // U+1D180  Marcato-staccato above\n    Glyphs[\"articMarcatoStaccatoAboveAlternate\"] = \"\\uD834\\uDD80\";\n    // U+E4AF  Marcato-staccato below\n    Glyphs[\"articMarcatoStaccatoBelow\"] = \"\\uE4AF\";\n    // U+E4BC  Marcato-tenuto above\n    Glyphs[\"articMarcatoTenutoAbove\"] = \"\\uE4BC\";\n    // U+E4BD  Marcato-tenuto below\n    Glyphs[\"articMarcatoTenutoBelow\"] = \"\\uE4BD\";\n    // U+ED40  Soft accent above\n    Glyphs[\"articSoftAccentAbove\"] = \"\\uED40\";\n    // U+ED41  Soft accent below\n    Glyphs[\"articSoftAccentBelow\"] = \"\\uED41\";\n    // U+ED42  Soft accent-staccato above\n    Glyphs[\"articSoftAccentStaccatoAbove\"] = \"\\uED42\";\n    // U+ED43  Soft accent-staccato below\n    Glyphs[\"articSoftAccentStaccatoBelow\"] = \"\\uED43\";\n    // U+ED44  Soft accent-tenuto above\n    Glyphs[\"articSoftAccentTenutoAbove\"] = \"\\uED44\";\n    // U+ED45  Soft accent-tenuto below\n    Glyphs[\"articSoftAccentTenutoBelow\"] = \"\\uED45\";\n    // U+ED46  Soft accent-tenuto-staccato above\n    Glyphs[\"articSoftAccentTenutoStaccatoAbove\"] = \"\\uED46\";\n    // U+ED47  Soft accent-tenuto-staccato below\n    Glyphs[\"articSoftAccentTenutoStaccatoBelow\"] = \"\\uED47\";\n    // U+E4A6  Staccatissimo above\n    Glyphs[\"articStaccatissimoAbove\"] = \"\\uE4A6\";\n    // U+1D17E  Staccatissimo above\n    Glyphs[\"articStaccatissimoAboveAlternate\"] = \"\\uD834\\uDD7E\";\n    // U+E4A7  Staccatissimo below\n    Glyphs[\"articStaccatissimoBelow\"] = \"\\uE4A7\";\n    // U+E4AA  Staccatissimo stroke above\n    Glyphs[\"articStaccatissimoStrokeAbove\"] = \"\\uE4AA\";\n    // U+E4AB  Staccatissimo stroke below\n    Glyphs[\"articStaccatissimoStrokeBelow\"] = \"\\uE4AB\";\n    // U+E4A8  Staccatissimo wedge above\n    Glyphs[\"articStaccatissimoWedgeAbove\"] = \"\\uE4A8\";\n    // U+E4A9  Staccatissimo wedge below\n    Glyphs[\"articStaccatissimoWedgeBelow\"] = \"\\uE4A9\";\n    // U+E4A2  Staccato above\n    Glyphs[\"articStaccatoAbove\"] = \"\\uE4A2\";\n    // U+1D17C  Staccato above\n    Glyphs[\"articStaccatoAboveAlternate\"] = \"\\uD834\\uDD7C\";\n    // U+E4A3  Staccato below\n    Glyphs[\"articStaccatoBelow\"] = \"\\uE4A3\";\n    // U+E4B6  Stress above\n    Glyphs[\"articStressAbove\"] = \"\\uE4B6\";\n    // U+E4B7  Stress below\n    Glyphs[\"articStressBelow\"] = \"\\uE4B7\";\n    // U+E4A4  Tenuto above\n    Glyphs[\"articTenutoAbove\"] = \"\\uE4A4\";\n    // U+1D17D  Tenuto above\n    Glyphs[\"articTenutoAboveAlternate\"] = \"\\uD834\\uDD7D\";\n    // U+E4B4  Tenuto-accent above\n    Glyphs[\"articTenutoAccentAbove\"] = \"\\uE4B4\";\n    // U+E4B5  Tenuto-accent below\n    Glyphs[\"articTenutoAccentBelow\"] = \"\\uE4B5\";\n    // U+E4A5  Tenuto below\n    Glyphs[\"articTenutoBelow\"] = \"\\uE4A5\";\n    // U+E4B2  Louré (tenuto-staccato) above\n    Glyphs[\"articTenutoStaccatoAbove\"] = \"\\uE4B2\";\n    // U+1D182  Louré (tenuto-staccato) above\n    Glyphs[\"articTenutoStaccatoAboveAlternate\"] = \"\\uD834\\uDD82\";\n    // U+E4B3  Louré (tenuto-staccato) below\n    Glyphs[\"articTenutoStaccatoBelow\"] = \"\\uE4B3\";\n    // U+E4B8  Unstress above\n    Glyphs[\"articUnstressAbove\"] = \"\\uE4B8\";\n    // U+E4B9  Unstress below\n    Glyphs[\"articUnstressBelow\"] = \"\\uE4B9\";\n    // U+E1E7  Augmentation dot\n    Glyphs[\"augmentationDot\"] = \"\\uE1E7\";\n    // U+1D16D  Augmentation dot\n    Glyphs[\"augmentationDotAlternate\"] = \"\\uD834\\uDD6D\";\n    // U+E036  Dashed barline\n    Glyphs[\"barlineDashed\"] = \"\\uE036\";\n    // U+1D104  Dashed barline\n    Glyphs[\"barlineDashedAlternate\"] = \"\\uD834\\uDD04\";\n    // U+E037  Dotted barline\n    Glyphs[\"barlineDotted\"] = \"\\uE037\";\n    // U+E031  Double barline\n    Glyphs[\"barlineDouble\"] = \"\\uE031\";\n    // U+1D101  Double barline\n    Glyphs[\"barlineDoubleAlternate\"] = \"\\uD834\\uDD01\";\n    // U+E032  Final barline\n    Glyphs[\"barlineFinal\"] = \"\\uE032\";\n    // U+1D102  Final barline\n    Glyphs[\"barlineFinalAlternate\"] = \"\\uD834\\uDD02\";\n    // U+E034  Heavy barline\n    Glyphs[\"barlineHeavy\"] = \"\\uE034\";\n    // U+E035  Heavy double barline\n    Glyphs[\"barlineHeavyHeavy\"] = \"\\uE035\";\n    // U+E033  Reverse final barline\n    Glyphs[\"barlineReverseFinal\"] = \"\\uE033\";\n    // U+1D103  Reverse final barline\n    Glyphs[\"barlineReverseFinalAlternate\"] = \"\\uD834\\uDD03\";\n    // U+E038  Short barline\n    Glyphs[\"barlineShort\"] = \"\\uE038\";\n    // U+1D105  Short barline\n    Glyphs[\"barlineShortAlternate\"] = \"\\uD834\\uDD05\";\n    // U+E030  Single barline\n    Glyphs[\"barlineSingle\"] = \"\\uE030\";\n    // U+1D100  Single barline\n    Glyphs[\"barlineSingleAlternate\"] = \"\\uD834\\uDD00\";\n    // U+E039  Tick barline\n    Glyphs[\"barlineTick\"] = \"\\uE039\";\n    // U+EAF4  Accel./rit. beam 1 (widest)\n    Glyphs[\"beamAccelRit1\"] = \"\\uEAF4\";\n    // U+EAFD  Accel./rit. beam 10\n    Glyphs[\"beamAccelRit10\"] = \"\\uEAFD\";\n    // U+EAFE  Accel./rit. beam 11\n    Glyphs[\"beamAccelRit11\"] = \"\\uEAFE\";\n    // U+EAFF  Accel./rit. beam 12\n    Glyphs[\"beamAccelRit12\"] = \"\\uEAFF\";\n    // U+EB00  Accel./rit. beam 13\n    Glyphs[\"beamAccelRit13\"] = \"\\uEB00\";\n    // U+EB01  Accel./rit. beam 14\n    Glyphs[\"beamAccelRit14\"] = \"\\uEB01\";\n    // U+EB02  Accel./rit. beam 15 (narrowest)\n    Glyphs[\"beamAccelRit15\"] = \"\\uEB02\";\n    // U+EAF5  Accel./rit. beam 2\n    Glyphs[\"beamAccelRit2\"] = \"\\uEAF5\";\n    // U+EAF6  Accel./rit. beam 3\n    Glyphs[\"beamAccelRit3\"] = \"\\uEAF6\";\n    // U+EAF7  Accel./rit. beam 4\n    Glyphs[\"beamAccelRit4\"] = \"\\uEAF7\";\n    // U+EAF8  Accel./rit. beam 5\n    Glyphs[\"beamAccelRit5\"] = \"\\uEAF8\";\n    // U+EAF9  Accel./rit. beam 6\n    Glyphs[\"beamAccelRit6\"] = \"\\uEAF9\";\n    // U+EAFA  Accel./rit. beam 7\n    Glyphs[\"beamAccelRit7\"] = \"\\uEAFA\";\n    // U+EAFB  Accel./rit. beam 8\n    Glyphs[\"beamAccelRit8\"] = \"\\uEAFB\";\n    // U+EAFC  Accel./rit. beam 9\n    Glyphs[\"beamAccelRit9\"] = \"\\uEAFC\";\n    // U+EB03  Accel./rit. beam terminating line\n    Glyphs[\"beamAccelRitFinal\"] = \"\\uEB03\";\n    // U+E000  Brace\n    Glyphs[\"brace\"] = \"\\uE000\";\n    // U+1D114  Brace\n    Glyphs[\"braceAlternate\"] = \"\\uD834\\uDD14\";\n    // U+E002  Bracket\n    Glyphs[\"bracket\"] = \"\\uE002\";\n    // U+1D115  Bracket\n    Glyphs[\"bracketAlternate\"] = \"\\uD834\\uDD15\";\n    // U+E004  Bracket bottom\n    Glyphs[\"bracketBottom\"] = \"\\uE004\";\n    // U+E003  Bracket top\n    Glyphs[\"bracketTop\"] = \"\\uE003\";\n    // U+E5E3  Bend\n    Glyphs[\"brassBend\"] = \"\\uE5E3\";\n    // U+1D189  Bend\n    Glyphs[\"brassBendAlternate\"] = \"\\uD834\\uDD89\";\n    // U+E5D6  Doit, long\n    Glyphs[\"brassDoitLong\"] = \"\\uE5D6\";\n    // U+E5D5  Doit, medium\n    Glyphs[\"brassDoitMedium\"] = \"\\uE5D5\";\n    // U+E5D4  Doit, short\n    Glyphs[\"brassDoitShort\"] = \"\\uE5D4\";\n    // U+1D185  Doit, short\n    Glyphs[\"brassDoitShortAlternate\"] = \"\\uD834\\uDD85\";\n    // U+E5D9  Lip fall, long\n    Glyphs[\"brassFallLipLong\"] = \"\\uE5D9\";\n    // U+E5D8  Lip fall, medium\n    Glyphs[\"brassFallLipMedium\"] = \"\\uE5D8\";\n    // U+E5D7  Lip fall, short\n    Glyphs[\"brassFallLipShort\"] = \"\\uE5D7\";\n    // U+1D186  Lip fall, short\n    Glyphs[\"brassFallLipShortAlternate\"] = \"\\uD834\\uDD86\";\n    // U+E5DF  Rough fall, long\n    Glyphs[\"brassFallRoughLong\"] = \"\\uE5DF\";\n    // U+E5DE  Rough fall, medium\n    Glyphs[\"brassFallRoughMedium\"] = \"\\uE5DE\";\n    // U+E5DD  Rough fall, short\n    Glyphs[\"brassFallRoughShort\"] = \"\\uE5DD\";\n    // U+E5DC  Smooth fall, long\n    Glyphs[\"brassFallSmoothLong\"] = \"\\uE5DC\";\n    // U+E5DB  Smooth fall, medium\n    Glyphs[\"brassFallSmoothMedium\"] = \"\\uE5DB\";\n    // U+E5DA  Smooth fall, short\n    Glyphs[\"brassFallSmoothShort\"] = \"\\uE5DA\";\n    // U+E5E1  Flip\n    Glyphs[\"brassFlip\"] = \"\\uE5E1\";\n    // U+1D187  Flip\n    Glyphs[\"brassFlipAlternate\"] = \"\\uD834\\uDD87\";\n    // U+E5E8  Harmon mute, stem in\n    Glyphs[\"brassHarmonMuteClosed\"] = \"\\uE5E8\";\n    // U+E5E9  Harmon mute, stem extended, left\n    Glyphs[\"brassHarmonMuteStemHalfLeft\"] = \"\\uE5E9\";\n    // U+E5EA  Harmon mute, stem extended, right\n    Glyphs[\"brassHarmonMuteStemHalfRight\"] = \"\\uE5EA\";\n    // U+E5EB  Harmon mute, stem out\n    Glyphs[\"brassHarmonMuteStemOpen\"] = \"\\uE5EB\";\n    // U+E5E4  Jazz turn\n    Glyphs[\"brassJazzTurn\"] = \"\\uE5E4\";\n    // U+E5D3  Lift, long\n    Glyphs[\"brassLiftLong\"] = \"\\uE5D3\";\n    // U+E5D2  Lift, medium\n    Glyphs[\"brassLiftMedium\"] = \"\\uE5D2\";\n    // U+E5D1  Lift, short\n    Glyphs[\"brassLiftShort\"] = \"\\uE5D1\";\n    // U+E5EE  Smooth lift, long\n    Glyphs[\"brassLiftSmoothLong\"] = \"\\uE5EE\";\n    // U+E5ED  Smooth lift, medium\n    Glyphs[\"brassLiftSmoothMedium\"] = \"\\uE5ED\";\n    // U+E5EC  Smooth lift, short\n    Glyphs[\"brassLiftSmoothShort\"] = \"\\uE5EC\";\n    // U+E5E5  Muted (closed)\n    Glyphs[\"brassMuteClosed\"] = \"\\uE5E5\";\n    // U+E5E6  Half-muted (half-closed)\n    Glyphs[\"brassMuteHalfClosed\"] = \"\\uE5E6\";\n    // U+E5E7  Open\n    Glyphs[\"brassMuteOpen\"] = \"\\uE5E7\";\n    // U+E5E0  Plop\n    Glyphs[\"brassPlop\"] = \"\\uE5E0\";\n    // U+E5D0  Scoop\n    Glyphs[\"brassScoop\"] = \"\\uE5D0\";\n    // U+E5E2  Smear\n    Glyphs[\"brassSmear\"] = \"\\uE5E2\";\n    // U+1D188  Smear\n    Glyphs[\"brassSmearAlternate\"] = \"\\uD834\\uDD88\";\n    // U+E5EF  Valve trill\n    Glyphs[\"brassValveTrill\"] = \"\\uE5EF\";\n    // U+E4CE  Breath mark (comma)\n    Glyphs[\"breathMarkComma\"] = \"\\uE4CE\";\n    // U+1D112  Breath mark (comma)\n    Glyphs[\"breathMarkCommaAlternate\"] = \"\\uD834\\uDD12\";\n    // U+E4D5  Breath mark (Salzedo)\n    Glyphs[\"breathMarkSalzedo\"] = \"\\uE4D5\";\n    // U+E4CF  Breath mark (tick-like)\n    Glyphs[\"breathMarkTick\"] = \"\\uE4CF\";\n    // U+E4D0  Breath mark (upbow-like)\n    Glyphs[\"breathMarkUpbow\"] = \"\\uE4D0\";\n    // U+E078  Bridge clef\n    Glyphs[\"bridgeClef\"] = \"\\uE078\";\n    // U+E22A  Buzz roll\n    Glyphs[\"buzzRoll\"] = \"\\uE22A\";\n    // U+E05C  C clef\n    Glyphs[\"cClef\"] = \"\\uE05C\";\n    // U+1D121  C clef\n    Glyphs[\"cClefAlternate\"] = \"\\uD834\\uDD21\";\n    // U+E05D  C clef ottava bassa\n    Glyphs[\"cClef8vb\"] = \"\\uE05D\";\n    // U+E05F  C clef, arrow down\n    Glyphs[\"cClefArrowDown\"] = \"\\uE05F\";\n    // U+E05E  C clef, arrow up\n    Glyphs[\"cClefArrowUp\"] = \"\\uE05E\";\n    // U+E07B  C clef change\n    Glyphs[\"cClefChange\"] = \"\\uE07B\";\n    // U+E061  Combining C clef\n    Glyphs[\"cClefCombining\"] = \"\\uE061\";\n    // U+E075  Reversed C clef\n    Glyphs[\"cClefReversed\"] = \"\\uE075\";\n    // U+E060  C clef (19th century)\n    Glyphs[\"cClefSquare\"] = \"\\uE060\";\n    // U+E4D1  Caesura\n    Glyphs[\"caesura\"] = \"\\uE4D1\";\n    // U+1D113  Caesura\n    Glyphs[\"caesuraAlternate\"] = \"\\uD834\\uDD13\";\n    // U+E4D4  Curved caesura\n    Glyphs[\"caesuraCurved\"] = \"\\uE4D4\";\n    // U+E4D3  Short caesura\n    Glyphs[\"caesuraShort\"] = \"\\uE4D3\";\n    // U+E4D7  Single stroke caesura\n    Glyphs[\"caesuraSingleStroke\"] = \"\\uE4D7\";\n    // U+E4D2  Thick caesura\n    Glyphs[\"caesuraThick\"] = \"\\uE4D2\";\n    // U+E9D6  Accentus above\n    Glyphs[\"chantAccentusAbove\"] = \"\\uE9D6\";\n    // U+E9D7  Accentus below\n    Glyphs[\"chantAccentusBelow\"] = \"\\uE9D7\";\n    // U+E994  Punctum auctum, ascending\n    Glyphs[\"chantAuctumAsc\"] = \"\\uE994\";\n    // U+E995  Punctum auctum, descending\n    Glyphs[\"chantAuctumDesc\"] = \"\\uE995\";\n    // U+E9D9  Augmentum (mora)\n    Glyphs[\"chantAugmentum\"] = \"\\uE9D9\";\n    // U+E8F8  Caesura\n    Glyphs[\"chantCaesura\"] = \"\\uE8F8\";\n    // U+E906  Plainchant C clef\n    Glyphs[\"chantCclef\"] = \"\\uE906\";\n    // U+1D1D0  Plainchant C clef\n    Glyphs[\"chantCclefAlternate\"] = \"\\uD834\\uDDD0\";\n    // U+E9D2  Circulus above\n    Glyphs[\"chantCirculusAbove\"] = \"\\uE9D2\";\n    // U+E9D3  Circulus below\n    Glyphs[\"chantCirculusBelow\"] = \"\\uE9D3\";\n    // U+E9BD  Connecting line, ascending 2nd\n    Glyphs[\"chantConnectingLineAsc2nd\"] = \"\\uE9BD\";\n    // U+E9BE  Connecting line, ascending 3rd\n    Glyphs[\"chantConnectingLineAsc3rd\"] = \"\\uE9BE\";\n    // U+E9BF  Connecting line, ascending 4th\n    Glyphs[\"chantConnectingLineAsc4th\"] = \"\\uE9BF\";\n    // U+E9C0  Connecting line, ascending 5th\n    Glyphs[\"chantConnectingLineAsc5th\"] = \"\\uE9C0\";\n    // U+E9C1  Connecting line, ascending 6th\n    Glyphs[\"chantConnectingLineAsc6th\"] = \"\\uE9C1\";\n    // U+EA08  Plainchant custos, stem down, high position\n    Glyphs[\"chantCustosStemDownPosHigh\"] = \"\\uEA08\";\n    // U+EA09  Plainchant custos, stem down, highest position\n    Glyphs[\"chantCustosStemDownPosHighest\"] = \"\\uEA09\";\n    // U+EA07  Plainchant custos, stem down, middle position\n    Glyphs[\"chantCustosStemDownPosMiddle\"] = \"\\uEA07\";\n    // U+EA05  Plainchant custos, stem up, low position\n    Glyphs[\"chantCustosStemUpPosLow\"] = \"\\uEA05\";\n    // U+EA04  Plainchant custos, stem up, lowest position\n    Glyphs[\"chantCustosStemUpPosLowest\"] = \"\\uEA04\";\n    // U+EA06  Plainchant custos, stem up, middle position\n    Glyphs[\"chantCustosStemUpPosMiddle\"] = \"\\uEA06\";\n    // U+E9B3  Punctum deminutum, lower\n    Glyphs[\"chantDeminutumLower\"] = \"\\uE9B3\";\n    // U+E9B2  Punctum deminutum, upper\n    Glyphs[\"chantDeminutumUpper\"] = \"\\uE9B2\";\n    // U+E8F6  Divisio finalis\n    Glyphs[\"chantDivisioFinalis\"] = \"\\uE8F6\";\n    // U+E8F4  Divisio maior\n    Glyphs[\"chantDivisioMaior\"] = \"\\uE8F4\";\n    // U+E8F5  Divisio maxima\n    Glyphs[\"chantDivisioMaxima\"] = \"\\uE8F5\";\n    // U+E8F3  Divisio minima\n    Glyphs[\"chantDivisioMinima\"] = \"\\uE8F3\";\n    // U+E9B4  Entry line, ascending 2nd\n    Glyphs[\"chantEntryLineAsc2nd\"] = \"\\uE9B4\";\n    // U+E9B5  Entry line, ascending 3rd\n    Glyphs[\"chantEntryLineAsc3rd\"] = \"\\uE9B5\";\n    // U+E9B6  Entry line, ascending 4th\n    Glyphs[\"chantEntryLineAsc4th\"] = \"\\uE9B6\";\n    // U+E9B7  Entry line, ascending 5th\n    Glyphs[\"chantEntryLineAsc5th\"] = \"\\uE9B7\";\n    // U+E9B8  Entry line, ascending 6th\n    Glyphs[\"chantEntryLineAsc6th\"] = \"\\uE9B8\";\n    // U+E9D8  Episema\n    Glyphs[\"chantEpisema\"] = \"\\uE9D8\";\n    // U+E902  Plainchant F clef\n    Glyphs[\"chantFclef\"] = \"\\uE902\";\n    // U+1D1D1  Plainchant F clef\n    Glyphs[\"chantFclefAlternate\"] = \"\\uD834\\uDDD1\";\n    // U+E9D0  Ictus above\n    Glyphs[\"chantIctusAbove\"] = \"\\uE9D0\";\n    // U+E9D1  Ictus below\n    Glyphs[\"chantIctusBelow\"] = \"\\uE9D1\";\n    // U+E9B9  Ligated stroke, descending 2nd\n    Glyphs[\"chantLigaturaDesc2nd\"] = \"\\uE9B9\";\n    // U+E9BA  Ligated stroke, descending 3rd\n    Glyphs[\"chantLigaturaDesc3rd\"] = \"\\uE9BA\";\n    // U+E9BB  Ligated stroke, descending 4th\n    Glyphs[\"chantLigaturaDesc4th\"] = \"\\uE9BB\";\n    // U+E9BC  Ligated stroke, descending 5th\n    Glyphs[\"chantLigaturaDesc5th\"] = \"\\uE9BC\";\n    // U+E99C  Oriscus ascending\n    Glyphs[\"chantOriscusAscending\"] = \"\\uE99C\";\n    // U+E99D  Oriscus descending\n    Glyphs[\"chantOriscusDescending\"] = \"\\uE99D\";\n    // U+E99E  Oriscus liquescens\n    Glyphs[\"chantOriscusLiquescens\"] = \"\\uE99E\";\n    // U+E9B0  Podatus, lower\n    Glyphs[\"chantPodatusLower\"] = \"\\uE9B0\";\n    // U+E9B1  Podatus, upper\n    Glyphs[\"chantPodatusUpper\"] = \"\\uE9B1\";\n    // U+1D1D4  Podatus, upper\n    Glyphs[\"chantPodatusUpperAlternate\"] = \"\\uD834\\uDDD4\";\n    // U+E990  Punctum\n    Glyphs[\"chantPunctum\"] = \"\\uE990\";\n    // U+E998  Punctum cavum\n    Glyphs[\"chantPunctumCavum\"] = \"\\uE998\";\n    // U+E9A1  Punctum deminutum\n    Glyphs[\"chantPunctumDeminutum\"] = \"\\uE9A1\";\n    // U+E991  Punctum inclinatum\n    Glyphs[\"chantPunctumInclinatum\"] = \"\\uE991\";\n    // U+E992  Punctum inclinatum auctum\n    Glyphs[\"chantPunctumInclinatumAuctum\"] = \"\\uE992\";\n    // U+E993  Punctum inclinatum deminutum\n    Glyphs[\"chantPunctumInclinatumDeminutum\"] = \"\\uE993\";\n    // U+E999  Punctum linea\n    Glyphs[\"chantPunctumLinea\"] = \"\\uE999\";\n    // U+E99A  Punctum linea cavum\n    Glyphs[\"chantPunctumLineaCavum\"] = \"\\uE99A\";\n    // U+E996  Punctum virga\n    Glyphs[\"chantPunctumVirga\"] = \"\\uE996\";\n    // U+1D1D3  Punctum virga\n    Glyphs[\"chantPunctumVirgaAlternate\"] = \"\\uD834\\uDDD3\";\n    // U+E997  Punctum virga, reversed\n    Glyphs[\"chantPunctumVirgaReversed\"] = \"\\uE997\";\n    // U+E99B  Quilisma\n    Glyphs[\"chantQuilisma\"] = \"\\uE99B\";\n    // U+E9D4  Semicirculus above\n    Glyphs[\"chantSemicirculusAbove\"] = \"\\uE9D4\";\n    // U+E9D5  Semicirculus below\n    Glyphs[\"chantSemicirculusBelow\"] = \"\\uE9D5\";\n    // U+E8F0  Plainchant staff\n    Glyphs[\"chantStaff\"] = \"\\uE8F0\";\n    // U+E8F2  Plainchant staff (narrow)\n    Glyphs[\"chantStaffNarrow\"] = \"\\uE8F2\";\n    // U+E8F1  Plainchant staff (wide)\n    Glyphs[\"chantStaffWide\"] = \"\\uE8F1\";\n    // U+E99F  Strophicus\n    Glyphs[\"chantStrophicus\"] = \"\\uE99F\";\n    // U+E9A0  Strophicus auctus\n    Glyphs[\"chantStrophicusAuctus\"] = \"\\uE9A0\";\n    // U+E9C2  Strophicus liquescens, 2nd\n    Glyphs[\"chantStrophicusLiquescens2nd\"] = \"\\uE9C2\";\n    // U+E9C3  Strophicus liquescens, 3rd\n    Glyphs[\"chantStrophicusLiquescens3rd\"] = \"\\uE9C3\";\n    // U+E9C4  Strophicus liquescens, 4th\n    Glyphs[\"chantStrophicusLiquescens4th\"] = \"\\uE9C4\";\n    // U+E9C5  Strophicus liquescens, 5th\n    Glyphs[\"chantStrophicusLiquescens5th\"] = \"\\uE9C5\";\n    // U+E8F7  Virgula\n    Glyphs[\"chantVirgula\"] = \"\\uE8F7\";\n    // U+E07E  15 for clefs\n    Glyphs[\"clef15\"] = \"\\uE07E\";\n    // U+E07D  8 for clefs\n    Glyphs[\"clef8\"] = \"\\uE07D\";\n    // U+E07F  Combining clef change\n    Glyphs[\"clefChangeCombining\"] = \"\\uE07F\";\n    // U+E048  Coda\n    Glyphs[\"coda\"] = \"\\uE048\";\n    // U+1D10C  Coda\n    Glyphs[\"codaAlternate\"] = \"\\uD834\\uDD0C\";\n    // U+E049  Square coda\n    Glyphs[\"codaSquare\"] = \"\\uE049\";\n    // U+E897  Beat 2, compound time\n    Glyphs[\"conductorBeat2Compound\"] = \"\\uE897\";\n    // U+E894  Beat 2, simple time\n    Glyphs[\"conductorBeat2Simple\"] = \"\\uE894\";\n    // U+E898  Beat 3, compound time\n    Glyphs[\"conductorBeat3Compound\"] = \"\\uE898\";\n    // U+E895  Beat 3, simple time\n    Glyphs[\"conductorBeat3Simple\"] = \"\\uE895\";\n    // U+E899  Beat 4, compound time\n    Glyphs[\"conductorBeat4Compound\"] = \"\\uE899\";\n    // U+E896  Beat 4, simple time\n    Glyphs[\"conductorBeat4Simple\"] = \"\\uE896\";\n    // U+E891  Left-hand beat or cue\n    Glyphs[\"conductorLeftBeat\"] = \"\\uE891\";\n    // U+E892  Right-hand beat or cue\n    Glyphs[\"conductorRightBeat\"] = \"\\uE892\";\n    // U+E890  Strong beat or cue\n    Glyphs[\"conductorStrongBeat\"] = \"\\uE890\";\n    // U+E89A  Unconducted/free passages\n    Glyphs[\"conductorUnconducted\"] = \"\\uE89A\";\n    // U+E893  Weak beat or cue\n    Glyphs[\"conductorWeakBeat\"] = \"\\uE893\";\n    // U+E8E0  Begin beam\n    Glyphs[\"controlBeginBeam\"] = \"\\uE8E0\";\n    // U+1D173  Begin beam\n    Glyphs[\"controlBeginBeamAlternate\"] = \"\\uD834\\uDD73\";\n    // U+E8E6  Begin phrase\n    Glyphs[\"controlBeginPhrase\"] = \"\\uE8E6\";\n    // U+1D179  Begin phrase\n    Glyphs[\"controlBeginPhraseAlternate\"] = \"\\uD834\\uDD79\";\n    // U+E8E4  Begin slur\n    Glyphs[\"controlBeginSlur\"] = \"\\uE8E4\";\n    // U+1D177  Begin slur\n    Glyphs[\"controlBeginSlurAlternate\"] = \"\\uD834\\uDD77\";\n    // U+E8E2  Begin tie\n    Glyphs[\"controlBeginTie\"] = \"\\uE8E2\";\n    // U+1D175  Begin tie\n    Glyphs[\"controlBeginTieAlternate\"] = \"\\uD834\\uDD75\";\n    // U+E8E1  End beam\n    Glyphs[\"controlEndBeam\"] = \"\\uE8E1\";\n    // U+1D174  End beam\n    Glyphs[\"controlEndBeamAlternate\"] = \"\\uD834\\uDD74\";\n    // U+E8E7  End phrase\n    Glyphs[\"controlEndPhrase\"] = \"\\uE8E7\";\n    // U+1D17A  End phrase\n    Glyphs[\"controlEndPhraseAlternate\"] = \"\\uD834\\uDD7A\";\n    // U+E8E5  End slur\n    Glyphs[\"controlEndSlur\"] = \"\\uE8E5\";\n    // U+1D178  End slur\n    Glyphs[\"controlEndSlurAlternate\"] = \"\\uD834\\uDD78\";\n    // U+E8E3  End tie\n    Glyphs[\"controlEndTie\"] = \"\\uE8E3\";\n    // U+1D176  End tie\n    Glyphs[\"controlEndTieAlternate\"] = \"\\uD834\\uDD76\";\n    // U+ED64  Double flat\n    Glyphs[\"csymAccidentalDoubleFlat\"] = \"\\uED64\";\n    // U+ED63  Double sharp\n    Glyphs[\"csymAccidentalDoubleSharp\"] = \"\\uED63\";\n    // U+ED60  Flat\n    Glyphs[\"csymAccidentalFlat\"] = \"\\uED60\";\n    // U+ED61  Natural\n    Glyphs[\"csymAccidentalNatural\"] = \"\\uED61\";\n    // U+ED62  Sharp\n    Glyphs[\"csymAccidentalSharp\"] = \"\\uED62\";\n    // U+ED66  Triple flat\n    Glyphs[\"csymAccidentalTripleFlat\"] = \"\\uED66\";\n    // U+ED65  Triple sharp\n    Glyphs[\"csymAccidentalTripleSharp\"] = \"\\uED65\";\n    // U+E87B  Slash for altered bass note\n    Glyphs[\"csymAlteredBassSlash\"] = \"\\uE87B\";\n    // U+E872  Augmented\n    Glyphs[\"csymAugmented\"] = \"\\uE872\";\n    // U+E877  Double-height left bracket\n    Glyphs[\"csymBracketLeftTall\"] = \"\\uE877\";\n    // U+E878  Double-height right bracket\n    Glyphs[\"csymBracketRightTall\"] = \"\\uE878\";\n    // U+E87C  Slash for chord symbols arranged diagonally\n    Glyphs[\"csymDiagonalArrangementSlash\"] = \"\\uE87C\";\n    // U+E870  Diminished\n    Glyphs[\"csymDiminished\"] = \"\\uE870\";\n    // U+1D1A9  Diminished\n    Glyphs[\"csymDiminishedAlternate\"] = \"\\uD834\\uDDA9\";\n    // U+E871  Half-diminished\n    Glyphs[\"csymHalfDiminished\"] = \"\\uE871\";\n    // U+E873  Major seventh\n    Glyphs[\"csymMajorSeventh\"] = \"\\uE873\";\n    // U+E874  Minor\n    Glyphs[\"csymMinor\"] = \"\\uE874\";\n    // U+E875  Double-height left parenthesis\n    Glyphs[\"csymParensLeftTall\"] = \"\\uE875\";\n    // U+E879  Triple-height left parenthesis\n    Glyphs[\"csymParensLeftVeryTall\"] = \"\\uE879\";\n    // U+E876  Double-height right parenthesis\n    Glyphs[\"csymParensRightTall\"] = \"\\uE876\";\n    // U+E87A  Triple-height right parenthesis\n    Glyphs[\"csymParensRightVeryTall\"] = \"\\uE87A\";\n    // U+E4D6  Curlew (Britten)\n    Glyphs[\"curlewSign\"] = \"\\uE4D6\";\n    // U+E046  Da capo\n    Glyphs[\"daCapo\"] = \"\\uE046\";\n    // U+1D10A  Da capo\n    Glyphs[\"daCapoAlternate\"] = \"\\uD834\\uDD0A\";\n    // U+E045  Dal segno\n    Glyphs[\"dalSegno\"] = \"\\uE045\";\n    // U+1D109  Dal segno\n    Glyphs[\"dalSegnoAlternate\"] = \"\\uD834\\uDD09\";\n    // U+EA3C  Daseian excellentes 1\n    Glyphs[\"daseianExcellentes1\"] = \"\\uEA3C\";\n    // U+EA3D  Daseian excellentes 2\n    Glyphs[\"daseianExcellentes2\"] = \"\\uEA3D\";\n    // U+EA3E  Daseian excellentes 3\n    Glyphs[\"daseianExcellentes3\"] = \"\\uEA3E\";\n    // U+EA3F  Daseian excellentes 4\n    Glyphs[\"daseianExcellentes4\"] = \"\\uEA3F\";\n    // U+EA34  Daseian finales 1\n    Glyphs[\"daseianFinales1\"] = \"\\uEA34\";\n    // U+EA35  Daseian finales 2\n    Glyphs[\"daseianFinales2\"] = \"\\uEA35\";\n    // U+EA36  Daseian finales 3\n    Glyphs[\"daseianFinales3\"] = \"\\uEA36\";\n    // U+EA37  Daseian finales 4\n    Glyphs[\"daseianFinales4\"] = \"\\uEA37\";\n    // U+EA30  Daseian graves 1\n    Glyphs[\"daseianGraves1\"] = \"\\uEA30\";\n    // U+EA31  Daseian graves 2\n    Glyphs[\"daseianGraves2\"] = \"\\uEA31\";\n    // U+EA32  Daseian graves 3\n    Glyphs[\"daseianGraves3\"] = \"\\uEA32\";\n    // U+EA33  Daseian graves 4\n    Glyphs[\"daseianGraves4\"] = \"\\uEA33\";\n    // U+EA40  Daseian residua 1\n    Glyphs[\"daseianResidua1\"] = \"\\uEA40\";\n    // U+EA41  Daseian residua 2\n    Glyphs[\"daseianResidua2\"] = \"\\uEA41\";\n    // U+EA38  Daseian superiores 1\n    Glyphs[\"daseianSuperiores1\"] = \"\\uEA38\";\n    // U+EA39  Daseian superiores 2\n    Glyphs[\"daseianSuperiores2\"] = \"\\uEA39\";\n    // U+EA3A  Daseian superiores 3\n    Glyphs[\"daseianSuperiores3\"] = \"\\uEA3A\";\n    // U+EA3B  Daseian superiores 4\n    Glyphs[\"daseianSuperiores4\"] = \"\\uEA3B\";\n    // U+E234  Double lateral roll (Stevens)\n    Glyphs[\"doubleLateralRollStevens\"] = \"\\uE234\";\n    // U+E5F0  Double-tongue above\n    Glyphs[\"doubleTongueAbove\"] = \"\\uE5F0\";\n    // U+1D18A  Double-tongue above\n    Glyphs[\"doubleTongueAboveAlternate\"] = \"\\uD834\\uDD8A\";\n    // U+E5F1  Double-tongue below\n    Glyphs[\"doubleTongueBelow\"] = \"\\uE5F1\";\n    // U+E546  Colon separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorColon\"] = \"\\uE546\";\n    // U+E547  Hyphen separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorHyphen\"] = \"\\uE547\";\n    // U+E549  Slash separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorSlash\"] = \"\\uE549\";\n    // U+E548  Space separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorSpace\"] = \"\\uE548\";\n    // U+E53E  Crescendo\n    Glyphs[\"dynamicCrescendoHairpin\"] = \"\\uE53E\";\n    // U+1D192  Crescendo\n    Glyphs[\"dynamicCrescendoHairpinAlternate\"] = \"\\uD834\\uDD92\";\n    // U+E53F  Diminuendo\n    Glyphs[\"dynamicDiminuendoHairpin\"] = \"\\uE53F\";\n    // U+1D193  Diminuendo\n    Glyphs[\"dynamicDiminuendoHairpinAlternate\"] = \"\\uD834\\uDD93\";\n    // U+E52F  ff\n    Glyphs[\"dynamicFF\"] = \"\\uE52F\";\n    // U+E530  fff\n    Glyphs[\"dynamicFFF\"] = \"\\uE530\";\n    // U+E531  ffff\n    Glyphs[\"dynamicFFFF\"] = \"\\uE531\";\n    // U+E532  fffff\n    Glyphs[\"dynamicFFFFF\"] = \"\\uE532\";\n    // U+E533  ffffff\n    Glyphs[\"dynamicFFFFFF\"] = \"\\uE533\";\n    // U+E522  Forte\n    Glyphs[\"dynamicForte\"] = \"\\uE522\";\n    // U+1D191  Forte\n    Glyphs[\"dynamicForteAlternate\"] = \"\\uD834\\uDD91\";\n    // U+E534  Forte-piano\n    Glyphs[\"dynamicFortePiano\"] = \"\\uE534\";\n    // U+E535  Forzando\n    Glyphs[\"dynamicForzando\"] = \"\\uE535\";\n    // U+E544  Left bracket (for hairpins)\n    Glyphs[\"dynamicHairpinBracketLeft\"] = \"\\uE544\";\n    // U+E545  Right bracket (for hairpins)\n    Glyphs[\"dynamicHairpinBracketRight\"] = \"\\uE545\";\n    // U+E542  Left parenthesis (for hairpins)\n    Glyphs[\"dynamicHairpinParenthesisLeft\"] = \"\\uE542\";\n    // U+E543  Right parenthesis (for hairpins)\n    Glyphs[\"dynamicHairpinParenthesisRight\"] = \"\\uE543\";\n    // U+E52D  mf\n    Glyphs[\"dynamicMF\"] = \"\\uE52D\";\n    // U+E52C  mp\n    Glyphs[\"dynamicMP\"] = \"\\uE52C\";\n    // U+E540  Messa di voce\n    Glyphs[\"dynamicMessaDiVoce\"] = \"\\uE540\";\n    // U+E521  Mezzo\n    Glyphs[\"dynamicMezzo\"] = \"\\uE521\";\n    // U+1D190  Mezzo\n    Glyphs[\"dynamicMezzoAlternate\"] = \"\\uD834\\uDD90\";\n    // U+E526  Niente\n    Glyphs[\"dynamicNiente\"] = \"\\uE526\";\n    // U+E541  Niente (for hairpins)\n    Glyphs[\"dynamicNienteForHairpin\"] = \"\\uE541\";\n    // U+E52E  pf\n    Glyphs[\"dynamicPF\"] = \"\\uE52E\";\n    // U+E52B  pp\n    Glyphs[\"dynamicPP\"] = \"\\uE52B\";\n    // U+E52A  ppp\n    Glyphs[\"dynamicPPP\"] = \"\\uE52A\";\n    // U+E529  pppp\n    Glyphs[\"dynamicPPPP\"] = \"\\uE529\";\n    // U+E528  ppppp\n    Glyphs[\"dynamicPPPPP\"] = \"\\uE528\";\n    // U+E527  pppppp\n    Glyphs[\"dynamicPPPPPP\"] = \"\\uE527\";\n    // U+E520  Piano\n    Glyphs[\"dynamicPiano\"] = \"\\uE520\";\n    // U+1D18F  Piano\n    Glyphs[\"dynamicPianoAlternate\"] = \"\\uD834\\uDD8F\";\n    // U+E523  Rinforzando\n    Glyphs[\"dynamicRinforzando\"] = \"\\uE523\";\n    // U+1D18C  Rinforzando\n    Glyphs[\"dynamicRinforzandoAlternate\"] = \"\\uD834\\uDD8C\";\n    // U+E53C  Rinforzando 1\n    Glyphs[\"dynamicRinforzando1\"] = \"\\uE53C\";\n    // U+E53D  Rinforzando 2\n    Glyphs[\"dynamicRinforzando2\"] = \"\\uE53D\";\n    // U+E524  Sforzando\n    Glyphs[\"dynamicSforzando\"] = \"\\uE524\";\n    // U+1D18D  Sforzando\n    Glyphs[\"dynamicSforzandoAlternate\"] = \"\\uD834\\uDD8D\";\n    // U+E536  Sforzando 1\n    Glyphs[\"dynamicSforzando1\"] = \"\\uE536\";\n    // U+E538  Sforzando-pianissimo\n    Glyphs[\"dynamicSforzandoPianissimo\"] = \"\\uE538\";\n    // U+E537  Sforzando-piano\n    Glyphs[\"dynamicSforzandoPiano\"] = \"\\uE537\";\n    // U+E539  Sforzato\n    Glyphs[\"dynamicSforzato\"] = \"\\uE539\";\n    // U+E53B  Sforzatissimo\n    Glyphs[\"dynamicSforzatoFF\"] = \"\\uE53B\";\n    // U+E53A  Sforzato-piano\n    Glyphs[\"dynamicSforzatoPiano\"] = \"\\uE53A\";\n    // U+E525  Z\n    Glyphs[\"dynamicZ\"] = \"\\uE525\";\n    // U+1D18E  Z\n    Glyphs[\"dynamicZAlternate\"] = \"\\uD834\\uDD8E\";\n    // U+EB46  Eight channels (7.1 surround)\n    Glyphs[\"elecAudioChannelsEight\"] = \"\\uEB46\";\n    // U+EB43  Five channels\n    Glyphs[\"elecAudioChannelsFive\"] = \"\\uEB43\";\n    // U+EB42  Four channels\n    Glyphs[\"elecAudioChannelsFour\"] = \"\\uEB42\";\n    // U+EB3E  One channel (mono)\n    Glyphs[\"elecAudioChannelsOne\"] = \"\\uEB3E\";\n    // U+EB45  Seven channels\n    Glyphs[\"elecAudioChannelsSeven\"] = \"\\uEB45\";\n    // U+EB44  Six channels (5.1 surround)\n    Glyphs[\"elecAudioChannelsSix\"] = \"\\uEB44\";\n    // U+EB40  Three channels (frontal)\n    Glyphs[\"elecAudioChannelsThreeFrontal\"] = \"\\uEB40\";\n    // U+EB41  Three channels (surround)\n    Glyphs[\"elecAudioChannelsThreeSurround\"] = \"\\uEB41\";\n    // U+EB3F  Two channels (stereo)\n    Glyphs[\"elecAudioChannelsTwo\"] = \"\\uEB3F\";\n    // U+EB49  Audio in\n    Glyphs[\"elecAudioIn\"] = \"\\uEB49\";\n    // U+EB3C  Mono audio setup\n    Glyphs[\"elecAudioMono\"] = \"\\uEB3C\";\n    // U+EB4A  Audio out\n    Glyphs[\"elecAudioOut\"] = \"\\uEB4A\";\n    // U+EB3D  Stereo audio setup\n    Glyphs[\"elecAudioStereo\"] = \"\\uEB3D\";\n    // U+EB1B  Camera\n    Glyphs[\"elecCamera\"] = \"\\uEB1B\";\n    // U+EB4D  Data in\n    Glyphs[\"elecDataIn\"] = \"\\uEB4D\";\n    // U+EB4E  Data out\n    Glyphs[\"elecDataOut\"] = \"\\uEB4E\";\n    // U+EB13  Disc\n    Glyphs[\"elecDisc\"] = \"\\uEB13\";\n    // U+EB4F  Download\n    Glyphs[\"elecDownload\"] = \"\\uEB4F\";\n    // U+EB2B  Eject\n    Glyphs[\"elecEject\"] = \"\\uEB2B\";\n    // U+EB1F  Fast-forward\n    Glyphs[\"elecFastForward\"] = \"\\uEB1F\";\n    // U+EB11  Headphones\n    Glyphs[\"elecHeadphones\"] = \"\\uEB11\";\n    // U+EB12  Headset\n    Glyphs[\"elecHeadset\"] = \"\\uEB12\";\n    // U+EB47  Line in\n    Glyphs[\"elecLineIn\"] = \"\\uEB47\";\n    // U+EB48  Line out\n    Glyphs[\"elecLineOut\"] = \"\\uEB48\";\n    // U+EB23  Loop\n    Glyphs[\"elecLoop\"] = \"\\uEB23\";\n    // U+EB1A  Loudspeaker\n    Glyphs[\"elecLoudspeaker\"] = \"\\uEB1A\";\n    // U+EB36  MIDI controller 0%\n    Glyphs[\"elecMIDIController0\"] = \"\\uEB36\";\n    // U+EB3B  MIDI controller 100%\n    Glyphs[\"elecMIDIController100\"] = \"\\uEB3B\";\n    // U+EB37  MIDI controller 20%\n    Glyphs[\"elecMIDIController20\"] = \"\\uEB37\";\n    // U+EB38  MIDI controller 40%\n    Glyphs[\"elecMIDIController40\"] = \"\\uEB38\";\n    // U+EB39  MIDI controller 60%\n    Glyphs[\"elecMIDIController60\"] = \"\\uEB39\";\n    // U+EB3A  MIDI controller 80%\n    Glyphs[\"elecMIDIController80\"] = \"\\uEB3A\";\n    // U+EB34  MIDI in\n    Glyphs[\"elecMIDIIn\"] = \"\\uEB34\";\n    // U+EB35  MIDI out\n    Glyphs[\"elecMIDIOut\"] = \"\\uEB35\";\n    // U+EB10  Microphone\n    Glyphs[\"elecMicrophone\"] = \"\\uEB10\";\n    // U+EB28  Mute microphone\n    Glyphs[\"elecMicrophoneMute\"] = \"\\uEB28\";\n    // U+EB29  Unmute microphone\n    Glyphs[\"elecMicrophoneUnmute\"] = \"\\uEB29\";\n    // U+EB15  Mixing console\n    Glyphs[\"elecMixingConsole\"] = \"\\uEB15\";\n    // U+EB18  Monitor\n    Glyphs[\"elecMonitor\"] = \"\\uEB18\";\n    // U+EB26  Mute\n    Glyphs[\"elecMute\"] = \"\\uEB26\";\n    // U+EB1E  Pause\n    Glyphs[\"elecPause\"] = \"\\uEB1E\";\n    // U+EB1C  Play\n    Glyphs[\"elecPlay\"] = \"\\uEB1C\";\n    // U+EB2A  Power on/off\n    Glyphs[\"elecPowerOnOff\"] = \"\\uEB2A\";\n    // U+EB19  Projector\n    Glyphs[\"elecProjector\"] = \"\\uEB19\";\n    // U+EB24  Replay\n    Glyphs[\"elecReplay\"] = \"\\uEB24\";\n    // U+EB20  Rewind\n    Glyphs[\"elecRewind\"] = \"\\uEB20\";\n    // U+EB25  Shuffle\n    Glyphs[\"elecShuffle\"] = \"\\uEB25\";\n    // U+EB22  Skip backwards\n    Glyphs[\"elecSkipBackwards\"] = \"\\uEB22\";\n    // U+EB21  Skip forwards\n    Glyphs[\"elecSkipForwards\"] = \"\\uEB21\";\n    // U+EB1D  Stop\n    Glyphs[\"elecStop\"] = \"\\uEB1D\";\n    // U+EB14  Tape\n    Glyphs[\"elecTape\"] = \"\\uEB14\";\n    // U+EB16  USB connection\n    Glyphs[\"elecUSB\"] = \"\\uEB16\";\n    // U+EB27  Unmute\n    Glyphs[\"elecUnmute\"] = \"\\uEB27\";\n    // U+EB50  Upload\n    Glyphs[\"elecUpload\"] = \"\\uEB50\";\n    // U+EB17  Video camera\n    Glyphs[\"elecVideoCamera\"] = \"\\uEB17\";\n    // U+EB4B  Video in\n    Glyphs[\"elecVideoIn\"] = \"\\uEB4B\";\n    // U+EB4C  Video out\n    Glyphs[\"elecVideoOut\"] = \"\\uEB4C\";\n    // U+EB2C  Combining volume fader\n    Glyphs[\"elecVolumeFader\"] = \"\\uEB2C\";\n    // U+EB2D  Combining volume fader thumb\n    Glyphs[\"elecVolumeFaderThumb\"] = \"\\uEB2D\";\n    // U+EB2E  Volume level 0%\n    Glyphs[\"elecVolumeLevel0\"] = \"\\uEB2E\";\n    // U+EB33  Volume level 100%\n    Glyphs[\"elecVolumeLevel100\"] = \"\\uEB33\";\n    // U+EB2F  Volume level 20%\n    Glyphs[\"elecVolumeLevel20\"] = \"\\uEB2F\";\n    // U+EB30  Volume level 40%\n    Glyphs[\"elecVolumeLevel40\"] = \"\\uEB30\";\n    // U+EB31  Volume level 60%\n    Glyphs[\"elecVolumeLevel60\"] = \"\\uEB31\";\n    // U+EB32  Volume level 80%\n    Glyphs[\"elecVolumeLevel80\"] = \"\\uEB32\";\n    // U+E062  F clef\n    Glyphs[\"fClef\"] = \"\\uE062\";\n    // U+1D122  F clef\n    Glyphs[\"fClefAlternate\"] = \"\\uD834\\uDD22\";\n    // U+E066  F clef quindicesima alta\n    Glyphs[\"fClef15ma\"] = \"\\uE066\";\n    // U+E063  F clef quindicesima bassa\n    Glyphs[\"fClef15mb\"] = \"\\uE063\";\n    // U+E065  F clef ottava alta\n    Glyphs[\"fClef8va\"] = \"\\uE065\";\n    // U+1D123  F clef ottava alta\n    Glyphs[\"fClef8vaAlternate\"] = \"\\uD834\\uDD23\";\n    // U+E064  F clef ottava bassa\n    Glyphs[\"fClef8vb\"] = \"\\uE064\";\n    // U+1D124  F clef ottava bassa\n    Glyphs[\"fClef8vbAlternate\"] = \"\\uD834\\uDD24\";\n    // U+E068  F clef, arrow down\n    Glyphs[\"fClefArrowDown\"] = \"\\uE068\";\n    // U+E067  F clef, arrow up\n    Glyphs[\"fClefArrowUp\"] = \"\\uE067\";\n    // U+E07C  F clef change\n    Glyphs[\"fClefChange\"] = \"\\uE07C\";\n    // U+E076  Reversed F clef\n    Glyphs[\"fClefReversed\"] = \"\\uE076\";\n    // U+E077  Turned F clef\n    Glyphs[\"fClefTurned\"] = \"\\uE077\";\n    // U+E4C0  Fermata above\n    Glyphs[\"fermataAbove\"] = \"\\uE4C0\";\n    // U+1D110  Fermata above\n    Glyphs[\"fermataAboveAlternate\"] = \"\\uD834\\uDD10\";\n    // U+E4C1  Fermata below\n    Glyphs[\"fermataBelow\"] = \"\\uE4C1\";\n    // U+1D111  Fermata below\n    Glyphs[\"fermataBelowAlternate\"] = \"\\uD834\\uDD11\";\n    // U+E4C6  Long fermata above\n    Glyphs[\"fermataLongAbove\"] = \"\\uE4C6\";\n    // U+E4C7  Long fermata below\n    Glyphs[\"fermataLongBelow\"] = \"\\uE4C7\";\n    // U+E4CA  Long fermata (Henze) above\n    Glyphs[\"fermataLongHenzeAbove\"] = \"\\uE4CA\";\n    // U+E4CB  Long fermata (Henze) below\n    Glyphs[\"fermataLongHenzeBelow\"] = \"\\uE4CB\";\n    // U+E4C4  Short fermata above\n    Glyphs[\"fermataShortAbove\"] = \"\\uE4C4\";\n    // U+E4C5  Short fermata below\n    Glyphs[\"fermataShortBelow\"] = \"\\uE4C5\";\n    // U+E4CC  Short fermata (Henze) above\n    Glyphs[\"fermataShortHenzeAbove\"] = \"\\uE4CC\";\n    // U+E4CD  Short fermata (Henze) below\n    Glyphs[\"fermataShortHenzeBelow\"] = \"\\uE4CD\";\n    // U+E4C8  Very long fermata above\n    Glyphs[\"fermataVeryLongAbove\"] = \"\\uE4C8\";\n    // U+E4C9  Very long fermata below\n    Glyphs[\"fermataVeryLongBelow\"] = \"\\uE4C9\";\n    // U+E4C2  Very short fermata above\n    Glyphs[\"fermataVeryShortAbove\"] = \"\\uE4C2\";\n    // U+E4C3  Very short fermata below\n    Glyphs[\"fermataVeryShortBelow\"] = \"\\uE4C3\";\n    // U+EA50  Figured bass 0\n    Glyphs[\"figbass0\"] = \"\\uEA50\";\n    // U+EA51  Figured bass 1\n    Glyphs[\"figbass1\"] = \"\\uEA51\";\n    // U+EA52  Figured bass 2\n    Glyphs[\"figbass2\"] = \"\\uEA52\";\n    // U+EA53  Figured bass 2 raised by half-step\n    Glyphs[\"figbass2Raised\"] = \"\\uEA53\";\n    // U+EA54  Figured bass 3\n    Glyphs[\"figbass3\"] = \"\\uEA54\";\n    // U+EA55  Figured bass 4\n    Glyphs[\"figbass4\"] = \"\\uEA55\";\n    // U+EA56  Figured bass 4 raised by half-step\n    Glyphs[\"figbass4Raised\"] = \"\\uEA56\";\n    // U+EA57  Figured bass 5\n    Glyphs[\"figbass5\"] = \"\\uEA57\";\n    // U+EA58  Figured bass 5 raised by half-step\n    Glyphs[\"figbass5Raised1\"] = \"\\uEA58\";\n    // U+EA59  Figured bass 5 raised by half-step 2\n    Glyphs[\"figbass5Raised2\"] = \"\\uEA59\";\n    // U+EA5A  Figured bass diminished 5\n    Glyphs[\"figbass5Raised3\"] = \"\\uEA5A\";\n    // U+EA5B  Figured bass 6\n    Glyphs[\"figbass6\"] = \"\\uEA5B\";\n    // U+EA5C  Figured bass 6 raised by half-step\n    Glyphs[\"figbass6Raised\"] = \"\\uEA5C\";\n    // U+EA6F  Figured bass 6 raised by half-step 2\n    Glyphs[\"figbass6Raised2\"] = \"\\uEA6F\";\n    // U+EA5D  Figured bass 7\n    Glyphs[\"figbass7\"] = \"\\uEA5D\";\n    // U+ECC0  Figured bass 7 diminished\n    Glyphs[\"figbass7Diminished\"] = \"\\uECC0\";\n    // U+EA5E  Figured bass 7 raised by half-step\n    Glyphs[\"figbass7Raised1\"] = \"\\uEA5E\";\n    // U+EA5F  Figured bass 7 lowered by a half-step\n    Glyphs[\"figbass7Raised2\"] = \"\\uEA5F\";\n    // U+EA60  Figured bass 8\n    Glyphs[\"figbass8\"] = \"\\uEA60\";\n    // U+EA61  Figured bass 9\n    Glyphs[\"figbass9\"] = \"\\uEA61\";\n    // U+EA62  Figured bass 9 raised by half-step\n    Glyphs[\"figbass9Raised\"] = \"\\uEA62\";\n    // U+EA68  Figured bass [\n    Glyphs[\"figbassBracketLeft\"] = \"\\uEA68\";\n    // U+EA69  Figured bass ]\n    Glyphs[\"figbassBracketRight\"] = \"\\uEA69\";\n    // U+EA6E  Combining lower\n    Glyphs[\"figbassCombiningLowering\"] = \"\\uEA6E\";\n    // U+EA6D  Combining raise\n    Glyphs[\"figbassCombiningRaising\"] = \"\\uEA6D\";\n    // U+EA63  Figured bass double flat\n    Glyphs[\"figbassDoubleFlat\"] = \"\\uEA63\";\n    // U+EA67  Figured bass double sharp\n    Glyphs[\"figbassDoubleSharp\"] = \"\\uEA67\";\n    // U+EA64  Figured bass flat\n    Glyphs[\"figbassFlat\"] = \"\\uEA64\";\n    // U+EA65  Figured bass natural\n    Glyphs[\"figbassNatural\"] = \"\\uEA65\";\n    // U+EA6A  Figured bass (\n    Glyphs[\"figbassParensLeft\"] = \"\\uEA6A\";\n    // U+EA6B  Figured bass )\n    Glyphs[\"figbassParensRight\"] = \"\\uEA6B\";\n    // U+EA6C  Figured bass +\n    Glyphs[\"figbassPlus\"] = \"\\uEA6C\";\n    // U+EA66  Figured bass sharp\n    Glyphs[\"figbassSharp\"] = \"\\uEA66\";\n    // U+ECC1  Figured bass triple flat\n    Glyphs[\"figbassTripleFlat\"] = \"\\uECC1\";\n    // U+ECC2  Figured bass triple sharp\n    Glyphs[\"figbassTripleSharp\"] = \"\\uECC2\";\n    // U+ED10  Fingering 0 (open string)\n    Glyphs[\"fingering0\"] = \"\\uED10\";\n    // U+ED80  Fingering 0 italic (open string)\n    Glyphs[\"fingering0Italic\"] = \"\\uED80\";\n    // U+ED11  Fingering 1 (thumb)\n    Glyphs[\"fingering1\"] = \"\\uED11\";\n    // U+ED81  Fingering 1 italic (thumb)\n    Glyphs[\"fingering1Italic\"] = \"\\uED81\";\n    // U+ED12  Fingering 2 (index finger)\n    Glyphs[\"fingering2\"] = \"\\uED12\";\n    // U+ED82  Fingering 2 italic (index finger)\n    Glyphs[\"fingering2Italic\"] = \"\\uED82\";\n    // U+ED13  Fingering 3 (middle finger)\n    Glyphs[\"fingering3\"] = \"\\uED13\";\n    // U+ED83  Fingering 3 italic (middle finger)\n    Glyphs[\"fingering3Italic\"] = \"\\uED83\";\n    // U+ED14  Fingering 4 (ring finger)\n    Glyphs[\"fingering4\"] = \"\\uED14\";\n    // U+ED84  Fingering 4 italic (ring finger)\n    Glyphs[\"fingering4Italic\"] = \"\\uED84\";\n    // U+ED15  Fingering 5 (little finger)\n    Glyphs[\"fingering5\"] = \"\\uED15\";\n    // U+ED85  Fingering 5 italic (little finger)\n    Glyphs[\"fingering5Italic\"] = \"\\uED85\";\n    // U+ED24  Fingering 6\n    Glyphs[\"fingering6\"] = \"\\uED24\";\n    // U+ED86  Fingering 6 italic\n    Glyphs[\"fingering6Italic\"] = \"\\uED86\";\n    // U+ED25  Fingering 7\n    Glyphs[\"fingering7\"] = \"\\uED25\";\n    // U+ED87  Fingering 7 italic\n    Glyphs[\"fingering7Italic\"] = \"\\uED87\";\n    // U+ED26  Fingering 8\n    Glyphs[\"fingering8\"] = \"\\uED26\";\n    // U+ED88  Fingering 8 italic\n    Glyphs[\"fingering8Italic\"] = \"\\uED88\";\n    // U+ED27  Fingering 9\n    Glyphs[\"fingering9\"] = \"\\uED27\";\n    // U+ED89  Fingering 9 italic\n    Glyphs[\"fingering9Italic\"] = \"\\uED89\";\n    // U+ED1B  Fingering a (anular; right-hand ring finger for guitar)\n    Glyphs[\"fingeringALower\"] = \"\\uED1B\";\n    // U+ED1C  Fingering c (right-hand little finger for guitar)\n    Glyphs[\"fingeringCLower\"] = \"\\uED1C\";\n    // U+ED1E  Fingering e (right-hand little finger for guitar)\n    Glyphs[\"fingeringELower\"] = \"\\uED1E\";\n    // U+ED19  Fingering i (indicio; right-hand index finger for guitar)\n    Glyphs[\"fingeringILower\"] = \"\\uED19\";\n    // U+ED2A  Fingering left bracket\n    Glyphs[\"fingeringLeftBracket\"] = \"\\uED2A\";\n    // U+ED8C  Fingering left bracket italic\n    Glyphs[\"fingeringLeftBracketItalic\"] = \"\\uED8C\";\n    // U+ED28  Fingering left parenthesis\n    Glyphs[\"fingeringLeftParenthesis\"] = \"\\uED28\";\n    // U+ED8A  Fingering left parenthesis italic\n    Glyphs[\"fingeringLeftParenthesisItalic\"] = \"\\uED8A\";\n    // U+ED1A  Fingering m (medio; right-hand middle finger for guitar)\n    Glyphs[\"fingeringMLower\"] = \"\\uED1A\";\n    // U+ED23  Multiple notes played by thumb or single finger\n    Glyphs[\"fingeringMultipleNotes\"] = \"\\uED23\";\n    // U+ED1F  Fingering o (right-hand little finger for guitar)\n    Glyphs[\"fingeringOLower\"] = \"\\uED1F\";\n    // U+ED17  Fingering p (pulgar; right-hand thumb for guitar)\n    Glyphs[\"fingeringPLower\"] = \"\\uED17\";\n    // U+ED8E  Fingering q (right-hand little finger for guitar)\n    Glyphs[\"fingeringQLower\"] = \"\\uED8E\";\n    // U+ED2B  Fingering right bracket\n    Glyphs[\"fingeringRightBracket\"] = \"\\uED2B\";\n    // U+ED8D  Fingering right bracket italic\n    Glyphs[\"fingeringRightBracketItalic\"] = \"\\uED8D\";\n    // U+ED29  Fingering right parenthesis\n    Glyphs[\"fingeringRightParenthesis\"] = \"\\uED29\";\n    // U+ED8B  Fingering right parenthesis italic\n    Glyphs[\"fingeringRightParenthesisItalic\"] = \"\\uED8B\";\n    // U+ED8F  Fingering s (right-hand little finger for guitar)\n    Glyphs[\"fingeringSLower\"] = \"\\uED8F\";\n    // U+ED2C  Fingering middle dot separator\n    Glyphs[\"fingeringSeparatorMiddleDot\"] = \"\\uED2C\";\n    // U+ED2D  Fingering white middle dot separator\n    Glyphs[\"fingeringSeparatorMiddleDotWhite\"] = \"\\uED2D\";\n    // U+ED2E  Fingering forward slash separator\n    Glyphs[\"fingeringSeparatorSlash\"] = \"\\uED2E\";\n    // U+ED20  Finger substitution above\n    Glyphs[\"fingeringSubstitutionAbove\"] = \"\\uED20\";\n    // U+ED21  Finger substitution below\n    Glyphs[\"fingeringSubstitutionBelow\"] = \"\\uED21\";\n    // U+ED22  Finger substitution dash\n    Glyphs[\"fingeringSubstitutionDash\"] = \"\\uED22\";\n    // U+ED18  Fingering t (right-hand thumb for guitar)\n    Glyphs[\"fingeringTLower\"] = \"\\uED18\";\n    // U+ED16  Fingering T (left-hand thumb for guitar)\n    Glyphs[\"fingeringTUpper\"] = \"\\uED16\";\n    // U+ED1D  Fingering x (right-hand little finger for guitar)\n    Glyphs[\"fingeringXLower\"] = \"\\uED1D\";\n    // U+E24F  Combining flag 8 (1024th) below\n    Glyphs[\"flag1024thDown\"] = \"\\uE24F\";\n    // U+E24E  Combining flag 8 (1024th) above\n    Glyphs[\"flag1024thUp\"] = \"\\uE24E\";\n    // U+E249  Combining flag 5 (128th) below\n    Glyphs[\"flag128thDown\"] = \"\\uE249\";\n    // U+E248  Combining flag 5 (128th) above\n    Glyphs[\"flag128thUp\"] = \"\\uE248\";\n    // U+1D172  Combining flag 5 (128th) above\n    Glyphs[\"flag128thUpAlternate\"] = \"\\uD834\\uDD72\";\n    // U+E243  Combining flag 2 (16th) below\n    Glyphs[\"flag16thDown\"] = \"\\uE243\";\n    // U+E242  Combining flag 2 (16th) above\n    Glyphs[\"flag16thUp\"] = \"\\uE242\";\n    // U+1D16F  Combining flag 2 (16th) above\n    Glyphs[\"flag16thUpAlternate\"] = \"\\uD834\\uDD6F\";\n    // U+E24B  Combining flag 6 (256th) below\n    Glyphs[\"flag256thDown\"] = \"\\uE24B\";\n    // U+E24A  Combining flag 6 (256th) above\n    Glyphs[\"flag256thUp\"] = \"\\uE24A\";\n    // U+E245  Combining flag 3 (32nd) below\n    Glyphs[\"flag32ndDown\"] = \"\\uE245\";\n    // U+E244  Combining flag 3 (32nd) above\n    Glyphs[\"flag32ndUp\"] = \"\\uE244\";\n    // U+1D170  Combining flag 3 (32nd) above\n    Glyphs[\"flag32ndUpAlternate\"] = \"\\uD834\\uDD70\";\n    // U+E24D  Combining flag 7 (512th) below\n    Glyphs[\"flag512thDown\"] = \"\\uE24D\";\n    // U+E24C  Combining flag 7 (512th) above\n    Glyphs[\"flag512thUp\"] = \"\\uE24C\";\n    // U+E247  Combining flag 4 (64th) below\n    Glyphs[\"flag64thDown\"] = \"\\uE247\";\n    // U+E246  Combining flag 4 (64th) above\n    Glyphs[\"flag64thUp\"] = \"\\uE246\";\n    // U+1D171  Combining flag 4 (64th) above\n    Glyphs[\"flag64thUpAlternate\"] = \"\\uD834\\uDD71\";\n    // U+E241  Combining flag 1 (8th) below\n    Glyphs[\"flag8thDown\"] = \"\\uE241\";\n    // U+E240  Combining flag 1 (8th) above\n    Glyphs[\"flag8thUp\"] = \"\\uE240\";\n    // U+1D16E  Combining flag 1 (8th) above\n    Glyphs[\"flag8thUpAlternate\"] = \"\\uD834\\uDD6E\";\n    // U+E251  Internal combining flag below\n    Glyphs[\"flagInternalDown\"] = \"\\uE251\";\n    // U+E250  Internal combining flag above\n    Glyphs[\"flagInternalUp\"] = \"\\uE250\";\n    // U+E850  3-string fretboard\n    Glyphs[\"fretboard3String\"] = \"\\uE850\";\n    // U+E851  3-string fretboard at nut\n    Glyphs[\"fretboard3StringNut\"] = \"\\uE851\";\n    // U+E852  4-string fretboard\n    Glyphs[\"fretboard4String\"] = \"\\uE852\";\n    // U+1D11D  4-string fretboard\n    Glyphs[\"fretboard4StringAlternate\"] = \"\\uD834\\uDD1D\";\n    // U+E853  4-string fretboard at nut\n    Glyphs[\"fretboard4StringNut\"] = \"\\uE853\";\n    // U+E854  5-string fretboard\n    Glyphs[\"fretboard5String\"] = \"\\uE854\";\n    // U+E855  5-string fretboard at nut\n    Glyphs[\"fretboard5StringNut\"] = \"\\uE855\";\n    // U+E856  6-string fretboard\n    Glyphs[\"fretboard6String\"] = \"\\uE856\";\n    // U+1D11C  6-string fretboard\n    Glyphs[\"fretboard6StringAlternate\"] = \"\\uD834\\uDD1C\";\n    // U+E857  6-string fretboard at nut\n    Glyphs[\"fretboard6StringNut\"] = \"\\uE857\";\n    // U+E858  Fingered fret (filled circle)\n    Glyphs[\"fretboardFilledCircle\"] = \"\\uE858\";\n    // U+E85A  Open string (O)\n    Glyphs[\"fretboardO\"] = \"\\uE85A\";\n    // U+E859  String not played (X)\n    Glyphs[\"fretboardX\"] = \"\\uE859\";\n    // U+EA93  Function theory angle bracket left\n    Glyphs[\"functionAngleLeft\"] = \"\\uEA93\";\n    // U+EA94  Function theory angle bracket right\n    Glyphs[\"functionAngleRight\"] = \"\\uEA94\";\n    // U+EA8F  Function theory bracket left\n    Glyphs[\"functionBracketLeft\"] = \"\\uEA8F\";\n    // U+EA90  Function theory bracket right\n    Glyphs[\"functionBracketRight\"] = \"\\uEA90\";\n    // U+EA81  Function theory dominant of dominant\n    Glyphs[\"functionDD\"] = \"\\uEA81\";\n    // U+EA80  Function theory minor dominant\n    Glyphs[\"functionDLower\"] = \"\\uEA80\";\n    // U+EA7F  Function theory major dominant\n    Glyphs[\"functionDUpper\"] = \"\\uEA7F\";\n    // U+EA78  Function theory 8\n    Glyphs[\"functionEight\"] = \"\\uEA78\";\n    // U+EA99  Function theory F\n    Glyphs[\"functionFUpper\"] = \"\\uEA99\";\n    // U+EA75  Function theory 5\n    Glyphs[\"functionFive\"] = \"\\uEA75\";\n    // U+EA74  Function theory 4\n    Glyphs[\"functionFour\"] = \"\\uEA74\";\n    // U+EA84  Function theory g\n    Glyphs[\"functionGLower\"] = \"\\uEA84\";\n    // U+EA83  Function theory G\n    Glyphs[\"functionGUpper\"] = \"\\uEA83\";\n    // U+EA7C  Function theory greater than\n    Glyphs[\"functionGreaterThan\"] = \"\\uEA7C\";\n    // U+EA9B  Function theory i\n    Glyphs[\"functionILower\"] = \"\\uEA9B\";\n    // U+EA9A  Function theory I\n    Glyphs[\"functionIUpper\"] = \"\\uEA9A\";\n    // U+EA9D  Function theory k\n    Glyphs[\"functionKLower\"] = \"\\uEA9D\";\n    // U+EA9C  Function theory K\n    Glyphs[\"functionKUpper\"] = \"\\uEA9C\";\n    // U+EA9F  Function theory l\n    Glyphs[\"functionLLower\"] = \"\\uEA9F\";\n    // U+EA9E  Function theory L\n    Glyphs[\"functionLUpper\"] = \"\\uEA9E\";\n    // U+EA7A  Function theory less than\n    Glyphs[\"functionLessThan\"] = \"\\uEA7A\";\n    // U+ED01  Function theory m\n    Glyphs[\"functionMLower\"] = \"\\uED01\";\n    // U+ED00  Function theory M\n    Glyphs[\"functionMUpper\"] = \"\\uED00\";\n    // U+EA7B  Function theory minus\n    Glyphs[\"functionMinus\"] = \"\\uEA7B\";\n    // U+EA86  Function theory n\n    Glyphs[\"functionNLower\"] = \"\\uEA86\";\n    // U+EA85  Function theory N\n    Glyphs[\"functionNUpper\"] = \"\\uEA85\";\n    // U+ED02  Function theory superscript N\n    Glyphs[\"functionNUpperSuperscript\"] = \"\\uED02\";\n    // U+EA79  Function theory 9\n    Glyphs[\"functionNine\"] = \"\\uEA79\";\n    // U+EA71  Function theory 1\n    Glyphs[\"functionOne\"] = \"\\uEA71\";\n    // U+EA88  Function theory p\n    Glyphs[\"functionPLower\"] = \"\\uEA88\";\n    // U+EA87  Function theory P\n    Glyphs[\"functionPUpper\"] = \"\\uEA87\";\n    // U+EA91  Function theory parenthesis left\n    Glyphs[\"functionParensLeft\"] = \"\\uEA91\";\n    // U+EA92  Function theory parenthesis right\n    Glyphs[\"functionParensRight\"] = \"\\uEA92\";\n    // U+EA98  Function theory prefix plus\n    Glyphs[\"functionPlus\"] = \"\\uEA98\";\n    // U+ED03  Function theory r\n    Glyphs[\"functionRLower\"] = \"\\uED03\";\n    // U+EA95  Function theory repetition 1\n    Glyphs[\"functionRepetition1\"] = \"\\uEA95\";\n    // U+EA96  Function theory repetition 2\n    Glyphs[\"functionRepetition2\"] = \"\\uEA96\";\n    // U+EA97  Function theory prefix ring\n    Glyphs[\"functionRing\"] = \"\\uEA97\";\n    // U+EA8A  Function theory minor subdominant\n    Glyphs[\"functionSLower\"] = \"\\uEA8A\";\n    // U+EA7E  Function theory minor subdominant of subdominant\n    Glyphs[\"functionSSLower\"] = \"\\uEA7E\";\n    // U+EA7D  Function theory major subdominant of subdominant\n    Glyphs[\"functionSSUpper\"] = \"\\uEA7D\";\n    // U+EA89  Function theory major subdominant\n    Glyphs[\"functionSUpper\"] = \"\\uEA89\";\n    // U+EA77  Function theory 7\n    Glyphs[\"functionSeven\"] = \"\\uEA77\";\n    // U+EA76  Function theory 6\n    Glyphs[\"functionSix\"] = \"\\uEA76\";\n    // U+EA82  Function theory double dominant seventh\n    Glyphs[\"functionSlashedDD\"] = \"\\uEA82\";\n    // U+EA8C  Function theory minor tonic\n    Glyphs[\"functionTLower\"] = \"\\uEA8C\";\n    // U+EA8B  Function theory tonic\n    Glyphs[\"functionTUpper\"] = \"\\uEA8B\";\n    // U+EA73  Function theory 3\n    Glyphs[\"functionThree\"] = \"\\uEA73\";\n    // U+EA72  Function theory 2\n    Glyphs[\"functionTwo\"] = \"\\uEA72\";\n    // U+EA8E  Function theory v\n    Glyphs[\"functionVLower\"] = \"\\uEA8E\";\n    // U+EA8D  Function theory V\n    Glyphs[\"functionVUpper\"] = \"\\uEA8D\";\n    // U+EA70  Function theory 0\n    Glyphs[\"functionZero\"] = \"\\uEA70\";\n    // U+E050  G clef\n    Glyphs[\"gClef\"] = \"\\uE050\";\n    // U+1D11E  G clef\n    Glyphs[\"gClefAlternate\"] = \"\\uD834\\uDD1E\";\n    // U+E054  G clef quindicesima alta\n    Glyphs[\"gClef15ma\"] = \"\\uE054\";\n    // U+E051  G clef quindicesima bassa\n    Glyphs[\"gClef15mb\"] = \"\\uE051\";\n    // U+E053  G clef ottava alta\n    Glyphs[\"gClef8va\"] = \"\\uE053\";\n    // U+1D11F  G clef ottava alta\n    Glyphs[\"gClef8vaAlternate\"] = \"\\uD834\\uDD1F\";\n    // U+E052  G clef ottava bassa\n    Glyphs[\"gClef8vb\"] = \"\\uE052\";\n    // U+1D120  G clef ottava bassa\n    Glyphs[\"gClef8vbAlternate\"] = \"\\uD834\\uDD20\";\n    // U+E056  G clef ottava bassa with C clef\n    Glyphs[\"gClef8vbCClef\"] = \"\\uE056\";\n    // U+E055  G clef ottava bassa (old style)\n    Glyphs[\"gClef8vbOld\"] = \"\\uE055\";\n    // U+E057  G clef, optionally ottava bassa\n    Glyphs[\"gClef8vbParens\"] = \"\\uE057\";\n    // U+E05B  G clef, arrow down\n    Glyphs[\"gClefArrowDown\"] = \"\\uE05B\";\n    // U+E05A  G clef, arrow up\n    Glyphs[\"gClefArrowUp\"] = \"\\uE05A\";\n    // U+E07A  G clef change\n    Glyphs[\"gClefChange\"] = \"\\uE07A\";\n    // U+E059  Combining G clef, number above\n    Glyphs[\"gClefLigatedNumberAbove\"] = \"\\uE059\";\n    // U+E058  Combining G clef, number below\n    Glyphs[\"gClefLigatedNumberBelow\"] = \"\\uE058\";\n    // U+E073  Reversed G clef\n    Glyphs[\"gClefReversed\"] = \"\\uE073\";\n    // U+E074  Turned G clef\n    Glyphs[\"gClefTurned\"] = \"\\uE074\";\n    // U+E586  Glissando down\n    Glyphs[\"glissandoDown\"] = \"\\uE586\";\n    // U+1D1B2  Glissando down\n    Glyphs[\"glissandoDownAlternate\"] = \"\\uD834\\uDDB2\";\n    // U+E585  Glissando up\n    Glyphs[\"glissandoUp\"] = \"\\uE585\";\n    // U+1D1B1  Glissando up\n    Glyphs[\"glissandoUpAlternate\"] = \"\\uD834\\uDDB1\";\n    // U+E561  Slashed grace note stem down\n    Glyphs[\"graceNoteAcciaccaturaStemDown\"] = \"\\uE561\";\n    // U+E560  Slashed grace note stem up\n    Glyphs[\"graceNoteAcciaccaturaStemUp\"] = \"\\uE560\";\n    // U+1D194  Slashed grace note stem up\n    Glyphs[\"graceNoteAcciaccaturaStemUpAlternate\"] = \"\\uD834\\uDD94\";\n    // U+E563  Grace note stem down\n    Glyphs[\"graceNoteAppoggiaturaStemDown\"] = \"\\uE563\";\n    // U+E562  Grace note stem up\n    Glyphs[\"graceNoteAppoggiaturaStemUp\"] = \"\\uE562\";\n    // U+1D195  Grace note stem up\n    Glyphs[\"graceNoteAppoggiaturaStemUpAlternate\"] = \"\\uD834\\uDD95\";\n    // U+E565  Slash for stem down grace note\n    Glyphs[\"graceNoteSlashStemDown\"] = \"\\uE565\";\n    // U+E564  Slash for stem up grace note\n    Glyphs[\"graceNoteSlashStemUp\"] = \"\\uE564\";\n    // U+E848  Full barré\n    Glyphs[\"guitarBarreFull\"] = \"\\uE848\";\n    // U+E849  Half barré\n    Glyphs[\"guitarBarreHalf\"] = \"\\uE849\";\n    // U+E83F  Closed wah/volume pedal\n    Glyphs[\"guitarClosePedal\"] = \"\\uE83F\";\n    // U+E843  Fade in\n    Glyphs[\"guitarFadeIn\"] = \"\\uE843\";\n    // U+E844  Fade out\n    Glyphs[\"guitarFadeOut\"] = \"\\uE844\";\n    // U+E842  Golpe (tapping the pick guard)\n    Glyphs[\"guitarGolpe\"] = \"\\uE842\";\n    // U+E83E  Half-open wah/volume pedal\n    Glyphs[\"guitarHalfOpenPedal\"] = \"\\uE83E\";\n    // U+E840  Left-hand tapping\n    Glyphs[\"guitarLeftHandTapping\"] = \"\\uE840\";\n    // U+E83D  Open wah/volume pedal\n    Glyphs[\"guitarOpenPedal\"] = \"\\uE83D\";\n    // U+E841  Right-hand tapping\n    Glyphs[\"guitarRightHandTapping\"] = \"\\uE841\";\n    // U+E832  Guitar shake\n    Glyphs[\"guitarShake\"] = \"\\uE832\";\n    // U+E833  String number 0\n    Glyphs[\"guitarString0\"] = \"\\uE833\";\n    // U+E834  String number 1\n    Glyphs[\"guitarString1\"] = \"\\uE834\";\n    // U+E84A  String number 10\n    Glyphs[\"guitarString10\"] = \"\\uE84A\";\n    // U+E84B  String number 11\n    Glyphs[\"guitarString11\"] = \"\\uE84B\";\n    // U+E84C  String number 12\n    Glyphs[\"guitarString12\"] = \"\\uE84C\";\n    // U+E84D  String number 13\n    Glyphs[\"guitarString13\"] = \"\\uE84D\";\n    // U+E835  String number 2\n    Glyphs[\"guitarString2\"] = \"\\uE835\";\n    // U+E836  String number 3\n    Glyphs[\"guitarString3\"] = \"\\uE836\";\n    // U+E837  String number 4\n    Glyphs[\"guitarString4\"] = \"\\uE837\";\n    // U+E838  String number 5\n    Glyphs[\"guitarString5\"] = \"\\uE838\";\n    // U+E839  String number 6\n    Glyphs[\"guitarString6\"] = \"\\uE839\";\n    // U+E83A  String number 7\n    Glyphs[\"guitarString7\"] = \"\\uE83A\";\n    // U+E83B  String number 8\n    Glyphs[\"guitarString8\"] = \"\\uE83B\";\n    // U+E83C  String number 9\n    Glyphs[\"guitarString9\"] = \"\\uE83C\";\n    // U+E847  Strum direction down\n    Glyphs[\"guitarStrumDown\"] = \"\\uE847\";\n    // U+E846  Strum direction up\n    Glyphs[\"guitarStrumUp\"] = \"\\uE846\";\n    // U+E831  Guitar vibrato bar dip\n    Glyphs[\"guitarVibratoBarDip\"] = \"\\uE831\";\n    // U+E830  Guitar vibrato bar scoop\n    Glyphs[\"guitarVibratoBarScoop\"] = \"\\uE830\";\n    // U+EAB2  Vibrato wiggle segment\n    Glyphs[\"guitarVibratoStroke\"] = \"\\uEAB2\";\n    // U+E845  Volume swell\n    Glyphs[\"guitarVolumeSwell\"] = \"\\uE845\";\n    // U+EAB3  Wide vibrato wiggle segment\n    Glyphs[\"guitarWideVibratoStroke\"] = \"\\uEAB3\";\n    // U+E81F  Belltree\n    Glyphs[\"handbellsBelltree\"] = \"\\uE81F\";\n    // U+E81E  Damp 3\n    Glyphs[\"handbellsDamp3\"] = \"\\uE81E\";\n    // U+E81B  Echo\n    Glyphs[\"handbellsEcho1\"] = \"\\uE81B\";\n    // U+E81C  Echo 2\n    Glyphs[\"handbellsEcho2\"] = \"\\uE81C\";\n    // U+E81D  Gyro\n    Glyphs[\"handbellsGyro\"] = \"\\uE81D\";\n    // U+E812  Hand martellato\n    Glyphs[\"handbellsHandMartellato\"] = \"\\uE812\";\n    // U+E815  Mallet, bell on table\n    Glyphs[\"handbellsMalletBellOnTable\"] = \"\\uE815\";\n    // U+E814  Mallet, bell suspended\n    Glyphs[\"handbellsMalletBellSuspended\"] = \"\\uE814\";\n    // U+E816  Mallet lift\n    Glyphs[\"handbellsMalletLft\"] = \"\\uE816\";\n    // U+E810  Martellato\n    Glyphs[\"handbellsMartellato\"] = \"\\uE810\";\n    // U+E811  Martellato lift\n    Glyphs[\"handbellsMartellatoLift\"] = \"\\uE811\";\n    // U+E813  Muted martellato\n    Glyphs[\"handbellsMutedMartellato\"] = \"\\uE813\";\n    // U+E817  Pluck lift\n    Glyphs[\"handbellsPluckLift\"] = \"\\uE817\";\n    // U+E81A  Swing\n    Glyphs[\"handbellsSwing\"] = \"\\uE81A\";\n    // U+E819  Swing down\n    Glyphs[\"handbellsSwingDown\"] = \"\\uE819\";\n    // U+E818  Swing up\n    Glyphs[\"handbellsSwingUp\"] = \"\\uE818\";\n    // U+E821  Table pair of handbells\n    Glyphs[\"handbellsTablePairBells\"] = \"\\uE821\";\n    // U+E820  Table single handbell\n    Glyphs[\"handbellsTableSingleBell\"] = \"\\uE820\";\n    // U+E68F  Metal rod pictogram\n    Glyphs[\"harpMetalRod\"] = \"\\uE68F\";\n    // U+E681  Harp pedal centered (natural)\n    Glyphs[\"harpPedalCentered\"] = \"\\uE681\";\n    // U+E683  Harp pedal divider\n    Glyphs[\"harpPedalDivider\"] = \"\\uE683\";\n    // U+E682  Harp pedal lowered (sharp)\n    Glyphs[\"harpPedalLowered\"] = \"\\uE682\";\n    // U+E680  Harp pedal raised (flat)\n    Glyphs[\"harpPedalRaised\"] = \"\\uE680\";\n    // U+E695  Ascending aeolian chords (Salzedo)\n    Glyphs[\"harpSalzedoAeolianAscending\"] = \"\\uE695\";\n    // U+E696  Descending aeolian chords (Salzedo)\n    Glyphs[\"harpSalzedoAeolianDescending\"] = \"\\uE696\";\n    // U+E69A  Damp above (Salzedo)\n    Glyphs[\"harpSalzedoDampAbove\"] = \"\\uE69A\";\n    // U+E699  Damp below (Salzedo)\n    Glyphs[\"harpSalzedoDampBelow\"] = \"\\uE699\";\n    // U+E698  Damp with both hands (Salzedo)\n    Glyphs[\"harpSalzedoDampBothHands\"] = \"\\uE698\";\n    // U+E697  Damp only low strings (Salzedo)\n    Glyphs[\"harpSalzedoDampLowStrings\"] = \"\\uE697\";\n    // U+E68D  Fluidic sounds, left hand (Salzedo)\n    Glyphs[\"harpSalzedoFluidicSoundsLeft\"] = \"\\uE68D\";\n    // U+E68E  Fluidic sounds, right hand (Salzedo)\n    Glyphs[\"harpSalzedoFluidicSoundsRight\"] = \"\\uE68E\";\n    // U+E69C  Isolated sounds (Salzedo)\n    Glyphs[\"harpSalzedoIsolatedSounds\"] = \"\\uE69C\";\n    // U+E688  Metallic sounds (Salzedo)\n    Glyphs[\"harpSalzedoMetallicSounds\"] = \"\\uE688\";\n    // U+E69B  Metallic sounds, one string (Salzedo)\n    Glyphs[\"harpSalzedoMetallicSoundsOneString\"] = \"\\uE69B\";\n    // U+E68C  Muffle totally (Salzedo)\n    Glyphs[\"harpSalzedoMuffleTotally\"] = \"\\uE68C\";\n    // U+E685  Oboic flux (Salzedo)\n    Glyphs[\"harpSalzedoOboicFlux\"] = \"\\uE685\";\n    // U+E68A  Play at upper end of strings (Salzedo)\n    Glyphs[\"harpSalzedoPlayUpperEnd\"] = \"\\uE68A\";\n    // U+E684  Slide with suppleness (Salzedo)\n    Glyphs[\"harpSalzedoSlideWithSuppleness\"] = \"\\uE684\";\n    // U+E69D  Snare drum effect (Salzedo)\n    Glyphs[\"harpSalzedoSnareDrum\"] = \"\\uE69D\";\n    // U+E689  Tam-tam sounds (Salzedo)\n    Glyphs[\"harpSalzedoTamTamSounds\"] = \"\\uE689\";\n    // U+E686  Thunder effect (Salzedo)\n    Glyphs[\"harpSalzedoThunderEffect\"] = \"\\uE686\";\n    // U+E68B  Timpanic sounds (Salzedo)\n    Glyphs[\"harpSalzedoTimpanicSounds\"] = \"\\uE68B\";\n    // U+E687  Whistling sounds (Salzedo)\n    Glyphs[\"harpSalzedoWhistlingSounds\"] = \"\\uE687\";\n    // U+E694  Combining string noise for stem\n    Glyphs[\"harpStringNoiseStem\"] = \"\\uE694\";\n    // U+E690  Tuning key pictogram\n    Glyphs[\"harpTuningKey\"] = \"\\uE690\";\n    // U+E693  Retune strings for glissando\n    Glyphs[\"harpTuningKeyGlissando\"] = \"\\uE693\";\n    // U+E691  Use handle of tuning key pictogram\n    Glyphs[\"harpTuningKeyHandle\"] = \"\\uE691\";\n    // U+E692  Use shank of tuning key pictogram\n    Glyphs[\"harpTuningKeyShank\"] = \"\\uE692\";\n    // U+ED70  Indian drum clef\n    Glyphs[\"indianDrumClef\"] = \"\\uED70\";\n    // U+EDE2  Back-chug\n    Glyphs[\"kahnBackChug\"] = \"\\uEDE2\";\n    // U+EDD8  Back-flap\n    Glyphs[\"kahnBackFlap\"] = \"\\uEDD8\";\n    // U+EDE1  Back-riff\n    Glyphs[\"kahnBackRiff\"] = \"\\uEDE1\";\n    // U+EDDA  Back-rip\n    Glyphs[\"kahnBackRip\"] = \"\\uEDDA\";\n    // U+EDC6  Ball-change\n    Glyphs[\"kahnBallChange\"] = \"\\uEDC6\";\n    // U+EDCD  Ball-dig\n    Glyphs[\"kahnBallDig\"] = \"\\uEDCD\";\n    // U+EDA7  Brush-backward\n    Glyphs[\"kahnBrushBackward\"] = \"\\uEDA7\";\n    // U+EDA6  Brush-forward\n    Glyphs[\"kahnBrushForward\"] = \"\\uEDA6\";\n    // U+EDDD  Chug\n    Glyphs[\"kahnChug\"] = \"\\uEDDD\";\n    // U+EDB8  Clap\n    Glyphs[\"kahnClap\"] = \"\\uEDB8\";\n    // U+EDBA  Double-snap\n    Glyphs[\"kahnDoubleSnap\"] = \"\\uEDBA\";\n    // U+EDEB  Double-wing\n    Glyphs[\"kahnDoubleWing\"] = \"\\uEDEB\";\n    // U+EDB2  Draw-step\n    Glyphs[\"kahnDrawStep\"] = \"\\uEDB2\";\n    // U+EDB3  Draw-tap\n    Glyphs[\"kahnDrawTap\"] = \"\\uEDB3\";\n    // U+EDCF  Flam\n    Glyphs[\"kahnFlam\"] = \"\\uEDCF\";\n    // U+EDD5  Flap\n    Glyphs[\"kahnFlap\"] = \"\\uEDD5\";\n    // U+EDD7  Flap-step\n    Glyphs[\"kahnFlapStep\"] = \"\\uEDD7\";\n    // U+EDA9  Flat\n    Glyphs[\"kahnFlat\"] = \"\\uEDA9\";\n    // U+EDB0  Flea-hop\n    Glyphs[\"kahnFleaHop\"] = \"\\uEDB0\";\n    // U+EDB1  Flea-tap\n    Glyphs[\"kahnFleaTap\"] = \"\\uEDB1\";\n    // U+EDA8  Grace-tap\n    Glyphs[\"kahnGraceTap\"] = \"\\uEDA8\";\n    // U+EDD1  Grace-tap-change\n    Glyphs[\"kahnGraceTapChange\"] = \"\\uEDD1\";\n    // U+EDD0  Grace-tap-hop\n    Glyphs[\"kahnGraceTapHop\"] = \"\\uEDD0\";\n    // U+EDD3  Grace-tap-stamp\n    Glyphs[\"kahnGraceTapStamp\"] = \"\\uEDD3\";\n    // U+EDAA  Heel\n    Glyphs[\"kahnHeel\"] = \"\\uEDAA\";\n    // U+EDC9  Heel-change\n    Glyphs[\"kahnHeelChange\"] = \"\\uEDC9\";\n    // U+EDBB  Heel-click\n    Glyphs[\"kahnHeelClick\"] = \"\\uEDBB\";\n    // U+EDB6  Heel-drop\n    Glyphs[\"kahnHeelDrop\"] = \"\\uEDB6\";\n    // U+EDC4  Heel-step\n    Glyphs[\"kahnHeelStep\"] = \"\\uEDC4\";\n    // U+EDCB  Heel-tap\n    Glyphs[\"kahnHeelTap\"] = \"\\uEDCB\";\n    // U+EDA2  Hop\n    Glyphs[\"kahnHop\"] = \"\\uEDA2\";\n    // U+EDA5  Jump-apart\n    Glyphs[\"kahnJumpApart\"] = \"\\uEDA5\";\n    // U+EDA4  Jump-together\n    Glyphs[\"kahnJumpTogether\"] = \"\\uEDA4\";\n    // U+EDAD  Knee-inward\n    Glyphs[\"kahnKneeInward\"] = \"\\uEDAD\";\n    // U+EDAC  Knee-outward\n    Glyphs[\"kahnKneeOutward\"] = \"\\uEDAC\";\n    // U+EDA3  Leap\n    Glyphs[\"kahnLeap\"] = \"\\uEDA3\";\n    // U+EDD2  Leap-flat-foot\n    Glyphs[\"kahnLeapFlatFoot\"] = \"\\uEDD2\";\n    // U+EDD4  Leap-heel-click\n    Glyphs[\"kahnLeapHeelClick\"] = \"\\uEDD4\";\n    // U+EDBF  Left-catch\n    Glyphs[\"kahnLeftCatch\"] = \"\\uEDBF\";\n    // U+EDBD  Left-cross\n    Glyphs[\"kahnLeftCross\"] = \"\\uEDBD\";\n    // U+EDEE  Left-foot\n    Glyphs[\"kahnLeftFoot\"] = \"\\uEDEE\";\n    // U+EDC1  Left-toe-strike\n    Glyphs[\"kahnLeftToeStrike\"] = \"\\uEDC1\";\n    // U+EDF0  Left-turn\n    Glyphs[\"kahnLeftTurn\"] = \"\\uEDF0\";\n    // U+EDEC  Over-the-top\n    Glyphs[\"kahnOverTheTop\"] = \"\\uEDEC\";\n    // U+EDED  Over-the-top-tap\n    Glyphs[\"kahnOverTheTopTap\"] = \"\\uEDED\";\n    // U+EDE3  Pull\n    Glyphs[\"kahnPull\"] = \"\\uEDE3\";\n    // U+EDDE  Push\n    Glyphs[\"kahnPush\"] = \"\\uEDDE\";\n    // U+EDE0  Riff\n    Glyphs[\"kahnRiff\"] = \"\\uEDE0\";\n    // U+EDE7  Riffle\n    Glyphs[\"kahnRiffle\"] = \"\\uEDE7\";\n    // U+EDC0  Right-catch\n    Glyphs[\"kahnRightCatch\"] = \"\\uEDC0\";\n    // U+EDBE  Right-cross\n    Glyphs[\"kahnRightCross\"] = \"\\uEDBE\";\n    // U+EDEF  Right-foot\n    Glyphs[\"kahnRightFoot\"] = \"\\uEDEF\";\n    // U+EDC2  Right-toe-strike\n    Glyphs[\"kahnRightToeStrike\"] = \"\\uEDC2\";\n    // U+EDF1  Right-turn\n    Glyphs[\"kahnRightTurn\"] = \"\\uEDF1\";\n    // U+EDD6  Rip\n    Glyphs[\"kahnRip\"] = \"\\uEDD6\";\n    // U+EDE8  Ripple\n    Glyphs[\"kahnRipple\"] = \"\\uEDE8\";\n    // U+EDAE  Scrape\n    Glyphs[\"kahnScrape\"] = \"\\uEDAE\";\n    // U+EDDC  Scuff\n    Glyphs[\"kahnScuff\"] = \"\\uEDDC\";\n    // U+EDE6  Scuffle\n    Glyphs[\"kahnScuffle\"] = \"\\uEDE6\";\n    // U+EDE5  Shuffle\n    Glyphs[\"kahnShuffle\"] = \"\\uEDE5\";\n    // U+EDCE  Slam\n    Glyphs[\"kahnSlam\"] = \"\\uEDCE\";\n    // U+EDD9  Slap\n    Glyphs[\"kahnSlap\"] = \"\\uEDD9\";\n    // U+EDB4  Slide-step\n    Glyphs[\"kahnSlideStep\"] = \"\\uEDB4\";\n    // U+EDB5  Slide-tap\n    Glyphs[\"kahnSlideTap\"] = \"\\uEDB5\";\n    // U+EDB9  Snap\n    Glyphs[\"kahnSnap\"] = \"\\uEDB9\";\n    // U+EDC3  Stamp\n    Glyphs[\"kahnStamp\"] = \"\\uEDC3\";\n    // U+EDC8  Stamp-stamp\n    Glyphs[\"kahnStampStamp\"] = \"\\uEDC8\";\n    // U+EDA0  Step\n    Glyphs[\"kahnStep\"] = \"\\uEDA0\";\n    // U+EDC7  Step-stamp\n    Glyphs[\"kahnStepStamp\"] = \"\\uEDC7\";\n    // U+EDCA  Stomp\n    Glyphs[\"kahnStomp\"] = \"\\uEDCA\";\n    // U+EDDB  Stomp-brush\n    Glyphs[\"kahnStompBrush\"] = \"\\uEDDB\";\n    // U+EDA1  Tap\n    Glyphs[\"kahnTap\"] = \"\\uEDA1\";\n    // U+EDAB  Toe\n    Glyphs[\"kahnToe\"] = \"\\uEDAB\";\n    // U+EDBC  Toe-click\n    Glyphs[\"kahnToeClick\"] = \"\\uEDBC\";\n    // U+EDB7  Toe-drop\n    Glyphs[\"kahnToeDrop\"] = \"\\uEDB7\";\n    // U+EDC5  Toe-step\n    Glyphs[\"kahnToeStep\"] = \"\\uEDC5\";\n    // U+EDCC  Toe-tap\n    Glyphs[\"kahnToeTap\"] = \"\\uEDCC\";\n    // U+EDAF  Trench\n    Glyphs[\"kahnTrench\"] = \"\\uEDAF\";\n    // U+EDE9  Wing\n    Glyphs[\"kahnWing\"] = \"\\uEDE9\";\n    // U+EDEA  Wing-change\n    Glyphs[\"kahnWingChange\"] = \"\\uEDEA\";\n    // U+EDE4  Zank\n    Glyphs[\"kahnZank\"] = \"\\uEDE4\";\n    // U+EDDF  Zink\n    Glyphs[\"kahnZink\"] = \"\\uEDDF\";\n    // U+E668  Clavichord bebung, 2 finger movements (above)\n    Glyphs[\"keyboardBebung2DotsAbove\"] = \"\\uE668\";\n    // U+E669  Clavichord bebung, 2 finger movements (below)\n    Glyphs[\"keyboardBebung2DotsBelow\"] = \"\\uE669\";\n    // U+E66A  Clavichord bebung, 3 finger movements (above)\n    Glyphs[\"keyboardBebung3DotsAbove\"] = \"\\uE66A\";\n    // U+E66B  Clavichord bebung, 3 finger movements (below)\n    Glyphs[\"keyboardBebung3DotsBelow\"] = \"\\uE66B\";\n    // U+E66C  Clavichord bebung, 4 finger movements (above)\n    Glyphs[\"keyboardBebung4DotsAbove\"] = \"\\uE66C\";\n    // U+E66D  Clavichord bebung, 4 finger movements (below)\n    Glyphs[\"keyboardBebung4DotsBelow\"] = \"\\uE66D\";\n    // U+E65E  Left pedal pictogram\n    Glyphs[\"keyboardLeftPedalPictogram\"] = \"\\uE65E\";\n    // U+E65F  Middle pedal pictogram\n    Glyphs[\"keyboardMiddlePedalPictogram\"] = \"\\uE65F\";\n    // U+E653  Pedal d\n    Glyphs[\"keyboardPedalD\"] = \"\\uE653\";\n    // U+E654  Pedal dot\n    Glyphs[\"keyboardPedalDot\"] = \"\\uE654\";\n    // U+E652  Pedal e\n    Glyphs[\"keyboardPedalE\"] = \"\\uE652\";\n    // U+E656  Half-pedal mark\n    Glyphs[\"keyboardPedalHalf\"] = \"\\uE656\";\n    // U+1D1B0  Half-pedal mark\n    Glyphs[\"keyboardPedalHalfAlternate\"] = \"\\uD834\\uDDB0\";\n    // U+E65B  Half pedal mark 1\n    Glyphs[\"keyboardPedalHalf2\"] = \"\\uE65B\";\n    // U+E65C  Half pedal mark 2\n    Glyphs[\"keyboardPedalHalf3\"] = \"\\uE65C\";\n    // U+E661  Pedal heel 1\n    Glyphs[\"keyboardPedalHeel1\"] = \"\\uE661\";\n    // U+E662  Pedal heel 2\n    Glyphs[\"keyboardPedalHeel2\"] = \"\\uE662\";\n    // U+E663  Pedal heel 3 (Davis)\n    Glyphs[\"keyboardPedalHeel3\"] = \"\\uE663\";\n    // U+E674  Pedal heel to toe\n    Glyphs[\"keyboardPedalHeelToToe\"] = \"\\uE674\";\n    // U+E666  Pedal heel or toe\n    Glyphs[\"keyboardPedalHeelToe\"] = \"\\uE666\";\n    // U+E673  Pedal hook end\n    Glyphs[\"keyboardPedalHookEnd\"] = \"\\uE673\";\n    // U+E672  Pedal hook start\n    Glyphs[\"keyboardPedalHookStart\"] = \"\\uE672\";\n    // U+E658  Pedal hyphen\n    Glyphs[\"keyboardPedalHyphen\"] = \"\\uE658\";\n    // U+E651  Pedal P\n    Glyphs[\"keyboardPedalP\"] = \"\\uE651\";\n    // U+E676  Left parenthesis for pedal marking\n    Glyphs[\"keyboardPedalParensLeft\"] = \"\\uE676\";\n    // U+E677  Right parenthesis for pedal marking\n    Glyphs[\"keyboardPedalParensRight\"] = \"\\uE677\";\n    // U+E650  Pedal mark\n    Glyphs[\"keyboardPedalPed\"] = \"\\uE650\";\n    // U+1D1AE  Pedal mark\n    Glyphs[\"keyboardPedalPedAlternate\"] = \"\\uD834\\uDDAE\";\n    // U+E65A  Pedal S\n    Glyphs[\"keyboardPedalS\"] = \"\\uE65A\";\n    // U+E659  Sostenuto pedal mark\n    Glyphs[\"keyboardPedalSost\"] = \"\\uE659\";\n    // U+E664  Pedal toe 1\n    Glyphs[\"keyboardPedalToe1\"] = \"\\uE664\";\n    // U+E665  Pedal toe 2\n    Glyphs[\"keyboardPedalToe2\"] = \"\\uE665\";\n    // U+E675  Pedal toe to heel\n    Glyphs[\"keyboardPedalToeToHeel\"] = \"\\uE675\";\n    // U+E655  Pedal up mark\n    Glyphs[\"keyboardPedalUp\"] = \"\\uE655\";\n    // U+1D1AF  Pedal up mark\n    Glyphs[\"keyboardPedalUpAlternate\"] = \"\\uD834\\uDDAF\";\n    // U+E657  Pedal up notch\n    Glyphs[\"keyboardPedalUpNotch\"] = \"\\uE657\";\n    // U+E65D  Pedal up special\n    Glyphs[\"keyboardPedalUpSpecial\"] = \"\\uE65D\";\n    // U+E670  Play with left hand\n    Glyphs[\"keyboardPlayWithLH\"] = \"\\uE670\";\n    // U+E671  Play with left hand (end)\n    Glyphs[\"keyboardPlayWithLHEnd\"] = \"\\uE671\";\n    // U+E66E  Play with right hand\n    Glyphs[\"keyboardPlayWithRH\"] = \"\\uE66E\";\n    // U+E66F  Play with right hand (end)\n    Glyphs[\"keyboardPlayWithRHEnd\"] = \"\\uE66F\";\n    // U+E667  Pluck strings inside piano (Maderna)\n    Glyphs[\"keyboardPluckInside\"] = \"\\uE667\";\n    // U+E660  Right pedal pictogram\n    Glyphs[\"keyboardRightPedalPictogram\"] = \"\\uE660\";\n    // U+EC3E  Kievan flat\n    Glyphs[\"kievanAccidentalFlat\"] = \"\\uEC3E\";\n    // U+1D1E8  Kievan flat\n    Glyphs[\"kievanAccidentalFlatAlternate\"] = \"\\uD834\\uDDE8\";\n    // U+EC3D  Kievan sharp\n    Glyphs[\"kievanAccidentalSharp\"] = \"\\uEC3D\";\n    // U+EC3C  Kievan augmentation dot\n    Glyphs[\"kievanAugmentationDot\"] = \"\\uEC3C\";\n    // U+EC30  Kievan C clef (tse-fa-ut)\n    Glyphs[\"kievanCClef\"] = \"\\uEC30\";\n    // U+1D1DE  Kievan C clef (tse-fa-ut)\n    Glyphs[\"kievanCClefAlternate\"] = \"\\uD834\\uDDDE\";\n    // U+EC31  Kievan ending symbol\n    Glyphs[\"kievanEndingSymbol\"] = \"\\uEC31\";\n    // U+1D1DF  Kievan ending symbol\n    Glyphs[\"kievanEndingSymbolAlternate\"] = \"\\uD834\\uDDDF\";\n    // U+EC3A  Kievan eighth note, stem down\n    Glyphs[\"kievanNote8thStemDown\"] = \"\\uEC3A\";\n    // U+1D1E6  Kievan eighth note, stem down\n    Glyphs[\"kievanNote8thStemDownAlternate\"] = \"\\uD834\\uDDE6\";\n    // U+EC39  Kievan eighth note, stem up\n    Glyphs[\"kievanNote8thStemUp\"] = \"\\uEC39\";\n    // U+1D1E7  Kievan eighth note, stem up\n    Glyphs[\"kievanNote8thStemUpAlternate\"] = \"\\uD834\\uDDE7\";\n    // U+EC3B  Kievan beam\n    Glyphs[\"kievanNoteBeam\"] = \"\\uEC3B\";\n    // U+EC35  Kievan half note (on staff line)\n    Glyphs[\"kievanNoteHalfStaffLine\"] = \"\\uEC35\";\n    // U+1D1E3  Kievan half note (on staff line)\n    Glyphs[\"kievanNoteHalfStaffLineAlternate\"] = \"\\uD834\\uDDE3\";\n    // U+EC36  Kievan half note (in staff space)\n    Glyphs[\"kievanNoteHalfStaffSpace\"] = \"\\uEC36\";\n    // U+EC38  Kievan quarter note, stem down\n    Glyphs[\"kievanNoteQuarterStemDown\"] = \"\\uEC38\";\n    // U+1D1E4  Kievan quarter note, stem down\n    Glyphs[\"kievanNoteQuarterStemDownAlternate\"] = \"\\uD834\\uDDE4\";\n    // U+EC37  Kievan quarter note, stem up\n    Glyphs[\"kievanNoteQuarterStemUp\"] = \"\\uEC37\";\n    // U+1D1E5  Kievan quarter note, stem up\n    Glyphs[\"kievanNoteQuarterStemUpAlternate\"] = \"\\uD834\\uDDE5\";\n    // U+EC32  Kievan reciting note\n    Glyphs[\"kievanNoteReciting\"] = \"\\uEC32\";\n    // U+1D1E1  Kievan reciting note\n    Glyphs[\"kievanNoteRecitingAlternate\"] = \"\\uD834\\uDDE1\";\n    // U+EC33  Kievan whole note\n    Glyphs[\"kievanNoteWhole\"] = \"\\uEC33\";\n    // U+1D1E2  Kievan whole note\n    Glyphs[\"kievanNoteWholeAlternate\"] = \"\\uD834\\uDDE2\";\n    // U+EC34  Kievan final whole note\n    Glyphs[\"kievanNoteWholeFinal\"] = \"\\uEC34\";\n    // U+1D1E0  Kievan final whole note\n    Glyphs[\"kievanNoteWholeFinalAlternate\"] = \"\\uD834\\uDDE0\";\n    // U+EC40  Do hand sign\n    Glyphs[\"kodalyHandDo\"] = \"\\uEC40\";\n    // U+EC43  Fa hand sign\n    Glyphs[\"kodalyHandFa\"] = \"\\uEC43\";\n    // U+EC45  La hand sign\n    Glyphs[\"kodalyHandLa\"] = \"\\uEC45\";\n    // U+EC42  Mi hand sign\n    Glyphs[\"kodalyHandMi\"] = \"\\uEC42\";\n    // U+EC41  Re hand sign\n    Glyphs[\"kodalyHandRe\"] = \"\\uEC41\";\n    // U+EC44  So hand sign\n    Glyphs[\"kodalyHandSo\"] = \"\\uEC44\";\n    // U+EC46  Ti hand sign\n    Glyphs[\"kodalyHandTi\"] = \"\\uEC46\";\n    // U+E04C  Left repeat sign within bar\n    Glyphs[\"leftRepeatSmall\"] = \"\\uE04C\";\n    // U+E022  Leger line\n    Glyphs[\"legerLine\"] = \"\\uE022\";\n    // U+E024  Leger line (narrow)\n    Glyphs[\"legerLineNarrow\"] = \"\\uE024\";\n    // U+E023  Leger line (wide)\n    Glyphs[\"legerLineWide\"] = \"\\uE023\";\n    // U+EBA4  Lute tablature end repeat barline\n    Glyphs[\"luteBarlineEndRepeat\"] = \"\\uEBA4\";\n    // U+EBA5  Lute tablature final barline\n    Glyphs[\"luteBarlineFinal\"] = \"\\uEBA5\";\n    // U+EBA3  Lute tablature start repeat barline\n    Glyphs[\"luteBarlineStartRepeat\"] = \"\\uEBA3\";\n    // U+EBAB  16th note (semiquaver) duration sign\n    Glyphs[\"luteDuration16th\"] = \"\\uEBAB\";\n    // U+EBAC  32nd note (demisemiquaver) duration sign\n    Glyphs[\"luteDuration32nd\"] = \"\\uEBAC\";\n    // U+EBAA  Eighth note (quaver) duration sign\n    Glyphs[\"luteDuration8th\"] = \"\\uEBAA\";\n    // U+EBA6  Double whole note (breve) duration sign\n    Glyphs[\"luteDurationDoubleWhole\"] = \"\\uEBA6\";\n    // U+EBA8  Half note (minim) duration sign\n    Glyphs[\"luteDurationHalf\"] = \"\\uEBA8\";\n    // U+EBA9  Quarter note (crotchet) duration sign\n    Glyphs[\"luteDurationQuarter\"] = \"\\uEBA9\";\n    // U+EBA7  Whole note (semibreve) duration sign\n    Glyphs[\"luteDurationWhole\"] = \"\\uEBA7\";\n    // U+EBAE  Right-hand fingering, first finger\n    Glyphs[\"luteFingeringRHFirst\"] = \"\\uEBAE\";\n    // U+EBAF  Right-hand fingering, second finger\n    Glyphs[\"luteFingeringRHSecond\"] = \"\\uEBAF\";\n    // U+EBB0  Right-hand fingering, third finger\n    Glyphs[\"luteFingeringRHThird\"] = \"\\uEBB0\";\n    // U+EBAD  Right-hand fingering, thumb\n    Glyphs[\"luteFingeringRHThumb\"] = \"\\uEBAD\";\n    // U+EBD0  10th course (diapason)\n    Glyphs[\"luteFrench10thCourse\"] = \"\\uEBD0\";\n    // U+EBCD  Seventh course (diapason)\n    Glyphs[\"luteFrench7thCourse\"] = \"\\uEBCD\";\n    // U+EBCE  Eighth course (diapason)\n    Glyphs[\"luteFrench8thCourse\"] = \"\\uEBCE\";\n    // U+EBCF  Ninth course (diapason)\n    Glyphs[\"luteFrench9thCourse\"] = \"\\uEBCF\";\n    // U+EBD5  Appoggiatura from above\n    Glyphs[\"luteFrenchAppoggiaturaAbove\"] = \"\\uEBD5\";\n    // U+EBD4  Appoggiatura from below\n    Glyphs[\"luteFrenchAppoggiaturaBelow\"] = \"\\uEBD4\";\n    // U+EBC0  Open string (a)\n    Glyphs[\"luteFrenchFretA\"] = \"\\uEBC0\";\n    // U+EBC1  First fret (b)\n    Glyphs[\"luteFrenchFretB\"] = \"\\uEBC1\";\n    // U+EBC2  Second fret (c)\n    Glyphs[\"luteFrenchFretC\"] = \"\\uEBC2\";\n    // U+EBC3  Third fret (d)\n    Glyphs[\"luteFrenchFretD\"] = \"\\uEBC3\";\n    // U+EBC4  Fourth fret (e)\n    Glyphs[\"luteFrenchFretE\"] = \"\\uEBC4\";\n    // U+EBC5  Fifth fret (f)\n    Glyphs[\"luteFrenchFretF\"] = \"\\uEBC5\";\n    // U+EBC6  Sixth fret (g)\n    Glyphs[\"luteFrenchFretG\"] = \"\\uEBC6\";\n    // U+EBC7  Seventh fret (h)\n    Glyphs[\"luteFrenchFretH\"] = \"\\uEBC7\";\n    // U+EBC8  Eighth fret (i)\n    Glyphs[\"luteFrenchFretI\"] = \"\\uEBC8\";\n    // U+EBC9  Ninth fret (k)\n    Glyphs[\"luteFrenchFretK\"] = \"\\uEBC9\";\n    // U+EBCA  10th fret (l)\n    Glyphs[\"luteFrenchFretL\"] = \"\\uEBCA\";\n    // U+EBCB  11th fret (m)\n    Glyphs[\"luteFrenchFretM\"] = \"\\uEBCB\";\n    // U+EBCC  12th fret (n)\n    Glyphs[\"luteFrenchFretN\"] = \"\\uEBCC\";\n    // U+EBD3  Inverted mordent\n    Glyphs[\"luteFrenchMordentInverted\"] = \"\\uEBD3\";\n    // U+EBD2  Mordent with lower auxiliary\n    Glyphs[\"luteFrenchMordentLower\"] = \"\\uEBD2\";\n    // U+EBD1  Mordent with upper auxiliary\n    Glyphs[\"luteFrenchMordentUpper\"] = \"\\uEBD1\";\n    // U+EC00  5th course, 1st fret (a)\n    Glyphs[\"luteGermanALower\"] = \"\\uEC00\";\n    // U+EC17  6th course, 1st fret (A)\n    Glyphs[\"luteGermanAUpper\"] = \"\\uEC17\";\n    // U+EC01  4th course, 1st fret (b)\n    Glyphs[\"luteGermanBLower\"] = \"\\uEC01\";\n    // U+EC18  6th course, 2nd fret (B)\n    Glyphs[\"luteGermanBUpper\"] = \"\\uEC18\";\n    // U+EC02  3rd course, 1st fret (c)\n    Glyphs[\"luteGermanCLower\"] = \"\\uEC02\";\n    // U+EC19  6th course, 3rd fret (C)\n    Glyphs[\"luteGermanCUpper\"] = \"\\uEC19\";\n    // U+EC03  2nd course, 1st fret (d)\n    Glyphs[\"luteGermanDLower\"] = \"\\uEC03\";\n    // U+EC1A  6th course, 4th fret (D)\n    Glyphs[\"luteGermanDUpper\"] = \"\\uEC1A\";\n    // U+EC04  1st course, 1st fret (e)\n    Glyphs[\"luteGermanELower\"] = \"\\uEC04\";\n    // U+EC1B  6th course, 5th fret (E)\n    Glyphs[\"luteGermanEUpper\"] = \"\\uEC1B\";\n    // U+EC05  5th course, 2nd fret (f)\n    Glyphs[\"luteGermanFLower\"] = \"\\uEC05\";\n    // U+EC1C  6th course, 6th fret (F)\n    Glyphs[\"luteGermanFUpper\"] = \"\\uEC1C\";\n    // U+EC06  4th course, 2nd fret (g)\n    Glyphs[\"luteGermanGLower\"] = \"\\uEC06\";\n    // U+EC1D  6th course, 7th fret (G)\n    Glyphs[\"luteGermanGUpper\"] = \"\\uEC1D\";\n    // U+EC07  3rd course, 2nd fret (h)\n    Glyphs[\"luteGermanHLower\"] = \"\\uEC07\";\n    // U+EC1E  6th course, 8th fret (H)\n    Glyphs[\"luteGermanHUpper\"] = \"\\uEC1E\";\n    // U+EC08  2nd course, 2nd fret (i)\n    Glyphs[\"luteGermanILower\"] = \"\\uEC08\";\n    // U+EC1F  6th course, 9th fret (I)\n    Glyphs[\"luteGermanIUpper\"] = \"\\uEC1F\";\n    // U+EC09  1st course, 2nd fret (k)\n    Glyphs[\"luteGermanKLower\"] = \"\\uEC09\";\n    // U+EC20  6th course, 10th fret (K)\n    Glyphs[\"luteGermanKUpper\"] = \"\\uEC20\";\n    // U+EC0A  5th course, 3rd fret (l)\n    Glyphs[\"luteGermanLLower\"] = \"\\uEC0A\";\n    // U+EC21  6th course, 11th fret (L)\n    Glyphs[\"luteGermanLUpper\"] = \"\\uEC21\";\n    // U+EC0B  4th course, 3rd fret (m)\n    Glyphs[\"luteGermanMLower\"] = \"\\uEC0B\";\n    // U+EC22  6th course, 12th fret (M)\n    Glyphs[\"luteGermanMUpper\"] = \"\\uEC22\";\n    // U+EC0C  3rd course, 3rd fret (n)\n    Glyphs[\"luteGermanNLower\"] = \"\\uEC0C\";\n    // U+EC23  6th course, 13th fret (N)\n    Glyphs[\"luteGermanNUpper\"] = \"\\uEC23\";\n    // U+EC0D  2nd course, 3rd fret (o)\n    Glyphs[\"luteGermanOLower\"] = \"\\uEC0D\";\n    // U+EC0E  1st course, 3rd fret (p)\n    Glyphs[\"luteGermanPLower\"] = \"\\uEC0E\";\n    // U+EC0F  5th course, 4th fret (q)\n    Glyphs[\"luteGermanQLower\"] = \"\\uEC0F\";\n    // U+EC10  4th course, 4th fret (r)\n    Glyphs[\"luteGermanRLower\"] = \"\\uEC10\";\n    // U+EC11  3rd course, 4th fret (s)\n    Glyphs[\"luteGermanSLower\"] = \"\\uEC11\";\n    // U+EC12  2nd course, 4th fret (t)\n    Glyphs[\"luteGermanTLower\"] = \"\\uEC12\";\n    // U+EC13  1st course, 4th fret (v)\n    Glyphs[\"luteGermanVLower\"] = \"\\uEC13\";\n    // U+EC14  5th course, 5th fret (x)\n    Glyphs[\"luteGermanXLower\"] = \"\\uEC14\";\n    // U+EC15  4th course, 5th fret (y)\n    Glyphs[\"luteGermanYLower\"] = \"\\uEC15\";\n    // U+EC16  3rd course, 5th fret (z)\n    Glyphs[\"luteGermanZLower\"] = \"\\uEC16\";\n    // U+EBF1  C sol fa ut clef\n    Glyphs[\"luteItalianClefCSolFaUt\"] = \"\\uEBF1\";\n    // U+EBF0  F fa ut clef\n    Glyphs[\"luteItalianClefFFaUt\"] = \"\\uEBF0\";\n    // U+EBE0  Open string (0)\n    Glyphs[\"luteItalianFret0\"] = \"\\uEBE0\";\n    // U+EBE1  First fret (1)\n    Glyphs[\"luteItalianFret1\"] = \"\\uEBE1\";\n    // U+EBE2  Second fret (2)\n    Glyphs[\"luteItalianFret2\"] = \"\\uEBE2\";\n    // U+EBE3  Third fret (3)\n    Glyphs[\"luteItalianFret3\"] = \"\\uEBE3\";\n    // U+EBE4  Fourth fret (4)\n    Glyphs[\"luteItalianFret4\"] = \"\\uEBE4\";\n    // U+EBE5  Fifth fret (5)\n    Glyphs[\"luteItalianFret5\"] = \"\\uEBE5\";\n    // U+EBE6  Sixth fret (6)\n    Glyphs[\"luteItalianFret6\"] = \"\\uEBE6\";\n    // U+EBE7  Seventh fret (7)\n    Glyphs[\"luteItalianFret7\"] = \"\\uEBE7\";\n    // U+EBE8  Eighth fret (8)\n    Glyphs[\"luteItalianFret8\"] = \"\\uEBE8\";\n    // U+EBE9  Ninth fret (9)\n    Glyphs[\"luteItalianFret9\"] = \"\\uEBE9\";\n    // U+EBF4  Hold finger in place\n    Glyphs[\"luteItalianHoldFinger\"] = \"\\uEBF4\";\n    // U+EBF3  Hold note\n    Glyphs[\"luteItalianHoldNote\"] = \"\\uEBF3\";\n    // U+EBF5  Release finger\n    Glyphs[\"luteItalianReleaseFinger\"] = \"\\uEBF5\";\n    // U+EBEA  Fast tempo indication (de Mudarra)\n    Glyphs[\"luteItalianTempoFast\"] = \"\\uEBEA\";\n    // U+EBEC  Neither fast nor slow tempo indication (de Mudarra)\n    Glyphs[\"luteItalianTempoNeitherFastNorSlow\"] = \"\\uEBEC\";\n    // U+EBED  Slow tempo indication (de Mudarra)\n    Glyphs[\"luteItalianTempoSlow\"] = \"\\uEBED\";\n    // U+EBEB  Somewhat fast tempo indication (de Narvaez)\n    Glyphs[\"luteItalianTempoSomewhatFast\"] = \"\\uEBEB\";\n    // U+EBEE  Very slow indication (de Narvaez)\n    Glyphs[\"luteItalianTempoVerySlow\"] = \"\\uEBEE\";\n    // U+EBEF  Triple time indication\n    Glyphs[\"luteItalianTimeTriple\"] = \"\\uEBEF\";\n    // U+EBF2  Single-finger tremolo or mordent\n    Glyphs[\"luteItalianTremolo\"] = \"\\uEBF2\";\n    // U+EBF6  Vibrato (verre cassé)\n    Glyphs[\"luteItalianVibrato\"] = \"\\uEBF6\";\n    // U+EBA0  Lute tablature staff, 6 courses\n    Glyphs[\"luteStaff6Lines\"] = \"\\uEBA0\";\n    // U+EBA2  Lute tablature staff, 6 courses (narrow)\n    Glyphs[\"luteStaff6LinesNarrow\"] = \"\\uEBA2\";\n    // U+EBA1  Lute tablature staff, 6 courses (wide)\n    Glyphs[\"luteStaff6LinesWide\"] = \"\\uEBA1\";\n    // U+E551  Elision\n    Glyphs[\"lyricsElision\"] = \"\\uE551\";\n    // U+E550  Narrow elision\n    Glyphs[\"lyricsElisionNarrow\"] = \"\\uE550\";\n    // U+E552  Wide elision\n    Glyphs[\"lyricsElisionWide\"] = \"\\uE552\";\n    // U+E553  Baseline hyphen\n    Glyphs[\"lyricsHyphenBaseline\"] = \"\\uE553\";\n    // U+E554  Non-breaking baseline hyphen\n    Glyphs[\"lyricsHyphenBaselineNonBreaking\"] = \"\\uE554\";\n    // U+E555  Text repeats\n    Glyphs[\"lyricsTextRepeat\"] = \"\\uE555\";\n    // U+E9E1  Flat, hard b (mi)\n    Glyphs[\"medRenFlatHardB\"] = \"\\uE9E1\";\n    // U+E9E0  Flat, soft b (fa)\n    Glyphs[\"medRenFlatSoftB\"] = \"\\uE9E0\";\n    // U+1D1D2  Flat, soft b (fa)\n    Glyphs[\"medRenFlatSoftBAlternate\"] = \"\\uD834\\uDDD2\";\n    // U+E9E4  Flat with dot\n    Glyphs[\"medRenFlatWithDot\"] = \"\\uE9E4\";\n    // U+EA24  G clef (Corpus Monodicum)\n    Glyphs[\"medRenGClefCMN\"] = \"\\uEA24\";\n    // U+EA22  Liquescence\n    Glyphs[\"medRenLiquescenceCMN\"] = \"\\uEA22\";\n    // U+EA26  Liquescent ascending (Corpus Monodicum)\n    Glyphs[\"medRenLiquescentAscCMN\"] = \"\\uEA26\";\n    // U+EA27  Liquescent descending (Corpus Monodicum)\n    Glyphs[\"medRenLiquescentDescCMN\"] = \"\\uEA27\";\n    // U+E9E2  Natural\n    Glyphs[\"medRenNatural\"] = \"\\uE9E2\";\n    // U+E9E5  Natural with interrupted cross\n    Glyphs[\"medRenNaturalWithCross\"] = \"\\uE9E5\";\n    // U+EA2A  Oriscus (Corpus Monodicum)\n    Glyphs[\"medRenOriscusCMN\"] = \"\\uEA2A\";\n    // U+EA23  Plica\n    Glyphs[\"medRenPlicaCMN\"] = \"\\uEA23\";\n    // U+EA25  Punctum (Corpus Monodicum)\n    Glyphs[\"medRenPunctumCMN\"] = \"\\uEA25\";\n    // U+EA28  Quilisma (Corpus Monodicum)\n    Glyphs[\"medRenQuilismaCMN\"] = \"\\uEA28\";\n    // U+E9E3  Croix\n    Glyphs[\"medRenSharpCroix\"] = \"\\uE9E3\";\n    // U+1D1CF  Croix\n    Glyphs[\"medRenSharpCroixAlternate\"] = \"\\uD834\\uDDCF\";\n    // U+EA29  Strophicus (Corpus Monodicum)\n    Glyphs[\"medRenStrophicusCMN\"] = \"\\uEA29\";\n    // U+EA10  Alteration sign\n    Glyphs[\"mensuralAlterationSign\"] = \"\\uEA10\";\n    // U+E952  Black mensural brevis\n    Glyphs[\"mensuralBlackBrevis\"] = \"\\uE952\";\n    // U+E956  Black mensural void brevis\n    Glyphs[\"mensuralBlackBrevisVoid\"] = \"\\uE956\";\n    // U+E95A  Black mensural dragma\n    Glyphs[\"mensuralBlackDragma\"] = \"\\uE95A\";\n    // U+E951  Black mensural longa\n    Glyphs[\"mensuralBlackLonga\"] = \"\\uE951\";\n    // U+E950  Black mensural maxima\n    Glyphs[\"mensuralBlackMaxima\"] = \"\\uE950\";\n    // U+E954  Black mensural minima\n    Glyphs[\"mensuralBlackMinima\"] = \"\\uE954\";\n    // U+1D1BC  Black mensural minima\n    Glyphs[\"mensuralBlackMinimaAlternate\"] = \"\\uD834\\uDDBC\";\n    // U+E958  Black mensural void minima\n    Glyphs[\"mensuralBlackMinimaVoid\"] = \"\\uE958\";\n    // U+1D1BB  Black mensural void minima\n    Glyphs[\"mensuralBlackMinimaVoidAlternate\"] = \"\\uD834\\uDDBB\";\n    // U+E953  Black mensural semibrevis\n    Glyphs[\"mensuralBlackSemibrevis\"] = \"\\uE953\";\n    // U+1D1BA  Black mensural semibrevis\n    Glyphs[\"mensuralBlackSemibrevisAlternate\"] = \"\\uD834\\uDDBA\";\n    // U+E959  Black mensural semibrevis caudata\n    Glyphs[\"mensuralBlackSemibrevisCaudata\"] = \"\\uE959\";\n    // U+E95B  Black mensural oblique semibrevis\n    Glyphs[\"mensuralBlackSemibrevisOblique\"] = \"\\uE95B\";\n    // U+E957  Black mensural void semibrevis\n    Glyphs[\"mensuralBlackSemibrevisVoid\"] = \"\\uE957\";\n    // U+1D1B9  Black mensural void semibrevis\n    Glyphs[\"mensuralBlackSemibrevisVoidAlternate\"] = \"\\uD834\\uDDB9\";\n    // U+E955  Black mensural semiminima\n    Glyphs[\"mensuralBlackSemiminima\"] = \"\\uE955\";\n    // U+E905  Mensural C clef\n    Glyphs[\"mensuralCclef\"] = \"\\uE905\";\n    // U+E90A  Petrucci C clef, high position\n    Glyphs[\"mensuralCclefPetrucciPosHigh\"] = \"\\uE90A\";\n    // U+E90B  Petrucci C clef, highest position\n    Glyphs[\"mensuralCclefPetrucciPosHighest\"] = \"\\uE90B\";\n    // U+E908  Petrucci C clef, low position\n    Glyphs[\"mensuralCclefPetrucciPosLow\"] = \"\\uE908\";\n    // U+E907  Petrucci C clef, lowest position\n    Glyphs[\"mensuralCclefPetrucciPosLowest\"] = \"\\uE907\";\n    // U+E909  Petrucci C clef, middle position\n    Glyphs[\"mensuralCclefPetrucciPosMiddle\"] = \"\\uE909\";\n    // U+EA0F  Coloration end, round\n    Glyphs[\"mensuralColorationEndRound\"] = \"\\uEA0F\";\n    // U+EA0D  Coloration end, square\n    Glyphs[\"mensuralColorationEndSquare\"] = \"\\uEA0D\";\n    // U+EA0E  Coloration start, round\n    Glyphs[\"mensuralColorationStartRound\"] = \"\\uEA0E\";\n    // U+EA0C  Coloration start, square\n    Glyphs[\"mensuralColorationStartSquare\"] = \"\\uEA0C\";\n    // U+E940  Combining stem diagonal\n    Glyphs[\"mensuralCombStemDiagonal\"] = \"\\uE940\";\n    // U+E93F  Combining stem down\n    Glyphs[\"mensuralCombStemDown\"] = \"\\uE93F\";\n    // U+E948  Combining stem with extended flag down\n    Glyphs[\"mensuralCombStemDownFlagExtended\"] = \"\\uE948\";\n    // U+E946  Combining stem with flared flag down\n    Glyphs[\"mensuralCombStemDownFlagFlared\"] = \"\\uE946\";\n    // U+E94C  Combining stem with fusa flag down\n    Glyphs[\"mensuralCombStemDownFlagFusa\"] = \"\\uE94C\";\n    // U+E944  Combining stem with flag left down\n    Glyphs[\"mensuralCombStemDownFlagLeft\"] = \"\\uE944\";\n    // U+E942  Combining stem with flag right down\n    Glyphs[\"mensuralCombStemDownFlagRight\"] = \"\\uE942\";\n    // U+E94A  Combining stem with semiminima flag down\n    Glyphs[\"mensuralCombStemDownFlagSemiminima\"] = \"\\uE94A\";\n    // U+E93E  Combining stem up\n    Glyphs[\"mensuralCombStemUp\"] = \"\\uE93E\";\n    // U+E947  Combining stem with extended flag up\n    Glyphs[\"mensuralCombStemUpFlagExtended\"] = \"\\uE947\";\n    // U+E945  Combining stem with flared flag up\n    Glyphs[\"mensuralCombStemUpFlagFlared\"] = \"\\uE945\";\n    // U+E94B  Combining stem with fusa flag up\n    Glyphs[\"mensuralCombStemUpFlagFusa\"] = \"\\uE94B\";\n    // U+E943  Combining stem with flag left up\n    Glyphs[\"mensuralCombStemUpFlagLeft\"] = \"\\uE943\";\n    // U+E941  Combining stem with flag right up\n    Glyphs[\"mensuralCombStemUpFlagRight\"] = \"\\uE941\";\n    // U+E949  Combining stem with semiminima flag up\n    Glyphs[\"mensuralCombStemUpFlagSemiminima\"] = \"\\uE949\";\n    // U+EA0A  Checkmark custos\n    Glyphs[\"mensuralCustosCheckmark\"] = \"\\uEA0A\";\n    // U+EA03  Mensural custos down\n    Glyphs[\"mensuralCustosDown\"] = \"\\uEA03\";\n    // U+EA0B  Turn-like custos\n    Glyphs[\"mensuralCustosTurn\"] = \"\\uEA0B\";\n    // U+EA02  Mensural custos up\n    Glyphs[\"mensuralCustosUp\"] = \"\\uEA02\";\n    // U+E903  Mensural F clef\n    Glyphs[\"mensuralFclef\"] = \"\\uE903\";\n    // U+E904  Petrucci F clef\n    Glyphs[\"mensuralFclefPetrucci\"] = \"\\uE904\";\n    // U+E900  Mensural G clef\n    Glyphs[\"mensuralGclef\"] = \"\\uE900\";\n    // U+E901  Petrucci G clef\n    Glyphs[\"mensuralGclefPetrucci\"] = \"\\uE901\";\n    // U+E92D  Modus imperfectum, vertical\n    Glyphs[\"mensuralModusImperfectumVert\"] = \"\\uE92D\";\n    // U+E92C  Modus perfectum, vertical\n    Glyphs[\"mensuralModusPerfectumVert\"] = \"\\uE92C\";\n    // U+E934  Longa/brevis notehead, black\n    Glyphs[\"mensuralNoteheadLongaBlack\"] = \"\\uE934\";\n    // U+E936  Longa/brevis notehead, black and void\n    Glyphs[\"mensuralNoteheadLongaBlackVoid\"] = \"\\uE936\";\n    // U+E935  Longa/brevis notehead, void\n    Glyphs[\"mensuralNoteheadLongaVoid\"] = \"\\uE935\";\n    // U+E937  Longa/brevis notehead, white\n    Glyphs[\"mensuralNoteheadLongaWhite\"] = \"\\uE937\";\n    // U+E930  Maxima notehead, black\n    Glyphs[\"mensuralNoteheadMaximaBlack\"] = \"\\uE930\";\n    // U+E932  Maxima notehead, black and void\n    Glyphs[\"mensuralNoteheadMaximaBlackVoid\"] = \"\\uE932\";\n    // U+E931  Maxima notehead, void\n    Glyphs[\"mensuralNoteheadMaximaVoid\"] = \"\\uE931\";\n    // U+E933  Maxima notehead, white\n    Glyphs[\"mensuralNoteheadMaximaWhite\"] = \"\\uE933\";\n    // U+E93C  Minima notehead, white\n    Glyphs[\"mensuralNoteheadMinimaWhite\"] = \"\\uE93C\";\n    // U+E938  Semibrevis notehead, black\n    Glyphs[\"mensuralNoteheadSemibrevisBlack\"] = \"\\uE938\";\n    // U+E93A  Semibrevis notehead, black and void\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoid\"] = \"\\uE93A\";\n    // U+E93B  Semibrevis notehead, black and void (turned)\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoidTurned\"] = \"\\uE93B\";\n    // U+E939  Semibrevis notehead, void\n    Glyphs[\"mensuralNoteheadSemibrevisVoid\"] = \"\\uE939\";\n    // U+E93D  Semiminima/fusa notehead, white\n    Glyphs[\"mensuralNoteheadSemiminimaWhite\"] = \"\\uE93D\";\n    // U+E970  Oblique form, ascending 2nd, black\n    Glyphs[\"mensuralObliqueAsc2ndBlack\"] = \"\\uE970\";\n    // U+E972  Oblique form, ascending 2nd, black and void\n    Glyphs[\"mensuralObliqueAsc2ndBlackVoid\"] = \"\\uE972\";\n    // U+E971  Oblique form, ascending 2nd, void\n    Glyphs[\"mensuralObliqueAsc2ndVoid\"] = \"\\uE971\";\n    // U+E973  Oblique form, ascending 2nd, white\n    Glyphs[\"mensuralObliqueAsc2ndWhite\"] = \"\\uE973\";\n    // U+E974  Oblique form, ascending 3rd, black\n    Glyphs[\"mensuralObliqueAsc3rdBlack\"] = \"\\uE974\";\n    // U+E976  Oblique form, ascending 3rd, black and void\n    Glyphs[\"mensuralObliqueAsc3rdBlackVoid\"] = \"\\uE976\";\n    // U+E975  Oblique form, ascending 3rd, void\n    Glyphs[\"mensuralObliqueAsc3rdVoid\"] = \"\\uE975\";\n    // U+E977  Oblique form, ascending 3rd, white\n    Glyphs[\"mensuralObliqueAsc3rdWhite\"] = \"\\uE977\";\n    // U+E978  Oblique form, ascending 4th, black\n    Glyphs[\"mensuralObliqueAsc4thBlack\"] = \"\\uE978\";\n    // U+E97A  Oblique form, ascending 4th, black and void\n    Glyphs[\"mensuralObliqueAsc4thBlackVoid\"] = \"\\uE97A\";\n    // U+E979  Oblique form, ascending 4th, void\n    Glyphs[\"mensuralObliqueAsc4thVoid\"] = \"\\uE979\";\n    // U+E97B  Oblique form, ascending 4th, white\n    Glyphs[\"mensuralObliqueAsc4thWhite\"] = \"\\uE97B\";\n    // U+E97C  Oblique form, ascending 5th, black\n    Glyphs[\"mensuralObliqueAsc5thBlack\"] = \"\\uE97C\";\n    // U+E97E  Oblique form, ascending 5th, black and void\n    Glyphs[\"mensuralObliqueAsc5thBlackVoid\"] = \"\\uE97E\";\n    // U+E97D  Oblique form, ascending 5th, void\n    Glyphs[\"mensuralObliqueAsc5thVoid\"] = \"\\uE97D\";\n    // U+E97F  Oblique form, ascending 5th, white\n    Glyphs[\"mensuralObliqueAsc5thWhite\"] = \"\\uE97F\";\n    // U+E980  Oblique form, descending 2nd, black\n    Glyphs[\"mensuralObliqueDesc2ndBlack\"] = \"\\uE980\";\n    // U+E982  Oblique form, descending 2nd, black and void\n    Glyphs[\"mensuralObliqueDesc2ndBlackVoid\"] = \"\\uE982\";\n    // U+E981  Oblique form, descending 2nd, void\n    Glyphs[\"mensuralObliqueDesc2ndVoid\"] = \"\\uE981\";\n    // U+E983  Oblique form, descending 2nd, white\n    Glyphs[\"mensuralObliqueDesc2ndWhite\"] = \"\\uE983\";\n    // U+E984  Oblique form, descending 3rd, black\n    Glyphs[\"mensuralObliqueDesc3rdBlack\"] = \"\\uE984\";\n    // U+E986  Oblique form, descending 3rd, black and void\n    Glyphs[\"mensuralObliqueDesc3rdBlackVoid\"] = \"\\uE986\";\n    // U+E985  Oblique form, descending 3rd, void\n    Glyphs[\"mensuralObliqueDesc3rdVoid\"] = \"\\uE985\";\n    // U+E987  Oblique form, descending 3rd, white\n    Glyphs[\"mensuralObliqueDesc3rdWhite\"] = \"\\uE987\";\n    // U+E988  Oblique form, descending 4th, black\n    Glyphs[\"mensuralObliqueDesc4thBlack\"] = \"\\uE988\";\n    // U+E98A  Oblique form, descending 4th, black and void\n    Glyphs[\"mensuralObliqueDesc4thBlackVoid\"] = \"\\uE98A\";\n    // U+E989  Oblique form, descending 4th, void\n    Glyphs[\"mensuralObliqueDesc4thVoid\"] = \"\\uE989\";\n    // U+E98B  Oblique form, descending 4th, white\n    Glyphs[\"mensuralObliqueDesc4thWhite\"] = \"\\uE98B\";\n    // U+E98C  Oblique form, descending 5th, black\n    Glyphs[\"mensuralObliqueDesc5thBlack\"] = \"\\uE98C\";\n    // U+E98E  Oblique form, descending 5th, black and void\n    Glyphs[\"mensuralObliqueDesc5thBlackVoid\"] = \"\\uE98E\";\n    // U+E98D  Oblique form, descending 5th, void\n    Glyphs[\"mensuralObliqueDesc5thVoid\"] = \"\\uE98D\";\n    // U+E98F  Oblique form, descending 5th, white\n    Glyphs[\"mensuralObliqueDesc5thWhite\"] = \"\\uE98F\";\n    // U+E910  Tempus perfectum cum prolatione perfecta (9/8)\n    Glyphs[\"mensuralProlation1\"] = \"\\uE910\";\n    // U+1D1C7  Tempus perfectum cum prolatione perfecta (9/8)\n    Glyphs[\"mensuralProlation1Alternate\"] = \"\\uD834\\uDDC7\";\n    // U+E919  Tempus imperfectum cum prolatione imperfecta diminution 4\n    Glyphs[\"mensuralProlation10\"] = \"\\uE919\";\n    // U+1D1CE  Tempus imperfectum cum prolatione imperfecta diminution 4\n    Glyphs[\"mensuralProlation10Alternate\"] = \"\\uD834\\uDDCE\";\n    // U+E91A  Tempus imperfectum cum prolatione imperfecta diminution 5\n    Glyphs[\"mensuralProlation11\"] = \"\\uE91A\";\n    // U+E911  Tempus perfectum cum prolatione imperfecta (3/4)\n    Glyphs[\"mensuralProlation2\"] = \"\\uE911\";\n    // U+1D1C8  Tempus perfectum cum prolatione imperfecta (3/4)\n    Glyphs[\"mensuralProlation2Alternate\"] = \"\\uD834\\uDDC8\";\n    // U+E912  Tempus perfectum cum prolatione imperfecta diminution 1 (3/8)\n    Glyphs[\"mensuralProlation3\"] = \"\\uE912\";\n    // U+1D1C9  Tempus perfectum cum prolatione imperfecta diminution 1 (3/8)\n    Glyphs[\"mensuralProlation3Alternate\"] = \"\\uD834\\uDDC9\";\n    // U+E913  Tempus perfectum cum prolatione perfecta diminution 2 (9/16)\n    Glyphs[\"mensuralProlation4\"] = \"\\uE913\";\n    // U+E914  Tempus imperfectum cum prolatione perfecta (6/8)\n    Glyphs[\"mensuralProlation5\"] = \"\\uE914\";\n    // U+1D1CA  Tempus imperfectum cum prolatione perfecta (6/8)\n    Glyphs[\"mensuralProlation5Alternate\"] = \"\\uD834\\uDDCA\";\n    // U+E915  Tempus imperfectum cum prolatione imperfecta (2/4)\n    Glyphs[\"mensuralProlation6\"] = \"\\uE915\";\n    // U+1D1CB  Tempus imperfectum cum prolatione imperfecta (2/4)\n    Glyphs[\"mensuralProlation6Alternate\"] = \"\\uD834\\uDDCB\";\n    // U+E916  Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2)\n    Glyphs[\"mensuralProlation7\"] = \"\\uE916\";\n    // U+1D1CC  Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2)\n    Glyphs[\"mensuralProlation7Alternate\"] = \"\\uD834\\uDDCC\";\n    // U+E917  Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16)\n    Glyphs[\"mensuralProlation8\"] = \"\\uE917\";\n    // U+E918  Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2)\n    Glyphs[\"mensuralProlation9\"] = \"\\uE918\";\n    // U+1D1CD  Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2)\n    Glyphs[\"mensuralProlation9Alternate\"] = \"\\uD834\\uDDCD\";\n    // U+E920  Combining dot\n    Glyphs[\"mensuralProlationCombiningDot\"] = \"\\uE920\";\n    // U+E924  Combining void dot\n    Glyphs[\"mensuralProlationCombiningDotVoid\"] = \"\\uE924\";\n    // U+E925  Combining vertical stroke\n    Glyphs[\"mensuralProlationCombiningStroke\"] = \"\\uE925\";\n    // U+E922  Combining three dots horizontal\n    Glyphs[\"mensuralProlationCombiningThreeDots\"] = \"\\uE922\";\n    // U+E923  Combining three dots triangular\n    Glyphs[\"mensuralProlationCombiningThreeDotsTri\"] = \"\\uE923\";\n    // U+E921  Combining two dots\n    Glyphs[\"mensuralProlationCombiningTwoDots\"] = \"\\uE921\";\n    // U+E926  Mensural proportion 1\n    Glyphs[\"mensuralProportion1\"] = \"\\uE926\";\n    // U+E927  Mensural proportion 2\n    Glyphs[\"mensuralProportion2\"] = \"\\uE927\";\n    // U+E928  Mensural proportion 3\n    Glyphs[\"mensuralProportion3\"] = \"\\uE928\";\n    // U+E929  Mensural proportion 4\n    Glyphs[\"mensuralProportion4\"] = \"\\uE929\";\n    // U+EE90  Mensural proportion 5\n    Glyphs[\"mensuralProportion5\"] = \"\\uEE90\";\n    // U+EE91  Mensural proportion 6\n    Glyphs[\"mensuralProportion6\"] = \"\\uEE91\";\n    // U+EE92  Mensural proportion 7\n    Glyphs[\"mensuralProportion7\"] = \"\\uEE92\";\n    // U+EE93  Mensural proportion 8\n    Glyphs[\"mensuralProportion8\"] = \"\\uEE93\";\n    // U+EE94  Mensural proportion 9\n    Glyphs[\"mensuralProportion9\"] = \"\\uEE94\";\n    // U+E92B  Mensural proportion major\n    Glyphs[\"mensuralProportionMajor\"] = \"\\uE92B\";\n    // U+E92A  Mensural proportion minor\n    Glyphs[\"mensuralProportionMinor\"] = \"\\uE92A\";\n    // U+E91C  Proportio dupla 1\n    Glyphs[\"mensuralProportionProportioDupla1\"] = \"\\uE91C\";\n    // U+E91D  Proportio dupla 2\n    Glyphs[\"mensuralProportionProportioDupla2\"] = \"\\uE91D\";\n    // U+E91F  Proportio quadrupla\n    Glyphs[\"mensuralProportionProportioQuadrupla\"] = \"\\uE91F\";\n    // U+E91E  Proportio tripla\n    Glyphs[\"mensuralProportionProportioTripla\"] = \"\\uE91E\";\n    // U+E91B  Tempus perfectum\n    Glyphs[\"mensuralProportionTempusPerfectum\"] = \"\\uE91B\";\n    // U+E9F3  Brevis rest\n    Glyphs[\"mensuralRestBrevis\"] = \"\\uE9F3\";\n    // U+1D1C3  Brevis rest\n    Glyphs[\"mensuralRestBrevisAlternate\"] = \"\\uD834\\uDDC3\";\n    // U+E9F7  Fusa rest\n    Glyphs[\"mensuralRestFusa\"] = \"\\uE9F7\";\n    // U+E9F2  Longa imperfecta rest\n    Glyphs[\"mensuralRestLongaImperfecta\"] = \"\\uE9F2\";\n    // U+1D1C2  Longa imperfecta rest\n    Glyphs[\"mensuralRestLongaImperfectaAlternate\"] = \"\\uD834\\uDDC2\";\n    // U+E9F1  Longa perfecta rest\n    Glyphs[\"mensuralRestLongaPerfecta\"] = \"\\uE9F1\";\n    // U+1D1C1  Longa perfecta rest\n    Glyphs[\"mensuralRestLongaPerfectaAlternate\"] = \"\\uD834\\uDDC1\";\n    // U+E9F0  Maxima rest\n    Glyphs[\"mensuralRestMaxima\"] = \"\\uE9F0\";\n    // U+E9F5  Minima rest\n    Glyphs[\"mensuralRestMinima\"] = \"\\uE9F5\";\n    // U+1D1C5  Minima rest\n    Glyphs[\"mensuralRestMinimaAlternate\"] = \"\\uD834\\uDDC5\";\n    // U+E9F4  Semibrevis rest\n    Glyphs[\"mensuralRestSemibrevis\"] = \"\\uE9F4\";\n    // U+1D1C4  Semibrevis rest\n    Glyphs[\"mensuralRestSemibrevisAlternate\"] = \"\\uD834\\uDDC4\";\n    // U+E9F8  Semifusa rest\n    Glyphs[\"mensuralRestSemifusa\"] = \"\\uE9F8\";\n    // U+E9F6  Semiminima rest\n    Glyphs[\"mensuralRestSemiminima\"] = \"\\uE9F6\";\n    // U+1D1C6  Semiminima rest\n    Glyphs[\"mensuralRestSemiminimaAlternate\"] = \"\\uD834\\uDDC6\";\n    // U+EA01  Signum congruentiae down\n    Glyphs[\"mensuralSignumDown\"] = \"\\uEA01\";\n    // U+EA00  Signum congruentiae up\n    Glyphs[\"mensuralSignumUp\"] = \"\\uEA00\";\n    // U+E92F  Tempus imperfectum, horizontal\n    Glyphs[\"mensuralTempusImperfectumHoriz\"] = \"\\uE92F\";\n    // U+E92E  Tempus perfectum, horizontal\n    Glyphs[\"mensuralTempusPerfectumHoriz\"] = \"\\uE92E\";\n    // U+E95E  White mensural brevis\n    Glyphs[\"mensuralWhiteBrevis\"] = \"\\uE95E\";\n    // U+1D1B8  White mensural brevis\n    Glyphs[\"mensuralWhiteBrevisAlternate\"] = \"\\uD834\\uDDB8\";\n    // U+E961  White mensural fusa\n    Glyphs[\"mensuralWhiteFusa\"] = \"\\uE961\";\n    // U+1D1BE  White mensural fusa\n    Glyphs[\"mensuralWhiteFusaAlternate\"] = \"\\uD834\\uDDBE\";\n    // U+E95D  White mensural longa\n    Glyphs[\"mensuralWhiteLonga\"] = \"\\uE95D\";\n    // U+1D1B7  White mensural longa\n    Glyphs[\"mensuralWhiteLongaAlternate\"] = \"\\uD834\\uDDB7\";\n    // U+E95C  White mensural maxima\n    Glyphs[\"mensuralWhiteMaxima\"] = \"\\uE95C\";\n    // U+1D1B6  White mensural maxima\n    Glyphs[\"mensuralWhiteMaximaAlternate\"] = \"\\uD834\\uDDB6\";\n    // U+E95F  White mensural minima\n    Glyphs[\"mensuralWhiteMinima\"] = \"\\uE95F\";\n    // U+E962  White mensural semibrevis\n    Glyphs[\"mensuralWhiteSemibrevis\"] = \"\\uE962\";\n    // U+1D1B9  White mensural semibrevis\n    Glyphs[\"mensuralWhiteSemibrevisAlternate\"] = \"\\uD834\\uDDB9\";\n    // U+E960  White mensural semiminima\n    Glyphs[\"mensuralWhiteSemiminima\"] = \"\\uE960\";\n    // U+ECB7  Augmentation dot\n    Glyphs[\"metAugmentationDot\"] = \"\\uECB7\";\n    // U+ECB6  1024th note (semihemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"metNote1024thDown\"] = \"\\uECB6\";\n    // U+ECB5  1024th note (semihemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"metNote1024thUp\"] = \"\\uECB5\";\n    // U+ECB0  128th note (semihemidemisemiquaver) stem down\n    Glyphs[\"metNote128thDown\"] = \"\\uECB0\";\n    // U+ECAF  128th note (semihemidemisemiquaver) stem up\n    Glyphs[\"metNote128thUp\"] = \"\\uECAF\";\n    // U+ECAA  16th note (semiquaver) stem down\n    Glyphs[\"metNote16thDown\"] = \"\\uECAA\";\n    // U+ECA9  16th note (semiquaver) stem up\n    Glyphs[\"metNote16thUp\"] = \"\\uECA9\";\n    // U+ECB2  256th note (demisemihemidemisemiquaver) stem down\n    Glyphs[\"metNote256thDown\"] = \"\\uECB2\";\n    // U+ECB1  256th note (demisemihemidemisemiquaver) stem up\n    Glyphs[\"metNote256thUp\"] = \"\\uECB1\";\n    // U+ECAC  32nd note (demisemiquaver) stem down\n    Glyphs[\"metNote32ndDown\"] = \"\\uECAC\";\n    // U+ECAB  32nd note (demisemiquaver) stem up\n    Glyphs[\"metNote32ndUp\"] = \"\\uECAB\";\n    // U+ECB4  512th note (hemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"metNote512thDown\"] = \"\\uECB4\";\n    // U+ECB3  512th note (hemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"metNote512thUp\"] = \"\\uECB3\";\n    // U+ECAE  64th note (hemidemisemiquaver) stem down\n    Glyphs[\"metNote64thDown\"] = \"\\uECAE\";\n    // U+ECAD  64th note (hemidemisemiquaver) stem up\n    Glyphs[\"metNote64thUp\"] = \"\\uECAD\";\n    // U+ECA8  Eighth note (quaver) stem down\n    Glyphs[\"metNote8thDown\"] = \"\\uECA8\";\n    // U+ECA7  Eighth note (quaver) stem up\n    Glyphs[\"metNote8thUp\"] = \"\\uECA7\";\n    // U+ECA0  Double whole note (breve)\n    Glyphs[\"metNoteDoubleWhole\"] = \"\\uECA0\";\n    // U+ECA1  Double whole note (square)\n    Glyphs[\"metNoteDoubleWholeSquare\"] = \"\\uECA1\";\n    // U+ECA4  Half note (minim) stem down\n    Glyphs[\"metNoteHalfDown\"] = \"\\uECA4\";\n    // U+ECA3  Half note (minim) stem up\n    Glyphs[\"metNoteHalfUp\"] = \"\\uECA3\";\n    // U+ECA6  Quarter note (crotchet) stem down\n    Glyphs[\"metNoteQuarterDown\"] = \"\\uECA6\";\n    // U+ECA5  Quarter note (crotchet) stem up\n    Glyphs[\"metNoteQuarterUp\"] = \"\\uECA5\";\n    // U+ECA2  Whole note (semibreve)\n    Glyphs[\"metNoteWhole\"] = \"\\uECA2\";\n    // U+EC63  Left-pointing arrow for metric modulation\n    Glyphs[\"metricModulationArrowLeft\"] = \"\\uEC63\";\n    // U+EC64  Right-pointing arrow for metric modulation\n    Glyphs[\"metricModulationArrowRight\"] = \"\\uEC64\";\n    // U+EC61  Do not copy\n    Glyphs[\"miscDoNotCopy\"] = \"\\uEC61\";\n    // U+EC60  Do not photocopy\n    Glyphs[\"miscDoNotPhotocopy\"] = \"\\uEC60\";\n    // U+EC62  Eyeglasses\n    Glyphs[\"miscEyeglasses\"] = \"\\uEC62\";\n    // U+E1E6  1024th note (semihemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"note1024thDown\"] = \"\\uE1E6\";\n    // U+E1E5  1024th note (semihemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"note1024thUp\"] = \"\\uE1E5\";\n    // U+E1E0  128th note (semihemidemisemiquaver) stem down\n    Glyphs[\"note128thDown\"] = \"\\uE1E0\";\n    // U+E1DF  128th note (semihemidemisemiquaver) stem up\n    Glyphs[\"note128thUp\"] = \"\\uE1DF\";\n    // U+1D164  128th note (semihemidemisemiquaver) stem up\n    Glyphs[\"note128thUpAlternate\"] = \"\\uD834\\uDD64\";\n    // U+E1DA  16th note (semiquaver) stem down\n    Glyphs[\"note16thDown\"] = \"\\uE1DA\";\n    // U+E1D9  16th note (semiquaver) stem up\n    Glyphs[\"note16thUp\"] = \"\\uE1D9\";\n    // U+1D161  16th note (semiquaver) stem up\n    Glyphs[\"note16thUpAlternate\"] = \"\\uD834\\uDD61\";\n    // U+E1E2  256th note (demisemihemidemisemiquaver) stem down\n    Glyphs[\"note256thDown\"] = \"\\uE1E2\";\n    // U+E1E1  256th note (demisemihemidemisemiquaver) stem up\n    Glyphs[\"note256thUp\"] = \"\\uE1E1\";\n    // U+E1DC  32nd note (demisemiquaver) stem down\n    Glyphs[\"note32ndDown\"] = \"\\uE1DC\";\n    // U+E1DB  32nd note (demisemiquaver) stem up\n    Glyphs[\"note32ndUp\"] = \"\\uE1DB\";\n    // U+1D162  32nd note (demisemiquaver) stem up\n    Glyphs[\"note32ndUpAlternate\"] = \"\\uD834\\uDD62\";\n    // U+E1E4  512th note (hemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"note512thDown\"] = \"\\uE1E4\";\n    // U+E1E3  512th note (hemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"note512thUp\"] = \"\\uE1E3\";\n    // U+E1DE  64th note (hemidemisemiquaver) stem down\n    Glyphs[\"note64thDown\"] = \"\\uE1DE\";\n    // U+E1DD  64th note (hemidemisemiquaver) stem up\n    Glyphs[\"note64thUp\"] = \"\\uE1DD\";\n    // U+1D163  64th note (hemidemisemiquaver) stem up\n    Glyphs[\"note64thUpAlternate\"] = \"\\uD834\\uDD63\";\n    // U+E1D8  Eighth note (quaver) stem down\n    Glyphs[\"note8thDown\"] = \"\\uE1D8\";\n    // U+E1D7  Eighth note (quaver) stem up\n    Glyphs[\"note8thUp\"] = \"\\uE1D7\";\n    // U+1D160  Eighth note (quaver) stem up\n    Glyphs[\"note8thUpAlternate\"] = \"\\uD834\\uDD60\";\n    // U+E197  A (black note)\n    Glyphs[\"noteABlack\"] = \"\\uE197\";\n    // U+E196  A flat (black note)\n    Glyphs[\"noteAFlatBlack\"] = \"\\uE196\";\n    // U+E17F  A flat (half note)\n    Glyphs[\"noteAFlatHalf\"] = \"\\uE17F\";\n    // U+E168  A flat (whole note)\n    Glyphs[\"noteAFlatWhole\"] = \"\\uE168\";\n    // U+E180  A (half note)\n    Glyphs[\"noteAHalf\"] = \"\\uE180\";\n    // U+E198  A sharp (black note)\n    Glyphs[\"noteASharpBlack\"] = \"\\uE198\";\n    // U+E181  A sharp (half note)\n    Glyphs[\"noteASharpHalf\"] = \"\\uE181\";\n    // U+E16A  A sharp (whole note)\n    Glyphs[\"noteASharpWhole\"] = \"\\uE16A\";\n    // U+E169  A (whole note)\n    Glyphs[\"noteAWhole\"] = \"\\uE169\";\n    // U+E19A  B (black note)\n    Glyphs[\"noteBBlack\"] = \"\\uE19A\";\n    // U+E199  B flat (black note)\n    Glyphs[\"noteBFlatBlack\"] = \"\\uE199\";\n    // U+E182  B flat (half note)\n    Glyphs[\"noteBFlatHalf\"] = \"\\uE182\";\n    // U+E16B  B flat (whole note)\n    Glyphs[\"noteBFlatWhole\"] = \"\\uE16B\";\n    // U+E183  B (half note)\n    Glyphs[\"noteBHalf\"] = \"\\uE183\";\n    // U+E19B  B sharp (black note)\n    Glyphs[\"noteBSharpBlack\"] = \"\\uE19B\";\n    // U+E184  B sharp (half note)\n    Glyphs[\"noteBSharpHalf\"] = \"\\uE184\";\n    // U+E16D  B sharp (whole note)\n    Glyphs[\"noteBSharpWhole\"] = \"\\uE16D\";\n    // U+E16C  B (whole note)\n    Glyphs[\"noteBWhole\"] = \"\\uE16C\";\n    // U+E19D  C (black note)\n    Glyphs[\"noteCBlack\"] = \"\\uE19D\";\n    // U+E19C  C flat (black note)\n    Glyphs[\"noteCFlatBlack\"] = \"\\uE19C\";\n    // U+E185  C flat (half note)\n    Glyphs[\"noteCFlatHalf\"] = \"\\uE185\";\n    // U+E16E  C flat (whole note)\n    Glyphs[\"noteCFlatWhole\"] = \"\\uE16E\";\n    // U+E186  C (half note)\n    Glyphs[\"noteCHalf\"] = \"\\uE186\";\n    // U+E19E  C sharp (black note)\n    Glyphs[\"noteCSharpBlack\"] = \"\\uE19E\";\n    // U+E187  C sharp (half note)\n    Glyphs[\"noteCSharpHalf\"] = \"\\uE187\";\n    // U+E170  C sharp (whole note)\n    Glyphs[\"noteCSharpWhole\"] = \"\\uE170\";\n    // U+E16F  C (whole note)\n    Glyphs[\"noteCWhole\"] = \"\\uE16F\";\n    // U+E1A0  D (black note)\n    Glyphs[\"noteDBlack\"] = \"\\uE1A0\";\n    // U+E19F  D flat (black note)\n    Glyphs[\"noteDFlatBlack\"] = \"\\uE19F\";\n    // U+E188  D flat (half note)\n    Glyphs[\"noteDFlatHalf\"] = \"\\uE188\";\n    // U+E171  D flat (whole note)\n    Glyphs[\"noteDFlatWhole\"] = \"\\uE171\";\n    // U+E189  D (half note)\n    Glyphs[\"noteDHalf\"] = \"\\uE189\";\n    // U+E1A1  D sharp (black note)\n    Glyphs[\"noteDSharpBlack\"] = \"\\uE1A1\";\n    // U+E18A  D sharp (half note)\n    Glyphs[\"noteDSharpHalf\"] = \"\\uE18A\";\n    // U+E173  D sharp (whole note)\n    Glyphs[\"noteDSharpWhole\"] = \"\\uE173\";\n    // U+E172  D (whole note)\n    Glyphs[\"noteDWhole\"] = \"\\uE172\";\n    // U+EEF2  Di (black note)\n    Glyphs[\"noteDiBlack\"] = \"\\uEEF2\";\n    // U+EEE9  Di (half note)\n    Glyphs[\"noteDiHalf\"] = \"\\uEEE9\";\n    // U+EEE0  Di (whole note)\n    Glyphs[\"noteDiWhole\"] = \"\\uEEE0\";\n    // U+E160  Do (black note)\n    Glyphs[\"noteDoBlack\"] = \"\\uE160\";\n    // U+E158  Do (half note)\n    Glyphs[\"noteDoHalf\"] = \"\\uE158\";\n    // U+E150  Do (whole note)\n    Glyphs[\"noteDoWhole\"] = \"\\uE150\";\n    // U+E1D0  Double whole note (breve)\n    Glyphs[\"noteDoubleWhole\"] = \"\\uE1D0\";\n    // U+1D15C  Double whole note (breve)\n    Glyphs[\"noteDoubleWholeAlternate\"] = \"\\uD834\\uDD5C\";\n    // U+E1D1  Double whole note (square)\n    Glyphs[\"noteDoubleWholeSquare\"] = \"\\uE1D1\";\n    // U+E1A3  E (black note)\n    Glyphs[\"noteEBlack\"] = \"\\uE1A3\";\n    // U+E1A2  E flat (black note)\n    Glyphs[\"noteEFlatBlack\"] = \"\\uE1A2\";\n    // U+E18B  E flat (half note)\n    Glyphs[\"noteEFlatHalf\"] = \"\\uE18B\";\n    // U+E174  E flat (whole note)\n    Glyphs[\"noteEFlatWhole\"] = \"\\uE174\";\n    // U+E18C  E (half note)\n    Glyphs[\"noteEHalf\"] = \"\\uE18C\";\n    // U+E1A4  E sharp (black note)\n    Glyphs[\"noteESharpBlack\"] = \"\\uE1A4\";\n    // U+E18D  E sharp (half note)\n    Glyphs[\"noteESharpHalf\"] = \"\\uE18D\";\n    // U+E176  E sharp (whole note)\n    Glyphs[\"noteESharpWhole\"] = \"\\uE176\";\n    // U+E175  E (whole note)\n    Glyphs[\"noteEWhole\"] = \"\\uE175\";\n    // U+E1AF  Empty black note\n    Glyphs[\"noteEmptyBlack\"] = \"\\uE1AF\";\n    // U+E1AE  Empty half note\n    Glyphs[\"noteEmptyHalf\"] = \"\\uE1AE\";\n    // U+E1AD  Empty whole note\n    Glyphs[\"noteEmptyWhole\"] = \"\\uE1AD\";\n    // U+E1A6  F (black note)\n    Glyphs[\"noteFBlack\"] = \"\\uE1A6\";\n    // U+E1A5  F flat (black note)\n    Glyphs[\"noteFFlatBlack\"] = \"\\uE1A5\";\n    // U+E18E  F flat (half note)\n    Glyphs[\"noteFFlatHalf\"] = \"\\uE18E\";\n    // U+E177  F flat (whole note)\n    Glyphs[\"noteFFlatWhole\"] = \"\\uE177\";\n    // U+E18F  F (half note)\n    Glyphs[\"noteFHalf\"] = \"\\uE18F\";\n    // U+E1A7  F sharp (black note)\n    Glyphs[\"noteFSharpBlack\"] = \"\\uE1A7\";\n    // U+E190  F sharp (half note)\n    Glyphs[\"noteFSharpHalf\"] = \"\\uE190\";\n    // U+E179  F sharp (whole note)\n    Glyphs[\"noteFSharpWhole\"] = \"\\uE179\";\n    // U+E178  F (whole note)\n    Glyphs[\"noteFWhole\"] = \"\\uE178\";\n    // U+E163  Fa (black note)\n    Glyphs[\"noteFaBlack\"] = \"\\uE163\";\n    // U+E15B  Fa (half note)\n    Glyphs[\"noteFaHalf\"] = \"\\uE15B\";\n    // U+E153  Fa (whole note)\n    Glyphs[\"noteFaWhole\"] = \"\\uE153\";\n    // U+EEF6  Fi (black note)\n    Glyphs[\"noteFiBlack\"] = \"\\uEEF6\";\n    // U+EEED  Fi (half note)\n    Glyphs[\"noteFiHalf\"] = \"\\uEEED\";\n    // U+EEE4  Fi (whole note)\n    Glyphs[\"noteFiWhole\"] = \"\\uEEE4\";\n    // U+E1A9  G (black note)\n    Glyphs[\"noteGBlack\"] = \"\\uE1A9\";\n    // U+E1A8  G flat (black note)\n    Glyphs[\"noteGFlatBlack\"] = \"\\uE1A8\";\n    // U+E191  G flat (half note)\n    Glyphs[\"noteGFlatHalf\"] = \"\\uE191\";\n    // U+E17A  G flat (whole note)\n    Glyphs[\"noteGFlatWhole\"] = \"\\uE17A\";\n    // U+E192  G (half note)\n    Glyphs[\"noteGHalf\"] = \"\\uE192\";\n    // U+E1AA  G sharp (black note)\n    Glyphs[\"noteGSharpBlack\"] = \"\\uE1AA\";\n    // U+E193  G sharp (half note)\n    Glyphs[\"noteGSharpHalf\"] = \"\\uE193\";\n    // U+E17C  G sharp (whole note)\n    Glyphs[\"noteGSharpWhole\"] = \"\\uE17C\";\n    // U+E17B  G (whole note)\n    Glyphs[\"noteGWhole\"] = \"\\uE17B\";\n    // U+E1AB  H (black note)\n    Glyphs[\"noteHBlack\"] = \"\\uE1AB\";\n    // U+E194  H (half note)\n    Glyphs[\"noteHHalf\"] = \"\\uE194\";\n    // U+E1AC  H sharp (black note)\n    Glyphs[\"noteHSharpBlack\"] = \"\\uE1AC\";\n    // U+E195  H sharp (half note)\n    Glyphs[\"noteHSharpHalf\"] = \"\\uE195\";\n    // U+E17E  H sharp (whole note)\n    Glyphs[\"noteHSharpWhole\"] = \"\\uE17E\";\n    // U+E17D  H (whole note)\n    Glyphs[\"noteHWhole\"] = \"\\uE17D\";\n    // U+E1D4  Half note (minim) stem down\n    Glyphs[\"noteHalfDown\"] = \"\\uE1D4\";\n    // U+E1D3  Half note (minim) stem up\n    Glyphs[\"noteHalfUp\"] = \"\\uE1D3\";\n    // U+1D15E  Half note (minim) stem up\n    Glyphs[\"noteHalfUpAlternate\"] = \"\\uD834\\uDD5E\";\n    // U+E165  La (black note)\n    Glyphs[\"noteLaBlack\"] = \"\\uE165\";\n    // U+E15D  La (half note)\n    Glyphs[\"noteLaHalf\"] = \"\\uE15D\";\n    // U+E155  La (whole note)\n    Glyphs[\"noteLaWhole\"] = \"\\uE155\";\n    // U+EEF9  Le (black note)\n    Glyphs[\"noteLeBlack\"] = \"\\uEEF9\";\n    // U+EEF0  Le (half note)\n    Glyphs[\"noteLeHalf\"] = \"\\uEEF0\";\n    // U+EEE7  Le (whole note)\n    Glyphs[\"noteLeWhole\"] = \"\\uEEE7\";\n    // U+EEF8  Li (black note)\n    Glyphs[\"noteLiBlack\"] = \"\\uEEF8\";\n    // U+EEEF  Li (half note)\n    Glyphs[\"noteLiHalf\"] = \"\\uEEEF\";\n    // U+EEE6  Li (whole note)\n    Glyphs[\"noteLiWhole\"] = \"\\uEEE6\";\n    // U+EEF5  Me (black note)\n    Glyphs[\"noteMeBlack\"] = \"\\uEEF5\";\n    // U+EEEC  Me (half note)\n    Glyphs[\"noteMeHalf\"] = \"\\uEEEC\";\n    // U+EEE3  Me (whole note)\n    Glyphs[\"noteMeWhole\"] = \"\\uEEE3\";\n    // U+E162  Mi (black note)\n    Glyphs[\"noteMiBlack\"] = \"\\uE162\";\n    // U+E15A  Mi (half note)\n    Glyphs[\"noteMiHalf\"] = \"\\uE15A\";\n    // U+E152  Mi (whole note)\n    Glyphs[\"noteMiWhole\"] = \"\\uE152\";\n    // U+E1D6  Quarter note (crotchet) stem down\n    Glyphs[\"noteQuarterDown\"] = \"\\uE1D6\";\n    // U+E1D5  Quarter note (crotchet) stem up\n    Glyphs[\"noteQuarterUp\"] = \"\\uE1D5\";\n    // U+1D15F  Quarter note (crotchet) stem up\n    Glyphs[\"noteQuarterUpAlternate\"] = \"\\uD834\\uDD5F\";\n    // U+EEF4  Ra (black note)\n    Glyphs[\"noteRaBlack\"] = \"\\uEEF4\";\n    // U+EEEB  Ra (half note)\n    Glyphs[\"noteRaHalf\"] = \"\\uEEEB\";\n    // U+EEE2  Ra (whole note)\n    Glyphs[\"noteRaWhole\"] = \"\\uEEE2\";\n    // U+E161  Re (black note)\n    Glyphs[\"noteReBlack\"] = \"\\uE161\";\n    // U+E159  Re (half note)\n    Glyphs[\"noteReHalf\"] = \"\\uE159\";\n    // U+E151  Re (whole note)\n    Glyphs[\"noteReWhole\"] = \"\\uE151\";\n    // U+EEF3  Ri (black note)\n    Glyphs[\"noteRiBlack\"] = \"\\uEEF3\";\n    // U+EEEA  Ri (half note)\n    Glyphs[\"noteRiHalf\"] = \"\\uEEEA\";\n    // U+EEE1  Ri (whole note)\n    Glyphs[\"noteRiWhole\"] = \"\\uEEE1\";\n    // U+EEF7  Se (black note)\n    Glyphs[\"noteSeBlack\"] = \"\\uEEF7\";\n    // U+EEEE  Se (half note)\n    Glyphs[\"noteSeHalf\"] = \"\\uEEEE\";\n    // U+EEE5  Se (whole note)\n    Glyphs[\"noteSeWhole\"] = \"\\uEEE5\";\n    // U+E1C9  Arrowhead left black (Funk 7-shape re)\n    Glyphs[\"noteShapeArrowheadLeftBlack\"] = \"\\uE1C9\";\n    // U+ECDC  Arrowhead left double whole (Funk 7-shape re)\n    Glyphs[\"noteShapeArrowheadLeftDoubleWhole\"] = \"\\uECDC\";\n    // U+E1C8  Arrowhead left white (Funk 7-shape re)\n    Glyphs[\"noteShapeArrowheadLeftWhite\"] = \"\\uE1C8\";\n    // U+E1B9  Diamond black (4-shape mi; 7-shape mi)\n    Glyphs[\"noteShapeDiamondBlack\"] = \"\\uE1B9\";\n    // U+ECD4  Diamond double whole (4-shape mi; 7-shape mi)\n    Glyphs[\"noteShapeDiamondDoubleWhole\"] = \"\\uECD4\";\n    // U+E1B8  Diamond white (4-shape mi; 7-shape mi)\n    Glyphs[\"noteShapeDiamondWhite\"] = \"\\uE1B8\";\n    // U+E1C5  Isosceles triangle black (Walker 7-shape ti)\n    Glyphs[\"noteShapeIsoscelesTriangleBlack\"] = \"\\uE1C5\";\n    // U+ECDA  Isosceles triangle double whole (Walker 7-shape ti)\n    Glyphs[\"noteShapeIsoscelesTriangleDoubleWhole\"] = \"\\uECDA\";\n    // U+E1C4  Isosceles triangle white (Walker 7-shape ti)\n    Glyphs[\"noteShapeIsoscelesTriangleWhite\"] = \"\\uE1C4\";\n    // U+E1C1  Inverted keystone black (Walker 7-shape do)\n    Glyphs[\"noteShapeKeystoneBlack\"] = \"\\uE1C1\";\n    // U+ECD8  Inverted keystone double whole (Walker 7-shape do)\n    Glyphs[\"noteShapeKeystoneDoubleWhole\"] = \"\\uECD8\";\n    // U+E1C0  Inverted keystone white (Walker 7-shape do)\n    Glyphs[\"noteShapeKeystoneWhite\"] = \"\\uE1C0\";\n    // U+E1BD  Moon black (Aikin 7-shape re)\n    Glyphs[\"noteShapeMoonBlack\"] = \"\\uE1BD\";\n    // U+ECD6  Moon double whole (Aikin 7-shape re)\n    Glyphs[\"noteShapeMoonDoubleWhole\"] = \"\\uECD6\";\n    // U+E1C7  Moon left black (Funk 7-shape do)\n    Glyphs[\"noteShapeMoonLeftBlack\"] = \"\\uE1C7\";\n    // U+ECDB  Moon left double whole (Funk 7-shape do)\n    Glyphs[\"noteShapeMoonLeftDoubleWhole\"] = \"\\uECDB\";\n    // U+E1C6  Moon left white (Funk 7-shape do)\n    Glyphs[\"noteShapeMoonLeftWhite\"] = \"\\uE1C6\";\n    // U+E1BC  Moon white (Aikin 7-shape re)\n    Glyphs[\"noteShapeMoonWhite\"] = \"\\uE1BC\";\n    // U+E1C3  Quarter moon black (Walker 7-shape re)\n    Glyphs[\"noteShapeQuarterMoonBlack\"] = \"\\uE1C3\";\n    // U+ECD9  Quarter moon double whole (Walker 7-shape re)\n    Glyphs[\"noteShapeQuarterMoonDoubleWhole\"] = \"\\uECD9\";\n    // U+E1C2  Quarter moon white (Walker 7-shape re)\n    Glyphs[\"noteShapeQuarterMoonWhite\"] = \"\\uE1C2\";\n    // U+E1B1  Round black (4-shape sol; 7-shape so)\n    Glyphs[\"noteShapeRoundBlack\"] = \"\\uE1B1\";\n    // U+ECD0  Round double whole (4-shape sol; 7-shape so)\n    Glyphs[\"noteShapeRoundDoubleWhole\"] = \"\\uECD0\";\n    // U+E1B0  Round white (4-shape sol; 7-shape so)\n    Glyphs[\"noteShapeRoundWhite\"] = \"\\uE1B0\";\n    // U+E1B3  Square black (4-shape la; Aikin 7-shape la)\n    Glyphs[\"noteShapeSquareBlack\"] = \"\\uE1B3\";\n    // U+ECD1  Square double whole (4-shape la; Aikin 7-shape la)\n    Glyphs[\"noteShapeSquareDoubleWhole\"] = \"\\uECD1\";\n    // U+E1B2  Square white (4-shape la; Aikin 7-shape la)\n    Glyphs[\"noteShapeSquareWhite\"] = \"\\uE1B2\";\n    // U+E1B7  Triangle left black (stem up; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleLeftBlack\"] = \"\\uE1B7\";\n    // U+ECD3  Triangle left double whole (stem up; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleLeftDoubleWhole\"] = \"\\uECD3\";\n    // U+E1B6  Triangle left white (stem up; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleLeftWhite\"] = \"\\uE1B6\";\n    // U+E1B5  Triangle right black (stem down; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleRightBlack\"] = \"\\uE1B5\";\n    // U+ECD2  Triangle right double whole (stem down; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleRightDoubleWhole\"] = \"\\uECD2\";\n    // U+E1B4  Triangle right white (stem down; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleRightWhite\"] = \"\\uE1B4\";\n    // U+E1BF  Triangle-round black (Aikin 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundBlack\"] = \"\\uE1BF\";\n    // U+ECD7  Triangle-round white (Aikin 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundDoubleWhole\"] = \"\\uECD7\";\n    // U+E1CB  Triangle-round left black (Funk 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundLeftBlack\"] = \"\\uE1CB\";\n    // U+ECDD  Triangle-round left double whole (Funk 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundLeftDoubleWhole\"] = \"\\uECDD\";\n    // U+E1CA  Triangle-round left white (Funk 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundLeftWhite\"] = \"\\uE1CA\";\n    // U+E1BE  Triangle-round white (Aikin 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundWhite\"] = \"\\uE1BE\";\n    // U+E1BB  Triangle up black (Aikin 7-shape do)\n    Glyphs[\"noteShapeTriangleUpBlack\"] = \"\\uE1BB\";\n    // U+ECD5  Triangle up double whole (Aikin 7-shape do)\n    Glyphs[\"noteShapeTriangleUpDoubleWhole\"] = \"\\uECD5\";\n    // U+E1BA  Triangle up white (Aikin 7-shape do)\n    Glyphs[\"noteShapeTriangleUpWhite\"] = \"\\uE1BA\";\n    // U+E167  Si (black note)\n    Glyphs[\"noteSiBlack\"] = \"\\uE167\";\n    // U+E15F  Si (half note)\n    Glyphs[\"noteSiHalf\"] = \"\\uE15F\";\n    // U+E157  Si (whole note)\n    Glyphs[\"noteSiWhole\"] = \"\\uE157\";\n    // U+E164  So (black note)\n    Glyphs[\"noteSoBlack\"] = \"\\uE164\";\n    // U+E15C  So (half note)\n    Glyphs[\"noteSoHalf\"] = \"\\uE15C\";\n    // U+E154  So (whole note)\n    Glyphs[\"noteSoWhole\"] = \"\\uE154\";\n    // U+EEFA  Te (black note)\n    Glyphs[\"noteTeBlack\"] = \"\\uEEFA\";\n    // U+EEF1  Te (half note)\n    Glyphs[\"noteTeHalf\"] = \"\\uEEF1\";\n    // U+EEE8  Te (whole note)\n    Glyphs[\"noteTeWhole\"] = \"\\uEEE8\";\n    // U+E166  Ti (black note)\n    Glyphs[\"noteTiBlack\"] = \"\\uE166\";\n    // U+E15E  Ti (half note)\n    Glyphs[\"noteTiHalf\"] = \"\\uE15E\";\n    // U+E156  Ti (whole note)\n    Glyphs[\"noteTiWhole\"] = \"\\uE156\";\n    // U+E1D2  Whole note (semibreve)\n    Glyphs[\"noteWhole\"] = \"\\uE1D2\";\n    // U+1D15D  Whole note (semibreve)\n    Glyphs[\"noteWholeAlternate\"] = \"\\uD834\\uDD5D\";\n    // U+E0A4  Black notehead\n    Glyphs[\"noteheadBlack\"] = \"\\uE0A4\";\n    // U+1D158  Black notehead\n    Glyphs[\"noteheadBlackAlternate\"] = \"\\uD834\\uDD58\";\n    // U+E0F7  Circle slash notehead\n    Glyphs[\"noteheadCircleSlash\"] = \"\\uE0F7\";\n    // U+E0B3  Circle X notehead\n    Glyphs[\"noteheadCircleX\"] = \"\\uE0B3\";\n    // U+1D145  Circle X notehead\n    Glyphs[\"noteheadCircleXAlternate\"] = \"\\uD834\\uDD45\";\n    // U+E0B0  Circle X double whole\n    Glyphs[\"noteheadCircleXDoubleWhole\"] = \"\\uE0B0\";\n    // U+E0B2  Circle X half\n    Glyphs[\"noteheadCircleXHalf\"] = \"\\uE0B2\";\n    // U+E0B1  Circle X whole\n    Glyphs[\"noteheadCircleXWhole\"] = \"\\uE0B1\";\n    // U+E0E4  Circled black notehead\n    Glyphs[\"noteheadCircledBlack\"] = \"\\uE0E4\";\n    // U+E0E8  Black notehead in large circle\n    Glyphs[\"noteheadCircledBlackLarge\"] = \"\\uE0E8\";\n    // U+E0E7  Circled double whole notehead\n    Glyphs[\"noteheadCircledDoubleWhole\"] = \"\\uE0E7\";\n    // U+E0EB  Double whole notehead in large circle\n    Glyphs[\"noteheadCircledDoubleWholeLarge\"] = \"\\uE0EB\";\n    // U+E0E5  Circled half notehead\n    Glyphs[\"noteheadCircledHalf\"] = \"\\uE0E5\";\n    // U+E0E9  Half notehead in large circle\n    Glyphs[\"noteheadCircledHalfLarge\"] = \"\\uE0E9\";\n    // U+E0E6  Circled whole notehead\n    Glyphs[\"noteheadCircledWhole\"] = \"\\uE0E6\";\n    // U+E0EA  Whole notehead in large circle\n    Glyphs[\"noteheadCircledWholeLarge\"] = \"\\uE0EA\";\n    // U+E0EC  Cross notehead in large circle\n    Glyphs[\"noteheadCircledXLarge\"] = \"\\uE0EC\";\n    // U+E124  Double whole note cluster, 2nd\n    Glyphs[\"noteheadClusterDoubleWhole2nd\"] = \"\\uE124\";\n    // U+E128  Double whole note cluster, 3rd\n    Glyphs[\"noteheadClusterDoubleWhole3rd\"] = \"\\uE128\";\n    // U+E12E  Combining double whole note cluster, bottom\n    Glyphs[\"noteheadClusterDoubleWholeBottom\"] = \"\\uE12E\";\n    // U+E12D  Combining double whole note cluster, middle\n    Glyphs[\"noteheadClusterDoubleWholeMiddle\"] = \"\\uE12D\";\n    // U+E12C  Combining double whole note cluster, top\n    Glyphs[\"noteheadClusterDoubleWholeTop\"] = \"\\uE12C\";\n    // U+E126  Half note cluster, 2nd\n    Glyphs[\"noteheadClusterHalf2nd\"] = \"\\uE126\";\n    // U+E12A  Half note cluster, 3rd\n    Glyphs[\"noteheadClusterHalf3rd\"] = \"\\uE12A\";\n    // U+E134  Combining half note cluster, bottom\n    Glyphs[\"noteheadClusterHalfBottom\"] = \"\\uE134\";\n    // U+E133  Combining half note cluster, middle\n    Glyphs[\"noteheadClusterHalfMiddle\"] = \"\\uE133\";\n    // U+E132  Combining half note cluster, top\n    Glyphs[\"noteheadClusterHalfTop\"] = \"\\uE132\";\n    // U+E127  Quarter note cluster, 2nd\n    Glyphs[\"noteheadClusterQuarter2nd\"] = \"\\uE127\";\n    // U+E12B  Quarter note cluster, 3rd\n    Glyphs[\"noteheadClusterQuarter3rd\"] = \"\\uE12B\";\n    // U+E137  Combining quarter note cluster, bottom\n    Glyphs[\"noteheadClusterQuarterBottom\"] = \"\\uE137\";\n    // U+E136  Combining quarter note cluster, middle\n    Glyphs[\"noteheadClusterQuarterMiddle\"] = \"\\uE136\";\n    // U+E135  Combining quarter note cluster, top\n    Glyphs[\"noteheadClusterQuarterTop\"] = \"\\uE135\";\n    // U+E123  Cluster notehead black (round)\n    Glyphs[\"noteheadClusterRoundBlack\"] = \"\\uE123\";\n    // U+E122  Cluster notehead white (round)\n    Glyphs[\"noteheadClusterRoundWhite\"] = \"\\uE122\";\n    // U+E121  Cluster notehead black (square)\n    Glyphs[\"noteheadClusterSquareBlack\"] = \"\\uE121\";\n    // U+1D15B  Cluster notehead black (square)\n    Glyphs[\"noteheadClusterSquareBlackAlternate\"] = \"\\uD834\\uDD5B\";\n    // U+E120  Cluster notehead white (square)\n    Glyphs[\"noteheadClusterSquareWhite\"] = \"\\uE120\";\n    // U+1D15A  Cluster notehead white (square)\n    Glyphs[\"noteheadClusterSquareWhiteAlternate\"] = \"\\uD834\\uDD5A\";\n    // U+E125  Whole note cluster, 2nd\n    Glyphs[\"noteheadClusterWhole2nd\"] = \"\\uE125\";\n    // U+E129  Whole note cluster, 3rd\n    Glyphs[\"noteheadClusterWhole3rd\"] = \"\\uE129\";\n    // U+E131  Combining whole note cluster, bottom\n    Glyphs[\"noteheadClusterWholeBottom\"] = \"\\uE131\";\n    // U+E130  Combining whole note cluster, middle\n    Glyphs[\"noteheadClusterWholeMiddle\"] = \"\\uE130\";\n    // U+E12F  Combining whole note cluster, top\n    Glyphs[\"noteheadClusterWholeTop\"] = \"\\uE12F\";\n    // U+EEAE  4/11 note (eleventh note series, Cowell)\n    Glyphs[\"noteheadCowellEleventhNoteSeriesHalf\"] = \"\\uEEAE\";\n    // U+EEAD  8/11 note (eleventh note series, Cowell)\n    Glyphs[\"noteheadCowellEleventhNoteSeriesWhole\"] = \"\\uEEAD\";\n    // U+EEAF  2/11 note (eleventh note series, Cowell)\n    Glyphs[\"noteheadCowellEleventhSeriesBlack\"] = \"\\uEEAF\";\n    // U+EEB5  2/15 note (fifteenth note series, Cowell)\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesBlack\"] = \"\\uEEB5\";\n    // U+EEB4  4/15 note (fifteenth note series, Cowell)\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesHalf\"] = \"\\uEEB4\";\n    // U+EEB3  8/15 note (fifteenth note series, Cowell)\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesWhole\"] = \"\\uEEB3\";\n    // U+EEA6  1/5 note (fifth note series, Cowell)\n    Glyphs[\"noteheadCowellFifthNoteSeriesBlack\"] = \"\\uEEA6\";\n    // U+EEA5  2/5 note (fifth note series, Cowell)\n    Glyphs[\"noteheadCowellFifthNoteSeriesHalf\"] = \"\\uEEA5\";\n    // U+EEA4  4/5 note (fifth note series, Cowell)\n    Glyphs[\"noteheadCowellFifthNoteSeriesWhole\"] = \"\\uEEA4\";\n    // U+EEAC  2/9 note (ninth note series, Cowell)\n    Glyphs[\"noteheadCowellNinthNoteSeriesBlack\"] = \"\\uEEAC\";\n    // U+EEAB  4/9 note (ninth note series, Cowell)\n    Glyphs[\"noteheadCowellNinthNoteSeriesHalf\"] = \"\\uEEAB\";\n    // U+EEAA  8/9 note (ninth note series, Cowell)\n    Glyphs[\"noteheadCowellNinthNoteSeriesWhole\"] = \"\\uEEAA\";\n    // U+EEA9  1/7 note (seventh note series, Cowell)\n    Glyphs[\"noteheadCowellSeventhNoteSeriesBlack\"] = \"\\uEEA9\";\n    // U+EEA8  2/7 note (seventh note series, Cowell)\n    Glyphs[\"noteheadCowellSeventhNoteSeriesHalf\"] = \"\\uEEA8\";\n    // U+EEA7  4/7 note (seventh note series, Cowell)\n    Glyphs[\"noteheadCowellSeventhNoteSeriesWhole\"] = \"\\uEEA7\";\n    // U+EEA3  1/6 note (third note series, Cowell)\n    Glyphs[\"noteheadCowellThirdNoteSeriesBlack\"] = \"\\uEEA3\";\n    // U+EEA2  1/3 note (third note series, Cowell)\n    Glyphs[\"noteheadCowellThirdNoteSeriesHalf\"] = \"\\uEEA2\";\n    // U+EEA1  2/3 note (third note series, Cowell)\n    Glyphs[\"noteheadCowellThirdNoteSeriesWhole\"] = \"\\uEEA1\";\n    // U+EEB2  2/13 note (thirteenth note series, Cowell)\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesBlack\"] = \"\\uEEB2\";\n    // U+EEB1  4/13 note (thirteenth note series, Cowell)\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesHalf\"] = \"\\uEEB1\";\n    // U+EEB0  8/13 note (thirteenth note series, Cowell)\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesWhole\"] = \"\\uEEB0\";\n    // U+E0DB  Diamond black notehead\n    Glyphs[\"noteheadDiamondBlack\"] = \"\\uE0DB\";\n    // U+E0E2  Diamond black notehead (old)\n    Glyphs[\"noteheadDiamondBlackOld\"] = \"\\uE0E2\";\n    // U+E0DC  Diamond black notehead (wide)\n    Glyphs[\"noteheadDiamondBlackWide\"] = \"\\uE0DC\";\n    // U+E139  Black diamond cluster, 2nd\n    Glyphs[\"noteheadDiamondClusterBlack2nd\"] = \"\\uE139\";\n    // U+E13B  Black diamond cluster, 3rd\n    Glyphs[\"noteheadDiamondClusterBlack3rd\"] = \"\\uE13B\";\n    // U+E141  Combining black diamond cluster, bottom\n    Glyphs[\"noteheadDiamondClusterBlackBottom\"] = \"\\uE141\";\n    // U+E140  Combining black diamond cluster, middle\n    Glyphs[\"noteheadDiamondClusterBlackMiddle\"] = \"\\uE140\";\n    // U+E13F  Combining black diamond cluster, top\n    Glyphs[\"noteheadDiamondClusterBlackTop\"] = \"\\uE13F\";\n    // U+E138  White diamond cluster, 2nd\n    Glyphs[\"noteheadDiamondClusterWhite2nd\"] = \"\\uE138\";\n    // U+E13A  White diamond cluster, 3rd\n    Glyphs[\"noteheadDiamondClusterWhite3rd\"] = \"\\uE13A\";\n    // U+E13E  Combining white diamond cluster, bottom\n    Glyphs[\"noteheadDiamondClusterWhiteBottom\"] = \"\\uE13E\";\n    // U+E13D  Combining white diamond cluster, middle\n    Glyphs[\"noteheadDiamondClusterWhiteMiddle\"] = \"\\uE13D\";\n    // U+E13C  Combining white diamond cluster, top\n    Glyphs[\"noteheadDiamondClusterWhiteTop\"] = \"\\uE13C\";\n    // U+E0D7  Diamond double whole notehead\n    Glyphs[\"noteheadDiamondDoubleWhole\"] = \"\\uE0D7\";\n    // U+E0DF  Diamond double whole notehead (old)\n    Glyphs[\"noteheadDiamondDoubleWholeOld\"] = \"\\uE0DF\";\n    // U+E0D9  Diamond half notehead\n    Glyphs[\"noteheadDiamondHalf\"] = \"\\uE0D9\";\n    // U+E0E3  Half-filled diamond notehead\n    Glyphs[\"noteheadDiamondHalfFilled\"] = \"\\uE0E3\";\n    // U+E0E1  Diamond half notehead (old)\n    Glyphs[\"noteheadDiamondHalfOld\"] = \"\\uE0E1\";\n    // U+E0DA  Diamond half notehead (wide)\n    Glyphs[\"noteheadDiamondHalfWide\"] = \"\\uE0DA\";\n    // U+E0FC  Open diamond notehead\n    Glyphs[\"noteheadDiamondOpen\"] = \"\\uE0FC\";\n    // U+E0DD  Diamond white notehead\n    Glyphs[\"noteheadDiamondWhite\"] = \"\\uE0DD\";\n    // U+E0DE  Diamond white notehead (wide)\n    Glyphs[\"noteheadDiamondWhiteWide\"] = \"\\uE0DE\";\n    // U+E0D8  Diamond whole notehead\n    Glyphs[\"noteheadDiamondWhole\"] = \"\\uE0D8\";\n    // U+E0E0  Diamond whole notehead (old)\n    Glyphs[\"noteheadDiamondWholeOld\"] = \"\\uE0E0\";\n    // U+E0A0  Double whole (breve) notehead\n    Glyphs[\"noteheadDoubleWhole\"] = \"\\uE0A0\";\n    // U+E0A1  Double whole (breve) notehead (square)\n    Glyphs[\"noteheadDoubleWholeSquare\"] = \"\\uE0A1\";\n    // U+E0B4  Double whole notehead with X\n    Glyphs[\"noteheadDoubleWholeWithX\"] = \"\\uE0B4\";\n    // U+E0A3  Half (minim) notehead\n    Glyphs[\"noteheadHalf\"] = \"\\uE0A3\";\n    // U+1D157  Half (minim) notehead\n    Glyphs[\"noteheadHalfAlternate\"] = \"\\uD834\\uDD57\";\n    // U+E0FB  Filled half (minim) notehead\n    Glyphs[\"noteheadHalfFilled\"] = \"\\uE0FB\";\n    // U+E0B6  Half notehead with X\n    Glyphs[\"noteheadHalfWithX\"] = \"\\uE0B6\";\n    // U+E0F8  Heavy X notehead\n    Glyphs[\"noteheadHeavyX\"] = \"\\uE0F8\";\n    // U+E0F9  Heavy X with hat notehead\n    Glyphs[\"noteheadHeavyXHat\"] = \"\\uE0F9\";\n    // U+E0F4  Large arrow down (lowest pitch) black notehead\n    Glyphs[\"noteheadLargeArrowDownBlack\"] = \"\\uE0F4\";\n    // U+E0F1  Large arrow down (lowest pitch) double whole notehead\n    Glyphs[\"noteheadLargeArrowDownDoubleWhole\"] = \"\\uE0F1\";\n    // U+E0F3  Large arrow down (lowest pitch) half notehead\n    Glyphs[\"noteheadLargeArrowDownHalf\"] = \"\\uE0F3\";\n    // U+E0F2  Large arrow down (lowest pitch) whole notehead\n    Glyphs[\"noteheadLargeArrowDownWhole\"] = \"\\uE0F2\";\n    // U+E0F0  Large arrow up (highest pitch) black notehead\n    Glyphs[\"noteheadLargeArrowUpBlack\"] = \"\\uE0F0\";\n    // U+E0ED  Large arrow up (highest pitch) double whole notehead\n    Glyphs[\"noteheadLargeArrowUpDoubleWhole\"] = \"\\uE0ED\";\n    // U+E0EF  Large arrow up (highest pitch) half notehead\n    Glyphs[\"noteheadLargeArrowUpHalf\"] = \"\\uE0EF\";\n    // U+E0EE  Large arrow up (highest pitch) whole notehead\n    Glyphs[\"noteheadLargeArrowUpWhole\"] = \"\\uE0EE\";\n    // U+E0CB  Moon notehead black\n    Glyphs[\"noteheadMoonBlack\"] = \"\\uE0CB\";\n    // U+1D153  Moon notehead black\n    Glyphs[\"noteheadMoonBlackAlternate\"] = \"\\uD834\\uDD53\";\n    // U+E0CA  Moon notehead white\n    Glyphs[\"noteheadMoonWhite\"] = \"\\uE0CA\";\n    // U+1D152  Moon notehead white\n    Glyphs[\"noteheadMoonWhiteAlternate\"] = \"\\uD834\\uDD52\";\n    // U+EEA0  Sine notehead (Nancarrow)\n    Glyphs[\"noteheadNancarrowSine\"] = \"\\uEEA0\";\n    // U+E0A5  Null notehead\n    Glyphs[\"noteheadNull\"] = \"\\uE0A5\";\n    // U+1D159  Null notehead\n    Glyphs[\"noteheadNullAlternate\"] = \"\\uD834\\uDD59\";\n    // U+E0CE  Parenthesis notehead\n    Glyphs[\"noteheadParenthesis\"] = \"\\uE0CE\";\n    // U+1D156  Parenthesis notehead\n    Glyphs[\"noteheadParenthesisAlternate\"] = \"\\uD834\\uDD56\";\n    // U+E0F5  Opening parenthesis\n    Glyphs[\"noteheadParenthesisLeft\"] = \"\\uE0F5\";\n    // U+E0F6  Closing parenthesis\n    Glyphs[\"noteheadParenthesisRight\"] = \"\\uE0F6\";\n    // U+E0AF  Plus notehead black\n    Glyphs[\"noteheadPlusBlack\"] = \"\\uE0AF\";\n    // U+1D144  Plus notehead black\n    Glyphs[\"noteheadPlusBlackAlternate\"] = \"\\uD834\\uDD44\";\n    // U+E0AC  Plus notehead double whole\n    Glyphs[\"noteheadPlusDoubleWhole\"] = \"\\uE0AC\";\n    // U+E0AE  Plus notehead half\n    Glyphs[\"noteheadPlusHalf\"] = \"\\uE0AE\";\n    // U+E0AD  Plus notehead whole\n    Glyphs[\"noteheadPlusWhole\"] = \"\\uE0AD\";\n    // U+E144  Combining black rectangular cluster, bottom\n    Glyphs[\"noteheadRectangularClusterBlackBottom\"] = \"\\uE144\";\n    // U+E143  Combining black rectangular cluster, middle\n    Glyphs[\"noteheadRectangularClusterBlackMiddle\"] = \"\\uE143\";\n    // U+E142  Combining black rectangular cluster, top\n    Glyphs[\"noteheadRectangularClusterBlackTop\"] = \"\\uE142\";\n    // U+E147  Combining white rectangular cluster, bottom\n    Glyphs[\"noteheadRectangularClusterWhiteBottom\"] = \"\\uE147\";\n    // U+E146  Combining white rectangular cluster, middle\n    Glyphs[\"noteheadRectangularClusterWhiteMiddle\"] = \"\\uE146\";\n    // U+E145  Combining white rectangular cluster, top\n    Glyphs[\"noteheadRectangularClusterWhiteTop\"] = \"\\uE145\";\n    // U+E113  Round black notehead\n    Glyphs[\"noteheadRoundBlack\"] = \"\\uE113\";\n    // U+E11C  Round black notehead, double slashed\n    Glyphs[\"noteheadRoundBlackDoubleSlashed\"] = \"\\uE11C\";\n    // U+E110  Large round black notehead\n    Glyphs[\"noteheadRoundBlackLarge\"] = \"\\uE110\";\n    // U+E118  Round black notehead, slashed\n    Glyphs[\"noteheadRoundBlackSlashed\"] = \"\\uE118\";\n    // U+E116  Large round black notehead, slashed\n    Glyphs[\"noteheadRoundBlackSlashedLarge\"] = \"\\uE116\";\n    // U+E114  Round white notehead\n    Glyphs[\"noteheadRoundWhite\"] = \"\\uE114\";\n    // U+E11D  Round white notehead, double slashed\n    Glyphs[\"noteheadRoundWhiteDoubleSlashed\"] = \"\\uE11D\";\n    // U+E111  Large round white notehead\n    Glyphs[\"noteheadRoundWhiteLarge\"] = \"\\uE111\";\n    // U+E119  Round white notehead, slashed\n    Glyphs[\"noteheadRoundWhiteSlashed\"] = \"\\uE119\";\n    // U+E117  Large round white notehead, slashed\n    Glyphs[\"noteheadRoundWhiteSlashedLarge\"] = \"\\uE117\";\n    // U+E115  Round white notehead with dot\n    Glyphs[\"noteheadRoundWhiteWithDot\"] = \"\\uE115\";\n    // U+E112  Large round white notehead with dot\n    Glyphs[\"noteheadRoundWhiteWithDotLarge\"] = \"\\uE112\";\n    // U+E104  Large white diamond\n    Glyphs[\"noteheadSlashDiamondWhite\"] = \"\\uE104\";\n    // U+E101  Slash with horizontal ends\n    Glyphs[\"noteheadSlashHorizontalEnds\"] = \"\\uE101\";\n    // U+1D10D  Slash with horizontal ends\n    Glyphs[\"noteheadSlashHorizontalEndsAlternate\"] = \"\\uD834\\uDD0D\";\n    // U+E108  Muted slash with horizontal ends\n    Glyphs[\"noteheadSlashHorizontalEndsMuted\"] = \"\\uE108\";\n    // U+E100  Slash with vertical ends\n    Glyphs[\"noteheadSlashVerticalEnds\"] = \"\\uE100\";\n    // U+E107  Muted slash with vertical ends\n    Glyphs[\"noteheadSlashVerticalEndsMuted\"] = \"\\uE107\";\n    // U+E105  Small slash with vertical ends\n    Glyphs[\"noteheadSlashVerticalEndsSmall\"] = \"\\uE105\";\n    // U+E10A  White slash double whole\n    Glyphs[\"noteheadSlashWhiteDoubleWhole\"] = \"\\uE10A\";\n    // U+E103  White slash half\n    Glyphs[\"noteheadSlashWhiteHalf\"] = \"\\uE103\";\n    // U+E109  Muted white slash\n    Glyphs[\"noteheadSlashWhiteMuted\"] = \"\\uE109\";\n    // U+E102  White slash whole\n    Glyphs[\"noteheadSlashWhiteWhole\"] = \"\\uE102\";\n    // U+E106  Large X notehead\n    Glyphs[\"noteheadSlashX\"] = \"\\uE106\";\n    // U+E0CF  Slashed black notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedBlack1\"] = \"\\uE0CF\";\n    // U+E0D0  Slashed black notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedBlack2\"] = \"\\uE0D0\";\n    // U+E0D5  Slashed double whole notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedDoubleWhole1\"] = \"\\uE0D5\";\n    // U+E0D6  Slashed double whole notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedDoubleWhole2\"] = \"\\uE0D6\";\n    // U+E0D1  Slashed half notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedHalf1\"] = \"\\uE0D1\";\n    // U+E0D2  Slashed half notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedHalf2\"] = \"\\uE0D2\";\n    // U+E0D3  Slashed whole notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedWhole1\"] = \"\\uE0D3\";\n    // U+E0D4  Slashed whole notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedWhole2\"] = \"\\uE0D4\";\n    // U+E0B9  Square notehead black\n    Glyphs[\"noteheadSquareBlack\"] = \"\\uE0B9\";\n    // U+1D147  Square notehead black\n    Glyphs[\"noteheadSquareBlackAlternate\"] = \"\\uD834\\uDD47\";\n    // U+E11A  Large square black notehead\n    Glyphs[\"noteheadSquareBlackLarge\"] = \"\\uE11A\";\n    // U+E11B  Large square white notehead\n    Glyphs[\"noteheadSquareBlackWhite\"] = \"\\uE11B\";\n    // U+E0B8  Square notehead white\n    Glyphs[\"noteheadSquareWhite\"] = \"\\uE0B8\";\n    // U+1D146  Square notehead white\n    Glyphs[\"noteheadSquareWhiteAlternate\"] = \"\\uD834\\uDD46\";\n    // U+E0C7  Triangle notehead down black\n    Glyphs[\"noteheadTriangleDownBlack\"] = \"\\uE0C7\";\n    // U+1D14F  Triangle notehead down black\n    Glyphs[\"noteheadTriangleDownBlackAlternate\"] = \"\\uD834\\uDD4F\";\n    // U+E0C3  Triangle notehead down double whole\n    Glyphs[\"noteheadTriangleDownDoubleWhole\"] = \"\\uE0C3\";\n    // U+E0C5  Triangle notehead down half\n    Glyphs[\"noteheadTriangleDownHalf\"] = \"\\uE0C5\";\n    // U+E0C6  Triangle notehead down white\n    Glyphs[\"noteheadTriangleDownWhite\"] = \"\\uE0C6\";\n    // U+1D14E  Triangle notehead down white\n    Glyphs[\"noteheadTriangleDownWhiteAlternate\"] = \"\\uD834\\uDD4E\";\n    // U+E0C4  Triangle notehead down whole\n    Glyphs[\"noteheadTriangleDownWhole\"] = \"\\uE0C4\";\n    // U+E0C0  Triangle notehead left black\n    Glyphs[\"noteheadTriangleLeftBlack\"] = \"\\uE0C0\";\n    // U+1D14B  Triangle notehead left black\n    Glyphs[\"noteheadTriangleLeftBlackAlternate\"] = \"\\uD834\\uDD4B\";\n    // U+E0BF  Triangle notehead left white\n    Glyphs[\"noteheadTriangleLeftWhite\"] = \"\\uE0BF\";\n    // U+1D14A  Triangle notehead left white\n    Glyphs[\"noteheadTriangleLeftWhiteAlternate\"] = \"\\uD834\\uDD4A\";\n    // U+E0C2  Triangle notehead right black\n    Glyphs[\"noteheadTriangleRightBlack\"] = \"\\uE0C2\";\n    // U+1D14D  Triangle notehead right black\n    Glyphs[\"noteheadTriangleRightBlackAlternate\"] = \"\\uD834\\uDD4D\";\n    // U+E0C1  Triangle notehead right white\n    Glyphs[\"noteheadTriangleRightWhite\"] = \"\\uE0C1\";\n    // U+1D14C  Triangle notehead right white\n    Glyphs[\"noteheadTriangleRightWhiteAlternate\"] = \"\\uD834\\uDD4C\";\n    // U+E0CD  Triangle-round notehead down black\n    Glyphs[\"noteheadTriangleRoundDownBlack\"] = \"\\uE0CD\";\n    // U+1D155  Triangle-round notehead down black\n    Glyphs[\"noteheadTriangleRoundDownBlackAlternate\"] = \"\\uD834\\uDD55\";\n    // U+E0CC  Triangle-round notehead down white\n    Glyphs[\"noteheadTriangleRoundDownWhite\"] = \"\\uE0CC\";\n    // U+1D154  Triangle-round notehead down white\n    Glyphs[\"noteheadTriangleRoundDownWhiteAlternate\"] = \"\\uD834\\uDD54\";\n    // U+E0BE  Triangle notehead up black\n    Glyphs[\"noteheadTriangleUpBlack\"] = \"\\uE0BE\";\n    // U+1D149  Triangle notehead up black\n    Glyphs[\"noteheadTriangleUpBlackAlternate\"] = \"\\uD834\\uDD49\";\n    // U+E0BA  Triangle notehead up double whole\n    Glyphs[\"noteheadTriangleUpDoubleWhole\"] = \"\\uE0BA\";\n    // U+E0BC  Triangle notehead up half\n    Glyphs[\"noteheadTriangleUpHalf\"] = \"\\uE0BC\";\n    // U+E0C9  Triangle notehead up right black\n    Glyphs[\"noteheadTriangleUpRightBlack\"] = \"\\uE0C9\";\n    // U+1D151  Triangle notehead up right black\n    Glyphs[\"noteheadTriangleUpRightBlackAlternate\"] = \"\\uD834\\uDD51\";\n    // U+E0C8  Triangle notehead up right white\n    Glyphs[\"noteheadTriangleUpRightWhite\"] = \"\\uE0C8\";\n    // U+1D150  Triangle notehead up right white\n    Glyphs[\"noteheadTriangleUpRightWhiteAlternate\"] = \"\\uD834\\uDD50\";\n    // U+E0BD  Triangle notehead up white\n    Glyphs[\"noteheadTriangleUpWhite\"] = \"\\uE0BD\";\n    // U+1D148  Triangle notehead up white\n    Glyphs[\"noteheadTriangleUpWhiteAlternate\"] = \"\\uD834\\uDD48\";\n    // U+E0BB  Triangle notehead up whole\n    Glyphs[\"noteheadTriangleUpWhole\"] = \"\\uE0BB\";\n    // U+E0B7  Void notehead with X\n    Glyphs[\"noteheadVoidWithX\"] = \"\\uE0B7\";\n    // U+E0A2  Whole (semibreve) notehead\n    Glyphs[\"noteheadWhole\"] = \"\\uE0A2\";\n    // U+E0FA  Filled whole (semibreve) notehead\n    Glyphs[\"noteheadWholeFilled\"] = \"\\uE0FA\";\n    // U+E0B5  Whole notehead with X\n    Glyphs[\"noteheadWholeWithX\"] = \"\\uE0B5\";\n    // U+E0A9  X notehead black\n    Glyphs[\"noteheadXBlack\"] = \"\\uE0A9\";\n    // U+1D143  X notehead black\n    Glyphs[\"noteheadXBlackAlternate\"] = \"\\uD834\\uDD43\";\n    // U+E0A6  X notehead double whole\n    Glyphs[\"noteheadXDoubleWhole\"] = \"\\uE0A6\";\n    // U+E0A8  X notehead half\n    Glyphs[\"noteheadXHalf\"] = \"\\uE0A8\";\n    // U+E0AA  Ornate X notehead\n    Glyphs[\"noteheadXOrnate\"] = \"\\uE0AA\";\n    // U+E0AB  Ornate X notehead in ellipse\n    Glyphs[\"noteheadXOrnateEllipse\"] = \"\\uE0AB\";\n    // U+E0A7  X notehead whole\n    Glyphs[\"noteheadXWhole\"] = \"\\uE0A7\";\n    // U+EC91  a (baseline)\n    Glyphs[\"octaveBaselineA\"] = \"\\uEC91\";\n    // U+EC93  b (baseline)\n    Glyphs[\"octaveBaselineB\"] = \"\\uEC93\";\n    // U+EC95  m (baseline)\n    Glyphs[\"octaveBaselineM\"] = \"\\uEC95\";\n    // U+EC97  v (baseline)\n    Glyphs[\"octaveBaselineV\"] = \"\\uEC97\";\n    // U+E51F  Bassa\n    Glyphs[\"octaveBassa\"] = \"\\uE51F\";\n    // U+EC90  Loco\n    Glyphs[\"octaveLoco\"] = \"\\uEC90\";\n    // U+E51A  Left parenthesis for octave signs\n    Glyphs[\"octaveParensLeft\"] = \"\\uE51A\";\n    // U+E51B  Right parenthesis for octave signs\n    Glyphs[\"octaveParensRight\"] = \"\\uE51B\";\n    // U+EC92  a (superscript)\n    Glyphs[\"octaveSuperscriptA\"] = \"\\uEC92\";\n    // U+EC94  b (superscript)\n    Glyphs[\"octaveSuperscriptB\"] = \"\\uEC94\";\n    // U+EC96  m (superscript)\n    Glyphs[\"octaveSuperscriptM\"] = \"\\uEC96\";\n    // U+EC98  v (superscript)\n    Glyphs[\"octaveSuperscriptV\"] = \"\\uEC98\";\n    // U+E233  One-handed roll (Stevens)\n    Glyphs[\"oneHandedRollStevens\"] = \"\\uE233\";\n    // U+EE2E  Two Fusae\n    Glyphs[\"organGerman2Fusae\"] = \"\\uEE2E\";\n    // U+EE2C  Two Minimae\n    Glyphs[\"organGerman2Minimae\"] = \"\\uEE2C\";\n    // U+EE19  Combining double octave line above\n    Glyphs[\"organGerman2OctaveUp\"] = \"\\uEE19\";\n    // U+EE2F  Two Semifusae\n    Glyphs[\"organGerman2Semifusae\"] = \"\\uEE2F\";\n    // U+EE2D  Two Semiminimae\n    Glyphs[\"organGerman2Semiminimae\"] = \"\\uEE2D\";\n    // U+EE32  Three Fusae\n    Glyphs[\"organGerman3Fusae\"] = \"\\uEE32\";\n    // U+EE30  Three Minimae\n    Glyphs[\"organGerman3Minimae\"] = \"\\uEE30\";\n    // U+EE33  Three Semifusae\n    Glyphs[\"organGerman3Semifusae\"] = \"\\uEE33\";\n    // U+EE31  Three Semiminimae\n    Glyphs[\"organGerman3Semiminimae\"] = \"\\uEE31\";\n    // U+EE36  Four Fusae\n    Glyphs[\"organGerman4Fusae\"] = \"\\uEE36\";\n    // U+EE34  Four Minimae\n    Glyphs[\"organGerman4Minimae\"] = \"\\uEE34\";\n    // U+EE37  Four Semifusae\n    Glyphs[\"organGerman4Semifusae\"] = \"\\uEE37\";\n    // U+EE35  Four Semiminimae\n    Glyphs[\"organGerman4Semiminimae\"] = \"\\uEE35\";\n    // U+EE3A  Five Fusae\n    Glyphs[\"organGerman5Fusae\"] = \"\\uEE3A\";\n    // U+EE38  Five Minimae\n    Glyphs[\"organGerman5Minimae\"] = \"\\uEE38\";\n    // U+EE3B  Five Semifusae\n    Glyphs[\"organGerman5Semifusae\"] = \"\\uEE3B\";\n    // U+EE39  Five Semiminimae\n    Glyphs[\"organGerman5Semiminimae\"] = \"\\uEE39\";\n    // U+EE3E  Six Fusae\n    Glyphs[\"organGerman6Fusae\"] = \"\\uEE3E\";\n    // U+EE3C  Six Minimae\n    Glyphs[\"organGerman6Minimae\"] = \"\\uEE3C\";\n    // U+EE3F  Six Semifusae\n    Glyphs[\"organGerman6Semifusae\"] = \"\\uEE3F\";\n    // U+EE3D  Six Semiminimae\n    Glyphs[\"organGerman6Semiminimae\"] = \"\\uEE3D\";\n    // U+EE15  German organ tablature small A\n    Glyphs[\"organGermanALower\"] = \"\\uEE15\";\n    // U+EE09  German organ tablature great A\n    Glyphs[\"organGermanAUpper\"] = \"\\uEE09\";\n    // U+EE1C  Rhythm Dot\n    Glyphs[\"organGermanAugmentationDot\"] = \"\\uEE1C\";\n    // U+EE16  German organ tablature small B\n    Glyphs[\"organGermanBLower\"] = \"\\uEE16\";\n    // U+EE0A  German organ tablature great B\n    Glyphs[\"organGermanBUpper\"] = \"\\uEE0A\";\n    // U+EE25  Brevis (Binary) Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerBrevis2\"] = \"\\uEE25\";\n    // U+EE24  Brevis (Ternary) Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerBrevis3\"] = \"\\uEE24\";\n    // U+EE1E  Minima Rest Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerMinimaRest\"] = \"\\uEE1E\";\n    // U+EE26  Semibrevis Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerSemibrevis\"] = \"\\uEE26\";\n    // U+EE1D  Semibrevis Rest Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerSemibrevisRest\"] = \"\\uEE1D\";\n    // U+EE0C  German organ tablature small C\n    Glyphs[\"organGermanCLower\"] = \"\\uEE0C\";\n    // U+EE00  German organ tablature great C\n    Glyphs[\"organGermanCUpper\"] = \"\\uEE00\";\n    // U+EE0D  German organ tablature small Cis\n    Glyphs[\"organGermanCisLower\"] = \"\\uEE0D\";\n    // U+EE01  German organ tablature great Cis\n    Glyphs[\"organGermanCisUpper\"] = \"\\uEE01\";\n    // U+EE0E  German organ tablature small D\n    Glyphs[\"organGermanDLower\"] = \"\\uEE0E\";\n    // U+EE02  German organ tablature great D\n    Glyphs[\"organGermanDUpper\"] = \"\\uEE02\";\n    // U+EE0F  German organ tablature small Dis\n    Glyphs[\"organGermanDisLower\"] = \"\\uEE0F\";\n    // U+EE03  German organ tablature great Dis\n    Glyphs[\"organGermanDisUpper\"] = \"\\uEE03\";\n    // U+EE10  German organ tablature small E\n    Glyphs[\"organGermanELower\"] = \"\\uEE10\";\n    // U+EE04  German organ tablature great E\n    Glyphs[\"organGermanEUpper\"] = \"\\uEE04\";\n    // U+EE11  German organ tablature small F\n    Glyphs[\"organGermanFLower\"] = \"\\uEE11\";\n    // U+EE05  German organ tablature great F\n    Glyphs[\"organGermanFUpper\"] = \"\\uEE05\";\n    // U+EE12  German organ tablature small Fis\n    Glyphs[\"organGermanFisLower\"] = \"\\uEE12\";\n    // U+EE06  German organ tablature great Fis\n    Glyphs[\"organGermanFisUpper\"] = \"\\uEE06\";\n    // U+EE2A  Fusa\n    Glyphs[\"organGermanFusa\"] = \"\\uEE2A\";\n    // U+EE22  Fusa Rest\n    Glyphs[\"organGermanFusaRest\"] = \"\\uEE22\";\n    // U+EE13  German organ tablature small G\n    Glyphs[\"organGermanGLower\"] = \"\\uEE13\";\n    // U+EE07  German organ tablature great G\n    Glyphs[\"organGermanGUpper\"] = \"\\uEE07\";\n    // U+EE14  German organ tablature small Gis\n    Glyphs[\"organGermanGisLower\"] = \"\\uEE14\";\n    // U+EE08  German organ tablature great Gis\n    Glyphs[\"organGermanGisUpper\"] = \"\\uEE08\";\n    // U+EE17  German organ tablature small H\n    Glyphs[\"organGermanHLower\"] = \"\\uEE17\";\n    // U+EE0B  German organ tablature great H\n    Glyphs[\"organGermanHUpper\"] = \"\\uEE0B\";\n    // U+EE28  Minima\n    Glyphs[\"organGermanMinima\"] = \"\\uEE28\";\n    // U+EE20  Minima Rest\n    Glyphs[\"organGermanMinimaRest\"] = \"\\uEE20\";\n    // U+EE1A  Combining single octave line below\n    Glyphs[\"organGermanOctaveDown\"] = \"\\uEE1A\";\n    // U+EE18  Combining single octave line above\n    Glyphs[\"organGermanOctaveUp\"] = \"\\uEE18\";\n    // U+EE27  Semibrevis\n    Glyphs[\"organGermanSemibrevis\"] = \"\\uEE27\";\n    // U+EE1F  Semibrevis Rest\n    Glyphs[\"organGermanSemibrevisRest\"] = \"\\uEE1F\";\n    // U+EE2B  Semifusa\n    Glyphs[\"organGermanSemifusa\"] = \"\\uEE2B\";\n    // U+EE23  Semifusa Rest\n    Glyphs[\"organGermanSemifusaRest\"] = \"\\uEE23\";\n    // U+EE29  Semiminima\n    Glyphs[\"organGermanSemiminima\"] = \"\\uEE29\";\n    // U+EE21  Semiminima Rest\n    Glyphs[\"organGermanSemiminimaRest\"] = \"\\uEE21\";\n    // U+EE1B  Tie\n    Glyphs[\"organGermanTie\"] = \"\\uEE1B\";\n    // U+E59A  Ornament bottom left concave stroke\n    Glyphs[\"ornamentBottomLeftConcaveStroke\"] = \"\\uE59A\";\n    // U+E59B  Ornament bottom left concave stroke, large\n    Glyphs[\"ornamentBottomLeftConcaveStrokeLarge\"] = \"\\uE59B\";\n    // U+1D1A1  Ornament bottom left concave stroke, large\n    Glyphs[\"ornamentBottomLeftConcaveStrokeLargeAlternate\"] = \"\\uD834\\uDDA1\";\n    // U+E59C  Ornament bottom left convex stroke\n    Glyphs[\"ornamentBottomLeftConvexStroke\"] = \"\\uE59C\";\n    // U+E5A7  Ornament bottom right concave stroke\n    Glyphs[\"ornamentBottomRightConcaveStroke\"] = \"\\uE5A7\";\n    // U+1D19F  Ornament bottom right concave stroke\n    Glyphs[\"ornamentBottomRightConcaveStrokeAlternate\"] = \"\\uD834\\uDD9F\";\n    // U+E5A8  Ornament bottom right convex stroke\n    Glyphs[\"ornamentBottomRightConvexStroke\"] = \"\\uE5A8\";\n    // U+E581  Comma\n    Glyphs[\"ornamentComma\"] = \"\\uE581\";\n    // U+E57E  Double oblique straight lines NW-SE\n    Glyphs[\"ornamentDoubleObliqueLinesAfterNote\"] = \"\\uE57E\";\n    // U+E57D  Double oblique straight lines SW-NE\n    Glyphs[\"ornamentDoubleObliqueLinesBeforeNote\"] = \"\\uE57D\";\n    // U+E578  Curve below\n    Glyphs[\"ornamentDownCurve\"] = \"\\uE578\";\n    // U+E56F  Haydn ornament\n    Glyphs[\"ornamentHaydn\"] = \"\\uE56F\";\n    // U+E592  Ornament high left concave stroke\n    Glyphs[\"ornamentHighLeftConcaveStroke\"] = \"\\uE592\";\n    // U+E593  Ornament high left convex stroke\n    Glyphs[\"ornamentHighLeftConvexStroke\"] = \"\\uE593\";\n    // U+1D1A2  Ornament high left convex stroke\n    Glyphs[\"ornamentHighLeftConvexStrokeAlternate\"] = \"\\uD834\\uDDA2\";\n    // U+E5A2  Ornament high right concave stroke\n    Glyphs[\"ornamentHighRightConcaveStroke\"] = \"\\uE5A2\";\n    // U+E5A3  Ornament high right convex stroke\n    Glyphs[\"ornamentHighRightConvexStroke\"] = \"\\uE5A3\";\n    // U+E576  Hook after note\n    Glyphs[\"ornamentHookAfterNote\"] = \"\\uE576\";\n    // U+E575  Hook before note\n    Glyphs[\"ornamentHookBeforeNote\"] = \"\\uE575\";\n    // U+E572  Left-facing half circle\n    Glyphs[\"ornamentLeftFacingHalfCircle\"] = \"\\uE572\";\n    // U+E574  Left-facing hook\n    Glyphs[\"ornamentLeftFacingHook\"] = \"\\uE574\";\n    // U+E597  Ornament left +\n    Glyphs[\"ornamentLeftPlus\"] = \"\\uE597\";\n    // U+E596  Ornament left shake t\n    Glyphs[\"ornamentLeftShakeT\"] = \"\\uE596\";\n    // U+E594  Ornament left vertical stroke\n    Glyphs[\"ornamentLeftVerticalStroke\"] = \"\\uE594\";\n    // U+1D19B  Ornament left vertical stroke\n    Glyphs[\"ornamentLeftVerticalStrokeAlternate\"] = \"\\uD834\\uDD9B\";\n    // U+E595  Ornament left vertical stroke with cross (+)\n    Glyphs[\"ornamentLeftVerticalStrokeWithCross\"] = \"\\uE595\";\n    // U+E598  Ornament low left concave stroke\n    Glyphs[\"ornamentLowLeftConcaveStroke\"] = \"\\uE598\";\n    // U+E599  Ornament low left convex stroke\n    Glyphs[\"ornamentLowLeftConvexStroke\"] = \"\\uE599\";\n    // U+1D1A4  Ornament low left convex stroke\n    Glyphs[\"ornamentLowLeftConvexStrokeAlternate\"] = \"\\uD834\\uDDA4\";\n    // U+E5A5  Ornament low right concave stroke\n    Glyphs[\"ornamentLowRightConcaveStroke\"] = \"\\uE5A5\";\n    // U+1D1A3  Ornament low right concave stroke\n    Glyphs[\"ornamentLowRightConcaveStrokeAlternate\"] = \"\\uD834\\uDDA3\";\n    // U+E5A6  Ornament low right convex stroke\n    Glyphs[\"ornamentLowRightConvexStroke\"] = \"\\uE5A6\";\n    // U+E59F  Ornament middle vertical stroke\n    Glyphs[\"ornamentMiddleVerticalStroke\"] = \"\\uE59F\";\n    // U+1D1A0  Ornament middle vertical stroke\n    Glyphs[\"ornamentMiddleVerticalStrokeAlternate\"] = \"\\uD834\\uDDA0\";\n    // U+E56D  Mordent\n    Glyphs[\"ornamentMordent\"] = \"\\uE56D\";\n    // U+E57C  Oblique straight line NW-SE\n    Glyphs[\"ornamentObliqueLineAfterNote\"] = \"\\uE57C\";\n    // U+E57B  Oblique straight line SW-NE\n    Glyphs[\"ornamentObliqueLineBeforeNote\"] = \"\\uE57B\";\n    // U+E580  Oblique straight line tilted NW-SE\n    Glyphs[\"ornamentObliqueLineHorizAfterNote\"] = \"\\uE580\";\n    // U+E57F  Oblique straight line tilted SW-NE\n    Glyphs[\"ornamentObliqueLineHorizBeforeNote\"] = \"\\uE57F\";\n    // U+EA21  Oriscus\n    Glyphs[\"ornamentOriscus\"] = \"\\uEA21\";\n    // U+E588  Pincé (Couperin)\n    Glyphs[\"ornamentPinceCouperin\"] = \"\\uE588\";\n    // U+E570  Port de voix\n    Glyphs[\"ornamentPortDeVoixV\"] = \"\\uE570\";\n    // U+E5B2  Supported appoggiatura trill\n    Glyphs[\"ornamentPrecompAppoggTrill\"] = \"\\uE5B2\";\n    // U+E5B3  Supported appoggiatura trill with two-note suffix\n    Glyphs[\"ornamentPrecompAppoggTrillSuffix\"] = \"\\uE5B3\";\n    // U+E5BE  Cadence\n    Glyphs[\"ornamentPrecompCadence\"] = \"\\uE5BE\";\n    // U+E5C1  Cadence with upper prefix\n    Glyphs[\"ornamentPrecompCadenceUpperPrefix\"] = \"\\uE5C1\";\n    // U+E5C2  Cadence with upper prefix and turn\n    Glyphs[\"ornamentPrecompCadenceUpperPrefixTurn\"] = \"\\uE5C2\";\n    // U+E5BF  Cadence with turn\n    Glyphs[\"ornamentPrecompCadenceWithTurn\"] = \"\\uE5BF\";\n    // U+E5B1  Descending slide\n    Glyphs[\"ornamentPrecompDescendingSlide\"] = \"\\uE5B1\";\n    // U+E5C0  Double cadence with lower prefix\n    Glyphs[\"ornamentPrecompDoubleCadenceLowerPrefix\"] = \"\\uE5C0\";\n    // U+E5C3  Double cadence with upper prefix\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefix\"] = \"\\uE5C3\";\n    // U+E5C4  Double cadence with upper prefix and turn\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefixTurn\"] = \"\\uE5C4\";\n    // U+E5C7  Inverted mordent with upper prefix\n    Glyphs[\"ornamentPrecompInvertedMordentUpperPrefix\"] = \"\\uE5C7\";\n    // U+E5C5  Mordent with release\n    Glyphs[\"ornamentPrecompMordentRelease\"] = \"\\uE5C5\";\n    // U+E5C6  Mordent with upper prefix\n    Glyphs[\"ornamentPrecompMordentUpperPrefix\"] = \"\\uE5C6\";\n    // U+E5BC  Pre-beat port de voix followed by multiple mordent (Dandrieu)\n    Glyphs[\"ornamentPrecompPortDeVoixMordent\"] = \"\\uE5BC\";\n    // U+E5B0  Slide\n    Glyphs[\"ornamentPrecompSlide\"] = \"\\uE5B0\";\n    // U+E5B8  Slide-trill with two-note suffix (J.S. Bach)\n    Glyphs[\"ornamentPrecompSlideTrillBach\"] = \"\\uE5B8\";\n    // U+E5B5  Slide-trill (D'Anglebert)\n    Glyphs[\"ornamentPrecompSlideTrillDAnglebert\"] = \"\\uE5B5\";\n    // U+E5B6  Slide-trill with one-note suffix (Marpurg)\n    Glyphs[\"ornamentPrecompSlideTrillMarpurg\"] = \"\\uE5B6\";\n    // U+E5B9  Slide-trill (Muffat)\n    Glyphs[\"ornamentPrecompSlideTrillMuffat\"] = \"\\uE5B9\";\n    // U+E5BA  Slide-trill with two-note suffix (Muffat)\n    Glyphs[\"ornamentPrecompSlideTrillSuffixMuffat\"] = \"\\uE5BA\";\n    // U+E5C8  Trill with lower suffix\n    Glyphs[\"ornamentPrecompTrillLowerSuffix\"] = \"\\uE5C8\";\n    // U+E5BB  Trill with two-note suffix (Dandrieu)\n    Glyphs[\"ornamentPrecompTrillSuffixDandrieu\"] = \"\\uE5BB\";\n    // U+E5BD  Trill with mordent\n    Glyphs[\"ornamentPrecompTrillWithMordent\"] = \"\\uE5BD\";\n    // U+E5B7  Turn-trill with two-note suffix (J.S. Bach)\n    Glyphs[\"ornamentPrecompTurnTrillBach\"] = \"\\uE5B7\";\n    // U+E5B4  Turn-trill (D'Anglebert)\n    Glyphs[\"ornamentPrecompTurnTrillDAnglebert\"] = \"\\uE5B4\";\n    // U+EA20  Quilisma\n    Glyphs[\"ornamentQuilisma\"] = \"\\uEA20\";\n    // U+E571  Right-facing half circle\n    Glyphs[\"ornamentRightFacingHalfCircle\"] = \"\\uE571\";\n    // U+E573  Right-facing hook\n    Glyphs[\"ornamentRightFacingHook\"] = \"\\uE573\";\n    // U+E5A4  Ornament right vertical stroke\n    Glyphs[\"ornamentRightVerticalStroke\"] = \"\\uE5A4\";\n    // U+E587  Schleifer (long mordent)\n    Glyphs[\"ornamentSchleifer\"] = \"\\uE587\";\n    // U+E582  Shake\n    Glyphs[\"ornamentShake3\"] = \"\\uE582\";\n    // U+E584  Shake (Muffat)\n    Glyphs[\"ornamentShakeMuffat1\"] = \"\\uE584\";\n    // U+E57A  Short oblique straight line NW-SE\n    Glyphs[\"ornamentShortObliqueLineAfterNote\"] = \"\\uE57A\";\n    // U+E579  Short oblique straight line SW-NE\n    Glyphs[\"ornamentShortObliqueLineBeforeNote\"] = \"\\uE579\";\n    // U+E56C  Short trill\n    Glyphs[\"ornamentShortTrill\"] = \"\\uE56C\";\n    // U+E590  Ornament top left concave stroke\n    Glyphs[\"ornamentTopLeftConcaveStroke\"] = \"\\uE590\";\n    // U+E591  Ornament top left convex stroke\n    Glyphs[\"ornamentTopLeftConvexStroke\"] = \"\\uE591\";\n    // U+1D1A5  Ornament top left convex stroke\n    Glyphs[\"ornamentTopLeftConvexStrokeAlternate\"] = \"\\uD834\\uDDA5\";\n    // U+E5A0  Ornament top right concave stroke\n    Glyphs[\"ornamentTopRightConcaveStroke\"] = \"\\uE5A0\";\n    // U+E5A1  Ornament top right convex stroke\n    Glyphs[\"ornamentTopRightConvexStroke\"] = \"\\uE5A1\";\n    // U+1D19E  Ornament top right convex stroke\n    Glyphs[\"ornamentTopRightConvexStrokeAlternate\"] = \"\\uD834\\uDD9E\";\n    // U+E56E  Tremblement\n    Glyphs[\"ornamentTremblement\"] = \"\\uE56E\";\n    // U+E589  Tremblement appuyé (Couperin)\n    Glyphs[\"ornamentTremblementCouperin\"] = \"\\uE589\";\n    // U+E566  Trill\n    Glyphs[\"ornamentTrill\"] = \"\\uE566\";\n    // U+1D196  Trill\n    Glyphs[\"ornamentTrillAlternate\"] = \"\\uD834\\uDD96\";\n    // U+E567  Turn\n    Glyphs[\"ornamentTurn\"] = \"\\uE567\";\n    // U+1D197  Turn\n    Glyphs[\"ornamentTurnAlternate\"] = \"\\uD834\\uDD97\";\n    // U+E568  Inverted turn\n    Glyphs[\"ornamentTurnInverted\"] = \"\\uE568\";\n    // U+1D198  Inverted turn\n    Glyphs[\"ornamentTurnInvertedAlternate\"] = \"\\uD834\\uDD98\";\n    // U+E569  Turn with slash\n    Glyphs[\"ornamentTurnSlash\"] = \"\\uE569\";\n    // U+1D199  Turn with slash\n    Glyphs[\"ornamentTurnSlashAlternate\"] = \"\\uD834\\uDD99\";\n    // U+E56A  Turn up\n    Glyphs[\"ornamentTurnUp\"] = \"\\uE56A\";\n    // U+1D19A  Turn up\n    Glyphs[\"ornamentTurnUpAlternate\"] = \"\\uD834\\uDD9A\";\n    // U+E56B  Inverted turn up\n    Glyphs[\"ornamentTurnUpS\"] = \"\\uE56B\";\n    // U+E577  Curve above\n    Glyphs[\"ornamentUpCurve\"] = \"\\uE577\";\n    // U+E583  Vertical line\n    Glyphs[\"ornamentVerticalLine\"] = \"\\uE583\";\n    // U+E59D  Ornament zig-zag line without right-hand end\n    Glyphs[\"ornamentZigZagLineNoRightEnd\"] = \"\\uE59D\";\n    // U+1D19C  Ornament zig-zag line without right-hand end\n    Glyphs[\"ornamentZigZagLineNoRightEndAlternate\"] = \"\\uD834\\uDD9C\";\n    // U+E59E  Ornament zig-zag line with right-hand end\n    Glyphs[\"ornamentZigZagLineWithRightEnd\"] = \"\\uE59E\";\n    // U+1D19D  Ornament zig-zag line with right-hand end\n    Glyphs[\"ornamentZigZagLineWithRightEndAlternate\"] = \"\\uD834\\uDD9D\";\n    // U+E510  Ottava\n    Glyphs[\"ottava\"] = \"\\uE510\";\n    // U+E511  Ottava alta\n    Glyphs[\"ottavaAlta\"] = \"\\uE511\";\n    // U+1D136  Ottava alta\n    Glyphs[\"ottavaAltaAlternate\"] = \"\\uD834\\uDD36\";\n    // U+E512  Ottava bassa\n    Glyphs[\"ottavaBassa\"] = \"\\uE512\";\n    // U+1D137  Ottava bassa\n    Glyphs[\"ottavaBassaAlternate\"] = \"\\uD834\\uDD37\";\n    // U+E513  Ottava bassa (ba)\n    Glyphs[\"ottavaBassaBa\"] = \"\\uE513\";\n    // U+E51C  Ottava bassa (8vb)\n    Glyphs[\"ottavaBassaVb\"] = \"\\uE51C\";\n    // U+E22B  Penderecki unmeasured tremolo\n    Glyphs[\"pendereckiTremolo\"] = \"\\uE22B\";\n    // U+E717  Agogo\n    Glyphs[\"pictAgogo\"] = \"\\uE717\";\n    // U+E712  Almglocken\n    Glyphs[\"pictAlmglocken\"] = \"\\uE712\";\n    // U+E701  Anvil\n    Glyphs[\"pictAnvil\"] = \"\\uE701\";\n    // U+E6C3  Bamboo tube chimes\n    Glyphs[\"pictBambooChimes\"] = \"\\uE6C3\";\n    // U+E6FB  Bamboo scraper\n    Glyphs[\"pictBambooScraper\"] = \"\\uE6FB\";\n    // U+E6D4  Bass drum\n    Glyphs[\"pictBassDrum\"] = \"\\uE6D4\";\n    // U+E6D5  Bass drum on side\n    Glyphs[\"pictBassDrumOnSide\"] = \"\\uE6D5\";\n    // U+E7DE  Bow\n    Glyphs[\"pictBeaterBow\"] = \"\\uE7DE\";\n    // U+E7EB  Box for percussion beater\n    Glyphs[\"pictBeaterBox\"] = \"\\uE7EB\";\n    // U+E7DA  Brass mallets down\n    Glyphs[\"pictBeaterBrassMalletsDown\"] = \"\\uE7DA\";\n    // U+E7EE  Brass mallets left\n    Glyphs[\"pictBeaterBrassMalletsLeft\"] = \"\\uE7EE\";\n    // U+E7ED  Brass mallets right\n    Glyphs[\"pictBeaterBrassMalletsRight\"] = \"\\uE7ED\";\n    // U+E7D9  Brass mallets up\n    Glyphs[\"pictBeaterBrassMalletsUp\"] = \"\\uE7D9\";\n    // U+E7EA  Combining dashed circle for round beaters (plated)\n    Glyphs[\"pictBeaterCombiningDashedCircle\"] = \"\\uE7EA\";\n    // U+E7E9  Combining parentheses for round beaters (padded)\n    Glyphs[\"pictBeaterCombiningParentheses\"] = \"\\uE7E9\";\n    // U+E7A1  Double bass drum stick down\n    Glyphs[\"pictBeaterDoubleBassDrumDown\"] = \"\\uE7A1\";\n    // U+E7A0  Double bass drum stick up\n    Glyphs[\"pictBeaterDoubleBassDrumUp\"] = \"\\uE7A0\";\n    // U+E7E4  Finger\n    Glyphs[\"pictBeaterFinger\"] = \"\\uE7E4\";\n    // U+E7E6  Fingernails\n    Glyphs[\"pictBeaterFingernails\"] = \"\\uE7E6\";\n    // U+E7E5  Fist\n    Glyphs[\"pictBeaterFist\"] = \"\\uE7E5\";\n    // U+E7DD  Guiro scraper\n    Glyphs[\"pictBeaterGuiroScraper\"] = \"\\uE7DD\";\n    // U+E7E1  Hammer\n    Glyphs[\"pictBeaterHammer\"] = \"\\uE7E1\";\n    // U+E7D0  Metal hammer, down\n    Glyphs[\"pictBeaterHammerMetalDown\"] = \"\\uE7D0\";\n    // U+E7CF  Metal hammer, up\n    Glyphs[\"pictBeaterHammerMetalUp\"] = \"\\uE7CF\";\n    // U+E7CE  Plastic hammer, down\n    Glyphs[\"pictBeaterHammerPlasticDown\"] = \"\\uE7CE\";\n    // U+E7CD  Plastic hammer, up\n    Glyphs[\"pictBeaterHammerPlasticUp\"] = \"\\uE7CD\";\n    // U+E7CC  Wooden hammer, down\n    Glyphs[\"pictBeaterHammerWoodDown\"] = \"\\uE7CC\";\n    // U+E7CB  Wooden hammer, up\n    Glyphs[\"pictBeaterHammerWoodUp\"] = \"\\uE7CB\";\n    // U+E7E3  Hand\n    Glyphs[\"pictBeaterHand\"] = \"\\uE7E3\";\n    // U+E79D  Hard bass drum stick down\n    Glyphs[\"pictBeaterHardBassDrumDown\"] = \"\\uE79D\";\n    // U+E79C  Hard bass drum stick up\n    Glyphs[\"pictBeaterHardBassDrumUp\"] = \"\\uE79C\";\n    // U+E785  Hard glockenspiel stick down\n    Glyphs[\"pictBeaterHardGlockenspielDown\"] = \"\\uE785\";\n    // U+E787  Hard glockenspiel stick left\n    Glyphs[\"pictBeaterHardGlockenspielLeft\"] = \"\\uE787\";\n    // U+E786  Hard glockenspiel stick right\n    Glyphs[\"pictBeaterHardGlockenspielRight\"] = \"\\uE786\";\n    // U+E784  Hard glockenspiel stick up\n    Glyphs[\"pictBeaterHardGlockenspielUp\"] = \"\\uE784\";\n    // U+E791  Hard timpani stick down\n    Glyphs[\"pictBeaterHardTimpaniDown\"] = \"\\uE791\";\n    // U+E793  Hard timpani stick left\n    Glyphs[\"pictBeaterHardTimpaniLeft\"] = \"\\uE793\";\n    // U+E792  Hard timpani stick right\n    Glyphs[\"pictBeaterHardTimpaniRight\"] = \"\\uE792\";\n    // U+E790  Hard timpani stick up\n    Glyphs[\"pictBeaterHardTimpaniUp\"] = \"\\uE790\";\n    // U+E779  Hard xylophone stick down\n    Glyphs[\"pictBeaterHardXylophoneDown\"] = \"\\uE779\";\n    // U+E77B  Hard xylophone stick left\n    Glyphs[\"pictBeaterHardXylophoneLeft\"] = \"\\uE77B\";\n    // U+E77A  Hard xylophone stick right\n    Glyphs[\"pictBeaterHardXylophoneRight\"] = \"\\uE77A\";\n    // U+E778  Hard xylophone stick up\n    Glyphs[\"pictBeaterHardXylophoneUp\"] = \"\\uE778\";\n    // U+E7AB  Hard yarn beater down\n    Glyphs[\"pictBeaterHardYarnDown\"] = \"\\uE7AB\";\n    // U+E7AD  Hard yarn beater left\n    Glyphs[\"pictBeaterHardYarnLeft\"] = \"\\uE7AD\";\n    // U+E7AC  Hard yarn beater right\n    Glyphs[\"pictBeaterHardYarnRight\"] = \"\\uE7AC\";\n    // U+E7AA  Hard yarn beater up\n    Glyphs[\"pictBeaterHardYarnUp\"] = \"\\uE7AA\";\n    // U+E7D4  Jazz sticks down\n    Glyphs[\"pictBeaterJazzSticksDown\"] = \"\\uE7D4\";\n    // U+E7D3  Jazz sticks up\n    Glyphs[\"pictBeaterJazzSticksUp\"] = \"\\uE7D3\";\n    // U+E7E2  Knitting needle\n    Glyphs[\"pictBeaterKnittingNeedle\"] = \"\\uE7E2\";\n    // U+E7DF  Chime hammer up\n    Glyphs[\"pictBeaterMallet\"] = \"\\uE7DF\";\n    // U+E7EC  Chime hammer down\n    Glyphs[\"pictBeaterMalletDown\"] = \"\\uE7EC\";\n    // U+E79B  Medium bass drum stick down\n    Glyphs[\"pictBeaterMediumBassDrumDown\"] = \"\\uE79B\";\n    // U+E79A  Medium bass drum stick up\n    Glyphs[\"pictBeaterMediumBassDrumUp\"] = \"\\uE79A\";\n    // U+E78D  Medium timpani stick down\n    Glyphs[\"pictBeaterMediumTimpaniDown\"] = \"\\uE78D\";\n    // U+E78F  Medium timpani stick left\n    Glyphs[\"pictBeaterMediumTimpaniLeft\"] = \"\\uE78F\";\n    // U+E78E  Medium timpani stick right\n    Glyphs[\"pictBeaterMediumTimpaniRight\"] = \"\\uE78E\";\n    // U+E78C  Medium timpani stick up\n    Glyphs[\"pictBeaterMediumTimpaniUp\"] = \"\\uE78C\";\n    // U+E775  Medium xylophone stick down\n    Glyphs[\"pictBeaterMediumXylophoneDown\"] = \"\\uE775\";\n    // U+E777  Medium xylophone stick left\n    Glyphs[\"pictBeaterMediumXylophoneLeft\"] = \"\\uE777\";\n    // U+E776  Medium xylophone stick right\n    Glyphs[\"pictBeaterMediumXylophoneRight\"] = \"\\uE776\";\n    // U+E774  Medium xylophone stick up\n    Glyphs[\"pictBeaterMediumXylophoneUp\"] = \"\\uE774\";\n    // U+E7A7  Medium yarn beater down\n    Glyphs[\"pictBeaterMediumYarnDown\"] = \"\\uE7A7\";\n    // U+E7A9  Medium yarn beater left\n    Glyphs[\"pictBeaterMediumYarnLeft\"] = \"\\uE7A9\";\n    // U+E7A8  Medium yarn beater right\n    Glyphs[\"pictBeaterMediumYarnRight\"] = \"\\uE7A8\";\n    // U+E7A6  Medium yarn beater up\n    Glyphs[\"pictBeaterMediumYarnUp\"] = \"\\uE7A6\";\n    // U+E79F  Metal bass drum stick down\n    Glyphs[\"pictBeaterMetalBassDrumDown\"] = \"\\uE79F\";\n    // U+E79E  Metal bass drum stick up\n    Glyphs[\"pictBeaterMetalBassDrumUp\"] = \"\\uE79E\";\n    // U+E7C8  Metal beater down\n    Glyphs[\"pictBeaterMetalDown\"] = \"\\uE7C8\";\n    // U+E7E0  Metal hammer\n    Glyphs[\"pictBeaterMetalHammer\"] = \"\\uE7E0\";\n    // U+E7CA  Metal beater, left\n    Glyphs[\"pictBeaterMetalLeft\"] = \"\\uE7CA\";\n    // U+E7C9  Metal beater, right\n    Glyphs[\"pictBeaterMetalRight\"] = \"\\uE7C9\";\n    // U+E7C7  Metal beater, up\n    Glyphs[\"pictBeaterMetalUp\"] = \"\\uE7C7\";\n    // U+E7D2  Snare sticks down\n    Glyphs[\"pictBeaterSnareSticksDown\"] = \"\\uE7D2\";\n    // U+E7D1  Snare sticks up\n    Glyphs[\"pictBeaterSnareSticksUp\"] = \"\\uE7D1\";\n    // U+E799  Soft bass drum stick down\n    Glyphs[\"pictBeaterSoftBassDrumDown\"] = \"\\uE799\";\n    // U+E798  Soft bass drum stick up\n    Glyphs[\"pictBeaterSoftBassDrumUp\"] = \"\\uE798\";\n    // U+E781  Soft glockenspiel stick down\n    Glyphs[\"pictBeaterSoftGlockenspielDown\"] = \"\\uE781\";\n    // U+E783  Soft glockenspiel stick left\n    Glyphs[\"pictBeaterSoftGlockenspielLeft\"] = \"\\uE783\";\n    // U+E782  Soft glockenspiel stick right\n    Glyphs[\"pictBeaterSoftGlockenspielRight\"] = \"\\uE782\";\n    // U+E780  Soft glockenspiel stick up\n    Glyphs[\"pictBeaterSoftGlockenspielUp\"] = \"\\uE780\";\n    // U+E789  Soft timpani stick down\n    Glyphs[\"pictBeaterSoftTimpaniDown\"] = \"\\uE789\";\n    // U+E78B  Soft timpani stick left\n    Glyphs[\"pictBeaterSoftTimpaniLeft\"] = \"\\uE78B\";\n    // U+E78A  Soft timpani stick right\n    Glyphs[\"pictBeaterSoftTimpaniRight\"] = \"\\uE78A\";\n    // U+E788  Soft timpani stick up\n    Glyphs[\"pictBeaterSoftTimpaniUp\"] = \"\\uE788\";\n    // U+E7DB  Soft xylophone beaters\n    Glyphs[\"pictBeaterSoftXylophone\"] = \"\\uE7DB\";\n    // U+E771  Soft xylophone stick down\n    Glyphs[\"pictBeaterSoftXylophoneDown\"] = \"\\uE771\";\n    // U+E773  Soft xylophone stick left\n    Glyphs[\"pictBeaterSoftXylophoneLeft\"] = \"\\uE773\";\n    // U+E772  Soft xylophone stick right\n    Glyphs[\"pictBeaterSoftXylophoneRight\"] = \"\\uE772\";\n    // U+E770  Soft xylophone stick up\n    Glyphs[\"pictBeaterSoftXylophoneUp\"] = \"\\uE770\";\n    // U+E7A3  Soft yarn beater down\n    Glyphs[\"pictBeaterSoftYarnDown\"] = \"\\uE7A3\";\n    // U+E7A5  Soft yarn beater left\n    Glyphs[\"pictBeaterSoftYarnLeft\"] = \"\\uE7A5\";\n    // U+E7A4  Soft yarn beater right\n    Glyphs[\"pictBeaterSoftYarnRight\"] = \"\\uE7A4\";\n    // U+E7A2  Soft yarn beater up\n    Glyphs[\"pictBeaterSoftYarnUp\"] = \"\\uE7A2\";\n    // U+E7DC  Spoon-shaped wooden mallet\n    Glyphs[\"pictBeaterSpoonWoodenMallet\"] = \"\\uE7DC\";\n    // U+E7AF  Superball beater down\n    Glyphs[\"pictBeaterSuperballDown\"] = \"\\uE7AF\";\n    // U+E7B1  Superball beater left\n    Glyphs[\"pictBeaterSuperballLeft\"] = \"\\uE7B1\";\n    // U+E7B0  Superball beater right\n    Glyphs[\"pictBeaterSuperballRight\"] = \"\\uE7B0\";\n    // U+E7AE  Superball beater up\n    Glyphs[\"pictBeaterSuperballUp\"] = \"\\uE7AE\";\n    // U+E7D6  Triangle beater down\n    Glyphs[\"pictBeaterTriangleDown\"] = \"\\uE7D6\";\n    // U+E7EF  Triangle beater plain\n    Glyphs[\"pictBeaterTrianglePlain\"] = \"\\uE7EF\";\n    // U+E7D5  Triangle beater up\n    Glyphs[\"pictBeaterTriangleUp\"] = \"\\uE7D5\";\n    // U+E7D8  Wire brushes down\n    Glyphs[\"pictBeaterWireBrushesDown\"] = \"\\uE7D8\";\n    // U+E7D7  Wire brushes up\n    Glyphs[\"pictBeaterWireBrushesUp\"] = \"\\uE7D7\";\n    // U+E795  Wood timpani stick down\n    Glyphs[\"pictBeaterWoodTimpaniDown\"] = \"\\uE795\";\n    // U+E797  Wood timpani stick left\n    Glyphs[\"pictBeaterWoodTimpaniLeft\"] = \"\\uE797\";\n    // U+E796  Wood timpani stick right\n    Glyphs[\"pictBeaterWoodTimpaniRight\"] = \"\\uE796\";\n    // U+E794  Wood timpani stick up\n    Glyphs[\"pictBeaterWoodTimpaniUp\"] = \"\\uE794\";\n    // U+E77D  Wood xylophone stick down\n    Glyphs[\"pictBeaterWoodXylophoneDown\"] = \"\\uE77D\";\n    // U+E77F  Wood xylophone stick left\n    Glyphs[\"pictBeaterWoodXylophoneLeft\"] = \"\\uE77F\";\n    // U+E77E  Wood xylophone stick right\n    Glyphs[\"pictBeaterWoodXylophoneRight\"] = \"\\uE77E\";\n    // U+E77C  Wood xylophone stick up\n    Glyphs[\"pictBeaterWoodXylophoneUp\"] = \"\\uE77C\";\n    // U+E714  Bell\n    Glyphs[\"pictBell\"] = \"\\uE714\";\n    // U+E72A  Bell of cymbal\n    Glyphs[\"pictBellOfCymbal\"] = \"\\uE72A\";\n    // U+E713  Bell plate\n    Glyphs[\"pictBellPlate\"] = \"\\uE713\";\n    // U+E71A  Bell tree\n    Glyphs[\"pictBellTree\"] = \"\\uE71A\";\n    // U+E751  Bird whistle\n    Glyphs[\"pictBirdWhistle\"] = \"\\uE751\";\n    // U+E6F7  Board clapper\n    Glyphs[\"pictBoardClapper\"] = \"\\uE6F7\";\n    // U+E6DD  Bongos\n    Glyphs[\"pictBongos\"] = \"\\uE6DD\";\n    // U+E6E1  Brake drum\n    Glyphs[\"pictBrakeDrum\"] = \"\\uE6E1\";\n    // U+E743  Cabasa\n    Glyphs[\"pictCabasa\"] = \"\\uE743\";\n    // U+E761  Cannon\n    Glyphs[\"pictCannon\"] = \"\\uE761\";\n    // U+E755  Car horn\n    Glyphs[\"pictCarHorn\"] = \"\\uE755\";\n    // U+E6F8  Castanets\n    Glyphs[\"pictCastanets\"] = \"\\uE6F8\";\n    // U+E6F9  Castanets with handle\n    Glyphs[\"pictCastanetsWithHandle\"] = \"\\uE6F9\";\n    // U+E6B0  Celesta\n    Glyphs[\"pictCelesta\"] = \"\\uE6B0\";\n    // U+E716  Cencerro\n    Glyphs[\"pictCencerro\"] = \"\\uE716\";\n    // U+E7FE  Center (Weinberg)\n    Glyphs[\"pictCenter1\"] = \"\\uE7FE\";\n    // U+E7FF  Center (Ghent)\n    Glyphs[\"pictCenter2\"] = \"\\uE7FF\";\n    // U+E800  Center (Caltabiano)\n    Glyphs[\"pictCenter3\"] = \"\\uE800\";\n    // U+E748  Chain rattle\n    Glyphs[\"pictChainRattle\"] = \"\\uE748\";\n    // U+E6C2  Chimes\n    Glyphs[\"pictChimes\"] = \"\\uE6C2\";\n    // U+E726  Chinese cymbal\n    Glyphs[\"pictChineseCymbal\"] = \"\\uE726\";\n    // U+E805  Choke (Weinberg)\n    Glyphs[\"pictChokeCymbal\"] = \"\\uE805\";\n    // U+E6F2  Claves\n    Glyphs[\"pictClaves\"] = \"\\uE6F2\";\n    // U+E7E7  Coins\n    Glyphs[\"pictCoins\"] = \"\\uE7E7\";\n    // U+E6DE  Conga\n    Glyphs[\"pictConga\"] = \"\\uE6DE\";\n    // U+E711  Cow bell\n    Glyphs[\"pictCowBell\"] = \"\\uE711\";\n    // U+E720  Crash cymbals\n    Glyphs[\"pictCrashCymbals\"] = \"\\uE720\";\n    // U+E6AE  Crotales\n    Glyphs[\"pictCrotales\"] = \"\\uE6AE\";\n    // U+E80C  Combining crush for stem\n    Glyphs[\"pictCrushStem\"] = \"\\uE80C\";\n    // U+E6E4  Cuica\n    Glyphs[\"pictCuica\"] = \"\\uE6E4\";\n    // U+E728  Cymbal tongs\n    Glyphs[\"pictCymbalTongs\"] = \"\\uE728\";\n    // U+E7F9  Damp\n    Glyphs[\"pictDamp1\"] = \"\\uE7F9\";\n    // U+E7FA  Damp 2\n    Glyphs[\"pictDamp2\"] = \"\\uE7FA\";\n    // U+E7FB  Damp 3\n    Glyphs[\"pictDamp3\"] = \"\\uE7FB\";\n    // U+E7FC  Damp 4\n    Glyphs[\"pictDamp4\"] = \"\\uE7FC\";\n    // U+E80D  Combining X for stem (dead note)\n    Glyphs[\"pictDeadNoteStem\"] = \"\\uE80D\";\n    // U+E7E8  Drum stick\n    Glyphs[\"pictDrumStick\"] = \"\\uE7E8\";\n    // U+E757  Duck call\n    Glyphs[\"pictDuckCall\"] = \"\\uE757\";\n    // U+E729  Edge of cymbal\n    Glyphs[\"pictEdgeOfCymbal\"] = \"\\uE729\";\n    // U+E6A9  Empty trapezoid\n    Glyphs[\"pictEmptyTrap\"] = \"\\uE6A9\";\n    // U+E727  Finger cymbals\n    Glyphs[\"pictFingerCymbals\"] = \"\\uE727\";\n    // U+E740  Flexatone\n    Glyphs[\"pictFlexatone\"] = \"\\uE740\";\n    // U+E6F5  Football rattle\n    Glyphs[\"pictFootballRatchet\"] = \"\\uE6F5\";\n    // U+E765  Glass harmonica\n    Glyphs[\"pictGlassHarmonica\"] = \"\\uE765\";\n    // U+E764  Glass harp\n    Glyphs[\"pictGlassHarp\"] = \"\\uE764\";\n    // U+E6C6  Glass plate chimes\n    Glyphs[\"pictGlassPlateChimes\"] = \"\\uE6C6\";\n    // U+E6C5  Glass tube chimes\n    Glyphs[\"pictGlassTubeChimes\"] = \"\\uE6C5\";\n    // U+E6A0  Glockenspiel\n    Glyphs[\"pictGlsp\"] = \"\\uE6A0\";\n    // U+E6AA  Glockenspiel (Smith Brindle)\n    Glyphs[\"pictGlspSmithBrindle\"] = \"\\uE6AA\";\n    // U+E6E2  Goblet drum (djembe, dumbek)\n    Glyphs[\"pictGobletDrum\"] = \"\\uE6E2\";\n    // U+E732  Gong\n    Glyphs[\"pictGong\"] = \"\\uE732\";\n    // U+E733  Gong with button (nipple)\n    Glyphs[\"pictGongWithButton\"] = \"\\uE733\";\n    // U+E6F3  Guiro\n    Glyphs[\"pictGuiro\"] = \"\\uE6F3\";\n    // U+E7C4  Hard gum beater, down\n    Glyphs[\"pictGumHardDown\"] = \"\\uE7C4\";\n    // U+E7C6  Hard gum beater, left\n    Glyphs[\"pictGumHardLeft\"] = \"\\uE7C6\";\n    // U+E7C5  Hard gum beater, right\n    Glyphs[\"pictGumHardRight\"] = \"\\uE7C5\";\n    // U+E7C3  Hard gum beater, up\n    Glyphs[\"pictGumHardUp\"] = \"\\uE7C3\";\n    // U+E7C0  Medium gum beater, down\n    Glyphs[\"pictGumMediumDown\"] = \"\\uE7C0\";\n    // U+E7C2  Medium gum beater, left\n    Glyphs[\"pictGumMediumLeft\"] = \"\\uE7C2\";\n    // U+E7C1  Medium gum beater, right\n    Glyphs[\"pictGumMediumRight\"] = \"\\uE7C1\";\n    // U+E7BF  Medium gum beater, up\n    Glyphs[\"pictGumMediumUp\"] = \"\\uE7BF\";\n    // U+E7BC  Soft gum beater, down\n    Glyphs[\"pictGumSoftDown\"] = \"\\uE7BC\";\n    // U+E7BE  Soft gum beater, left\n    Glyphs[\"pictGumSoftLeft\"] = \"\\uE7BE\";\n    // U+E7BD  Soft gum beater, right\n    Glyphs[\"pictGumSoftRight\"] = \"\\uE7BD\";\n    // U+E7BB  Soft gum beater, up\n    Glyphs[\"pictGumSoftUp\"] = \"\\uE7BB\";\n    // U+E7F6  Half-open\n    Glyphs[\"pictHalfOpen1\"] = \"\\uE7F6\";\n    // U+E7F7  Half-open 2 (Weinberg)\n    Glyphs[\"pictHalfOpen2\"] = \"\\uE7F7\";\n    // U+E715  Handbell\n    Glyphs[\"pictHandbell\"] = \"\\uE715\";\n    // U+E722  Hi-hat\n    Glyphs[\"pictHiHat\"] = \"\\uE722\";\n    // U+E723  Hi-hat cymbals on stand\n    Glyphs[\"pictHiHatOnStand\"] = \"\\uE723\";\n    // U+E767  Jaw harp\n    Glyphs[\"pictJawHarp\"] = \"\\uE767\";\n    // U+E719  Jingle bells\n    Glyphs[\"pictJingleBells\"] = \"\\uE719\";\n    // U+E756  Klaxon horn\n    Glyphs[\"pictKlaxonHorn\"] = \"\\uE756\";\n    // U+E807  Right hand (Agostini)\n    Glyphs[\"pictLeftHandCircle\"] = \"\\uE807\";\n    // U+E763  Lion's roar\n    Glyphs[\"pictLionsRoar\"] = \"\\uE763\";\n    // U+E6B1  Lithophone\n    Glyphs[\"pictLithophone\"] = \"\\uE6B1\";\n    // U+E6DF  Log drum\n    Glyphs[\"pictLogDrum\"] = \"\\uE6DF\";\n    // U+E75A  Lotus flute\n    Glyphs[\"pictLotusFlute\"] = \"\\uE75A\";\n    // U+E6A6  Marimba\n    Glyphs[\"pictMar\"] = \"\\uE6A6\";\n    // U+E6AC  Marimba (Smith Brindle)\n    Glyphs[\"pictMarSmithBrindle\"] = \"\\uE6AC\";\n    // U+E741  Maraca\n    Glyphs[\"pictMaraca\"] = \"\\uE741\";\n    // U+E742  Maracas\n    Glyphs[\"pictMaracas\"] = \"\\uE742\";\n    // U+E759  Megaphone\n    Glyphs[\"pictMegaphone\"] = \"\\uE759\";\n    // U+E6C8  Metal plate chimes\n    Glyphs[\"pictMetalPlateChimes\"] = \"\\uE6C8\";\n    // U+E6C7  Metal tube chimes\n    Glyphs[\"pictMetalTubeChimes\"] = \"\\uE6C7\";\n    // U+E766  Musical saw\n    Glyphs[\"pictMusicalSaw\"] = \"\\uE766\";\n    // U+E804  Normal position (Caltabiano)\n    Glyphs[\"pictNormalPosition\"] = \"\\uE804\";\n    // U+E7F4  On rim\n    Glyphs[\"pictOnRim\"] = \"\\uE7F4\";\n    // U+E7F8  Open\n    Glyphs[\"pictOpen\"] = \"\\uE7F8\";\n    // U+E7F5  Closed / rim shot\n    Glyphs[\"pictOpenRimShot\"] = \"\\uE7F5\";\n    // U+E760  Pistol shot\n    Glyphs[\"pictPistolShot\"] = \"\\uE760\";\n    // U+E752  Police whistle\n    Glyphs[\"pictPoliceWhistle\"] = \"\\uE752\";\n    // U+E6FA  Quijada (jawbone)\n    Glyphs[\"pictQuijada\"] = \"\\uE6FA\";\n    // U+E747  Rainstick\n    Glyphs[\"pictRainstick\"] = \"\\uE747\";\n    // U+E6F4  Ratchet\n    Glyphs[\"pictRatchet\"] = \"\\uE6F4\";\n    // U+E6FC  Reco-reco\n    Glyphs[\"pictRecoReco\"] = \"\\uE6FC\";\n    // U+E806  Left hand (Agostini)\n    Glyphs[\"pictRightHandSquare\"] = \"\\uE806\";\n    // U+E801  Rim or edge (Weinberg)\n    Glyphs[\"pictRim1\"] = \"\\uE801\";\n    // U+E802  Rim (Ghent)\n    Glyphs[\"pictRim2\"] = \"\\uE802\";\n    // U+E803  Rim (Caltabiano)\n    Glyphs[\"pictRim3\"] = \"\\uE803\";\n    // U+E7FD  Rim shot for stem\n    Glyphs[\"pictRimShotOnStem\"] = \"\\uE7FD\";\n    // U+E762  Sandpaper blocks\n    Glyphs[\"pictSandpaperBlocks\"] = \"\\uE762\";\n    // U+E7F3  Scrape around rim (counter-clockwise)\n    Glyphs[\"pictScrapeAroundRim\"] = \"\\uE7F3\";\n    // U+E80E  Scrape around rim (clockwise)\n    Glyphs[\"pictScrapeAroundRimClockwise\"] = \"\\uE80E\";\n    // U+E7F1  Scrape from center to edge\n    Glyphs[\"pictScrapeCenterToEdge\"] = \"\\uE7F1\";\n    // U+E7F2  Scrape from edge to center\n    Glyphs[\"pictScrapeEdgeToCenter\"] = \"\\uE7F2\";\n    // U+E718  Shell bells\n    Glyphs[\"pictShellBells\"] = \"\\uE718\";\n    // U+E6C4  Shell chimes\n    Glyphs[\"pictShellChimes\"] = \"\\uE6C4\";\n    // U+E753  Siren\n    Glyphs[\"pictSiren\"] = \"\\uE753\";\n    // U+E746  Sistrum\n    Glyphs[\"pictSistrum\"] = \"\\uE746\";\n    // U+E724  Sizzle cymbal\n    Glyphs[\"pictSizzleCymbal\"] = \"\\uE724\";\n    // U+E710  Sleigh bell\n    Glyphs[\"pictSleighBell\"] = \"\\uE710\";\n    // U+E734  Slide brush on gong\n    Glyphs[\"pictSlideBrushOnGong\"] = \"\\uE734\";\n    // U+E750  Slide whistle\n    Glyphs[\"pictSlideWhistle\"] = \"\\uE750\";\n    // U+E6E0  Slit drum\n    Glyphs[\"pictSlitDrum\"] = \"\\uE6E0\";\n    // U+E6D1  Snare drum\n    Glyphs[\"pictSnareDrum\"] = \"\\uE6D1\";\n    // U+E6D3  Military snare drum\n    Glyphs[\"pictSnareDrumMilitary\"] = \"\\uE6D3\";\n    // U+E6D2  Snare drum, snares off\n    Glyphs[\"pictSnareDrumSnaresOff\"] = \"\\uE6D2\";\n    // U+E6AF  Steel drums\n    Glyphs[\"pictSteelDrums\"] = \"\\uE6AF\";\n    // U+E7F0  Stick shot\n    Glyphs[\"pictStickShot\"] = \"\\uE7F0\";\n    // U+E7B2  Superball\n    Glyphs[\"pictSuperball\"] = \"\\uE7B2\";\n    // U+E721  Suspended cymbal\n    Glyphs[\"pictSuspendedCymbal\"] = \"\\uE721\";\n    // U+E808  Combining swish for stem\n    Glyphs[\"pictSwishStem\"] = \"\\uE808\";\n    // U+E6E3  Indian tabla\n    Glyphs[\"pictTabla\"] = \"\\uE6E3\";\n    // U+E730  Tam-tam\n    Glyphs[\"pictTamTam\"] = \"\\uE730\";\n    // U+E731  Tam-tam with beater (Smith Brindle)\n    Glyphs[\"pictTamTamWithBeater\"] = \"\\uE731\";\n    // U+E6DB  Tambourine\n    Glyphs[\"pictTambourine\"] = \"\\uE6DB\";\n    // U+E6F1  Temple blocks\n    Glyphs[\"pictTempleBlocks\"] = \"\\uE6F1\";\n    // U+E6D6  Tenor drum\n    Glyphs[\"pictTenorDrum\"] = \"\\uE6D6\";\n    // U+E744  Thundersheet\n    Glyphs[\"pictThundersheet\"] = \"\\uE744\";\n    // U+E6DC  Timbales\n    Glyphs[\"pictTimbales\"] = \"\\uE6DC\";\n    // U+E6D0  Timpani\n    Glyphs[\"pictTimpani\"] = \"\\uE6D0\";\n    // U+E6D7  Tom-tom\n    Glyphs[\"pictTomTom\"] = \"\\uE6D7\";\n    // U+E6D8  Chinese tom-tom\n    Glyphs[\"pictTomTomChinese\"] = \"\\uE6D8\";\n    // U+E6DA  Indo-American tom tom\n    Glyphs[\"pictTomTomIndoAmerican\"] = \"\\uE6DA\";\n    // U+E6D9  Japanese tom-tom\n    Glyphs[\"pictTomTomJapanese\"] = \"\\uE6D9\";\n    // U+E700  Triangle\n    Glyphs[\"pictTriangle\"] = \"\\uE700\";\n    // U+E6B2  Tubaphone\n    Glyphs[\"pictTubaphone\"] = \"\\uE6B2\";\n    // U+E6C0  Tubular bells\n    Glyphs[\"pictTubularBells\"] = \"\\uE6C0\";\n    // U+E80A  Combining turn left for stem\n    Glyphs[\"pictTurnLeftStem\"] = \"\\uE80A\";\n    // U+E80B  Combining turn left or right for stem\n    Glyphs[\"pictTurnRightLeftStem\"] = \"\\uE80B\";\n    // U+E809  Combining turn right for stem\n    Glyphs[\"pictTurnRightStem\"] = \"\\uE809\";\n    // U+E6A7  Vibraphone\n    Glyphs[\"pictVib\"] = \"\\uE6A7\";\n    // U+E6A8  Metallophone (vibraphone motor off)\n    Glyphs[\"pictVibMotorOff\"] = \"\\uE6A8\";\n    // U+E6AD  Vibraphone (Smith Brindle)\n    Glyphs[\"pictVibSmithBrindle\"] = \"\\uE6AD\";\n    // U+E745  Vibraslap\n    Glyphs[\"pictVibraslap\"] = \"\\uE745\";\n    // U+E725  Vietnamese hat cymbal\n    Glyphs[\"pictVietnameseHat\"] = \"\\uE725\";\n    // U+E6F6  Whip\n    Glyphs[\"pictWhip\"] = \"\\uE6F6\";\n    // U+E6C1  Wind chimes (glass)\n    Glyphs[\"pictWindChimesGlass\"] = \"\\uE6C1\";\n    // U+E754  Wind machine\n    Glyphs[\"pictWindMachine\"] = \"\\uE754\";\n    // U+E758  Wind whistle (or mouth siren)\n    Glyphs[\"pictWindWhistle\"] = \"\\uE758\";\n    // U+E6F0  Wood block\n    Glyphs[\"pictWoodBlock\"] = \"\\uE6F0\";\n    // U+E7B4  Wound beater, hard core down\n    Glyphs[\"pictWoundHardDown\"] = \"\\uE7B4\";\n    // U+E7B6  Wound beater, hard core left\n    Glyphs[\"pictWoundHardLeft\"] = \"\\uE7B6\";\n    // U+E7B5  Wound beater, hard core right\n    Glyphs[\"pictWoundHardRight\"] = \"\\uE7B5\";\n    // U+E7B3  Wound beater, hard core up\n    Glyphs[\"pictWoundHardUp\"] = \"\\uE7B3\";\n    // U+E7B8  Wound beater, soft core down\n    Glyphs[\"pictWoundSoftDown\"] = \"\\uE7B8\";\n    // U+E7BA  Wound beater, soft core left\n    Glyphs[\"pictWoundSoftLeft\"] = \"\\uE7BA\";\n    // U+E7B9  Wound beater, soft core right\n    Glyphs[\"pictWoundSoftRight\"] = \"\\uE7B9\";\n    // U+E7B7  Wound beater, soft core up\n    Glyphs[\"pictWoundSoftUp\"] = \"\\uE7B7\";\n    // U+E6A1  Xylophone\n    Glyphs[\"pictXyl\"] = \"\\uE6A1\";\n    // U+E6A3  Bass xylophone\n    Glyphs[\"pictXylBass\"] = \"\\uE6A3\";\n    // U+E6AB  Xylophone (Smith Brindle)\n    Glyphs[\"pictXylSmithBrindle\"] = \"\\uE6AB\";\n    // U+E6A2  Tenor xylophone\n    Glyphs[\"pictXylTenor\"] = \"\\uE6A2\";\n    // U+E6A5  Trough tenor xylophone\n    Glyphs[\"pictXylTenorTrough\"] = \"\\uE6A5\";\n    // U+E6A4  Trough xylophone\n    Glyphs[\"pictXylTrough\"] = \"\\uE6A4\";\n    // U+E632  Buzz pizzicato\n    Glyphs[\"pluckedBuzzPizzicato\"] = \"\\uE632\";\n    // U+E638  Damp\n    Glyphs[\"pluckedDamp\"] = \"\\uE638\";\n    // U+1D1B4  Damp\n    Glyphs[\"pluckedDampAlternate\"] = \"\\uD834\\uDDB4\";\n    // U+E639  Damp all\n    Glyphs[\"pluckedDampAll\"] = \"\\uE639\";\n    // U+1D1B5  Damp all\n    Glyphs[\"pluckedDampAllAlternate\"] = \"\\uD834\\uDDB5\";\n    // U+E63B  Damp for stem\n    Glyphs[\"pluckedDampOnStem\"] = \"\\uE63B\";\n    // U+E637  Fingernail flick\n    Glyphs[\"pluckedFingernailFlick\"] = \"\\uE637\";\n    // U+E633  Left-hand pizzicato\n    Glyphs[\"pluckedLeftHandPizzicato\"] = \"\\uE633\";\n    // U+E63A  Plectrum\n    Glyphs[\"pluckedPlectrum\"] = \"\\uE63A\";\n    // U+E631  Snap pizzicato above\n    Glyphs[\"pluckedSnapPizzicatoAbove\"] = \"\\uE631\";\n    // U+E630  Snap pizzicato below\n    Glyphs[\"pluckedSnapPizzicatoBelow\"] = \"\\uE630\";\n    // U+1D1AD  Snap pizzicato below\n    Glyphs[\"pluckedSnapPizzicatoBelowAlternate\"] = \"\\uD834\\uDDAD\";\n    // U+E636  With fingernails\n    Glyphs[\"pluckedWithFingernails\"] = \"\\uE636\";\n    // U+1D1B3  With fingernails\n    Glyphs[\"pluckedWithFingernailsAlternate\"] = \"\\uD834\\uDDB3\";\n    // U+E514  Quindicesima\n    Glyphs[\"quindicesima\"] = \"\\uE514\";\n    // U+E515  Quindicesima alta\n    Glyphs[\"quindicesimaAlta\"] = \"\\uE515\";\n    // U+E516  Quindicesima bassa\n    Glyphs[\"quindicesimaBassa\"] = \"\\uE516\";\n    // U+1D139  Quindicesima bassa\n    Glyphs[\"quindicesimaBassaAlternate\"] = \"\\uD834\\uDD39\";\n    // U+E51D  Quindicesima bassa (mb)\n    Glyphs[\"quindicesimaBassaMb\"] = \"\\uE51D\";\n    // U+E500  Repeat last bar\n    Glyphs[\"repeat1Bar\"] = \"\\uE500\";\n    // U+1D10E  Repeat last bar\n    Glyphs[\"repeat1BarAlternate\"] = \"\\uD834\\uDD0E\";\n    // U+E501  Repeat last two bars\n    Glyphs[\"repeat2Bars\"] = \"\\uE501\";\n    // U+1D10F  Repeat last two bars\n    Glyphs[\"repeat2BarsAlternate\"] = \"\\uD834\\uDD0F\";\n    // U+E502  Repeat last four bars\n    Glyphs[\"repeat4Bars\"] = \"\\uE502\";\n    // U+E505  Repeat bar lower dot\n    Glyphs[\"repeatBarLowerDot\"] = \"\\uE505\";\n    // U+E504  Repeat bar slash\n    Glyphs[\"repeatBarSlash\"] = \"\\uE504\";\n    // U+E503  Repeat bar upper dot\n    Glyphs[\"repeatBarUpperDot\"] = \"\\uE503\";\n    // U+E044  Single repeat dot\n    Glyphs[\"repeatDot\"] = \"\\uE044\";\n    // U+E043  Repeat dots\n    Glyphs[\"repeatDots\"] = \"\\uE043\";\n    // U+1D108  Repeat dots\n    Glyphs[\"repeatDotsAlternate\"] = \"\\uD834\\uDD08\";\n    // U+E040  Left (start) repeat sign\n    Glyphs[\"repeatLeft\"] = \"\\uE040\";\n    // U+1D106  Left (start) repeat sign\n    Glyphs[\"repeatLeftAlternate\"] = \"\\uD834\\uDD06\";\n    // U+E041  Right (end) repeat sign\n    Glyphs[\"repeatRight\"] = \"\\uE041\";\n    // U+1D107  Right (end) repeat sign\n    Glyphs[\"repeatRightAlternate\"] = \"\\uD834\\uDD07\";\n    // U+E042  Right and left repeat sign\n    Glyphs[\"repeatRightLeft\"] = \"\\uE042\";\n    // U+E4ED  1024th rest\n    Glyphs[\"rest1024th\"] = \"\\uE4ED\";\n    // U+E4EA  128th (semihemidemisemiquaver) rest\n    Glyphs[\"rest128th\"] = \"\\uE4EA\";\n    // U+1D142  128th (semihemidemisemiquaver) rest\n    Glyphs[\"rest128thAlternate\"] = \"\\uD834\\uDD42\";\n    // U+E4E7  16th (semiquaver) rest\n    Glyphs[\"rest16th\"] = \"\\uE4E7\";\n    // U+1D13F  16th (semiquaver) rest\n    Glyphs[\"rest16thAlternate\"] = \"\\uD834\\uDD3F\";\n    // U+E4EB  256th rest\n    Glyphs[\"rest256th\"] = \"\\uE4EB\";\n    // U+E4E8  32nd (demisemiquaver) rest\n    Glyphs[\"rest32nd\"] = \"\\uE4E8\";\n    // U+1D140  32nd (demisemiquaver) rest\n    Glyphs[\"rest32ndAlternate\"] = \"\\uD834\\uDD40\";\n    // U+E4EC  512th rest\n    Glyphs[\"rest512th\"] = \"\\uE4EC\";\n    // U+E4E9  64th (hemidemisemiquaver) rest\n    Glyphs[\"rest64th\"] = \"\\uE4E9\";\n    // U+1D141  64th (hemidemisemiquaver) rest\n    Glyphs[\"rest64thAlternate\"] = \"\\uD834\\uDD41\";\n    // U+E4E6  Eighth (quaver) rest\n    Glyphs[\"rest8th\"] = \"\\uE4E6\";\n    // U+1D13E  Eighth (quaver) rest\n    Glyphs[\"rest8thAlternate\"] = \"\\uD834\\uDD3E\";\n    // U+E4E2  Double whole (breve) rest\n    Glyphs[\"restDoubleWhole\"] = \"\\uE4E2\";\n    // U+1D13A  Double whole (breve) rest\n    Glyphs[\"restDoubleWholeAlternate\"] = \"\\uD834\\uDD3A\";\n    // U+E4F3  Double whole rest on leger lines\n    Glyphs[\"restDoubleWholeLegerLine\"] = \"\\uE4F3\";\n    // U+E4EE  Multiple measure rest\n    Glyphs[\"restHBar\"] = \"\\uE4EE\";\n    // U+1D129  Multiple measure rest\n    Glyphs[\"restHBarAlternate\"] = \"\\uD834\\uDD29\";\n    // U+E4EF  H-bar, left half\n    Glyphs[\"restHBarLeft\"] = \"\\uE4EF\";\n    // U+E4F0  H-bar, middle\n    Glyphs[\"restHBarMiddle\"] = \"\\uE4F0\";\n    // U+E4F1  H-bar, right half\n    Glyphs[\"restHBarRight\"] = \"\\uE4F1\";\n    // U+E4E4  Half (minim) rest\n    Glyphs[\"restHalf\"] = \"\\uE4E4\";\n    // U+1D13C  Half (minim) rest\n    Glyphs[\"restHalfAlternate\"] = \"\\uD834\\uDD3C\";\n    // U+E4F5  Half rest on leger line\n    Glyphs[\"restHalfLegerLine\"] = \"\\uE4F5\";\n    // U+E4E1  Longa rest\n    Glyphs[\"restLonga\"] = \"\\uE4E1\";\n    // U+E4E0  Maxima rest\n    Glyphs[\"restMaxima\"] = \"\\uE4E0\";\n    // U+E4E5  Quarter (crotchet) rest\n    Glyphs[\"restQuarter\"] = \"\\uE4E5\";\n    // U+1D13D  Quarter (crotchet) rest\n    Glyphs[\"restQuarterAlternate\"] = \"\\uD834\\uDD3D\";\n    // U+E4F2  Old-style quarter (crotchet) rest\n    Glyphs[\"restQuarterOld\"] = \"\\uE4F2\";\n    // U+E4F6  Z-style quarter (crotchet) rest\n    Glyphs[\"restQuarterZ\"] = \"\\uE4F6\";\n    // U+E4E3  Whole (semibreve) rest\n    Glyphs[\"restWhole\"] = \"\\uE4E3\";\n    // U+1D13B  Whole (semibreve) rest\n    Glyphs[\"restWholeAlternate\"] = \"\\uD834\\uDD3B\";\n    // U+E4F4  Whole rest on leger line\n    Glyphs[\"restWholeLegerLine\"] = \"\\uE4F4\";\n    // U+E001  Reversed brace\n    Glyphs[\"reversedBrace\"] = \"\\uE001\";\n    // U+E006  Reversed bracket bottom\n    Glyphs[\"reversedBracketBottom\"] = \"\\uE006\";\n    // U+E005  Reversed bracket top\n    Glyphs[\"reversedBracketTop\"] = \"\\uE005\";\n    // U+E04D  Right repeat sign within bar\n    Glyphs[\"rightRepeatSmall\"] = \"\\uE04D\";\n    // U+EF00  Scale degree 1\n    Glyphs[\"scaleDegree1\"] = \"\\uEF00\";\n    // U+EF01  Scale degree 2\n    Glyphs[\"scaleDegree2\"] = \"\\uEF01\";\n    // U+EF02  Scale degree 3\n    Glyphs[\"scaleDegree3\"] = \"\\uEF02\";\n    // U+EF03  Scale degree 4\n    Glyphs[\"scaleDegree4\"] = \"\\uEF03\";\n    // U+EF04  Scale degree 5\n    Glyphs[\"scaleDegree5\"] = \"\\uEF04\";\n    // U+EF05  Scale degree 6\n    Glyphs[\"scaleDegree6\"] = \"\\uEF05\";\n    // U+EF06  Scale degree 7\n    Glyphs[\"scaleDegree7\"] = \"\\uEF06\";\n    // U+EF07  Scale degree 8\n    Glyphs[\"scaleDegree8\"] = \"\\uEF07\";\n    // U+EF08  Scale degree 9\n    Glyphs[\"scaleDegree9\"] = \"\\uEF08\";\n    // U+E06F  Schäffer clef\n    Glyphs[\"schaefferClef\"] = \"\\uE06F\";\n    // U+E072  Schäffer F clef to G clef change\n    Glyphs[\"schaefferFClefToGClef\"] = \"\\uE072\";\n    // U+E071  Schäffer G clef to F clef change\n    Glyphs[\"schaefferGClefToFClef\"] = \"\\uE071\";\n    // U+E070  Schäffer previous clef\n    Glyphs[\"schaefferPreviousClef\"] = \"\\uE070\";\n    // U+E047  Segno\n    Glyphs[\"segno\"] = \"\\uE047\";\n    // U+1D10B  Segno\n    Glyphs[\"segnoAlternate\"] = \"\\uD834\\uDD0B\";\n    // U+E04A  Segno (serpent)\n    Glyphs[\"segnoSerpent1\"] = \"\\uE04A\";\n    // U+E04B  Segno (serpent with vertical lines)\n    Glyphs[\"segnoSerpent2\"] = \"\\uE04B\";\n    // U+E06B  Semi-pitched percussion clef 1\n    Glyphs[\"semipitchedPercussionClef1\"] = \"\\uE06B\";\n    // U+E06C  Semi-pitched percussion clef 2\n    Glyphs[\"semipitchedPercussionClef2\"] = \"\\uE06C\";\n    // U+EC52  Flat\n    Glyphs[\"smnFlat\"] = \"\\uEC52\";\n    // U+EC53  Flat (white)\n    Glyphs[\"smnFlatWhite\"] = \"\\uEC53\";\n    // U+EC57  Double flat history sign\n    Glyphs[\"smnHistoryDoubleFlat\"] = \"\\uEC57\";\n    // U+EC55  Double sharp history sign\n    Glyphs[\"smnHistoryDoubleSharp\"] = \"\\uEC55\";\n    // U+EC56  Flat history sign\n    Glyphs[\"smnHistoryFlat\"] = \"\\uEC56\";\n    // U+EC54  Sharp history sign\n    Glyphs[\"smnHistorySharp\"] = \"\\uEC54\";\n    // U+EC58  Natural (N)\n    Glyphs[\"smnNatural\"] = \"\\uEC58\";\n    // U+EC50  Sharp stem up\n    Glyphs[\"smnSharp\"] = \"\\uEC50\";\n    // U+EC59  Sharp stem down\n    Glyphs[\"smnSharpDown\"] = \"\\uEC59\";\n    // U+EC51  Sharp (white) stem up\n    Glyphs[\"smnSharpWhite\"] = \"\\uEC51\";\n    // U+EC5A  Sharp (white) stem down\n    Glyphs[\"smnSharpWhiteDown\"] = \"\\uEC5A\";\n    // U+E00A  Split bar divider (bar spans a system break)\n    Glyphs[\"splitBarDivider\"] = \"\\uE00A\";\n    // U+E010  1-line staff\n    Glyphs[\"staff1Line\"] = \"\\uE010\";\n    // U+1D116  1-line staff\n    Glyphs[\"staff1LineAlternate\"] = \"\\uD834\\uDD16\";\n    // U+E01C  1-line staff (narrow)\n    Glyphs[\"staff1LineNarrow\"] = \"\\uE01C\";\n    // U+E016  1-line staff (wide)\n    Glyphs[\"staff1LineWide\"] = \"\\uE016\";\n    // U+E011  2-line staff\n    Glyphs[\"staff2Lines\"] = \"\\uE011\";\n    // U+1D117  2-line staff\n    Glyphs[\"staff2LinesAlternate\"] = \"\\uD834\\uDD17\";\n    // U+E01D  2-line staff (narrow)\n    Glyphs[\"staff2LinesNarrow\"] = \"\\uE01D\";\n    // U+E017  2-line staff (wide)\n    Glyphs[\"staff2LinesWide\"] = \"\\uE017\";\n    // U+E012  3-line staff\n    Glyphs[\"staff3Lines\"] = \"\\uE012\";\n    // U+1D118  3-line staff\n    Glyphs[\"staff3LinesAlternate\"] = \"\\uD834\\uDD18\";\n    // U+E01E  3-line staff (narrow)\n    Glyphs[\"staff3LinesNarrow\"] = \"\\uE01E\";\n    // U+E018  3-line staff (wide)\n    Glyphs[\"staff3LinesWide\"] = \"\\uE018\";\n    // U+E013  4-line staff\n    Glyphs[\"staff4Lines\"] = \"\\uE013\";\n    // U+1D119  4-line staff\n    Glyphs[\"staff4LinesAlternate\"] = \"\\uD834\\uDD19\";\n    // U+E01F  4-line staff (narrow)\n    Glyphs[\"staff4LinesNarrow\"] = \"\\uE01F\";\n    // U+E019  4-line staff (wide)\n    Glyphs[\"staff4LinesWide\"] = \"\\uE019\";\n    // U+E014  5-line staff\n    Glyphs[\"staff5Lines\"] = \"\\uE014\";\n    // U+1D11A  5-line staff\n    Glyphs[\"staff5LinesAlternate\"] = \"\\uD834\\uDD1A\";\n    // U+E020  5-line staff (narrow)\n    Glyphs[\"staff5LinesNarrow\"] = \"\\uE020\";\n    // U+E01A  5-line staff (wide)\n    Glyphs[\"staff5LinesWide\"] = \"\\uE01A\";\n    // U+E015  6-line staff\n    Glyphs[\"staff6Lines\"] = \"\\uE015\";\n    // U+1D11B  6-line staff\n    Glyphs[\"staff6LinesAlternate\"] = \"\\uD834\\uDD1B\";\n    // U+E021  6-line staff (narrow)\n    Glyphs[\"staff6LinesNarrow\"] = \"\\uE021\";\n    // U+E01B  6-line staff (wide)\n    Glyphs[\"staff6LinesWide\"] = \"\\uE01B\";\n    // U+E00B  Staff divide arrow down\n    Glyphs[\"staffDivideArrowDown\"] = \"\\uE00B\";\n    // U+E00C  Staff divide arrow up\n    Glyphs[\"staffDivideArrowUp\"] = \"\\uE00C\";\n    // U+E00D  Staff divide arrows\n    Glyphs[\"staffDivideArrowUpDown\"] = \"\\uE00D\";\n    // U+EB98  Lower 1 staff position\n    Glyphs[\"staffPosLower1\"] = \"\\uEB98\";\n    // U+EB99  Lower 2 staff positions\n    Glyphs[\"staffPosLower2\"] = \"\\uEB99\";\n    // U+EB9A  Lower 3 staff positions\n    Glyphs[\"staffPosLower3\"] = \"\\uEB9A\";\n    // U+EB9B  Lower 4 staff positions\n    Glyphs[\"staffPosLower4\"] = \"\\uEB9B\";\n    // U+EB9C  Lower 5 staff positions\n    Glyphs[\"staffPosLower5\"] = \"\\uEB9C\";\n    // U+EB9D  Lower 6 staff positions\n    Glyphs[\"staffPosLower6\"] = \"\\uEB9D\";\n    // U+EB9E  Lower 7 staff positions\n    Glyphs[\"staffPosLower7\"] = \"\\uEB9E\";\n    // U+EB9F  Lower 8 staff positions\n    Glyphs[\"staffPosLower8\"] = \"\\uEB9F\";\n    // U+EB90  Raise 1 staff position\n    Glyphs[\"staffPosRaise1\"] = \"\\uEB90\";\n    // U+EB91  Raise 2 staff positions\n    Glyphs[\"staffPosRaise2\"] = \"\\uEB91\";\n    // U+EB92  Raise 3 staff positions\n    Glyphs[\"staffPosRaise3\"] = \"\\uEB92\";\n    // U+EB93  Raise 4 staff positions\n    Glyphs[\"staffPosRaise4\"] = \"\\uEB93\";\n    // U+EB94  Raise 5 staff positions\n    Glyphs[\"staffPosRaise5\"] = \"\\uEB94\";\n    // U+EB95  Raise 6 staff positions\n    Glyphs[\"staffPosRaise6\"] = \"\\uEB95\";\n    // U+EB96  Raise 7 staff positions\n    Glyphs[\"staffPosRaise7\"] = \"\\uEB96\";\n    // U+EB97  Raise 8 staff positions\n    Glyphs[\"staffPosRaise8\"] = \"\\uEB97\";\n    // U+E210  Combining stem\n    Glyphs[\"stem\"] = \"\\uE210\";\n    // U+1D165  Combining stem\n    Glyphs[\"stemAlternate\"] = \"\\uD834\\uDD65\";\n    // U+E215  Combining bow on bridge stem\n    Glyphs[\"stemBowOnBridge\"] = \"\\uE215\";\n    // U+E216  Combining bow on tailpiece stem\n    Glyphs[\"stemBowOnTailpiece\"] = \"\\uE216\";\n    // U+E217  Combining buzz roll stem\n    Glyphs[\"stemBuzzRoll\"] = \"\\uE217\";\n    // U+E218  Combining damp stem\n    Glyphs[\"stemDamp\"] = \"\\uE218\";\n    // U+E21F  Combining harp string noise stem\n    Glyphs[\"stemHarpStringNoise\"] = \"\\uE21F\";\n    // U+E21A  Combining multiphonics (black) stem\n    Glyphs[\"stemMultiphonicsBlack\"] = \"\\uE21A\";\n    // U+E21C  Combining multiphonics (black and white) stem\n    Glyphs[\"stemMultiphonicsBlackWhite\"] = \"\\uE21C\";\n    // U+E21B  Combining multiphonics (white) stem\n    Glyphs[\"stemMultiphonicsWhite\"] = \"\\uE21B\";\n    // U+E213  Combining Penderecki unmeasured tremolo stem\n    Glyphs[\"stemPendereckiTremolo\"] = \"\\uE213\";\n    // U+E21E  Combining rim shot stem\n    Glyphs[\"stemRimShot\"] = \"\\uE21E\";\n    // U+E211  Combining sprechgesang stem\n    Glyphs[\"stemSprechgesang\"] = \"\\uE211\";\n    // U+1D166  Combining sprechgesang stem\n    Glyphs[\"stemSprechgesangAlternate\"] = \"\\uD834\\uDD66\";\n    // U+E214  Combining sul ponticello (bow behind bridge) stem\n    Glyphs[\"stemSulPonticello\"] = \"\\uE214\";\n    // U+E21D  Combining sussurando stem\n    Glyphs[\"stemSussurando\"] = \"\\uE21D\";\n    // U+E212  Combining swished stem\n    Glyphs[\"stemSwished\"] = \"\\uE212\";\n    // U+E219  Combining vibrato pulse accent (Saunders) stem\n    Glyphs[\"stemVibratoPulse\"] = \"\\uE219\";\n    // U+E232  Stockhausen irregular tremolo (\"Morsen\", like Morse code)\n    Glyphs[\"stockhausenTremolo\"] = \"\\uE232\";\n    // U+E618  Bow behind bridge (sul ponticello)\n    Glyphs[\"stringsBowBehindBridge\"] = \"\\uE618\";\n    // U+E62A  Bow behind bridge on four strings\n    Glyphs[\"stringsBowBehindBridgeFourStrings\"] = \"\\uE62A\";\n    // U+E627  Bow behind bridge on one string\n    Glyphs[\"stringsBowBehindBridgeOneString\"] = \"\\uE627\";\n    // U+E629  Bow behind bridge on three strings\n    Glyphs[\"stringsBowBehindBridgeThreeStrings\"] = \"\\uE629\";\n    // U+E628  Bow behind bridge on two strings\n    Glyphs[\"stringsBowBehindBridgeTwoStrings\"] = \"\\uE628\";\n    // U+E619  Bow on top of bridge\n    Glyphs[\"stringsBowOnBridge\"] = \"\\uE619\";\n    // U+E61A  Bow on tailpiece\n    Glyphs[\"stringsBowOnTailpiece\"] = \"\\uE61A\";\n    // U+E626  Change bow direction, indeterminate\n    Glyphs[\"stringsChangeBowDirection\"] = \"\\uE626\";\n    // U+E610  Down bow\n    Glyphs[\"stringsDownBow\"] = \"\\uE610\";\n    // U+1D1AA  Down bow\n    Glyphs[\"stringsDownBowAlternate\"] = \"\\uD834\\uDDAA\";\n    // U+EE82  Down bow, away from body\n    Glyphs[\"stringsDownBowAwayFromBody\"] = \"\\uEE82\";\n    // U+EE84  Down bow, beyond bridge\n    Glyphs[\"stringsDownBowBeyondBridge\"] = \"\\uEE84\";\n    // U+EE80  Down bow, towards body\n    Glyphs[\"stringsDownBowTowardsBody\"] = \"\\uEE80\";\n    // U+E611  Turned down bow\n    Glyphs[\"stringsDownBowTurned\"] = \"\\uE611\";\n    // U+E622  Fouetté\n    Glyphs[\"stringsFouette\"] = \"\\uE622\";\n    // U+E615  Half-harmonic\n    Glyphs[\"stringsHalfHarmonic\"] = \"\\uE615\";\n    // U+E614  Harmonic\n    Glyphs[\"stringsHarmonic\"] = \"\\uE614\";\n    // U+1D1AC  Harmonic\n    Glyphs[\"stringsHarmonicAlternate\"] = \"\\uD834\\uDDAC\";\n    // U+E620  Jeté (gettato) above\n    Glyphs[\"stringsJeteAbove\"] = \"\\uE620\";\n    // U+E621  Jeté (gettato) below\n    Glyphs[\"stringsJeteBelow\"] = \"\\uE621\";\n    // U+E617  Mute off\n    Glyphs[\"stringsMuteOff\"] = \"\\uE617\";\n    // U+E616  Mute on\n    Glyphs[\"stringsMuteOn\"] = \"\\uE616\";\n    // U+E61B  Overpressure, down bow\n    Glyphs[\"stringsOverpressureDownBow\"] = \"\\uE61B\";\n    // U+E61F  Overpressure, no bow direction\n    Glyphs[\"stringsOverpressureNoDirection\"] = \"\\uE61F\";\n    // U+E61D  Overpressure possibile, down bow\n    Glyphs[\"stringsOverpressurePossibileDownBow\"] = \"\\uE61D\";\n    // U+E61E  Overpressure possibile, up bow\n    Glyphs[\"stringsOverpressurePossibileUpBow\"] = \"\\uE61E\";\n    // U+E61C  Overpressure, up bow\n    Glyphs[\"stringsOverpressureUpBow\"] = \"\\uE61C\";\n    // U+EE88  Scrape, circular clockwise\n    Glyphs[\"stringsScrapeCircularClockwise\"] = \"\\uEE88\";\n    // U+EE89  Scrape, circular counter-clockwise\n    Glyphs[\"stringsScrapeCircularCounterclockwise\"] = \"\\uEE89\";\n    // U+EE86  Scrape, parallel inward\n    Glyphs[\"stringsScrapeParallelInward\"] = \"\\uEE86\";\n    // U+EE87  Scrape, parallel outward\n    Glyphs[\"stringsScrapeParallelOutward\"] = \"\\uEE87\";\n    // U+E624  Thumb position\n    Glyphs[\"stringsThumbPosition\"] = \"\\uE624\";\n    // U+E625  Turned thumb position\n    Glyphs[\"stringsThumbPositionTurned\"] = \"\\uE625\";\n    // U+EE8A  Triple chop, inward\n    Glyphs[\"stringsTripleChopInward\"] = \"\\uEE8A\";\n    // U+EE8B  Triple chop, outward\n    Glyphs[\"stringsTripleChopOutward\"] = \"\\uEE8B\";\n    // U+E612  Up bow\n    Glyphs[\"stringsUpBow\"] = \"\\uE612\";\n    // U+1D1AB  Up bow\n    Glyphs[\"stringsUpBowAlternate\"] = \"\\uD834\\uDDAB\";\n    // U+EE83  Up bow, away from body\n    Glyphs[\"stringsUpBowAwayFromBody\"] = \"\\uEE83\";\n    // U+EE85  Up bow, beyond bridge\n    Glyphs[\"stringsUpBowBeyondBridge\"] = \"\\uEE85\";\n    // U+EE81  Up bow, towards body\n    Glyphs[\"stringsUpBowTowardsBody\"] = \"\\uEE81\";\n    // U+E613  Turned up bow\n    Glyphs[\"stringsUpBowTurned\"] = \"\\uE613\";\n    // U+E623  Vibrato pulse accent (Saunders) for stem\n    Glyphs[\"stringsVibratoPulse\"] = \"\\uE623\";\n    // U+EE72  Swiss rudiments doublé black notehead\n    Glyphs[\"swissRudimentsNoteheadBlackDouble\"] = \"\\uEE72\";\n    // U+EE70  Swiss rudiments flam black notehead\n    Glyphs[\"swissRudimentsNoteheadBlackFlam\"] = \"\\uEE70\";\n    // U+EE73  Swiss rudiments doublé half (minim) notehead\n    Glyphs[\"swissRudimentsNoteheadHalfDouble\"] = \"\\uEE73\";\n    // U+EE71  Swiss rudiments flam half (minim) notehead\n    Glyphs[\"swissRudimentsNoteheadHalfFlam\"] = \"\\uEE71\";\n    // U+E007  System divider\n    Glyphs[\"systemDivider\"] = \"\\uE007\";\n    // U+E009  Extra long system divider\n    Glyphs[\"systemDividerExtraLong\"] = \"\\uE009\";\n    // U+E008  Long system divider\n    Glyphs[\"systemDividerLong\"] = \"\\uE008\";\n    // U+E1FC  Augmentation dot\n    Glyphs[\"textAugmentationDot\"] = \"\\uE1FC\";\n    // U+E1F5  Black note, fractional 16th beam, long stem\n    Glyphs[\"textBlackNoteFrac16thLongStem\"] = \"\\uE1F5\";\n    // U+E1F4  Black note, fractional 16th beam, short stem\n    Glyphs[\"textBlackNoteFrac16thShortStem\"] = \"\\uE1F4\";\n    // U+E1F6  Black note, fractional 32nd beam, long stem\n    Glyphs[\"textBlackNoteFrac32ndLongStem\"] = \"\\uE1F6\";\n    // U+E1F3  Black note, fractional 8th beam, long stem\n    Glyphs[\"textBlackNoteFrac8thLongStem\"] = \"\\uE1F3\";\n    // U+E1F2  Black note, fractional 8th beam, short stem\n    Glyphs[\"textBlackNoteFrac8thShortStem\"] = \"\\uE1F2\";\n    // U+E1F1  Black note, long stem\n    Glyphs[\"textBlackNoteLongStem\"] = \"\\uE1F1\";\n    // U+E1F0  Black note, short stem\n    Glyphs[\"textBlackNoteShortStem\"] = \"\\uE1F0\";\n    // U+E1FA  Continuing 16th beam for long stem\n    Glyphs[\"textCont16thBeamLongStem\"] = \"\\uE1FA\";\n    // U+E1F9  Continuing 16th beam for short stem\n    Glyphs[\"textCont16thBeamShortStem\"] = \"\\uE1F9\";\n    // U+E1FB  Continuing 32nd beam for long stem\n    Glyphs[\"textCont32ndBeamLongStem\"] = \"\\uE1FB\";\n    // U+E1F8  Continuing 8th beam for long stem\n    Glyphs[\"textCont8thBeamLongStem\"] = \"\\uE1F8\";\n    // U+E1F7  Continuing 8th beam for short stem\n    Glyphs[\"textCont8thBeamShortStem\"] = \"\\uE1F7\";\n    // U+E209  Headless black note, fractional 16th beam, long stem\n    Glyphs[\"textHeadlessBlackNoteFrac16thLongStem\"] = \"\\uE209\";\n    // U+E208  Headless black note, fractional 16th beam, short stem\n    Glyphs[\"textHeadlessBlackNoteFrac16thShortStem\"] = \"\\uE208\";\n    // U+E20A  Headless black note, fractional 32nd beam, long stem\n    Glyphs[\"textHeadlessBlackNoteFrac32ndLongStem\"] = \"\\uE20A\";\n    // U+E207  Headless black note, fractional 8th beam, long stem\n    Glyphs[\"textHeadlessBlackNoteFrac8thLongStem\"] = \"\\uE207\";\n    // U+E206  Headless black note, fractional 8th beam, short stem\n    Glyphs[\"textHeadlessBlackNoteFrac8thShortStem\"] = \"\\uE206\";\n    // U+E205  Headless black note, long stem\n    Glyphs[\"textHeadlessBlackNoteLongStem\"] = \"\\uE205\";\n    // U+E204  Headless black note, short stem\n    Glyphs[\"textHeadlessBlackNoteShortStem\"] = \"\\uE204\";\n    // U+E1FD  Tie\n    Glyphs[\"textTie\"] = \"\\uE1FD\";\n    // U+E202  Tuplet number 3 for long stem\n    Glyphs[\"textTuplet3LongStem\"] = \"\\uE202\";\n    // U+E1FF  Tuplet number 3 for short stem\n    Glyphs[\"textTuplet3ShortStem\"] = \"\\uE1FF\";\n    // U+E203  Tuplet bracket end for long stem\n    Glyphs[\"textTupletBracketEndLongStem\"] = \"\\uE203\";\n    // U+E200  Tuplet bracket end for short stem\n    Glyphs[\"textTupletBracketEndShortStem\"] = \"\\uE200\";\n    // U+E201  Tuplet bracket start for long stem\n    Glyphs[\"textTupletBracketStartLongStem\"] = \"\\uE201\";\n    // U+E1FE  Tuplet bracket start for short stem\n    Glyphs[\"textTupletBracketStartShortStem\"] = \"\\uE1FE\";\n    // U+E080  Time signature 0\n    Glyphs[\"timeSig0\"] = \"\\uE080\";\n    // U+ECF0  Reversed time signature 0\n    Glyphs[\"timeSig0Reversed\"] = \"\\uECF0\";\n    // U+ECE0  Turned time signature 0\n    Glyphs[\"timeSig0Turned\"] = \"\\uECE0\";\n    // U+E081  Time signature 1\n    Glyphs[\"timeSig1\"] = \"\\uE081\";\n    // U+ECF1  Reversed time signature 1\n    Glyphs[\"timeSig1Reversed\"] = \"\\uECF1\";\n    // U+ECE1  Turned time signature 1\n    Glyphs[\"timeSig1Turned\"] = \"\\uECE1\";\n    // U+E082  Time signature 2\n    Glyphs[\"timeSig2\"] = \"\\uE082\";\n    // U+ECF2  Reversed time signature 2\n    Glyphs[\"timeSig2Reversed\"] = \"\\uECF2\";\n    // U+ECE2  Turned time signature 2\n    Glyphs[\"timeSig2Turned\"] = \"\\uECE2\";\n    // U+E083  Time signature 3\n    Glyphs[\"timeSig3\"] = \"\\uE083\";\n    // U+ECF3  Reversed time signature 3\n    Glyphs[\"timeSig3Reversed\"] = \"\\uECF3\";\n    // U+ECE3  Turned time signature 3\n    Glyphs[\"timeSig3Turned\"] = \"\\uECE3\";\n    // U+E084  Time signature 4\n    Glyphs[\"timeSig4\"] = \"\\uE084\";\n    // U+ECF4  Reversed time signature 4\n    Glyphs[\"timeSig4Reversed\"] = \"\\uECF4\";\n    // U+ECE4  Turned time signature 4\n    Glyphs[\"timeSig4Turned\"] = \"\\uECE4\";\n    // U+E085  Time signature 5\n    Glyphs[\"timeSig5\"] = \"\\uE085\";\n    // U+ECF5  Reversed time signature 5\n    Glyphs[\"timeSig5Reversed\"] = \"\\uECF5\";\n    // U+ECE5  Turned time signature 5\n    Glyphs[\"timeSig5Turned\"] = \"\\uECE5\";\n    // U+E086  Time signature 6\n    Glyphs[\"timeSig6\"] = \"\\uE086\";\n    // U+ECF6  Reversed time signature 6\n    Glyphs[\"timeSig6Reversed\"] = \"\\uECF6\";\n    // U+ECE6  Turned time signature 6\n    Glyphs[\"timeSig6Turned\"] = \"\\uECE6\";\n    // U+E087  Time signature 7\n    Glyphs[\"timeSig7\"] = \"\\uE087\";\n    // U+ECF7  Reversed time signature 7\n    Glyphs[\"timeSig7Reversed\"] = \"\\uECF7\";\n    // U+ECE7  Turned time signature 7\n    Glyphs[\"timeSig7Turned\"] = \"\\uECE7\";\n    // U+E088  Time signature 8\n    Glyphs[\"timeSig8\"] = \"\\uE088\";\n    // U+ECF8  Reversed time signature 8\n    Glyphs[\"timeSig8Reversed\"] = \"\\uECF8\";\n    // U+ECE8  Turned time signature 8\n    Glyphs[\"timeSig8Turned\"] = \"\\uECE8\";\n    // U+E089  Time signature 9\n    Glyphs[\"timeSig9\"] = \"\\uE089\";\n    // U+ECF9  Reversed time signature 9\n    Glyphs[\"timeSig9Reversed\"] = \"\\uECF9\";\n    // U+ECE9  Turned time signature 9\n    Glyphs[\"timeSig9Turned\"] = \"\\uECE9\";\n    // U+EC80  Left bracket for whole time signature\n    Glyphs[\"timeSigBracketLeft\"] = \"\\uEC80\";\n    // U+EC82  Left bracket for numerator only\n    Glyphs[\"timeSigBracketLeftSmall\"] = \"\\uEC82\";\n    // U+EC81  Right bracket for whole time signature\n    Glyphs[\"timeSigBracketRight\"] = \"\\uEC81\";\n    // U+EC83  Right bracket for numerator only\n    Glyphs[\"timeSigBracketRightSmall\"] = \"\\uEC83\";\n    // U+E09F  Control character for denominator digit\n    Glyphs[\"timeSigCombDenominator\"] = \"\\uE09F\";\n    // U+E09E  Control character for numerator digit\n    Glyphs[\"timeSigCombNumerator\"] = \"\\uE09E\";\n    // U+E096  Time signature comma\n    Glyphs[\"timeSigComma\"] = \"\\uE096\";\n    // U+E08A  Common time\n    Glyphs[\"timeSigCommon\"] = \"\\uE08A\";\n    // U+1D134  Common time\n    Glyphs[\"timeSigCommonAlternate\"] = \"\\uD834\\uDD34\";\n    // U+ECFA  Reversed common time\n    Glyphs[\"timeSigCommonReversed\"] = \"\\uECFA\";\n    // U+ECEA  Turned common time\n    Glyphs[\"timeSigCommonTurned\"] = \"\\uECEA\";\n    // U+EC85  Cut time (Bach)\n    Glyphs[\"timeSigCut2\"] = \"\\uEC85\";\n    // U+EC86  Cut triple time (9/8)\n    Glyphs[\"timeSigCut3\"] = \"\\uEC86\";\n    // U+E08B  Cut time\n    Glyphs[\"timeSigCutCommon\"] = \"\\uE08B\";\n    // U+1D135  Cut time\n    Glyphs[\"timeSigCutCommonAlternate\"] = \"\\uD834\\uDD35\";\n    // U+ECFB  Reversed cut time\n    Glyphs[\"timeSigCutCommonReversed\"] = \"\\uECFB\";\n    // U+ECEB  Turned cut time\n    Glyphs[\"timeSigCutCommonTurned\"] = \"\\uECEB\";\n    // U+E08F  Time signature equals\n    Glyphs[\"timeSigEquals\"] = \"\\uE08F\";\n    // U+E098  Time signature fraction ½\n    Glyphs[\"timeSigFractionHalf\"] = \"\\uE098\";\n    // U+E09A  Time signature fraction ⅓\n    Glyphs[\"timeSigFractionOneThird\"] = \"\\uE09A\";\n    // U+E097  Time signature fraction ¼\n    Glyphs[\"timeSigFractionQuarter\"] = \"\\uE097\";\n    // U+E099  Time signature fraction ¾\n    Glyphs[\"timeSigFractionThreeQuarters\"] = \"\\uE099\";\n    // U+E09B  Time signature fraction ⅔\n    Glyphs[\"timeSigFractionTwoThirds\"] = \"\\uE09B\";\n    // U+E08E  Time signature fraction slash\n    Glyphs[\"timeSigFractionalSlash\"] = \"\\uE08E\";\n    // U+E090  Time signature minus\n    Glyphs[\"timeSigMinus\"] = \"\\uE090\";\n    // U+E091  Time signature multiply\n    Glyphs[\"timeSigMultiply\"] = \"\\uE091\";\n    // U+E09D  Open time signature (Penderecki)\n    Glyphs[\"timeSigOpenPenderecki\"] = \"\\uE09D\";\n    // U+E094  Left parenthesis for whole time signature\n    Glyphs[\"timeSigParensLeft\"] = \"\\uE094\";\n    // U+E092  Left parenthesis for numerator only\n    Glyphs[\"timeSigParensLeftSmall\"] = \"\\uE092\";\n    // U+E095  Right parenthesis for whole time signature\n    Glyphs[\"timeSigParensRight\"] = \"\\uE095\";\n    // U+E093  Right parenthesis for numerator only\n    Glyphs[\"timeSigParensRightSmall\"] = \"\\uE093\";\n    // U+E08C  Time signature +\n    Glyphs[\"timeSigPlus\"] = \"\\uE08C\";\n    // U+E08D  Time signature + (for numerators)\n    Glyphs[\"timeSigPlusSmall\"] = \"\\uE08D\";\n    // U+EC84  Time signature slash separator\n    Glyphs[\"timeSigSlash\"] = \"\\uEC84\";\n    // U+E09C  Open time signature\n    Glyphs[\"timeSigX\"] = \"\\uE09C\";\n    // U+E220  Combining tremolo 1\n    Glyphs[\"tremolo1\"] = \"\\uE220\";\n    // U+1D167  Combining tremolo 1\n    Glyphs[\"tremolo1Alternate\"] = \"\\uD834\\uDD67\";\n    // U+E221  Combining tremolo 2\n    Glyphs[\"tremolo2\"] = \"\\uE221\";\n    // U+1D168  Combining tremolo 2\n    Glyphs[\"tremolo2Alternate\"] = \"\\uD834\\uDD68\";\n    // U+E222  Combining tremolo 3\n    Glyphs[\"tremolo3\"] = \"\\uE222\";\n    // U+1D169  Combining tremolo 3\n    Glyphs[\"tremolo3Alternate\"] = \"\\uD834\\uDD69\";\n    // U+E223  Combining tremolo 4\n    Glyphs[\"tremolo4\"] = \"\\uE223\";\n    // U+E224  Combining tremolo 5\n    Glyphs[\"tremolo5\"] = \"\\uE224\";\n    // U+E22E  Divide measured tremolo by 2\n    Glyphs[\"tremoloDivisiDots2\"] = \"\\uE22E\";\n    // U+E22F  Divide measured tremolo by 3\n    Glyphs[\"tremoloDivisiDots3\"] = \"\\uE22F\";\n    // U+E230  Divide measured tremolo by 4\n    Glyphs[\"tremoloDivisiDots4\"] = \"\\uE230\";\n    // U+E231  Divide measured tremolo by 6\n    Glyphs[\"tremoloDivisiDots6\"] = \"\\uE231\";\n    // U+E225  Fingered tremolo 1\n    Glyphs[\"tremoloFingered1\"] = \"\\uE225\";\n    // U+1D16A  Fingered tremolo 1\n    Glyphs[\"tremoloFingered1Alternate\"] = \"\\uD834\\uDD6A\";\n    // U+E226  Fingered tremolo 2\n    Glyphs[\"tremoloFingered2\"] = \"\\uE226\";\n    // U+1D16B  Fingered tremolo 2\n    Glyphs[\"tremoloFingered2Alternate\"] = \"\\uD834\\uDD6B\";\n    // U+E227  Fingered tremolo 3\n    Glyphs[\"tremoloFingered3\"] = \"\\uE227\";\n    // U+1D16C  Fingered tremolo 3\n    Glyphs[\"tremoloFingered3Alternate\"] = \"\\uD834\\uDD6C\";\n    // U+E228  Fingered tremolo 4\n    Glyphs[\"tremoloFingered4\"] = \"\\uE228\";\n    // U+E229  Fingered tremolo 5\n    Glyphs[\"tremoloFingered5\"] = \"\\uE229\";\n    // U+E5F2  Triple-tongue above\n    Glyphs[\"tripleTongueAbove\"] = \"\\uE5F2\";\n    // U+1D18B  Triple-tongue above\n    Glyphs[\"tripleTongueAboveAlternate\"] = \"\\uD834\\uDD8B\";\n    // U+E5F3  Triple-tongue below\n    Glyphs[\"tripleTongueBelow\"] = \"\\uE5F3\";\n    // U+E880  Tuplet 0\n    Glyphs[\"tuplet0\"] = \"\\uE880\";\n    // U+E881  Tuplet 1\n    Glyphs[\"tuplet1\"] = \"\\uE881\";\n    // U+E882  Tuplet 2\n    Glyphs[\"tuplet2\"] = \"\\uE882\";\n    // U+E883  Tuplet 3\n    Glyphs[\"tuplet3\"] = \"\\uE883\";\n    // U+E884  Tuplet 4\n    Glyphs[\"tuplet4\"] = \"\\uE884\";\n    // U+E885  Tuplet 5\n    Glyphs[\"tuplet5\"] = \"\\uE885\";\n    // U+E886  Tuplet 6\n    Glyphs[\"tuplet6\"] = \"\\uE886\";\n    // U+E887  Tuplet 7\n    Glyphs[\"tuplet7\"] = \"\\uE887\";\n    // U+E888  Tuplet 8\n    Glyphs[\"tuplet8\"] = \"\\uE888\";\n    // U+E889  Tuplet 9\n    Glyphs[\"tuplet9\"] = \"\\uE889\";\n    // U+E88A  Tuplet colon\n    Glyphs[\"tupletColon\"] = \"\\uE88A\";\n    // U+E22C  Wieniawski unmeasured tremolo\n    Glyphs[\"unmeasuredTremolo\"] = \"\\uE22C\";\n    // U+E22D  Wieniawski unmeasured tremolo (simpler)\n    Glyphs[\"unmeasuredTremoloSimple\"] = \"\\uE22D\";\n    // U+E069  Unpitched percussion clef 1\n    Glyphs[\"unpitchedPercussionClef1\"] = \"\\uE069\";\n    // U+1D125  Unpitched percussion clef 1\n    Glyphs[\"unpitchedPercussionClef1Alternate\"] = \"\\uD834\\uDD25\";\n    // U+E06A  Unpitched percussion clef 2\n    Glyphs[\"unpitchedPercussionClef2\"] = \"\\uE06A\";\n    // U+1D126  Unpitched percussion clef 2\n    Glyphs[\"unpitchedPercussionClef2Alternate\"] = \"\\uD834\\uDD26\";\n    // U+E517  Ventiduesima\n    Glyphs[\"ventiduesima\"] = \"\\uE517\";\n    // U+E518  Ventiduesima alta\n    Glyphs[\"ventiduesimaAlta\"] = \"\\uE518\";\n    // U+E519  Ventiduesima bassa\n    Glyphs[\"ventiduesimaBassa\"] = \"\\uE519\";\n    // U+E51E  Ventiduesima bassa (mb)\n    Glyphs[\"ventiduesimaBassaMb\"] = \"\\uE51E\";\n    // U+E649  Finger click (Stockhausen)\n    Glyphs[\"vocalFingerClickStockhausen\"] = \"\\uE649\";\n    // U+E64B  Halb gesungen (semi-sprechgesang)\n    Glyphs[\"vocalHalbGesungen\"] = \"\\uE64B\";\n    // U+E640  Mouth closed\n    Glyphs[\"vocalMouthClosed\"] = \"\\uE640\";\n    // U+E642  Mouth open\n    Glyphs[\"vocalMouthOpen\"] = \"\\uE642\";\n    // U+E644  Mouth pursed\n    Glyphs[\"vocalMouthPursed\"] = \"\\uE644\";\n    // U+E641  Mouth slightly open\n    Glyphs[\"vocalMouthSlightlyOpen\"] = \"\\uE641\";\n    // U+E643  Mouth wide open\n    Glyphs[\"vocalMouthWideOpen\"] = \"\\uE643\";\n    // U+E647  Nasal voice\n    Glyphs[\"vocalNasalVoice\"] = \"\\uE647\";\n    // U+E645  Sprechgesang\n    Glyphs[\"vocalSprechgesang\"] = \"\\uE645\";\n    // U+E648  Tongue click (Stockhausen)\n    Glyphs[\"vocalTongueClickStockhausen\"] = \"\\uE648\";\n    // U+E64A  Tongue and finger click (Stockhausen)\n    Glyphs[\"vocalTongueFingerClickStockhausen\"] = \"\\uE64A\";\n    // U+E646  Combining sussurando for stem\n    Glyphs[\"vocalsSussurando\"] = \"\\uE646\";\n    // U+EAAA  Arpeggiato wiggle segment, downwards\n    Glyphs[\"wiggleArpeggiatoDown\"] = \"\\uEAAA\";\n    // U+EAAE  Arpeggiato arrowhead down\n    Glyphs[\"wiggleArpeggiatoDownArrow\"] = \"\\uEAAE\";\n    // U+EAAC  Arpeggiato downward swash\n    Glyphs[\"wiggleArpeggiatoDownSwash\"] = \"\\uEAAC\";\n    // U+EAA9  Arpeggiato wiggle segment, upwards\n    Glyphs[\"wiggleArpeggiatoUp\"] = \"\\uEAA9\";\n    // U+EAAD  Arpeggiato arrowhead up\n    Glyphs[\"wiggleArpeggiatoUpArrow\"] = \"\\uEAAD\";\n    // U+EAAB  Arpeggiato upward swash\n    Glyphs[\"wiggleArpeggiatoUpSwash\"] = \"\\uEAAB\";\n    // U+EAC9  Circular motion segment\n    Glyphs[\"wiggleCircular\"] = \"\\uEAC9\";\n    // U+EAC0  Constant circular motion segment\n    Glyphs[\"wiggleCircularConstant\"] = \"\\uEAC0\";\n    // U+EAC1  Constant circular motion segment (flipped)\n    Glyphs[\"wiggleCircularConstantFlipped\"] = \"\\uEAC1\";\n    // U+EAC3  Constant circular motion segment (flipped, large)\n    Glyphs[\"wiggleCircularConstantFlippedLarge\"] = \"\\uEAC3\";\n    // U+EAC2  Constant circular motion segment (large)\n    Glyphs[\"wiggleCircularConstantLarge\"] = \"\\uEAC2\";\n    // U+EACB  Circular motion end\n    Glyphs[\"wiggleCircularEnd\"] = \"\\uEACB\";\n    // U+EAC8  Circular motion segment, large\n    Glyphs[\"wiggleCircularLarge\"] = \"\\uEAC8\";\n    // U+EAC7  Circular motion segment, larger\n    Glyphs[\"wiggleCircularLarger\"] = \"\\uEAC7\";\n    // U+EAC6  Circular motion segment, larger still\n    Glyphs[\"wiggleCircularLargerStill\"] = \"\\uEAC6\";\n    // U+EAC5  Circular motion segment, largest\n    Glyphs[\"wiggleCircularLargest\"] = \"\\uEAC5\";\n    // U+EACA  Circular motion segment, small\n    Glyphs[\"wiggleCircularSmall\"] = \"\\uEACA\";\n    // U+EAC4  Circular motion start\n    Glyphs[\"wiggleCircularStart\"] = \"\\uEAC4\";\n    // U+EAAF  Glissando wiggle segment\n    Glyphs[\"wiggleGlissando\"] = \"\\uEAAF\";\n    // U+EABD  Group glissando 1\n    Glyphs[\"wiggleGlissandoGroup1\"] = \"\\uEABD\";\n    // U+EABE  Group glissando 2\n    Glyphs[\"wiggleGlissandoGroup2\"] = \"\\uEABE\";\n    // U+EABF  Group glissando 3\n    Glyphs[\"wiggleGlissandoGroup3\"] = \"\\uEABF\";\n    // U+EAF0  Quasi-random squiggle 1\n    Glyphs[\"wiggleRandom1\"] = \"\\uEAF0\";\n    // U+EAF1  Quasi-random squiggle 2\n    Glyphs[\"wiggleRandom2\"] = \"\\uEAF1\";\n    // U+EAF2  Quasi-random squiggle 3\n    Glyphs[\"wiggleRandom3\"] = \"\\uEAF2\";\n    // U+EAF3  Quasi-random squiggle 4\n    Glyphs[\"wiggleRandom4\"] = \"\\uEAF3\";\n    // U+EABB  Sawtooth line segment\n    Glyphs[\"wiggleSawtooth\"] = \"\\uEABB\";\n    // U+EABA  Narrow sawtooth line segment\n    Glyphs[\"wiggleSawtoothNarrow\"] = \"\\uEABA\";\n    // U+EABC  Wide sawtooth line segment\n    Glyphs[\"wiggleSawtoothWide\"] = \"\\uEABC\";\n    // U+EAB8  Square wave line segment\n    Glyphs[\"wiggleSquareWave\"] = \"\\uEAB8\";\n    // U+EAB7  Narrow square wave line segment\n    Glyphs[\"wiggleSquareWaveNarrow\"] = \"\\uEAB7\";\n    // U+EAB9  Wide square wave line segment\n    Glyphs[\"wiggleSquareWaveWide\"] = \"\\uEAB9\";\n    // U+EAA4  Trill wiggle segment\n    Glyphs[\"wiggleTrill\"] = \"\\uEAA4\";\n    // U+EAA3  Trill wiggle segment, fast\n    Glyphs[\"wiggleTrillFast\"] = \"\\uEAA3\";\n    // U+EAA2  Trill wiggle segment, faster\n    Glyphs[\"wiggleTrillFaster\"] = \"\\uEAA2\";\n    // U+EAA1  Trill wiggle segment, faster still\n    Glyphs[\"wiggleTrillFasterStill\"] = \"\\uEAA1\";\n    // U+EAA0  Trill wiggle segment, fastest\n    Glyphs[\"wiggleTrillFastest\"] = \"\\uEAA0\";\n    // U+EAA5  Trill wiggle segment, slow\n    Glyphs[\"wiggleTrillSlow\"] = \"\\uEAA5\";\n    // U+EAA6  Trill wiggle segment, slower\n    Glyphs[\"wiggleTrillSlower\"] = \"\\uEAA6\";\n    // U+EAA7  Trill wiggle segment, slower still\n    Glyphs[\"wiggleTrillSlowerStill\"] = \"\\uEAA7\";\n    // U+EAA8  Trill wiggle segment, slowest\n    Glyphs[\"wiggleTrillSlowest\"] = \"\\uEAA8\";\n    // U+EAEE  Vibrato largest, slower\n    Glyphs[\"wiggleVIbratoLargestSlower\"] = \"\\uEAEE\";\n    // U+EAE0  Vibrato medium, slower\n    Glyphs[\"wiggleVIbratoMediumSlower\"] = \"\\uEAE0\";\n    // U+EAB0  Vibrato / shake wiggle segment\n    Glyphs[\"wiggleVibrato\"] = \"\\uEAB0\";\n    // U+EAE5  Vibrato large, fast\n    Glyphs[\"wiggleVibratoLargeFast\"] = \"\\uEAE5\";\n    // U+EAE4  Vibrato large, faster\n    Glyphs[\"wiggleVibratoLargeFaster\"] = \"\\uEAE4\";\n    // U+EAE3  Vibrato large, faster still\n    Glyphs[\"wiggleVibratoLargeFasterStill\"] = \"\\uEAE3\";\n    // U+EAE2  Vibrato large, fastest\n    Glyphs[\"wiggleVibratoLargeFastest\"] = \"\\uEAE2\";\n    // U+EAE6  Vibrato large, slow\n    Glyphs[\"wiggleVibratoLargeSlow\"] = \"\\uEAE6\";\n    // U+EAE7  Vibrato large, slower\n    Glyphs[\"wiggleVibratoLargeSlower\"] = \"\\uEAE7\";\n    // U+EAE8  Vibrato large, slowest\n    Glyphs[\"wiggleVibratoLargeSlowest\"] = \"\\uEAE8\";\n    // U+EAEC  Vibrato largest, fast\n    Glyphs[\"wiggleVibratoLargestFast\"] = \"\\uEAEC\";\n    // U+EAEB  Vibrato largest, faster\n    Glyphs[\"wiggleVibratoLargestFaster\"] = \"\\uEAEB\";\n    // U+EAEA  Vibrato largest, faster still\n    Glyphs[\"wiggleVibratoLargestFasterStill\"] = \"\\uEAEA\";\n    // U+EAE9  Vibrato largest, fastest\n    Glyphs[\"wiggleVibratoLargestFastest\"] = \"\\uEAE9\";\n    // U+EAED  Vibrato largest, slow\n    Glyphs[\"wiggleVibratoLargestSlow\"] = \"\\uEAED\";\n    // U+EAEF  Vibrato largest, slowest\n    Glyphs[\"wiggleVibratoLargestSlowest\"] = \"\\uEAEF\";\n    // U+EADE  Vibrato medium, fast\n    Glyphs[\"wiggleVibratoMediumFast\"] = \"\\uEADE\";\n    // U+EADD  Vibrato medium, faster\n    Glyphs[\"wiggleVibratoMediumFaster\"] = \"\\uEADD\";\n    // U+EADC  Vibrato medium, faster still\n    Glyphs[\"wiggleVibratoMediumFasterStill\"] = \"\\uEADC\";\n    // U+EADB  Vibrato medium, fastest\n    Glyphs[\"wiggleVibratoMediumFastest\"] = \"\\uEADB\";\n    // U+EADF  Vibrato medium, slow\n    Glyphs[\"wiggleVibratoMediumSlow\"] = \"\\uEADF\";\n    // U+EAE1  Vibrato medium, slowest\n    Glyphs[\"wiggleVibratoMediumSlowest\"] = \"\\uEAE1\";\n    // U+EAD7  Vibrato small, fast\n    Glyphs[\"wiggleVibratoSmallFast\"] = \"\\uEAD7\";\n    // U+EAD6  Vibrato small, faster\n    Glyphs[\"wiggleVibratoSmallFaster\"] = \"\\uEAD6\";\n    // U+EAD5  Vibrato small, faster still\n    Glyphs[\"wiggleVibratoSmallFasterStill\"] = \"\\uEAD5\";\n    // U+EAD4  Vibrato small, fastest\n    Glyphs[\"wiggleVibratoSmallFastest\"] = \"\\uEAD4\";\n    // U+EAD8  Vibrato small, slow\n    Glyphs[\"wiggleVibratoSmallSlow\"] = \"\\uEAD8\";\n    // U+EAD9  Vibrato small, slower\n    Glyphs[\"wiggleVibratoSmallSlower\"] = \"\\uEAD9\";\n    // U+EADA  Vibrato small, slowest\n    Glyphs[\"wiggleVibratoSmallSlowest\"] = \"\\uEADA\";\n    // U+EAD0  Vibrato smallest, fast\n    Glyphs[\"wiggleVibratoSmallestFast\"] = \"\\uEAD0\";\n    // U+EACF  Vibrato smallest, faster\n    Glyphs[\"wiggleVibratoSmallestFaster\"] = \"\\uEACF\";\n    // U+EACE  Vibrato smallest, faster still\n    Glyphs[\"wiggleVibratoSmallestFasterStill\"] = \"\\uEACE\";\n    // U+EACD  Vibrato smallest, fastest\n    Glyphs[\"wiggleVibratoSmallestFastest\"] = \"\\uEACD\";\n    // U+EAD1  Vibrato smallest, slow\n    Glyphs[\"wiggleVibratoSmallestSlow\"] = \"\\uEAD1\";\n    // U+EAD2  Vibrato smallest, slower\n    Glyphs[\"wiggleVibratoSmallestSlower\"] = \"\\uEAD2\";\n    // U+EAD3  Vibrato smallest, slowest\n    Glyphs[\"wiggleVibratoSmallestSlowest\"] = \"\\uEAD3\";\n    // U+EACC  Vibrato start\n    Glyphs[\"wiggleVibratoStart\"] = \"\\uEACC\";\n    // U+EAB1  Wide vibrato / shake wiggle segment\n    Glyphs[\"wiggleVibratoWide\"] = \"\\uEAB1\";\n    // U+EAB5  Wavy line segment\n    Glyphs[\"wiggleWavy\"] = \"\\uEAB5\";\n    // U+EAB4  Narrow wavy line segment\n    Glyphs[\"wiggleWavyNarrow\"] = \"\\uEAB4\";\n    // U+EAB6  Wide wavy line segment\n    Glyphs[\"wiggleWavyWide\"] = \"\\uEAB6\";\n    // U+E5F4  Closed hole\n    Glyphs[\"windClosedHole\"] = \"\\uE5F4\";\n    // U+E5FB  Flatter embouchure\n    Glyphs[\"windFlatEmbouchure\"] = \"\\uE5FB\";\n    // U+E5F6  Half-closed hole\n    Glyphs[\"windHalfClosedHole1\"] = \"\\uE5F6\";\n    // U+E5F7  Half-closed hole 2\n    Glyphs[\"windHalfClosedHole2\"] = \"\\uE5F7\";\n    // U+E5F8  Half-open hole\n    Glyphs[\"windHalfClosedHole3\"] = \"\\uE5F8\";\n    // U+E5FE  Somewhat relaxed embouchure\n    Glyphs[\"windLessRelaxedEmbouchure\"] = \"\\uE5FE\";\n    // U+E600  Somewhat tight embouchure\n    Glyphs[\"windLessTightEmbouchure\"] = \"\\uE600\";\n    // U+E60A  Mouthpiece or hand pop\n    Glyphs[\"windMouthpiecePop\"] = \"\\uE60A\";\n    // U+E607  Combining multiphonics (black) for stem\n    Glyphs[\"windMultiphonicsBlackStem\"] = \"\\uE607\";\n    // U+E609  Combining multiphonics (black and white) for stem\n    Glyphs[\"windMultiphonicsBlackWhiteStem\"] = \"\\uE609\";\n    // U+E608  Combining multiphonics (white) for stem\n    Glyphs[\"windMultiphonicsWhiteStem\"] = \"\\uE608\";\n    // U+E5F9  Open hole\n    Glyphs[\"windOpenHole\"] = \"\\uE5F9\";\n    // U+E606  Much more reed (push inwards)\n    Glyphs[\"windReedPositionIn\"] = \"\\uE606\";\n    // U+E604  Normal reed position\n    Glyphs[\"windReedPositionNormal\"] = \"\\uE604\";\n    // U+E605  Very little reed (pull outwards)\n    Glyphs[\"windReedPositionOut\"] = \"\\uE605\";\n    // U+E5FD  Relaxed embouchure\n    Glyphs[\"windRelaxedEmbouchure\"] = \"\\uE5FD\";\n    // U+E60B  Rim only\n    Glyphs[\"windRimOnly\"] = \"\\uE60B\";\n    // U+E5FC  Sharper embouchure\n    Glyphs[\"windSharpEmbouchure\"] = \"\\uE5FC\";\n    // U+E603  Very tight embouchure / strong air pressure\n    Glyphs[\"windStrongAirPressure\"] = \"\\uE603\";\n    // U+E5F5  Three-quarters closed hole\n    Glyphs[\"windThreeQuartersClosedHole\"] = \"\\uE5F5\";\n    // U+E5FF  Tight embouchure\n    Glyphs[\"windTightEmbouchure\"] = \"\\uE5FF\";\n    // U+E5FA  Trill key\n    Glyphs[\"windTrillKey\"] = \"\\uE5FA\";\n    // U+E601  Very tight embouchure\n    Glyphs[\"windVeryTightEmbouchure\"] = \"\\uE601\";\n    // U+E602  Very relaxed embouchure / weak air-pressure\n    Glyphs[\"windWeakAirPressure\"] = \"\\uE602\";\n})(Glyphs || (Glyphs = {}));\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nexport class BoundingBox {\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const newX = this.x < that.x ? this.x : that.x;\n        const newY = this.y < that.y ? this.y : that.y;\n        const newW = Math.max(this.x + this.w, that.x + that.w) - newX;\n        const newH = Math.max(this.y + this.h, that.y + that.h) - newY;\n        this.x = newX;\n        this.y = newY;\n        this.w = newW;\n        this.h = newH;\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { Fraction } from './fraction';\nimport { Glyphs } from './glyphs';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n// eslint-disable-next-line\nexport const CommonMetrics = {\n    fontFamily: 'Bravura',\n    fontSize: 30,\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    Accidental: {\n        cautionary: {\n            fontSize: 20,\n        },\n        grace: {\n            fontSize: 25,\n        },\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    Annotation: {\n        fontSize: 10,\n    },\n    Bend: {\n        fontSize: 10,\n    },\n    ChordSymbol: {\n        fontSize: 12,\n        spacing: 0.05,\n        subscriptOffset: 0.2,\n        superscriptOffset: -0.4,\n        superSubRatio: 0.6,\n    },\n    FretHandFinger: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n    NoteHead: {\n        minPadding: 2,\n    },\n    PedalMarking: {\n        text: {\n            fontSize: 12,\n            fontStyle: 'italic',\n        },\n    },\n    Repetition: {\n        text: {\n            fontSize: 12,\n            fontWeight: 'bold',\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    Stave: {\n        fontSize: 8,\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    StaveConnector: {\n        text: {\n            fontSize: 16,\n        },\n    },\n    StaveLine: {\n        fontSize: 10,\n    },\n    StaveSection: {\n        fontSize: 10,\n        fontWeight: 'bold',\n    },\n    StaveTempo: {\n        fontSize: 14,\n        glyph: {\n            fontSize: 25,\n        },\n        name: {\n            fontWeight: 'bold',\n        },\n    },\n    StaveText: {\n        fontSize: 16,\n    },\n    StaveTie: {\n        fontSize: 10,\n    },\n    StringNumber: {\n        fontSize: 10,\n        fontWeight: 'bold',\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    Stroke: {\n        text: {\n            fontSize: 10,\n            fontStyle: 'italic',\n            fontWeight: 'bold',\n        },\n    },\n    TabNote: {\n        text: {\n            fontSize: 9,\n        },\n    },\n    TabSlide: {\n        fontSize: 10,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n    },\n    TabTie: {\n        fontSize: 10,\n    },\n    TextBracket: {\n        fontSize: 15,\n        fontStyle: 'italic',\n    },\n    TextNote: {\n        text: {\n            fontSize: 12,\n        },\n    },\n    Tremolo: {\n        spacing: 7,\n    },\n    Volta: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n};\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { accidental: 'b', num: 1 },\n    Dm: { accidental: 'b', num: 1 },\n    Bb: { accidental: 'b', num: 2 },\n    Gm: { accidental: 'b', num: 2 },\n    Eb: { accidental: 'b', num: 3 },\n    Cm: { accidental: 'b', num: 3 },\n    Ab: { accidental: 'b', num: 4 },\n    Fm: { accidental: 'b', num: 4 },\n    Db: { accidental: 'b', num: 5 },\n    Bbm: { accidental: 'b', num: 5 },\n    Gb: { accidental: 'b', num: 6 },\n    Ebm: { accidental: 'b', num: 6 },\n    Cb: { accidental: 'b', num: 7 },\n    Abm: { accidental: 'b', num: 7 },\n    G: { accidental: '#', num: 1 },\n    Em: { accidental: '#', num: 1 },\n    D: { accidental: '#', num: 2 },\n    Bm: { accidental: '#', num: 2 },\n    A: { accidental: '#', num: 3 },\n    'F#m': { accidental: '#', num: 3 },\n    E: { accidental: '#', num: 4 },\n    'C#m': { accidental: '#', num: 4 },\n    B: { accidental: '#', num: 5 },\n    'G#m': { accidental: '#', num: 5 },\n    'F#': { accidental: '#', num: 6 },\n    'D#m': { accidental: '#', num: 6 },\n    'C#': { accidental: '#', num: 7 },\n    'A#m': { accidental: '#', num: 7 },\n};\nconst clefs = {\n    treble: { lineShift: 0 },\n    bass: { lineShift: 6 },\n    tenor: { lineShift: 4 },\n    alto: { lineShift: 3 },\n    soprano: { lineShift: 1 },\n    percussion: { lineShift: 0 },\n    'mezzo-soprano': { lineShift: 2 },\n    'baritone-c': { lineShift: 5 },\n    'baritone-f': { lineShift: 5 },\n    subbass: { lineShift: 7 },\n    french: { lineShift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, intVal: 0 },\n    CN: { index: 0, intVal: 0 },\n    'C#': { index: 0, intVal: 1 },\n    'C##': { index: 0, intVal: 2 },\n    CB: { index: 0, intVal: 11 },\n    CBB: { index: 0, intVal: 10 },\n    D: { index: 1, intVal: 2 },\n    DN: { index: 1, intVal: 2 },\n    'D#': { index: 1, intVal: 3 },\n    'D##': { index: 1, intVal: 4 },\n    DB: { index: 1, intVal: 1 },\n    DBB: { index: 1, intVal: 0 },\n    E: { index: 2, intVal: 4 },\n    EN: { index: 2, intVal: 4 },\n    'E#': { index: 2, intVal: 5 },\n    'E##': { index: 2, intVal: 6 },\n    EB: { index: 2, intVal: 3 },\n    EBB: { index: 2, intVal: 2 },\n    F: { index: 3, intVal: 5 },\n    FN: { index: 3, intVal: 5 },\n    'F#': { index: 3, intVal: 6 },\n    'F##': { index: 3, intVal: 7 },\n    FB: { index: 3, intVal: 4 },\n    FBB: { index: 3, intVal: 3 },\n    G: { index: 4, intVal: 7 },\n    GN: { index: 4, intVal: 7 },\n    'G#': { index: 4, intVal: 8 },\n    'G##': { index: 4, intVal: 9 },\n    GB: { index: 4, intVal: 6 },\n    GBB: { index: 4, intVal: 5 },\n    A: { index: 5, intVal: 9 },\n    AN: { index: 5, intVal: 9 },\n    'A#': { index: 5, intVal: 10 },\n    'A##': { index: 5, intVal: 11 },\n    AB: { index: 5, intVal: 8 },\n    ABB: { index: 5, intVal: 7 },\n    B: { index: 6, intVal: 11 },\n    BN: { index: 6, intVal: 11 },\n    'B#': { index: 6, intVal: 12 },\n    'B##': { index: 6, intVal: 13 },\n    BB: { index: 6, intVal: 10 },\n    BBB: { index: 6, intVal: 9 },\n    R: { index: 6 },\n    X: { index: 6 },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': '\\ue262' /*accidentalSharp*/,\n    '##': '\\ue263' /*accidentalDoubleSharp*/,\n    b: '\\ue260' /*accidentalFlat*/,\n    bb: '\\ue264' /*accidentalDoubleFlat*/,\n    n: '\\ue261' /*accidentalNatural*/,\n    '{': '\\ue26a' /*accidentalParensLeft*/,\n    '}': '\\ue26b' /*accidentalParensRight*/,\n    db: '\\ue281' /*accidentalThreeQuarterTonesFlatZimmermann*/,\n    d: '\\ue280' /*accidentalQuarterToneFlatStein*/,\n    '++': '\\ue283' /*accidentalThreeQuarterTonesSharpStein*/,\n    '+': '\\ue282' /*accidentalQuarterToneSharpStein*/,\n    '+-': '\\ue446' /*accidentalKucukMucennebSharp*/,\n    bs: '\\ue442' /*accidentalBakiyeFlat*/,\n    bss: '\\ue440' /*accidentalBuyukMucennebFlat*/,\n    o: '\\ue461' /*accidentalSori*/,\n    k: '\\ue460' /*accidentalKoron*/,\n    bbs: '\\ue447' /*accidentalBuyukMucennebSharp*/,\n    '++-': '\\ue447' /*accidentalBuyukMucennebSharp*/,\n    ashs: '\\ue447' /*accidentalBuyukMucennebSharp*/,\n    afhf: '\\ue447' /*accidentalBuyukMucennebSharp*/,\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        secondOnBottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spacedOutTetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spacedOutPentachord: [1, 2, 3, 2, 1],\n        verySpacedOutPentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spacedOutHexachord: [1, 3, 2, 1, 3, 2],\n        verySpacedOutHexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: '\\ue1e7' /*augmentationDot*/, betweenLines: true },\n    av: {\n        aboveCode: '\\ue4a6' /*articStaccatissimoAbove*/,\n        belowCode: '\\ue4a7' /*articStaccatissimoBelow*/,\n        betweenLines: true,\n    },\n    'a>': {\n        aboveCode: '\\ue4a0' /*articAccentAbove*/,\n        belowCode: '\\ue4a1' /*articAccentBelow*/,\n        betweenLines: true,\n    },\n    'a-': {\n        aboveCode: '\\ue4a4' /*articTenutoAbove*/,\n        belowCode: '\\ue4a5' /*articTenutoBelow*/,\n        betweenLines: true,\n    },\n    'a^': {\n        aboveCode: '\\ue4ac' /*articMarcatoAbove*/,\n        belowCode: '\\ue4ad' /*articMarcatoBelow*/,\n        betweenLines: false,\n    },\n    'a+': { code: '\\ue633' /*pluckedLeftHandPizzicato*/, betweenLines: false },\n    ao: {\n        aboveCode: '\\ue631' /*pluckedSnapPizzicatoAbove*/,\n        belowCode: '\\ue630' /*pluckedSnapPizzicatoBelow*/,\n        betweenLines: false,\n    },\n    ah: { code: '\\ue614' /*stringsHarmonic*/, betweenLines: false },\n    'a@': { aboveCode: '\\ue4c0' /*fermataAbove*/, belowCode: '\\ue4c1' /*fermataBelow*/, betweenLines: false },\n    'a@a': { code: '\\ue4c0' /*fermataAbove*/, betweenLines: false },\n    'a@u': { code: '\\ue4c1' /*fermataBelow*/, betweenLines: false },\n    'a@s': { aboveCode: '\\ue4c4' /*fermataShortAbove*/, belowCode: '\\ue4c5' /*fermataShortBelow*/, betweenLines: false },\n    'a@as': { code: '\\ue4c4' /*fermataShortAbove*/, betweenLines: false },\n    'a@us': { code: '\\ue4c5' /*fermataShortBelow*/, betweenLines: false },\n    'a@l': { aboveCode: '\\ue4c6' /*fermataLongAbove*/, belowCode: '\\ue4c7' /*fermataLongBelow*/, betweenLines: false },\n    'a@al': { code: '\\ue4c6' /*fermataLongAbove*/, betweenLines: false },\n    'a@ul': { code: '\\ue4c7' /*fermataLongBelow*/, betweenLines: false },\n    'a@vl': {\n        aboveCode: '\\ue4c8' /*fermataVeryLongAbove*/,\n        belowCode: '\\ue4c9' /*fermataVeryLongBelow*/,\n        betweenLines: false,\n    },\n    'a@avl': { code: '\\ue4c8' /*fermataVeryLongAbove*/, betweenLines: false },\n    'a@uvl': { code: '\\ue4c9' /*fermataVeryLongBelow*/, betweenLines: false },\n    'a|': { code: '\\ue612' /*stringsUpBow*/, betweenLines: false },\n    am: { code: '\\ue610' /*stringsDownBow*/, betweenLines: false },\n    'a,': { code: '\\ue805' /*pictChokeCymbal*/, betweenLines: false }, // Choked\n};\nconst ornaments = {\n    mordent: '\\ue56c' /*ornamentShortTrill*/,\n    mordentInverted: '\\ue56d' /*ornamentMordent*/,\n    turn: '\\ue567' /*ornamentTurn*/,\n    turnInverted: '\\ue569' /*ornamentTurnSlash*/,\n    tr: '\\ue566' /*ornamentTrill*/,\n    upprall: '\\ue5b5' /*ornamentPrecompSlideTrillDAnglebert*/,\n    downprall: '\\ue5c3' /*ornamentPrecompDoubleCadenceUpperPrefix*/,\n    prallup: '\\ue5bb' /*ornamentPrecompTrillSuffixDandrieu*/,\n    pralldown: '\\ue5c8' /*ornamentPrecompTrillLowerSuffix*/,\n    upmordent: '\\ue5b8' /*ornamentPrecompSlideTrillBach*/,\n    downmordent: '\\ue5c4' /*ornamentPrecompDoubleCadenceUpperPrefixTurn*/,\n    lineprall: '\\ue5b2' /*ornamentPrecompAppoggTrill*/,\n    prallprall: '\\ue56e' /*ornamentTremblement*/,\n    scoop: '\\ue5d0' /*brassScoop*/,\n    doit: '\\ue5d5' /*brassDoitMedium*/,\n    fall: '\\ue5d7' /*brassFallLipShort*/,\n    doitLong: '\\ue5d2' /*brassLiftMedium*/,\n    fallLong: '\\ue5de' /*brassFallRoughMedium*/,\n    bend: '\\ue5e3' /*brassBend*/,\n    plungerClosed: '\\ue5e5' /*brassMuteClosed*/,\n    plungerOpen: '\\ue5e7' /*brassMuteOpen*/,\n    flip: '\\ue5e1' /*brassFlip*/,\n    jazzTurn: '\\ue5e4' /*brassJazzTurn*/,\n    smear: '\\ue5e2' /*brassSmear*/,\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /** Use the provided key to look up a FontInfo in CommonMetrics. **/\n    static lookupMetricFontInfo(key) {\n        return {\n            family: Tables.lookupMetric(`${key}.fontFamily`),\n            size: Tables.lookupMetric(`${key}.fontSize`),\n            weight: Tables.lookupMetric(`${key}.fontWeight`),\n            style: Tables.lookupMetric(`${key}.fontStyle`),\n        };\n    }\n    /**\n     * Use the provided key to look up a value in CommonMetrics.\n     *\n     * @param key is a string separated by periods (e.g., `Stroke.text.fontFamily`).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     *\n     * For the key `Stroke.text.fontFamily`, check all of the following in order:\n     *   1) CommonMetrics.fontFamily\n     *   2) CommonMetrics.Stroke.fontFamily\n     *   3) CommonMetrics.Stroke.text.fontFamily\n     * Retrieve the value from the most specific key (i.e., prefer #3 over #2 over #1 in the above example).\n     */\n    // eslint-disable-next-line\n    static lookupMetric(key, defaultValue) {\n        var _a;\n        const keyParts = key.split('.');\n        const lastKeyPart = keyParts.pop(); // Use ! because keyParts is not empty, since ''.split('.') still returns [''].\n        // Start from root of CommonMetrics and go down as far as possible.\n        let curr = CommonMetrics;\n        let retVal = defaultValue;\n        while (curr) {\n            // Update retVal whenever we find a value assigned to a more specific key.\n            retVal = (_a = curr[lastKeyPart]) !== null && _a !== void 0 ? _a : retVal;\n            const keyPart = keyParts.shift();\n            if (keyPart) {\n                curr = curr[keyPart]; // Go down one level.\n            }\n            else {\n                break;\n            }\n        }\n        return retVal;\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octaveShift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    static keyProperties(keyOctaveGlyph, clef = 'treble', type = 'N', params) {\n        let options = { octaveShift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        type = type.toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        let octave = parseInt(pieces[1], 10);\n        // .octaveShift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octaveShift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).lineShift;\n        // Integer value for note arithmetic.\n        const intValue = typeof value.intVal !== 'undefined' ? octave * 12 + value.intVal : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        let code = '';\n        let glyphName = 'N';\n        if (pieces.length > 2 && pieces[2]) {\n            glyphName = pieces[2].toUpperCase();\n        }\n        else if (type !== 'N') {\n            glyphName = type;\n        }\n        else\n            glyphName = key;\n        code = this.codeNoteHead(glyphName, duration);\n        return {\n            key,\n            octave,\n            line,\n            intValue,\n            code,\n            displaced: false,\n        };\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(accidental) {\n        var _a;\n        return (_a = accidentals[accidental]) !== null && _a !== void 0 ? _a : accidental;\n    }\n    static ornamentCodes(ornament) {\n        var _a;\n        return (_a = ornaments[ornament]) !== null && _a !== void 0 ? _a : ornament;\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.accidental) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.accidental];\n        const accList = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            accList.push({ type: keySpec.accidental, line });\n        }\n        return accList;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                return '\\ue0d8' /*noteheadDiamondWhole*/;\n            case 'D1':\n                return '\\ue0d9' /*noteheadDiamondHalf*/;\n            case 'D2':\n                return '\\ue0db' /*noteheadDiamondBlack*/;\n            case 'D3':\n                return '\\ue0db' /*noteheadDiamondBlack*/;\n            /* Triangle */\n            case 'T0':\n                return '\\ue0bb' /*noteheadTriangleUpWhole*/;\n            case 'T1':\n                return '\\ue0bc' /*noteheadTriangleUpHalf*/;\n            case 'T2':\n                return '\\ue0be' /*noteheadTriangleUpBlack*/;\n            case 'T3':\n                return '\\ue0be' /*noteheadTriangleUpBlack*/;\n            /* Cross */\n            case 'X0':\n                return '\\ue0a7' /*noteheadXWhole*/;\n            case 'X1':\n                return '\\ue0a8' /*noteheadXHalf*/;\n            case 'X2':\n                return '\\ue0a9' /*noteheadXBlack*/;\n            case 'X3':\n                return '\\ue0b3' /*noteheadCircleX*/;\n            /* Square */\n            case 'S1':\n                return '\\ue0b8' /*noteheadSquareWhite*/;\n            case 'S2':\n                return '\\ue0b9' /*noteheadSquareBlack*/;\n            /* Rectangle */\n            case 'R1':\n                return '\\ue0b8' /*noteheadSquareWhite*/; // no smufl code\n            case 'R2':\n                return '\\ue0b8' /*noteheadSquareWhite*/; // no smufl code\n            case 'DO':\n                return '\\ue0be' /*noteheadTriangleUpBlack*/;\n            case 'RE':\n                return '\\ue0cb' /*noteheadMoonBlack*/;\n            case 'MI':\n                return '\\ue0db' /*noteheadDiamondBlack*/;\n            case 'FA':\n                return '\\ue0c0' /*noteheadTriangleLeftBlack*/;\n            case 'FAUP':\n                return '\\ue0c2' /*noteheadTriangleRightBlack*/;\n            case 'SO':\n                return '\\ue0a4' /*noteheadBlack*/;\n            case 'LA':\n                return '\\ue0b9' /*noteheadSquareBlack*/;\n            case 'TI':\n                return '\\ue0cd' /*noteheadTriangleRoundDownBlack*/;\n            case 'DI': // Diamond\n            case 'H': // Harmonics\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0d7' /*noteheadDiamondDoubleWhole*/;\n                    case '1':\n                        return '\\ue0d8' /*noteheadDiamondWhole*/;\n                    case '2':\n                        return '\\ue0d9' /*noteheadDiamondHalf*/;\n                    default:\n                        return '\\ue0db' /*noteheadDiamondBlack*/;\n                }\n            case 'X':\n            case 'M': // Muted\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0a6' /*noteheadXDoubleWhole*/;\n                    case '1':\n                        return '\\ue0a7' /*noteheadXWhole*/;\n                    case '2':\n                        return '\\ue0a8' /*noteheadXHalf*/;\n                    default:\n                        return '\\ue0a9' /*noteheadXBlack*/;\n                }\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0b0' /*noteheadCircleXDoubleWhole*/;\n                    case '1':\n                        return '\\ue0b1' /*noteheadCircleXWhole*/;\n                    case '2':\n                        return '\\ue0b2' /*noteheadCircleXHalf*/;\n                    default:\n                        return '\\ue0b3' /*noteheadCircleX*/;\n                }\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0e7' /*noteheadCircledDoubleWhole*/;\n                    case '1':\n                        return '\\ue0e6' /*noteheadCircledWhole*/;\n                    case '2':\n                        return '\\ue0e5' /*noteheadCircledHalf*/;\n                    default:\n                        return '\\ue0e4' /*noteheadCircledBlack*/;\n                }\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0a1' /*noteheadDoubleWholeSquare*/;\n                    case '1':\n                        return '\\ue0b8' /*noteheadSquareWhite*/;\n                    case '2':\n                        return '\\ue0b8' /*noteheadSquareWhite*/;\n                    default:\n                        return '\\ue0b9' /*noteheadSquareBlack*/;\n                }\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0ba' /*noteheadTriangleUpDoubleWhole*/;\n                    case '1':\n                        return '\\ue0bb' /*noteheadTriangleUpWhole*/;\n                    case '2':\n                        return '\\ue0bc' /*noteheadTriangleUpHalf*/;\n                    default:\n                        return '\\ue0be' /*noteheadTriangleUpBlack*/;\n                }\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0c3' /*noteheadTriangleDownDoubleWhole*/;\n                    case '1':\n                        return '\\ue0c4' /*noteheadTriangleDownWhole*/;\n                    case '2':\n                        return '\\ue0c5' /*noteheadTriangleDownHalf*/;\n                    default:\n                        return '\\ue0c7' /*noteheadTriangleDownBlack*/;\n                }\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0d5' /*noteheadSlashedDoubleWhole1*/;\n                    case '1':\n                        return '\\ue0d3' /*noteheadSlashedWhole1*/;\n                    case '2':\n                        return '\\ue0d1' /*noteheadSlashedHalf1*/;\n                    default:\n                        return '\\ue0cf' /*noteheadSlashedBlack1*/;\n                }\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0d6' /*noteheadSlashedDoubleWhole2*/;\n                    case '1':\n                        return '\\ue0d4' /*noteheadSlashedWhole2*/;\n                    case '2':\n                        return '\\ue0d2' /*noteheadSlashedHalf2*/;\n                    default:\n                        return '\\ue0d0' /*noteheadSlashedBlack2*/;\n                }\n            case 'R':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue4e2' /*restDoubleWhole*/;\n                    case '1':\n                        return '\\ue4e3' /*restWhole*/;\n                    case '2':\n                        return '\\ue4e4' /*restHalf*/;\n                    case '4':\n                        return '\\ue4e5' /*restQuarter*/;\n                    case '8':\n                        return '\\ue4e6' /*rest8th*/;\n                    case '16':\n                        return '\\ue4e7' /*rest16th*/;\n                    case '32':\n                        return '\\ue4e8' /*rest32nd*/;\n                    case '64':\n                        return '\\ue4e9' /*rest64th*/;\n                    case '128':\n                        return '\\ue4ea' /*rest128th*/;\n                }\n                break;\n            case 'S':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue10a' /*noteheadSlashWhiteDoubleWhole*/;\n                    case '1':\n                        return '\\ue102' /*noteheadSlashWhiteWhole*/;\n                    case '2':\n                        return '\\ue103' /*noteheadSlashWhiteHalf*/;\n                    default:\n                        return '\\ue100' /*noteheadSlashVerticalEnds*/;\n                }\n            default:\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0a0' /*noteheadDoubleWhole*/;\n                    case '1':\n                        return '\\ue0a2' /*noteheadWhole*/;\n                    case '2':\n                        return '\\ue0a3' /*noteheadHalf*/;\n                    default:\n                        return '\\ue0a4' /*noteheadBlack*/;\n                }\n        }\n        return Glyphs.null;\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nTables.durationCodes = {\n    '1/2': {\n        stem: false,\n    },\n    1: {\n        stem: false,\n    },\n    2: {\n        stem: true,\n    },\n    4: {\n        stem: true,\n    },\n    8: {\n        stem: true,\n        beamCount: 1,\n        stemBeamExtension: 0,\n        codeFlagUp: '\\ue240' /*flag8thUp*/,\n    },\n    16: {\n        beamCount: 2,\n        stemBeamExtension: 0,\n        stem: true,\n        codeFlagUp: '\\ue242' /*flag16thUp*/,\n    },\n    32: {\n        beamCount: 3,\n        stemBeamExtension: 7.5,\n        stem: true,\n        codeFlagUp: '\\ue244' /*flag32ndUp*/,\n    },\n    64: {\n        beamCount: 4,\n        stemBeamExtension: 15,\n        stem: true,\n        codeFlagUp: '\\ue246' /*flag64thUp*/,\n    },\n    128: {\n        beamCount: 5,\n        stemBeamExtension: 22.5,\n        stem: true,\n        codeFlagUp: '\\ue248' /*flag128thUp*/,\n    },\n};\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: '\\u266f',\n    // ♭ accidental flat\n    flat: '\\u266d',\n    // ♮ accidental natural\n    natural: '\\u266e',\n    // △ major seventh\n    triangle: '\\u25b3',\n    // ø half-diminished\n    'o-with-slash': '\\u00f8',\n    // ° diminished\n    degrees: '\\u00b0',\n    // ○ diminished\n    circle: '\\u25cb',\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    numBeats: 4,\n    beatValue: 4,\n    resolution: RESOLUTION,\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Tables } from './tables';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nexport class Font {\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Tables.lookupMetric('fontFamily');\n        size = size !== null && size !== void 0 ? size : Tables.lookupMetric('fontSize') + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Tables.lookupMetric('fontSize') + 'pt';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Tables.lookupMetric('fontFamily');\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fontFace = new FontFace(fontName, `url(${woffURL})`);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by your app.\n     * If fontNames is undefined, all fonts in Font.WEB_FONT_FILES will be loaded.\n     *\n     * For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts(fontNames) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allFiles = Font.WEB_FONT_FILES;\n            if (!fontNames) {\n                fontNames = Object.keys(allFiles);\n            }\n            const host = Font.WEB_FONT_HOST;\n            for (const fontName of fontNames) {\n                const fontPath = allFiles[fontName];\n                if (fontPath) {\n                    Font.loadWebFont(fontName, host + fontPath);\n                }\n            }\n        });\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Discussion on GDPR concerns:\n * https://www.jsdelivr.com/blog/how-the-german-courts-ruling-on-google-fonts-affects-jsdelivr-and-why-it-is-safe-to-use/\n *\n * You can also self host, and specify your own server URL here.\n */\nFont.WEB_FONT_HOST = 'https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.6/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    Academico: 'academico/Academico_0.902.woff2',\n    Bravura: 'bravura/Bravura_1.392.woff2',\n    BravuraText: 'bravura/BravuraText_1.393.woff2',\n    GonvilleSmufl: 'gonvillesmufl/GonvilleSmufl_1.100.woff2',\n    Gootville: 'gootville/Gootville_1.3.woff2',\n    GootvilleText: 'gootville/GootvilleText_1.2.woff2',\n    Leland: 'leland/Leland_0.75.woff2',\n    LelandText: 'leland/LelandText_0.75.woff2',\n    Petaluma: 'petaluma/Petaluma_1.065.woff2',\n    'Petaluma Script': 'petaluma/PetalumaScript_1.10_FS.woff2',\n    MuseJazz: 'musejazz/MuseJazz_1.0.woff2',\n    MuseJazzText: 'musejazz/MuseJazzText_1.0.woff2',\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff2',\n    FinaleAsh: 'finale/FinaleAsh_1.7.woff2',\n    FinaleAshText: 'finale/FinaleAshText_1.3.woff2',\n    FinaleJazz: 'finale/FinaleJazz_1.9.woff2',\n    FinaleJazzText: 'finale/FinaleJazzText_1.3.woff2',\n    FinaleBroadway: 'finale/FinaleBroadway_1.4.woff2',\n    FinaleBroadwayText: 'finale/FinaleBroadwayText_1.1.woff2',\n    FinaleMaestro: 'finale/FinaleMaestro_2.7.woff2',\n    FinaleMaestroText: 'finale/FinaleMaestroText-Regular_1.6.woff2',\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _a, _Registry_defaultRegistry;\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return __classPrivateFieldGet(Registry, _a, \"f\", _Registry_defaultRegistry);\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        __classPrivateFieldSet(Registry, _a, registry, \"f\", _Registry_defaultRegistry);\n    }\n    static disableDefaultRegistry() {\n        __classPrivateFieldSet(Registry, _a, undefined, \"f\", _Registry_defaultRegistry);\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _b, _c;\n        return (_c = (_b = this.index.id) === null || _b === void 0 ? void 0 : _b[id]) === null || _c === void 0 ? void 0 : _c[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const indexAttr = this.index[attribute];\n        if (indexAttr) {\n            const indexAttrVal = indexAttr[value];\n            if (indexAttrVal) {\n                const keys = Object.keys(indexAttrVal);\n                return keys.map((k) => indexAttrVal[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n_a = Registry;\n_Registry_defaultRegistry = { value: void 0 };\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _Element_context, _Element_attrs, _Element_fontInfo, _Element_text, _Element_metricsValid, _Element_textMetrics, _Element_height, _Element_width, _Element_txtCanvas;\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './font';\nimport { Registry } from './registry';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, prefix, RuntimeError } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n *\n * The Element handles style and font properties for the Element and any child\n * elements, along with working with the Registry to create unique ids.\n *\n * The `text` is a series of unicode characters (including SMuFL codes).\n * The `textFont` property contains information required to style the text (i.e., font family, size, weight, and style).\n * This font family is a comma separated list of fonts.\n * The method `measureText` calculates the `textMetrics`, `boundingBox`, `height` and `width` of the `text`.\n * The method `renderText(...)` will render the text using the provided context and coordinates,\n * taking `xShift` and `yShift` into account.\n */\nexport class Element {\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor(category) {\n        var _b;\n        // Element objects keep a list of children that they are responsible for.\n        // Children inherit the style from their parents (see: setGroupStyle(s)).\n        this.children = [];\n        _Element_context.set(this, void 0);\n        _Element_attrs.set(this, void 0);\n        _Element_fontInfo.set(this, void 0);\n        _Element_text.set(this, '');\n        _Element_metricsValid.set(this, false);\n        _Element_textMetrics.set(this, {\n            fontBoundingBoxAscent: 0,\n            fontBoundingBoxDescent: 0,\n            actualBoundingBoxAscent: 0,\n            actualBoundingBoxDescent: 0,\n            actualBoundingBoxLeft: 0,\n            actualBoundingBoxRight: 0,\n            width: 0,\n        });\n        _Element_height.set(this, 0);\n        _Element_width.set(this, 0);\n        this.xShift = 0;\n        this.yShift = 0;\n        this.x = 0;\n        this.y = 0;\n        __classPrivateFieldSet(this, _Element_attrs, {\n            id: Element.newID(),\n            type: category !== null && category !== void 0 ? category : this.constructor.CATEGORY,\n            class: '',\n        }, \"f\");\n        this.rendered = false;\n        __classPrivateFieldSet(this, _Element_fontInfo, Tables.lookupMetricFontInfo(__classPrivateFieldGet(this, _Element_attrs, \"f\").type), \"f\");\n        // If a default registry exist, then register with it right away.\n        (_b = Registry.getDefaultRegistry()) === null || _b === void 0 ? void 0 : _b.register(this);\n    }\n    /**\n     * Adds a child Element to the Element, which lets it inherit the\n     * same style as the parent when setGroupStyle() is called.\n     *\n     * Examples of children are noteheads and stems.  Modifiers such\n     * as Accidentals are generally not set as children.\n     *\n     * Note that StaveNote calls setGroupStyle() when setStyle() is called.\n     */\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return __classPrivateFieldGet(this, _Element_attrs, \"f\").type;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = __classPrivateFieldGet(this, _Element_context, \"f\"), style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = __classPrivateFieldGet(this, _Element_context, \"f\"), style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element's style (see `getStyle()` and `setStyle()`)\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Draw an element. */\n    draw() {\n        throw new RuntimeError('Element', 'Draw not defined');\n    }\n    /** Check if it has a class label (An element can have multiple class labels). */\n    hasClass(className) {\n        var _b;\n        if (!__classPrivateFieldGet(this, _Element_attrs, \"f\").class)\n            return false;\n        return ((_b = __classPrivateFieldGet(this, _Element_attrs, \"f\").class) === null || _b === void 0 ? void 0 : _b.split(' ').indexOf(className)) !== -1;\n    }\n    /** Add a class label (An element can have multiple class labels). */\n    addClass(className) {\n        var _b;\n        if (this.hasClass(className))\n            return this;\n        if (!__classPrivateFieldGet(this, _Element_attrs, \"f\").class)\n            __classPrivateFieldGet(this, _Element_attrs, \"f\").class = `${className}`;\n        else\n            __classPrivateFieldGet(this, _Element_attrs, \"f\").class = `${__classPrivateFieldGet(this, _Element_attrs, \"f\").class} ${className}`;\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: __classPrivateFieldGet(this, _Element_attrs, \"f\").id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels). */\n    removeClass(className) {\n        var _b, _c;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_b = __classPrivateFieldGet(this, _Element_attrs, \"f\").class) === null || _b === void 0 ? void 0 : _b.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            __classPrivateFieldGet(this, _Element_attrs, \"f\").class = arr.join(' ');\n        }\n        (_c = this.registry) === null || _c === void 0 ? void 0 : _c.onUpdate({\n            id: __classPrivateFieldGet(this, _Element_attrs, \"f\").id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return __classPrivateFieldGet(this, _Element_attrs, \"f\");\n    }\n    /** Return an attribute, such as 'id', 'type' or 'class'. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return __classPrivateFieldGet(this, _Element_attrs, \"f\")[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(__classPrivateFieldGet(this, _Element_attrs, \"f\").id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute such as 'id', 'class', or 'type'. */\n    setAttribute(name, value) {\n        var _b;\n        const oldID = __classPrivateFieldGet(this, _Element_attrs, \"f\").id;\n        const oldValue = __classPrivateFieldGet(this, _Element_attrs, \"f\")[name];\n        __classPrivateFieldGet(this, _Element_attrs, \"f\")[name] = value;\n        // Register with old id to support id changes.\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return new BoundingBox(0, -this.textMetrics.actualBoundingBoxAscent, this.width, this.height);\n    }\n    /** Return the context, such as an SVGContext or CanvasContext object. */\n    getContext() {\n        return __classPrivateFieldGet(this, _Element_context, \"f\");\n    }\n    /** Set the context to an SVGContext or CanvasContext object */\n    setContext(context) {\n        __classPrivateFieldSet(this, _Element_context, context, \"f\");\n        return this;\n    }\n    /** Validate and return the rendering context. */\n    checkContext() {\n        return defined(__classPrivateFieldGet(this, _Element_context, \"f\"), 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial') that will be applied\n     * to text (not glyphs).\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string for the text font. */\n    get font() {\n        return Font.toCSSString(__classPrivateFieldGet(this, _Element_fontInfo, \"f\"));\n    }\n    /**\n     * Set the element's text font family, size, weight, style\n     * (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * This attribute does not determine the font used for musical Glyphs like treble clefs.\n     *\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        const defaultTextFont = Tables.lookupMetricFontInfo(__classPrivateFieldGet(this, _Element_attrs, \"f\").type);\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        __classPrivateFieldSet(this, _Element_metricsValid, false, \"f\");\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            __classPrivateFieldSet(this, _Element_fontInfo, Object.assign(Object.assign({}, defaultTextFont), font), \"f\");\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            __classPrivateFieldSet(this, _Element_fontInfo, Font.fromCSSString(font), \"f\");\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            __classPrivateFieldSet(this, _Element_fontInfo, Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style), \"f\");\n        }\n        return this;\n    }\n    /**\n     * Get the css string describing this Element's text font. e.g.,\n     * 'bold 10pt Arial'.\n     */\n    getFont() {\n        return Font.toCSSString(__classPrivateFieldGet(this, _Element_fontInfo, \"f\"));\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.fontInfo is set.\n        return __classPrivateFieldGet(this, _Element_fontInfo, \"f\");\n    }\n    /** Set the current FontInfo object. */\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /** @returns a CSS font-size string (e.g., '18pt', '12px', '1em'). */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /** @returns the font size in `pt`. */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /** @returns the font size in `px`. */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /** @returns a CSS font-style string (e.g., 'italic'). */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    /** Set the font style. */\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    /** Set the font weight. */\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n    /** Get element width. */\n    getWidth() {\n        return this.width;\n    }\n    get width() {\n        if (!__classPrivateFieldGet(this, _Element_metricsValid, \"f\"))\n            this.measureText();\n        return __classPrivateFieldGet(this, _Element_width, \"f\");\n    }\n    /** Set element width. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    set width(width) {\n        if (!__classPrivateFieldGet(this, _Element_metricsValid, \"f\"))\n            this.measureText();\n        __classPrivateFieldSet(this, _Element_width, width, \"f\");\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the X coordinate. */\n    getX() {\n        return this.x;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Shift element down `yShift` pixels. Negative values shift up. */\n    setYShift(yShift) {\n        this.yShift = yShift;\n        return this;\n    }\n    /** Get shift element `yShift`. */\n    getYShift() {\n        return this.yShift;\n    }\n    /** Set shift element right `xShift` pixels. Negative values shift left. */\n    setXShift(xShift) {\n        this.xShift = xShift;\n        return this;\n    }\n    /** Get shift element `xShift`. */\n    getXShift() {\n        return this.xShift;\n    }\n    /** Set element text. */\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    set text(text) {\n        __classPrivateFieldSet(this, _Element_metricsValid, false, \"f\");\n        __classPrivateFieldSet(this, _Element_text, text, \"f\");\n    }\n    /** Get element text. */\n    getText() {\n        return __classPrivateFieldGet(this, _Element_text, \"f\");\n    }\n    get text() {\n        return __classPrivateFieldGet(this, _Element_text, \"f\");\n    }\n    /** Render the element text. */\n    renderText(ctx, xPos, yPos) {\n        ctx.save();\n        ctx.setFont(__classPrivateFieldGet(this, _Element_fontInfo, \"f\"));\n        ctx.fillText(__classPrivateFieldGet(this, _Element_text, \"f\"), xPos + this.x + this.xShift, yPos + this.y + this.yShift);\n        this.children.forEach((child) => {\n            ctx.setFont(__classPrivateFieldGet(child, _Element_fontInfo, \"f\"));\n            ctx.fillText(__classPrivateFieldGet(child, _Element_text, \"f\"), xPos + child.x + child.xShift, yPos + child.y + child.yShift);\n        });\n        ctx.restore();\n    }\n    /** Measure the text using the textFont. */\n    measureText() {\n        let txtCanvas = __classPrivateFieldGet(Element, _a, \"f\", _Element_txtCanvas);\n        if (!txtCanvas) {\n            // Create the canvas element that will be used to measure text in the event\n            // of a cache miss.\n            txtCanvas = document.createElement('canvas');\n            __classPrivateFieldSet(Element, _a, txtCanvas, \"f\", _Element_txtCanvas);\n        }\n        const context = txtCanvas.getContext('2d');\n        if (!context)\n            throw new RuntimeError('Font', 'No txt context');\n        context.font = Font.toCSSString(Font.validate(__classPrivateFieldGet(this, _Element_fontInfo, \"f\")));\n        __classPrivateFieldSet(this, _Element_textMetrics, context.measureText(__classPrivateFieldGet(this, _Element_text, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _Element_height, __classPrivateFieldGet(this, _Element_textMetrics, \"f\").actualBoundingBoxAscent + __classPrivateFieldGet(this, _Element_textMetrics, \"f\").actualBoundingBoxDescent, \"f\");\n        __classPrivateFieldSet(this, _Element_width, __classPrivateFieldGet(this, _Element_textMetrics, \"f\").width, \"f\");\n        __classPrivateFieldSet(this, _Element_metricsValid, true, \"f\");\n        return __classPrivateFieldGet(this, _Element_textMetrics, \"f\");\n    }\n    /** Get the text metrics. */\n    getTextMetrics() {\n        return this.textMetrics;\n    }\n    get textMetrics() {\n        if (!__classPrivateFieldGet(this, _Element_metricsValid, \"f\"))\n            this.measureText();\n        return __classPrivateFieldGet(this, _Element_textMetrics, \"f\");\n    }\n    /** Get the text height. */\n    getHeight() {\n        return this.height;\n    }\n    get height() {\n        if (!__classPrivateFieldGet(this, _Element_metricsValid, \"f\"))\n            this.measureText();\n        return __classPrivateFieldGet(this, _Element_height, \"f\");\n    }\n    set height(height) {\n        if (!__classPrivateFieldGet(this, _Element_metricsValid, \"f\"))\n            this.measureText();\n        __classPrivateFieldSet(this, _Element_height, height, \"f\");\n    }\n    setOriginX(x) {\n        const bbox = this.getBoundingBox();\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.xShift = -xShift;\n    }\n    setOriginY(y) {\n        const bbox = this.getBoundingBox();\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.yShift = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n}\n_a = Element, _Element_context = new WeakMap(), _Element_attrs = new WeakMap(), _Element_fontInfo = new WeakMap(), _Element_text = new WeakMap(), _Element_metricsValid = new WeakMap(), _Element_textMetrics = new WeakMap(), _Element_height = new WeakMap(), _Element_width = new WeakMap();\nElement.ID = 1000;\n/** Canvas used to measure text. */\n_Element_txtCanvas = { value: void 0 };\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Modifier_spacingFromNextModifier, _Modifier_modifierContext;\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        _Modifier_spacingFromNextModifier.set(this, void 0);\n        _Modifier_modifierContext.set(this, void 0);\n        this.width = 0;\n        // The `textLine` is reserved space above or below a stave.\n        this.textLine = 0;\n        this.position = Modifier.Position.LEFT;\n        __classPrivateFieldSet(this, _Modifier_spacingFromNextModifier, 0, \"f\");\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return __classPrivateFieldGet(this, _Modifier_modifierContext, \"f\");\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(__classPrivateFieldGet(this, _Modifier_modifierContext, \"f\"), 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        __classPrivateFieldSet(this, _Modifier_modifierContext, c, \"f\");\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `textLine` for the modifier. */\n    setTextLine(line) {\n        this.textLine = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.yShift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        __classPrivateFieldSet(this, _Modifier_spacingFromNextModifier, x, \"f\");\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return __classPrivateFieldGet(this, _Modifier_spacingFromNextModifier, \"f\");\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.xShift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.xShift -= x;\n        }\n        else {\n            this.xShift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.xShift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n_Modifier_spacingFromNextModifier = new WeakMap(), _Modifier_modifierContext = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonicalNotes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get rootValues() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indexes of the root notes.*/\n    static get rootIndexes() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonicalNotes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonicIntervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonicAccidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { rootIndex: 0, intVal: 0 },\n            cn: { rootIndex: 0, intVal: 0 },\n            'c#': { rootIndex: 0, intVal: 1 },\n            'c##': { rootIndex: 0, intVal: 2 },\n            cb: { rootIndex: 0, intVal: 11 },\n            cbb: { rootIndex: 0, intVal: 10 },\n            d: { rootIndex: 1, intVal: 2 },\n            dn: { rootIndex: 1, intVal: 2 },\n            'd#': { rootIndex: 1, intVal: 3 },\n            'd##': { rootIndex: 1, intVal: 4 },\n            db: { rootIndex: 1, intVal: 1 },\n            dbb: { rootIndex: 1, intVal: 0 },\n            e: { rootIndex: 2, intVal: 4 },\n            en: { rootIndex: 2, intVal: 4 },\n            'e#': { rootIndex: 2, intVal: 5 },\n            'e##': { rootIndex: 2, intVal: 6 },\n            eb: { rootIndex: 2, intVal: 3 },\n            ebb: { rootIndex: 2, intVal: 2 },\n            f: { rootIndex: 3, intVal: 5 },\n            fn: { rootIndex: 3, intVal: 5 },\n            'f#': { rootIndex: 3, intVal: 6 },\n            'f##': { rootIndex: 3, intVal: 7 },\n            fb: { rootIndex: 3, intVal: 4 },\n            fbb: { rootIndex: 3, intVal: 3 },\n            g: { rootIndex: 4, intVal: 7 },\n            gn: { rootIndex: 4, intVal: 7 },\n            'g#': { rootIndex: 4, intVal: 8 },\n            'g##': { rootIndex: 4, intVal: 9 },\n            gb: { rootIndex: 4, intVal: 6 },\n            gbb: { rootIndex: 4, intVal: 5 },\n            a: { rootIndex: 5, intVal: 9 },\n            an: { rootIndex: 5, intVal: 9 },\n            'a#': { rootIndex: 5, intVal: 10 },\n            'a##': { rootIndex: 5, intVal: 11 },\n            ab: { rootIndex: 5, intVal: 8 },\n            abb: { rootIndex: 5, intVal: 7 },\n            b: { rootIndex: 6, intVal: 11 },\n            bn: { rootIndex: 6, intVal: 11 },\n            'b#': { rootIndex: 6, intVal: 0 },\n            'b##': { rootIndex: 6, intVal: 1 },\n            bb: { rootIndex: 6, intVal: 10 },\n            bbb: { rootIndex: 6, intVal: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonicalNotes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonicIntervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.intVal;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonicalNotes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonicIntervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverseInterval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverseInterval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverseInterval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.rootIndexes[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _Accidental_checkCollision;\nimport { Fraction } from './fraction';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const noteheadAccidentalPadding = Tables.lookupMetric('Accidental.noteheadAccidentalPadding');\n        const leftShift = state.leftShift + noteheadAccidentalPadding;\n        const accidentalSpacing = Tables.lookupMetric('Accidental.accidentalSpacing');\n        const additionalPadding = Tables.lookupMetric('Accidental.leftPadding'); // padding to the left of all accidentals\n        const accidentalLinePositionsAndSpaceNeeds = [];\n        let prevNote = undefined;\n        let extraXSpaceNeededForLeftDisplacedNotehead = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const accidental = accidentals[i];\n            const note = accidental.getNote();\n            const stave = note.getStave();\n            const index = accidental.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    // If the current extra left-space needed isn't as big as this note's,\n                    // then we need to use this note's.\n                    extraXSpaceNeededForLeftDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), extraXSpaceNeededForLeftDisplacedNotehead);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    y,\n                    line: accLine,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                    spacingBetweenStaveLines: lineSpace,\n                });\n            }\n            else {\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    line: props.line,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                });\n            }\n        }\n        // Sort accidentals by line number.\n        accidentalLinePositionsAndSpaceNeeds.sort((a, b) => b.line - a.line);\n        const staveLineAccidentalLayoutMetrics = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let maxExtraXSpaceNeeded = 0;\n        // Create an array of unique line numbers (staveLineAccidentalLayoutMetrics)\n        // from accidentalLinePositionsAndSpaceNeeds\n        for (let i = 0; i < accidentalLinePositionsAndSpaceNeeds.length; i++) {\n            const accidentalLinePositionAndSpaceNeeds = accidentalLinePositionsAndSpaceNeeds[i];\n            const accidentalType = accidentalLinePositionAndSpaceNeeds.accidental.type;\n            const priorLineMetric = staveLineAccidentalLayoutMetrics[staveLineAccidentalLayoutMetrics.length - 1];\n            let currentLineMetric;\n            // if this is the first line, or a new line, add a staveLineAccidentalLayoutMetric\n            if (!priorLineMetric || (priorLineMetric === null || priorLineMetric === void 0 ? void 0 : priorLineMetric.line) !== accidentalLinePositionAndSpaceNeeds.line) {\n                currentLineMetric = {\n                    line: accidentalLinePositionAndSpaceNeeds.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                };\n                staveLineAccidentalLayoutMetrics.push(currentLineMetric);\n            }\n            else {\n                currentLineMetric = priorLineMetric;\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            if (accidentalType !== 'b' && accidentalType !== 'bb') {\n                currentLineMetric.flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (accidentalType !== '##') {\n                currentLineMetric.dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            currentLineMetric.numAcc++;\n            // Track the total xOffset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            currentLineMetric.width += accidentalLinePositionAndSpaceNeeds.accidental.getWidth() + accidentalSpacing;\n            // if this extraXSpaceNeeded is the largest so far, use it as the starting point for\n            // all accidental columns.\n            maxExtraXSpaceNeeded = Math.max(accidentalLinePositionAndSpaceNeeds.extraXSpaceNeeded, maxExtraXSpaceNeeded);\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < staveLineAccidentalLayoutMetrics.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < staveLineAccidentalLayoutMetrics.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (__classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, staveLineAccidentalLayoutMetrics[groupEnd], staveLineAccidentalLayoutMetrics[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => staveLineAccidentalLayoutMetrics[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !__classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = __classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, staveLineAccidentalLayoutMetrics[groupStart], staveLineAccidentalLayoutMetrics[groupEnd])\n                ? 'a'\n                : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'secondOnBottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spacedOutTetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spacedOutPentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'verySpacedOutPentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spacedOutHexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'verySpacedOutHexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < staveLineAccidentalLayoutMetrics.length; line++) {\n                        if (__classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, staveLineAccidentalLayoutMetrics[line], staveLineAccidentalLayoutMetrics[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to xOffsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger xOffset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = leftShift + maxExtraXSpaceNeeded;\n        columnXOffsets[0] = leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth + maxExtraXSpaceNeeded;\n                accidentalLinePositionsAndSpaceNeeds[accCount].accidental.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accidentalLinePositionsAndSpaceNeeds[accCount].accidental.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.leftShift = totalShift + additionalPadding;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        this.text = '';\n        if (!this.cautionary) {\n            this.text += Tables.accidentalCodes(this.type);\n            this.fontInfo.size = Tables.lookupMetric('Accidental.fontSize');\n        }\n        else {\n            this.text += Tables.accidentalCodes('{');\n            this.text += Tables.accidentalCodes(this.type);\n            this.text += Tables.accidentalCodes('}');\n            this.fontInfo.size = Tables.lookupMetric('Accidental.cautionary.fontSize');\n        }\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(this.note)) {\n            this.fontInfo.size = Tables.lookupMetric('Accidental.grace.fontSize');\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        this.reset();\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        const accX = start.x;\n        const accY = start.y;\n        L('Rendering: ', type, accX, accY);\n        this.renderText(ctx, accX - this.width, accY);\n    }\n}\n_a = Accidental, _Accidental_checkCollision = function _Accidental_checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) {\n        // then line 2 is on top\n        clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n        if (line1.dblSharpLine)\n            clearance -= 0.5;\n    }\n    else {\n        // line 1 is on top\n        clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n        if (line2.dblSharpLine)\n            clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line1, Line2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n};\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (2 + Font.convertSizeToPixelValue(annotation.fontInfo.size)) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphWidth();\n            // Get the text width from the font metrics.\n            const textWidth = annotation.getWidth();\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.renderOptions.drawStem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.topTextLine + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.topTextLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.topTextLine);\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.textLine + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.textLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.textLine);\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.textLine);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        const textWidth = this.getWidth();\n        const textHeight = Font.convertSizeToPixelValue(this.fontInfo.size);\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - textWidth;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - textWidth / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - textWidth / 2;\n        }\n        let stemExt = {};\n        let spacing = 0;\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (hasStem) {\n            stemExt = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE + textHeight;\n            if (hasStem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stemExt.topY + textHeight + spacing * this.textLine);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.textLine) - 1;\n            const yb = stave.getYForBottomText(this.textLine);\n            y = yt + (yb - yt) / 2 + textHeight / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (hasStem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stemExt.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stemExt.topY - spacing * (this.textLine + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + textHeight / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        this.renderText(ctx, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        super();\n        this.stemUpYOffset = 0;\n        this.stemDownYOffset = 0;\n        this.stemUpYBaseOffset = 0;\n        this.stemDownYBaseOffset = 0;\n        // Default notehead x bounds\n        this.xBegin = (_a = options === null || options === void 0 ? void 0 : options.xBegin) !== null && _a !== void 0 ? _a : 0;\n        this.xEnd = (_b = options === null || options === void 0 ? void 0 : options.xEnd) !== null && _b !== void 0 ? _b : 0;\n        // Y bounds for top/bottom most notehead\n        this.yTop = (_c = options === null || options === void 0 ? void 0 : options.yTop) !== null && _c !== void 0 ? _c : 0;\n        this.yBottom = (_d = options === null || options === void 0 ? void 0 : options.yBottom) !== null && _d !== void 0 ? _d : 0;\n        // Stem top extension\n        this.stemExtension = (_e = options === null || options === void 0 ? void 0 : options.stemExtension) !== null && _e !== void 0 ? _e : 0;\n        // Direction of the stem\n        this.stemDirection = (_f = options === null || options === void 0 ? void 0 : options.stemDirection) !== null && _f !== void 0 ? _f : 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (_g = options === null || options === void 0 ? void 0 : options.stemletHeight) !== null && _g !== void 0 ? _g : 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        var _a, _b, _c, _d;\n        // Changing where the stem meets the head\n        this.stemUpYOffset = (_a = options === null || options === void 0 ? void 0 : options.stemUpYOffset) !== null && _a !== void 0 ? _a : 0;\n        this.stemDownYOffset = (_b = options === null || options === void 0 ? void 0 : options.stemDownYOffset) !== null && _b !== void 0 ? _b : 0;\n        this.stemUpYBaseOffset = (_c = options === null || options === void 0 ? void 0 : options.stemUpYBaseOffset) !== null && _c !== void 0 ? _c : 0;\n        this.stemDownYBaseOffset = (_d = options === null || options === void 0 ? void 0 : options.stemDownYBaseOffset) !== null && _d !== void 0 ? _d : 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(xBegin, xEnd) {\n        this.xBegin = xBegin;\n        this.xEnd = xEnd;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stemDirection = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stemExtension = ext;\n    }\n    getExtension() {\n        return this.stemExtension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(yTop, yBottom) {\n        this.yTop = yTop;\n        this.yBottom = yBottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const yOffset = this.stemDirection === Stem.UP ? this.stemUpYOffset : this.stemDownYOffset;\n        const unsignedHeight = this.yBottom - this.yTop + (Stem.HEIGHT - yOffset + this.stemExtension); // parentheses just for grouping.\n        return unsignedHeight * this.stemDirection;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stemDirection === Stem.UP;\n        const ys = [this.yTop, this.yBottom];\n        const stemHeight = Stem.HEIGHT + this.stemExtension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stemDirection;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.lookupMetric('Stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stemX;\n        let stemY;\n        const stemDirection = this.stemDirection;\n        let yBaseOffset = 0;\n        if (stemDirection === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stemX = this.xBegin;\n            stemY = this.yTop + this.stemDownYOffset;\n            yBaseOffset = this.stemDownYBaseOffset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stemX = this.xEnd;\n            stemY = this.yBottom - this.stemUpYOffset;\n            yBaseOffset = this.stemUpYBaseOffset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.yTop, 'Bottom Y: ', this.yBottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stemDirection : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stemX, stemY - stemletYOffset + yBaseOffset);\n        ctx.lineTo(stemX, stemY - stemHeight - this.renderHeightAdjustment * stemDirection);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns.\n// MIT License\nimport { Glyphs } from './glyphs';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nexport function getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nexport function getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nexport function getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), articulation.height / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.topTextLine, ABOVE);\n                const curTop = noteLine + state.topTextLine + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.betweenLines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.textLine, BELOW);\n                const curBottom = noteLine + state.textLine + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.betweenLines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.textLine);\n                state.textLine += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.leftShift + state.rightShift), 0));\n        state.leftShift += overlap / 2;\n        state.rightShift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts` or Glyph code.\n     *\n     * Notes default positions (see https://w3c.github.io/smufl/latest/tables/articulation.html):\n     * - Even codes will be positioned ABOVE\n     * - Odd codes will be positioned BELOW\n     */\n    constructor(type) {\n        var _a;\n        super();\n        this.heightShift = 0;\n        this.type = type;\n        this.position = ABOVE;\n        if (!Tables.articulationCodes(this.type)) {\n            if (((_a = this.type.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) % 2 === 0)\n                this.position = ABOVE;\n            else\n                this.position = BELOW;\n        }\n        this.articulation = { betweenLines: false };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        // Use type as glyph code, if not defined as articulation code\n        if (!this.articulation) {\n            this.articulation = { code: this.type, betweenLines: false };\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) ||\n            this.articulation.code ||\n            Glyphs.null;\n        this.text = code;\n    }\n    /** Set if articulation should be rendered between lines. */\n    setBetweenLines(betweenLines = true) {\n        this.articulation.betweenLines = betweenLines;\n        return this;\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, textLine } = this;\n        const canSitBetweenLines = this.articulation.betweenLines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        let y = {\n            [ABOVE]: () => {\n                this.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                this.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                this.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        this.renderText(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Tickable_preFormatted, _Tickable_postFormatted;\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    constructor() {\n        super();\n        _Tickable_preFormatted.set(this, false);\n        _Tickable_postFormatted.set(this, false);\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.alignCenter = false;\n        this.centerXShift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignoreTicks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignoreTicks = flag;\n        return this;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!__classPrivateFieldGet(this, _Tickable_preFormatted, \"f\")) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.xShift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.centerXShift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.centerXShift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.alignCenter;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(alignCenter) {\n        this.alignCenter = alignCenter;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return a list of Tuplets. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet (if this is not provided, all tuplets are reset).\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        __classPrivateFieldSet(this, _Tickable_preFormatted, false, \"f\");\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        __classPrivateFieldSet(this, _Tickable_preFormatted, false, \"f\");\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        __classPrivateFieldSet(this, _Tickable_preFormatted, false, \"f\");\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (__classPrivateFieldGet(this, _Tickable_preFormatted, \"f\"))\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        __classPrivateFieldSet(this, _Tickable_preFormatted, value, \"f\");\n    }\n    get preFormatted() {\n        return __classPrivateFieldGet(this, _Tickable_preFormatted, \"f\");\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (__classPrivateFieldGet(this, _Tickable_postFormatted, \"f\"))\n            return this;\n        __classPrivateFieldSet(this, _Tickable_postFormatted, true, \"f\");\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        __classPrivateFieldSet(this, _Tickable_postFormatted, value, \"f\");\n    }\n    get postFormatted() {\n        return __classPrivateFieldGet(this, _Tickable_postFormatted, \"f\");\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n_Tickable_preFormatted = new WeakMap(), _Tickable_postFormatted = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// @author: Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n    drawVerticalBar(stave, x, doubleBar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (doubleBar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let xShift = 3;\n        if (!begin) {\n            xShift = -5;\n        }\n        staveCtx.fillRect(x + xShift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dotRadius = 2;\n        // Shift dots left or right\n        if (begin) {\n            xShift += 4;\n        }\n        else {\n            xShift -= 4;\n        }\n        const dotX = x + xShift + dotRadius / 2;\n        // calculate the y offset based on number of stave lines\n        let yOffset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        yOffset = yOffset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dotY = topY + yOffset + dotRadius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dotY += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// @author Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Element } from './element';\nimport { Font } from './font';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport class ChordSymbolBlock extends Element {\n    constructor(text, symbolModifier, xShift, yShift, vAlign) {\n        super();\n        this.text = text;\n        this.symbolModifier = symbolModifier;\n        this.xShift = xShift;\n        this.yShift = yShift;\n        this.vAlign = vAlign;\n    }\n    isSuperscript() {\n        return this.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    isSubscript() {\n        return this.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return Tables.lookupMetric('ChordSymbol.superSubRatio');\n    }\n    static get spacingBetweenBlocks() {\n        return Tables.lookupMetric('ChordSymbol.spacing');\n    }\n    static get superscriptOffset() {\n        return Tables.lookupMetric('ChordSymbol.superscriptOffset');\n    }\n    static get subscriptOffset() {\n        return Tables.lookupMetric('ChordSymbol.subscriptOffset');\n    }\n    static get minPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const note = symbol.checkAttachedNote();\n            let lineSpaces = 1;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = block.isSuperscript();\n                const sub = block.isSubscript();\n                block.setXShift(width);\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If a subscript immediately follows a superscript block, try to\n                // overlay them.\n                if (sub && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (prev.isSuperscript()) {\n                        // slide the symbol over so it lines up with superscript\n                        block.setXShift(width - prev.getWidth() - ChordSymbol.minPadding);\n                        block.vAlign = true;\n                        width +=\n                            -prev.getWidth() -\n                                ChordSymbol.minPadding +\n                                (prev.getWidth() > block.getWidth() ? prev.getWidth() - block.getWidth() : 0);\n                    }\n                }\n                width += block.getWidth() + ChordSymbol.minPadding;\n            }\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.topTextLine);\n                state.topTextLine += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.textLine + 1);\n                state.textLine += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth()) {\n                if (isStemmableNote(note)) {\n                    const glyphWidth = note.getGlyphWidth();\n                    if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                        maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                        leftWidth = Math.max(leftWidth, width) + ChordSymbol.minPadding;\n                    }\n                    else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                        maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                        rightWidth = Math.max(rightWidth, width);\n                    }\n                    else {\n                        leftWidth = Math.max(leftWidth, width / 2) + ChordSymbol.minPadding;\n                        rightWidth = Math.max(rightWidth, width / 2);\n                        maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                        maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                    }\n                }\n                symbol.width = width;\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.reportWidth = true;\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * Font.convertSizeToPixelValue(this.fontInfo.size);\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * Font.convertSizeToPixelValue(this.fontInfo.size);\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    getSymbolBlock(params = {}) {\n        var _a, _b;\n        const symbolBlock = new ChordSymbolBlock((_a = params.text) !== null && _a !== void 0 ? _a : '', (_b = params.symbolModifier) !== null && _b !== void 0 ? _b : SymbolModifiers.NONE, 0, 0, false);\n        if (symbolBlock.isSubscript()) {\n            symbolBlock.setYShift(this.subscriptOffset);\n        }\n        if (symbolBlock.isSuperscript()) {\n            symbolBlock.setYShift(this.superscriptOffset);\n        }\n        if (symbolBlock.isSubscript() || symbolBlock.isSuperscript()) {\n            const { family, size, weight, style } = this.fontInfo;\n            const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n            symbolBlock.setFont(family, smallerFontSize, weight, style);\n        }\n        else {\n            symbolBlock.setFont(this.fontInfo);\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    addText(text, parameters = {}) {\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        return this.addTextSuperscript(ChordSymbol.glyphs[glyph]);\n    }\n    /** Add a glyph block. */\n    addGlyph(glyph, params = {}) {\n        return this.addText(ChordSymbol.glyphs[glyph], params);\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            const glyph = ChordSymbol.glyphs[char];\n            if (glyph) {\n                str += glyph;\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    addLine(params = {}) {\n        // Two csymMinor glyphs next to each other.\n        return this.addText('\\ue874\\ue874' /*{csymMinor}{csymMinor}*/, params);\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.fontInfo);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.textLine + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stemBase = note.getStemDirection() === 1 ? stemExt.baseY : stemExt.topY;\n                y = Math.max(y, stemBase + spacing * (this.textLine + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.textLine), topY - 10);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stemExt.topY - 5 - spacing * this.textLine);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            L('Rendering Text: ', symbol.getText(), x + symbol.getXShift(), y + symbol.getYShift());\n            symbol.renderText(ctx, x, y);\n        });\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: '\\ue870' /*csymDiminished*/,\n    dim: '\\ue870' /*csymDiminished*/,\n    halfDiminished: '\\ue871' /*csymHalfDiminished*/,\n    '+': '\\ue872' /*csymAugmented*/,\n    augmented: '\\ue872' /*csymAugmented*/,\n    majorSeventh: '\\ue873' /*csymMajorSeventh*/,\n    minor: '\\ue874' /*csymMinor*/,\n    '-': '\\ue874' /*csymMinor*/,\n    '(': '\\u0028' /*csymParensLeftTall*/,\n    leftParen: '\\u0028' /*csymParensLeftTall*/,\n    ')': '\\u0029' /*csymParensRightTall*/,\n    rightParen: '\\u0029' /*csymParensRightTall*/,\n    leftBracket: '\\ue877' /*csymBracketLeftTall*/,\n    rightBracket: '\\ue878' /*csymBracketRightTall*/,\n    leftParenTall: '\\u0028' /*csymParensLeftVeryTall*/,\n    rightParenTall: '\\u0029' /*csymParensRightVeryTall*/,\n    '/': '\\ue87c' /*csymDiagonalArrangementSlash*/,\n    over: '\\ue87c' /*csymDiagonalArrangementSlash*/,\n    '#': '\\ued62' /*csymAccidentalSharp*/,\n    b: '\\ued60' /*csymAccidentalFlat*/,\n};\nChordSymbol.symbolModifiers = SymbolModifiers;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Glyphs } from './glyphs';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        let code = Tables.durationCodes[duration];\n        if (code === undefined) {\n            code = Tables.durationCodes['4'];\n        }\n        // Try and get the note head\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        // Merge duration props for 'duration' with the note head properties.\n        if (codeNoteHead !== Glyphs.null) {\n            code = Object.assign(Object.assign({}, code), { codeHead: codeNoteHead });\n        }\n        return code;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        var _a;\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + ((_a = note.getFormatterMetrics().freedom.right) !== null && _a !== void 0 ? _a : 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Tables.lookupMetric('fontFamily'), 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.durationOverride) {\n            // Custom duration\n            this.setDuration(noteStruct.durationOverride);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Note.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignoreTicks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.xShift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.alignCenter) {\n            this.setCenterAlignment(noteStruct.alignCenter);\n        }\n        // The render surface.\n        this.renderOptions = {\n            annotationSpacing: 5,\n            glyphFontScale: 1,\n            strokePx: 1,\n            scale: 1,\n            font: '',\n            yShift: 0,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /** Get the glyph associated with this note. */\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return 0;\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(textLine) {\n        return this.checkStave().getYForTopText(textLine);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType(Category.Dot).length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam !== undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.xShift : -this.xShift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        const parentheses = this.checkModifierContext().getMembers('Parenthesis');\n        // consider parentheses on noteheads, dots should be to the right of them\n        if (parentheses.length !== 0) {\n            px += parentheses[0].getWidth() + 1;\n        }\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().leftShift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().rightShift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes xShift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.lookupMetric('Stave.padding', 0);\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieStartX += noteGlyphWidth / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieEndX += noteGlyphWidth / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignoreTicks = true;\n        this.setType(type);\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let lastWidth = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.topTextLine < stringPos) {\n                    state.topTextLine = stringPos;\n                }\n            }\n            bend.setXShift(lastWidth);\n            lastWidth = bend.getWidth();\n            bend.setTextLine(state.topTextLine);\n        }\n        state.rightShift += lastWidth;\n        state.topTextLine += 1;\n        return true;\n    }\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     */\n    constructor(phrase) {\n        super();\n        this.xShift = 0;\n        this.tap = '';\n        this.renderOptions = {\n            lineWidth: 1.5,\n            lineStyle: '#777777',\n            bendWidth: 8,\n            releaseWidth: 8,\n        };\n        this.phrase = phrase;\n        this.updateWidth();\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.xShift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    getTextHeight() {\n        const element = new Element(Category.Bend);\n        element.setText(this.phrase[0].text);\n        return element.getHeight();\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const measureText = (text) => {\n            const element = new Element(Category.Bend);\n            element.setText(text);\n            return element.getWidth();\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additionalWidth = bend.type === Bend.UP ? this.renderOptions.bendWidth : this.renderOptions.releaseWidth;\n                bend.width = Math.max(additionalWidth, measureText(bend.text)) + 3;\n                bend.drawWidth = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.xShift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const xShift = this.xShift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.textLine is relative to top string in the group.\n        const bendHeight = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) + 3;\n        const annotationY = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cpX = x + width;\n            const cpY = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.renderOptions.lineWidth);\n            ctx.setStrokeStyle(this.renderOptions.lineStyle);\n            ctx.setFillStyle(this.renderOptions.lineStyle);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cpX, cpY, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.renderOptions.lineWidth);\n            ctx.setStrokeStyle(this.renderOptions.lineStyle);\n            ctx.setFillStyle(this.renderOptions.lineStyle);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.fontInfo);\n            const renderX = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, renderX, annotationY);\n            ctx.restore();\n        };\n        let lastBend = undefined;\n        let lastBendDrawWidth = 0;\n        let lastDrawnWidth = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.drawWidth)\n                bend.drawWidth = 0;\n            if (i === 0)\n                bend.drawWidth += xShift;\n            lastDrawnWidth = bend.drawWidth + lastBendDrawWidth - (i === 1 ? xShift : 0);\n            if (bend.type === Bend.UP) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderArrowHead(start.x, bendHeight, +1);\n                }\n                renderBend(start.x, start.y, lastDrawnWidth, bendHeight);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (lastBend && lastBend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (!lastBend) {\n                    lastDrawnWidth = bend.drawWidth;\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n            }\n            renderText(start.x + lastDrawnWidth, bend.text);\n            lastBend = bend;\n            lastBendDrawWidth = bend.drawWidth;\n            lastBend.x = start.x;\n            start.x += lastDrawnWidth;\n        }\n        if (!lastBend || lastBend.x === undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (lastBend.type === Bend.UP) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, bendHeight, +1);\n        }\n        else if (lastBend.type === Bend.DOWN) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, start.y, -1);\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) !== undefined) {\n                const dot = new Dot();\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const rightShift = state.rightShift;\n        const dotSpacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dotList = [];\n        const maxShiftMap = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = rightShift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const noteId = note.getAttribute('id');\n            dotList.push({ line: props.line, note, noteId, dot });\n            maxShiftMap[noteId] = Math.max(maxShiftMap[noteId] || shift, shift);\n        }\n        // Sort dots by line number.\n        dotList.sort((a, b) => b.line - a.line);\n        let dotShift = rightShift;\n        let xWidth = 0;\n        let lastLine = null;\n        let lastNote = null;\n        let prevDottedSpace = null;\n        let halfShiftY = 0;\n        for (let i = 0; i < dotList.length; ++i) {\n            const { dot, note, noteId, line } = dotList[i];\n            // Reset the position of the dot every line.\n            if (line !== lastLine || note !== lastNote) {\n                dotShift = maxShiftMap[noteId];\n            }\n            if (!note.isRest() && line !== lastLine) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    halfShiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    halfShiftY = 0.5;\n                    if (lastNote !== null && !lastNote.isRest() && lastLine !== null && lastLine - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        halfShiftY = -0.5;\n                    }\n                    else if (line + halfShiftY === prevDottedSpace) {\n                        // previous space is dotted, so shift dot to space below the line\n                        halfShiftY = -0.5;\n                    }\n                }\n            }\n            // Convert halfShiftY to a multiplier for dots.draw().\n            if (note.isRest()) {\n                dot.dotShiftY += -halfShiftY;\n            }\n            else {\n                dot.dotShiftY = -halfShiftY;\n            }\n            prevDottedSpace = line + halfShiftY;\n            dot.setXShift(dotShift);\n            dotShift += dot.getWidth() + dotSpacing; // spacing\n            xWidth = dotShift > xWidth ? dotShift : xWidth;\n            lastLine = line;\n            lastNote = note;\n        }\n        // Update state.\n        state.rightShift += xWidth;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dotShiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dotShiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.xShift + this.width - this.radius;\n        const y = start.y + this.yShift + this.dotShiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { leftShift, rightShift } = state;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textHeight = Tables.lookupMetric('FretHandFinger.fontSize');\n            if (num.position === ModifierPosition.ABOVE) {\n                state.topTextLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.textLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (leftShift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            numsList.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            let numShift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = numsList[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = leftShift + shiftL;\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + numShiftL);\n                numShift = leftShift + numWidth; // spacing\n                xWidthL = numShift > xWidthL ? numShift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numShift = shiftRight + numWidth; // spacing\n                xWidthR = numShift > xWidthR ? numShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.setFretHandFinger(finger);\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.xOffset = 0; // Horizontal offset from default\n        this.yOffset = 0; // Vertical offset from default\n    }\n    setFretHandFinger(finger) {\n        this.text = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.text;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dotX = start.x + this.xOffset;\n        let dotY = start.y + this.yOffset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dotX -= 4;\n                dotY -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dotX -= 2;\n                dotY += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        this.renderText(ctx, dotX, dotY);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.customGlyph = false;\n        // map notehead SMuFL codes to the corresponding SMuFL code with ledger line\n        this.ledger = {\n            '\\ue4e3' /*restWhole*/: '\\ue4f4' /*restWholeLegerLine*/,\n            '\\ue4e4' /*restHalf*/: '\\ue4f5' /*restHalfLegerLine*/,\n        };\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.noteType)\n            this.noteType = noteStruct.noteType;\n        this.displaced = noteStruct.displaced || false;\n        this.stemDirection = noteStruct.stemDirection || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with ledger lines\n        if ((this.line > 5 || this.line < 0) && this.ledger[this.glyphProps.codeHead]) {\n            this.glyphProps.codeHead = this.ledger[this.glyphProps.codeHead];\n        }\n        this.text = this.glyphProps.codeHead;\n        if (noteStruct.customGlyphCode) {\n            this.customGlyph = true;\n            this.text = noteStruct.customGlyphCode;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // font size for note heads\n            glyphFontScale: noteStruct.glyphFontScale || Tables.lookupMetric('fontSize') });\n        this.fontInfo.size = this.renderOptions.glyphFontScale;\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        return x + (this.displaced ? (this.width - displacementStemAdjustment) * this.stemDirection : 0);\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        return new BoundingBox(this.getAbsoluteX() - this.textMetrics.actualBoundingBoxLeft, this.y - this.textMetrics.actualBoundingBoxAscent, this.width, this.height);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", this.x, this.y);\n        this.renderText(ctx, this.getAbsoluteX() - this.x, 0);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Element } from './element';\nimport { Glyphs } from './glyphs';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.flag = new Element();\n        this.flagStyle = {};\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag() {\n        var _a, _b, _c;\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = \n            // codeFlagDown = codeFlagUp + 1\n            // if codeFlagUp is undefined, codePoint will be 0\n            this.getStemDirection() === Stem.DOWN\n                ? String.fromCodePoint(((_b = (_a = glyphProps.codeFlagUp) === null || _a === void 0 ? void 0 : _a.codePointAt(0)) !== null && _b !== void 0 ? _b : -1) + 1)\n                : (_c = glyphProps.codeFlagUp) !== null && _c !== void 0 ? _c : Glyphs.null;\n            this.flag.setText(flagCode);\n            this.flag.fontSize = this.renderOptions.glyphFontScale;\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beamCount;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        const beamIsUndefined = this.beam === undefined;\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n            case '16':\n                length = beamIsUndefined ? 35 : 25;\n                break;\n            case '32':\n                length = beamIsUndefined ? 45 : 35;\n                break;\n            case '64':\n                length = beamIsUndefined ? 50 : 40;\n                break;\n            case '128':\n                length = beamIsUndefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stemDirection)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stemDirection;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stemDirection = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const xBegin = this.getAbsoluteX() + this.xShift;\n        const xEnd = this.getAbsoluteX() + this.xShift + this.getGlyphWidth();\n        const stemX = this.stemDirection === Stem.DOWN ? xBegin : xEnd;\n        return stemX;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.xShift + this.getGlyphWidth() / 2;\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        const flagHeight = this.flag.getHeight();\n        const scale = this.getStaveNoteScale();\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        // Use stemBeamExtension with beams\n        if (this.beam) {\n            return glyphProps.stemBeamExtension * scale;\n        }\n        // If the flag is longer than the stem, extend the stem by the difference.\n        return flagHeight > Stem.HEIGHT * scale ? flagHeight - Stem.HEIGHT * scale : 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stemExtensionOverride = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return this.glyphProps.codeFlagUp !== undefined && !this.beam && !this.isRest();\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _StaveNote_noteHeads, _StaveNote_sortedKeyProps;\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = __classPrivateFieldGet(notes[i], _StaveNote_sortedKeyProps, \"f\");\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL =\n                    line +\n                        Math.ceil(__classPrivateFieldGet(notes[i], _StaveNote_noteHeads, \"f\")[0].getTextMetrics().actualBoundingBoxAscent / Tables.STAVE_LINE_DISTANCE);\n                minL =\n                    line -\n                        Math.ceil(__classPrivateFieldGet(notes[i], _StaveNote_noteHeads, \"f\")[0].getTextMetrics().actualBoundingBoxDescent / Tables.STAVE_LINE_DISTANCE);\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection,\n                stemMax,\n                stemMin,\n                voiceShift: notes[i].getVoiceShiftWidth(),\n                isDisplaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            // If .draw is true or undefined, we set draw[i] = true\n            draw[i] = notesList[i].note.renderOptions.draw !== false;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voiceShift, noteL.voiceShift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.renderOptions.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = __classPrivateFieldGet(noteU.note, _StaveNote_sortedKeyProps, \"f\")[0].keyProps.code;\n                        const noteLHead = __classPrivateFieldGet(noteL.note, _StaveNote_sortedKeyProps, \"f\")[__classPrivateFieldGet(noteL.note, _StaveNote_sortedKeyProps, \"f\").length - 1].keyProps.code;\n                        if (\n                        // If unison is not configured, shift\n                        !Tables.UNISON ||\n                            // If we have different noteheads, shift\n                            noteUHead !== noteLHead ||\n                            // If we have different dot values, shift\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                    .length ||\n                            // If the notes are quite close but not on the same line, shift\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            // If styles are different, shift\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line !== noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            // upper voice is shorter, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.rightShift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.rightShift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.renderOptions.draw = false;\n            // Hide lower voice rest\n            noteL.note.renderOptions.draw = false;\n            // format complete\n            state.rightShift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.rightShift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        _StaveNote_noteHeads.set(this, void 0);\n        // Sorted variant of keyProps used internally.\n        _StaveNote_sortedKeyProps.set(this, []);\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octaveShift = (_b = noteStruct.octaveShift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dotShiftY = 0;\n        // for displaced ledger lines\n        this.useDefaultHeadX = false;\n        // Drawing\n        __classPrivateFieldSet(this, _StaveNote_noteHeads, [], \"f\");\n        this.modifiers = [];\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // font size for note heads and rests\n            glyphFontScale: noteStruct.glyphFontScale || Tables.lookupMetric('fontSize'), \n            // number of stroke px to the left and right of head\n            strokePx: noteStruct.strokePx || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.autoStem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stemDirection) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        __classPrivateFieldSet(this, _StaveNote_noteHeads, [], \"f\");\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.useDefaultHeadX = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                noteType: this.noteType,\n                displaced,\n                stemDirection,\n                customGlyphCode: noteProps.code,\n                glyphFontScale: this.renderOptions.glyphFontScale,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[__classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[i].index] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[0].keyProps.line;\n        this.maxLine = __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        var _a;\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            const options = { octaveShift: (_a = this.octaveShift) !== null && _a !== void 0 ? _a : 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, this.noteType, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\").push({ keyProps, index });\n        });\n        __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\").sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        const boundingBox = new BoundingBox(this.getAbsoluteX(), this.ys[0], 0, 0);\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => {\n            boundingBox.mergeWith(notehead.getBoundingBox());\n        });\n        const { yTop, yBottom } = this.getNoteHeadBounds();\n        // eslint-disable-next-line\n        const noteStemHeight = this.stem.getHeight();\n        const flagX = this.getStemX() - Tables.STEM_WIDTH / 2;\n        const flagY = this.getStemDirection() === Stem.DOWN\n            ? yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n            : yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n        if (!this.isRest() && this.hasStem()) {\n            boundingBox.mergeWith(new BoundingBox(this.getAbsoluteX(), flagY, 0, 0));\n        }\n        if (this.hasFlag()) {\n            const bbFlag = this.flag.getBoundingBox();\n            boundingBox.mergeWith(bbFlag.move(flagX, flagY));\n        }\n        return boundingBox;\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        const val = this.glyphProps.codeHead;\n        return val >= '\\ue4e0' && val <= '\\ue4ff';\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stemDirection ? Stem.WIDTH / (2 * -this.stemDirection) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `textLine`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(yTop, yBottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.xShift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.xShift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.xShift + 2;\n            if (this.stemDirection === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += this.flag.getWidth();\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        // addtional y shifts for rests\n        let restShift = 0;\n        switch (__classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[index].getText()) {\n            case '\\ue4e2' /*restDoubleWhole*/:\n            case '\\ue4e3' /*restWhole*/:\n                restShift += 0.5;\n                break;\n            case '\\ue4e4' /*restHalf*/:\n            case '\\ue4e5' /*restQuarter*/:\n            case '\\ue4e6' /*rest8th*/:\n            case '\\ue4e7' /*rest16th*/:\n                restShift -= 0.5;\n                break;\n            case '\\ue4e8' /*rest32nd*/:\n            case '\\ue4e9' /*rest64th*/:\n                restShift -= 1.5;\n                break;\n            case '\\ue4ea' /*rest128th*/:\n                restShift -= 2.5;\n                break;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index] + restShift * this.checkStave().getSpacingBetweenLines(),\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flagStyle = style;\n    }\n    getFlagStyle() {\n        return this.flagStyle;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.noteHeads[0].getWidth();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stemDirection === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stemDirection === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stemDirection === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} yTop the highest notehead bound\n     * @property {number} yBottom the lowest notehead bound\n     * @property {number|Null} displacedX the starting x for displaced noteheads\n     * @property {number|Null} nonDisplacedX the starting x for non-displaced noteheads\n     * @property {number} highestLine the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowestLine the lowest notehead line\n     * @property {number|false} highestDisplacedLine the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowestDisplacedLine\n     * @property {number} highestNonDisplacedLine\n     * @property {number} lowestNonDisplacedLine\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            yTop,\n            yBottom,\n            displacedX,\n            nonDisplacedX,\n            highestLine,\n            lowestLine,\n            highestDisplacedLine,\n            lowestDisplacedLine,\n            highestNonDisplacedLine,\n            lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.xShift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").slice();\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { renderOptions: { strokePx }, } = this;\n        const ctx = this.checkContext();\n        const width = this.getGlyphWidth() + strokePx * 2;\n        const doubleWidth = 2 * (this.getGlyphWidth() + strokePx) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highestLine, lowestLine, highestDisplacedLine, highestNonDisplacedLine, lowestDisplacedLine, lowestNonDisplacedLine, displacedX, nonDisplacedX, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highestLine < 6 && lowestLine > 0)\n            return;\n        const minX = Math.min(displacedX !== null && displacedX !== void 0 ? displacedX : 0, nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = minX - strokePx;\n            else if (normal)\n                x = (nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0) - strokePx;\n            else\n                x = (displacedX !== null && displacedX !== void 0 ? displacedX : 0) - strokePx;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highestLine; ++line) {\n            const normal = nonDisplacedX !== undefined && line <= highestNonDisplacedLine;\n            const displaced = highestDisplacedLine !== undefined && line <= highestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowestLine; --line) {\n            const normal = nonDisplacedX !== undefined && line >= lowestNonDisplacedLine;\n            const displaced = lowestDisplacedLine !== undefined && line >= lowestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[index];\n            if (notehead === noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.codeFlagUp !== undefined;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam && !this.isRest();\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX() - Tables.STEM_WIDTH / 2;\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n                : // Up stems are above the note head and have flags on the right.\n                    yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n            // Draw the Flag\n            this.applyStyle(ctx, this.flagStyle);\n            this.flag.renderText(ctx, flagX, flagY);\n            this.restoreStyle(ctx, this.flagStyle);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => {\n            notehead.applyStyle(ctx);\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n            notehead.restoreStyle(ctx);\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const superStemExtension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return superStemExtension;\n        }\n        const stemDirection = this.getStemDirection();\n        if (stemDirection !== this.calculateOptimalStemDirection()) {\n            return superStemExtension; // no adjustment for manually set stem direction.\n        }\n        let midLineDistance;\n        const MIDDLE_LINE = 3;\n        if (stemDirection === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            midLineDistance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            midLineDistance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const linesOverOctaveFromMidLine = midLineDistance - 3.5;\n        if (linesOverOctaveFromMidLine <= 0) {\n            return superStemExtension;\n        }\n        const stave = this.getStave();\n        let spacingBetweenLines = 10;\n        if (stave !== undefined) {\n            spacingBetweenLines = stave.getSpacingBetweenLines();\n        }\n        return superStemExtension + linesOverOctaveFromMidLine * spacingBetweenLines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.renderOptions.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\n_StaveNote_noteHeads = new WeakMap(), _StaveNote_sortedKeyProps = new WeakMap();\nStaveNote.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *    firstIndexes: [n1, n2, n3],\n     *    lastIndexes: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text = '') {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.renderOptions = {\n            cp1: 8,\n            cp2: 12,\n            textShiftX: 0,\n            firstXShift: 0,\n            lastXShift: 0,\n            yShift: 7,\n            tieSpacing: 0,\n        };\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes) {\n            notes.firstIndexes = [0];\n        }\n        if (!notes.lastIndexes) {\n            notes.lastIndexes = [0];\n        }\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.firstNote || !this.notes.lastNote;\n    }\n    /**\n     * @param params.firstX is specified in pixels.\n     * @param params.lastX is specified in pixels.\n     */\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.renderOptions.cp1;\n        let cp2 = this.renderOptions.cp2;\n        if (Math.abs(params.lastX - params.firstX) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const firstXShift = this.renderOptions.firstXShift;\n        const lastXShift = this.renderOptions.lastXShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        // setNotes(...) verified that firstIndexes and lastIndexes are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const firstIndexes = this.notes.firstIndexes;\n        // eslint-disable-next-line\n        const lastIndexes = this.notes.lastIndexes;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const cpX = (params.lastX + lastXShift + (params.firstX + firstXShift)) / 2;\n            // firstY and lastY are specified in pixels.\n            const firstY = params.firstYs[firstIndexes[i]] + yShift;\n            const lastY = params.lastYs[lastIndexes[i]] + yShift;\n            if (isNaN(firstY) || isNaN(lastY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for tie rendering.');\n            }\n            const topControlPointY = (firstY + lastY) / 2 + cp1 * params.direction;\n            const bottomControlPointY = (firstY + lastY) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.firstX + firstXShift, firstY);\n            ctx.quadraticCurveTo(cpX, topControlPointY, params.lastX + lastXShift, lastY);\n            ctx.quadraticCurveTo(cpX, bottomControlPointY, params.firstX + firstXShift, firstY);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    /**\n     * @param firstX specified in pixels\n     * @param lastX specified in pixels\n     */\n    renderTieText(firstX, lastX) {\n        var _a, _b, _c;\n        const ctx = this.checkContext();\n        let centerX = (firstX + lastX) / 2;\n        centerX -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.firstNote) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.lastNote) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.fontInfo);\n            ctx.fillText(this.text, centerX + this.renderOptions.textShiftX, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.notes.firstNote;\n        const lastNote = this.notes.lastNote;\n        // Provide some default values so the compiler doesn't complain.\n        // firstX and lastX are in pixels.\n        let firstX = 0;\n        let lastX = 0;\n        let firstYs = [0];\n        let lastYs = [0];\n        let stemDirection = 0;\n        if (firstNote) {\n            firstX = firstNote.getTieRightX() + this.renderOptions.tieSpacing;\n            stemDirection = firstNote.getStemDirection();\n            firstYs = firstNote.getYs();\n        }\n        else if (lastNote) {\n            const stave = lastNote.checkStave();\n            firstX = stave.getTieStartX();\n            firstYs = lastNote.getYs();\n            this.notes.firstIndexes = this.notes.lastIndexes;\n        }\n        if (lastNote) {\n            lastX = lastNote.getTieLeftX() + this.renderOptions.tieSpacing;\n            stemDirection = lastNote.getStemDirection();\n            lastYs = lastNote.getYs();\n        }\n        else if (firstNote) {\n            const stave = firstNote.checkStave();\n            lastX = stave.getTieEndX();\n            lastYs = firstNote.getYs();\n            this.notes.lastIndexes = this.notes.firstIndexes;\n        }\n        if (this.direction) {\n            stemDirection = this.direction;\n        }\n        this.renderTie({\n            firstX,\n            lastX,\n            firstYs,\n            lastYs,\n            direction: stemDirection,\n        });\n        this.renderTieText(firstX, lastX);\n        return true;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *    firstIndexes: [n1, n2, n3],\n     *    lastIndexes: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.renderOptions.cp1 = 9;\n        this.renderOptions.cp2 = 11;\n        this.renderOptions.yShift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError, sumArray } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    numBeats: parseInt(match[1]),\n                    beatValue: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ numBeats: 4, beatValue: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.numBeats * (this.time.resolution / this.time.beatValue), 1);\n        // until tickables are added, the smallestTickCount is the same as the stated totalTicks duration.\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode (Voice.Mode.SOFT, STRICT, or FULL) */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode` or Voice.Mode\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        const boundingBox = this.tickables[0].getBoundingBox();\n        for (let i = 1; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            if (!tickable.getStave() && this.stave)\n                tickable.setStave(this.stave);\n            const bb = tickable.getBoundingBox();\n            boundingBox.mergeWith(bb);\n        }\n        return boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0; // reset\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.  (It is not the sum of the softmax(t) over all tickables)\n     *\n     * Note that the \"exp\" of \"expTicksUsed\" stands for \"expontential\" ticks used,\n     * not \"expected\" ticks used.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenoteGroups, state) {\n        const groupSpacingStave = 4;\n        const groupSpacingTab = 0;\n        if (!gracenoteGroups || gracenoteGroups.length === 0)\n            return false;\n        const groupList = [];\n        let prevNote = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenoteGroups.length; ++i) {\n            const gracenoteGroup = gracenoteGroups[i];\n            const note = gracenoteGroup.getNote();\n            const isStavenote = isStaveNote(note);\n            const spacing = isStavenote ? groupSpacingStave : groupSpacingTab;\n            if (isStavenote && note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prevNote = note;\n            }\n            groupList.push({ shift: shiftL, gracenoteGroup, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let groupShift = groupList[0].shift;\n        let formatWidth;\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            gracenoteGroup.preFormat();\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            groupShift = Math.max(formatWidth, groupShift);\n        }\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            gracenoteGroup.setSpacingFromNextModifier(groupShift - Math.min(formatWidth, groupShift) + StaveNote.minNoteheadPadding);\n        }\n        state.leftShift += groupShift;\n        return true;\n    }\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(graceNotes, showSlur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.graceNotes = graceNotes;\n        this.width = 0;\n        this.showSlur = showSlur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.renderOptions = {\n            slurYShift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.graceNotes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(graceNotes) {\n        graceNotes = graceNotes || this.graceNotes;\n        if (graceNotes.length > 1) {\n            const beam = new Beam(graceNotes);\n            beam.renderOptions.beamWidth = 3;\n            beam.renderOptions.partialBeamLength = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.graceNotes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.graceNotes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.showSlur) {\n            // Create and draw slur.\n            const isStavenote = isStaveNote(note);\n            const TieClass = isStavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                lastNote: this.graceNotes[0],\n                firstNote: note,\n                firstIndexes: [0],\n                lastIndexes: [0],\n            });\n            this.slur.renderOptions.cp2 = 12;\n            this.slur.renderOptions.yShift = (isStavenote ? 7 : 5) + this.renderOptions.slurYShift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.leftShift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignoreTicks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks === undefined) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex !== null && voiceIndex !== void 0 ? voiceIndex : 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        var _a;\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, (_a = metrics.glyphWidth) !== null && _a !== void 0 ? _a : 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Cyril Silverman\n// MIT License\nimport { getBottomY, getInitialOffset, getTopY } from './articulation';\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let rightShift = state.rightShift; // jazz ornaments calculate r/l shift separately\n        let leftShift = state.leftShift;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (ornament.position === ModifierPosition.RIGHT) {\n                ornament.xShift += rightShift + 2;\n                rightShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.LEFT) {\n                ornament.xShift -= leftShift + ornament.width + 2;\n                leftShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.ABOVE) {\n                width = Math.max(ornament.getWidth(), width);\n                ornament.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n                ornament.setTextLine(state.textLine);\n                state.textLine += increment;\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.leftShift = leftShift + width / 2;\n        state.rightShift = rightShift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    static get ornamentLeft() {\n        return ['scoop'];\n    }\n    static get ornamentRight() {\n        return ['doit', 'fall', 'fallLong', 'doitLong'];\n    }\n    static get ornamentYShift() {\n        return ['fallLong'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        // Default position ABOVE\n        this.position = ModifierPosition.ABOVE;\n        if (Ornament.ornamentRight.indexOf(type) >= 0) {\n            this.position = ModifierPosition.RIGHT;\n        }\n        if (Ornament.ornamentLeft.indexOf(type) >= 0) {\n            this.position = ModifierPosition.LEFT;\n        }\n        this.type = type;\n        this.delayed = false;\n        this.renderOptions = {\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        this.text = Tables.ornamentCodes(this.type);\n    }\n    /** Set note attached to ornament. */\n    setNote(note) {\n        super.setNote(note);\n        // articulations above/below the line can be stacked.\n        if (Ornament.ornamentArticulation.indexOf(this.type) >= 0) {\n            // Unfortunately we don't know the stem direction.  So we base it\n            // on the line number, but also allow it to be overridden.\n            if (note.getLineNumber() >= 3) {\n                this.position = Modifier.Position.ABOVE;\n            }\n            else {\n                this.position = Modifier.Position.BELOW;\n            }\n        }\n        return this;\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        this.accidentalUpper = new Element();\n        this.accidentalUpper.setText(Tables.accidentalCodes(accid));\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        this.accidentalLower = new Element();\n        this.accidentalLower.setText(Tables.accidentalCodes(accid));\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        this.applyStyle();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        const staffSpace = stave.getSpacingBetweenLines();\n        const initialOffset = getInitialOffset(note, this.position);\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead ? start.y : 0;\n        if (this.position === ModifierPosition.ABOVE) {\n            glyphY = getTopY(note, this.textLine) - (this.textLine + initialOffset) * staffSpace;\n        }\n        if (this.position === ModifierPosition.BELOW) {\n            glyphY = getBottomY(note, this.textLine) + (this.textLine + initialOffset + 1.5) * staffSpace;\n        }\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = note.getTickContext().getX();\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.text.charCodeAt(0), glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.renderText(ctx, glyphX + this.xShift - this.accidentalLower.getWidth() * 0.5, glyphY + this.yShift - this.accidentalLower.getTextMetrics().actualBoundingBoxDescent);\n            glyphY -= this.accidentalLower.getHeight() + this.renderOptions.accidentalLowerPadding;\n        }\n        // ornament requires yShift\n        if (Ornament.ornamentYShift.indexOf(this.type) >= 0) {\n            this.yShift += this.getHeight();\n        }\n        this.renderText(ctx, glyphX -\n            (this.position === ModifierPosition.ABOVE || this.position === ModifierPosition.BELOW ? this.width * 0.5 : 0), glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.getHeight() + this.renderOptions.accidentalUpperPadding;\n            this.accidentalUpper.renderText(ctx, glyphX + this.xShift - this.accidentalUpper.getWidth() * 0.5, glyphY + this.yShift - this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent);\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Rodrigo Vilar\n// MIT License\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Category } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                xWidthR = xWidthR > shift + parenthesis.width ? xWidthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index) + parenthesis.width;\n                xWidthL = xWidthL > shift + parenthesis.width ? xWidthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        if (this.position === Modifier.Position.RIGHT) {\n            this.text = '\\uE0F6'; /*noteheadParenthesisRight*/\n        }\n        else if (this.position === Modifier.Position.LEFT) {\n            this.text = '\\uE0F5'; /*noteheadParenthesisLeft*/\n        }\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.setFont(note.getFont());\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        this.renderText(ctx, start.x, start.y);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        this.curTransfrom = context.getTransform();\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    openRotation(angleDegrees, x, y) {\n        this.curTransfrom = this.context2D.getTransform();\n        this.context2D.translate(x, y);\n        this.context2D.rotate((angleDegrees * Math.PI) / 180);\n        this.context2D.translate(-x, -y);\n    }\n    closeRotation() {\n        this.context2D.setTransform(this.curTransfrom);\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Gregory Ristow (2015)\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SVGContext_instances, _SVGContext_getShadowStyle;\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        _SVGContext_instances.add(this);\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Tables.lookupMetric('fontFamily'),\n            'font-size': '10pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.shadowAttributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.stateStack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    openRotation(angleDegrees, x, y) {\n        this.openGroup().setAttribute('transform', `translate(${x},${y}) rotate(${angleDegrees}) translate(-${x},-${y})`);\n    }\n    closeRotation() {\n        this.closeGroup();\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadowAttributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadowAttributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBoxOrMinX, minY, width, height) {\n        if (typeof viewBoxOrMinX === 'string') {\n            this.svg.setAttribute('viewBox', viewBoxOrMinX);\n        }\n        else {\n            const viewBoxString = viewBoxOrMinX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length === 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scaleX, this.state.scaleY);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadowAttributes.width > 0) {\n            attributes.style = __classPrivateFieldGet(this, _SVGContext_instances, \"m\", _SVGContext_getShadowStyle).call(this);\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadowAttributes.width > 0) {\n            attributes.style = __classPrivateFieldGet(this, _SVGContext_instances, \"m\", _SVGContext_getShadowStyle).call(this);\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        SVGContext.measureTextElement.setText(text);\n        SVGContext.measureTextElement.setFont(this.attributes['font-family'], this.attributes['font-size'], this.attributes['font-weight'], this.attributes['font-style']);\n        const bb = SVGContext.measureTextElement.getBoundingBox();\n        return { x: bb.x, y: bb.y, width: bb.w, height: bb.h };\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.stateStack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadowAttributes: {\n                width: this.shadowAttributes.width,\n                color: this.shadowAttributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.stateStack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadowAttributes.width = state.shadowAttributes.width;\n            this.shadowAttributes.color = state.shadowAttributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\n_SVGContext_instances = new WeakSet(), _SVGContext_getShadowStyle = function _SVGContext_getShadowStyle() {\n    const sa = this.shadowAttributes;\n    // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n    // of the same radius, so we scale the drop-shadow radius here to make it\n    // look close to the canvas shadow.\n    return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n};\nSVGContext.measureTextElement = new Element();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 === 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        /**\n         * The modifier context's leftShift state.\n         */\n        const leftShift = state.leftShift;\n        /**\n         * The modifier context's rightShift state.\n         */\n        const rightShift = state.rightShift;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let extraXSpaceForDisplacedNotehead = 0;\n        let shiftRight = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.textLine = mc.getState().topTextLine;\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.textLine = mc.getState().textLine;\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (pos === Modifier.Position.LEFT) {\n                        extraXSpaceForDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx(), extraXSpaceForDisplacedNotehead);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            numsList.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: extraXSpaceForDisplacedNotehead,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort string numbers by line number.\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            const note = numsList[i].note;\n            const pos = numsList[i].pos;\n            const num = numsList[i].num;\n            const line = numsList[i].line;\n            const shiftR = numsList[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            let numXShift = 0;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + extraXSpaceForDisplacedNotehead);\n                numXShift = numWidth; // spacing\n                xWidthL = Math.max(numXShift, xWidthL);\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numXShift += numWidth; // spacing\n                xWidthR = numXShift > xWidthR ? numXShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.stringNumber = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.xShift = 0;\n        this.yShift = 0;\n        this.textLine = 0;\n        this.stemOffset = 0;\n        this.xOffset = 0; // Horizontal offset from default\n        this.yOffset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.stringNumber = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.lastNote = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dotX = start.x + this.xShift + this.xOffset;\n        let stemExt = {};\n        if (note.hasStem()) {\n            stemExt = note.checkStem().getExtents();\n        }\n        let dotY = start.y + this.yShift + this.yOffset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.UP) {\n                        dotY = stemExt.topY + Tables.lookupMetric('StringNumber.stemPadding');\n                    }\n                    dotY -=\n                        this.radius +\n                            Tables.lookupMetric('StringNumber.verticalPadding') +\n                            this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.DOWN) {\n                        dotY = stemExt.topY - Tables.lookupMetric('StringNumber.stemPadding');\n                    }\n                    dotY +=\n                        this.radius +\n                            Tables.lookupMetric('StringNumber.verticalPadding') +\n                            this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.radius / 2 + Tables.lookupMetric('StringNumber.leftPadding');\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += this.radius / 2 + Tables.lookupMetric('StringNumber.rightPadding');\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.fontInfo);\n        const x = dotX - ctx.measureText(this.stringNumber).width / 2;\n        ctx.fillText('' + this.stringNumber, x, dotY + 4.5);\n        const lastNote = this.lastNote;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const leftShift = state.leftShift;\n        const strokeSpacing = 5;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = leftShift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + strokeSpacing, xShift);\n        }, 0);\n        state.leftShift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ allVoices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.allVoices = this.options.allVoices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.renderOptions = {\n            fontScale: Tables.lookupMetric('Stroke.fontSize'),\n        };\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.noteEnd = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let yPositions = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const lineSpace = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                yPositions = note.getYs();\n                for (let n = 0; n < yPositions.length; n++) {\n                    if (this.note === notes[i] || this.allVoices) {\n                        topY = Math.min(topY, yPositions[n]);\n                        botY = Math.max(botY, yPositions[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrowY = 0;\n        let textY = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = '\\ueb78' /*arrowheadBlackUp*/;\n                arrowY = topY;\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = '\\ueb7c' /*arrowheadBlackDown*/;\n                arrowY = botY + lineSpace;\n                topY -= lineSpace / 2;\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.xShift, topY, 1, botY - topY);\n        }\n        else {\n            // Select the wiggle glyph depending on the arrow direction\n            const lineGlyph = arrow === '\\ueb7c' /*arrowheadBlackDown*/ ? '\\ueaaa' /*wiggleArpeggiatoDown*/ : '\\ueaa9'; /*wiggleArpeggiatoUp*/\n            let txt = '';\n            const el = new Element();\n            // add glyphs until the required length is achieved\n            while (el.getWidth() < botY - topY) {\n                txt += lineGlyph;\n                el.setText(txt);\n            }\n            if (this.type === Stroke.Type.RASQUEDO_DOWN ||\n                this.type === Stroke.Type.ROLL_DOWN ||\n                this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n                ctx.openRotation(90, x + this.xShift, topY);\n                el.renderText(ctx, x + this.xShift, topY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = topY + el.getWidth() + 5;\n            }\n            else {\n                ctx.openRotation(-90, x + this.xShift, botY);\n                el.renderText(ctx, x + this.xShift, botY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = botY - el.getWidth() - 5;\n            }\n        }\n        // Draw the arrow head\n        if (arrowY !== 0) {\n            const el = new Element();\n            el.setText(arrow);\n            el.renderText(ctx, \n            // Center the arrow head substracting its width / 2\n            x + this.xShift - el.getWidth() / 2, arrowY);\n        }\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            const el = new Element('Stroke.text');\n            el.setText('R');\n            el.renderText(ctx, x + this.xShift - el.getWidth() / 2, textY + (this.type === Stroke.Type.RASQUEDO_DOWN ? el.getHeight() : 0));\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let textLine = state.topTextLine;\n        let width = 0;\n        let shift = state.rightShift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            textLine = textLine - (bendHeight + 1);\n        }\n        else {\n            state.topTextLine += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(textLine);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.rightShift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.renderOptions = {\n            code: 0xeab0,\n            width: 20,\n        };\n        this.setVibratoWidth(this.renderOptions.width);\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.renderOptions.width = width;\n        this.text = String.fromCodePoint(this.renderOptions.code);\n        const items = Math.round(this.renderOptions.width / this.getWidth());\n        for (let i = 1; i < items; i++) {\n            this.text += String.fromCodePoint(this.renderOptions.code);\n        }\n        return this;\n    }\n    /** Set vibrato code. */\n    setVibratoCode(code) {\n        this.renderOptions.code = code;\n        return this.setVibratoWidth(this.renderOptions.width);\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x;\n        const vy = note.getYForTopText(this.textLine) + 5;\n        this.renderText(ctx, vx, vy);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.).  The ModifierContext works with tickables\n// that are at the same tick to ensure that they and their modifiers\n// all have proper alignment.  (Note that the ModifierContext also\n// runs the spacing of the tickable).\n//\n// see https://github.com/0xfe/vexflow/wiki/How-Formatting-Works\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            leftShift: 0,\n            rightShift: 0,\n            textLine: 0,\n            topTextLine: 0,\n        };\n        // Current members -- a mapping of Category (string) to a list of Tickables, Modifiers,\n        // StaveNotes, TabNotes, etc.\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get the width of the entire\n     */\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.leftShift;\n    }\n    getRightShift() {\n        return this.state.rightShift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.leftShift + this.state.rightShift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.leftShift + state.rightShift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// Co-author: Benjamin W. Bohl\nimport { Glyphs } from './glyphs';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        const { gClef, fClef, cClef, unpitchedPercussionClef1, sixStringTabClef } = Glyphs;\n        return {\n            treble: {\n                code: gClef,\n                line: 3,\n            },\n            bass: {\n                code: fClef,\n                line: 1,\n            },\n            alto: {\n                code: cClef,\n                line: 2,\n            },\n            tenor: {\n                code: cClef,\n                line: 1,\n            },\n            percussion: {\n                code: unpitchedPercussionClef1,\n                line: 2,\n            },\n            soprano: {\n                code: cClef,\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: cClef,\n                line: 3,\n            },\n            'baritone-c': {\n                code: cClef,\n                line: 0,\n            },\n            'baritone-f': {\n                code: fClef,\n                line: 2,\n            },\n            subbass: {\n                code: fClef,\n                line: 0,\n            },\n            french: {\n                code: gClef,\n                line: 4,\n            },\n            tab: {\n                code: sixStringTabClef,\n                line: 2.5,\n            },\n        };\n    }\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.code = Clef.types['treble'].code;\n        this.line = Clef.types['treble'].line;\n        this.size = 'default';\n        this.type = 'treble';\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        L('Creating clef:', type);\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size = 'default', annotation) {\n        this.type = type;\n        this.code = Clef.types[type].code;\n        this.line = Clef.types[type].line;\n        this.size = size !== null && size !== void 0 ? size : 'default';\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation === '8va') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8va;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8va;\n            }\n        }\n        if (annotation === '8vb') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8vb;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8vb;\n            }\n        }\n        this.text = this.code;\n        this.fontInfo.size = Math.floor(Clef.getPoint(this.size));\n        return this;\n    }\n    /** Get point for clefs. */\n    static getPoint(size) {\n        // for sizes other than 'default', clef is 2/3 of the default value\n        return size === 'default' ? Tables.lookupMetric('fontSize') : (Tables.lookupMetric('fontSize') * 2) / 3;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('clef', this.getAttribute('id'));\n        this.renderText(ctx, 0, stave.getYForLine(this.line));\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Element } from './element';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Create a new Key Signature based on a `keySpec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = Tables.lookupMetric('fontSize');\n        this.glyphs = [];\n        this.paddingForced = false;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc, stave) {\n        const code = Tables.accidentalCodes(acc.type);\n        const glyph = new Element(Category.KeySignature);\n        glyph.setText(code);\n        // Determine spacing between current accidental and the next accidental\n        const extraWidth = 1;\n        // Place the glyph on the stave\n        glyph.setYShift(stave.getYForLine(acc.line));\n        if (this.glyphs.length > 0) {\n            const prevGlyph = this.glyphs[this.glyphs.length - 1];\n            glyph.setXShift(prevGlyph.getXShift() + prevGlyph.getWidth() + extraWidth);\n        }\n        this.glyphs.push(glyph);\n        // Expand size of key signature\n        this.width += glyph.getWidth() + extraWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancelAccList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const differentTypes = this.accList.length > 0 && cancelAccList.length > 0 && cancelAccList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = differentTypes ? cancelAccList.length : cancelAccList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!differentTypes) {\n                index = cancelAccList.length - naturals + i;\n            }\n            const acc = cancelAccList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancelAccList[0].type,\n        };\n    }\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1], stave);\n            }\n        }\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            glyph.renderText(ctx, this.x, 0);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    constructor(type, x, yShift) {\n        super();\n        this.symbolType = type;\n        this.x = x;\n        this.xShift = 0;\n        this.yShift = yShift;\n    }\n    setShiftX(x) {\n        this.xShift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.yShift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbolType) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSegnoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSegnoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = '\\ue048' /*coda*/;\n        this.renderText(stave.checkContext(), x, y + Tables.lookupMetric('Repetition.coda.offsetY'));\n        return this;\n    }\n    drawSegnoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = '\\ue047' /*segno*/;\n        this.renderText(stave.checkContext(), x, y + Tables.lookupMetric('Repetition.segno.offsetY'));\n        return this;\n    }\n    drawSymbolText(stave, x, text, drawCoda) {\n        const ctx = stave.checkContext();\n        let textX = 0;\n        this.text = text;\n        if (drawCoda) {\n            this.text += ' \\ue048' /*coda*/;\n        }\n        this.setFont(Tables.lookupMetricFontInfo('Repetition.text'));\n        switch (this.symbolType) {\n            // To the left\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                textX = stave.getVerticalBarWidth();\n                break;\n            // To the right\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n            default:\n                textX =\n                    x -\n                        (stave.getNoteStartX() - this.x) +\n                        stave.getWidth() -\n                        this.width -\n                        Tables.lookupMetric('Repetition.text.offsetX');\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) + Tables.lookupMetric('Repetition.text.offsetY');\n        this.renderText(ctx, textX, y);\n        return this;\n    }\n}\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    constructor(section, x, yShift, drawRect = true) {\n        super();\n        this.setStaveSection(section);\n        this.x = x;\n        this.yShift = yShift;\n        this.drawRect = drawRect;\n    }\n    setStaveSection(section) {\n        this.text = section;\n        return this;\n    }\n    draw(stave, xShift) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        const headroom = -1 * this.textMetrics.actualBoundingBoxDescent;\n        const width = this.width + 2 * padding; // add left & right padding\n        const height = this.height + 2 * padding; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.yShift;\n        const x = this.x + xShift;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        this.renderText(ctx, xShift + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Radosaw Eichler 2012\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _StaveTempo_durationToCode;\nimport { Element } from './element';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    constructor(tempo, x, shiftY) {\n        super();\n        _StaveTempo_durationToCode.set(this, {\n            '1/2': '\\ue1d0' /*metNoteDoubleWhole*/,\n            1: '\\ueca2' /*metNoteWhole*/,\n            2: '\\ueca3' /*metNoteHalfUp*/,\n            4: '\\ueca5' /*metNoteQuarterUp*/,\n            8: '\\ueca7' /*metNote8thUp*/,\n            16: '\\ueca9' /*metNote16thUp*/,\n            32: '\\uecab' /*metNote32ndUp*/,\n            64: '\\uecad' /*metNote64thUp*/,\n            128: '\\uecaf' /*metNote128thUp*/,\n            256: '\\uecb1' /*metNote256thUp*/,\n            512: '\\uecb3' /*metNote512thUp*/,\n            1024: '\\uecb5' /*metNote1024thUp*/,\n        });\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.setXShift(10);\n        this.setYShift(shiftY);\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    draw(stave, shiftX) {\n        var _a;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = (_a = this.tempo.dots) !== null && _a !== void 0 ? _a : 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + shiftX;\n        const y = stave.getYForTopText(1);\n        ctx.save();\n        if (name) {\n            this.text = name;\n            this.fontInfo = Tables.lookupMetricFontInfo('StaveTempo.name');\n            this.renderText(ctx, shiftX, y);\n            x += this.getWidth();\n        }\n        if (duration && bpm) {\n            if (name) {\n                x += 2;\n                ctx.setFont(Tables.lookupMetricFontInfo('StaveTempo'));\n                ctx.fillText('(', x + this.xShift, y + this.yShift);\n                x += 5;\n            }\n            x += 3;\n            const el = new Element('StaveTempo.glyph');\n            el.setText(__classPrivateFieldGet(this, _StaveTempo_durationToCode, \"f\")[Tables.sanitizeDuration(duration)]);\n            el.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += el.getWidth();\n            // Draw dot\n            ctx.setFont(Tables.lookupMetricFontInfo('StaveTempo.glyph'));\n            for (let i = 0; i < dots; i++) {\n                x += 6;\n                ctx.fillText('\\uecb7' /*metAugmentationDot*/, x + this.xShift, y + 2 + this.yShift);\n            }\n            ctx.setFont(Tables.lookupMetricFontInfo('StaveTempo'));\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 + this.xShift, y + this.yShift);\n        }\n        ctx.restore();\n        return this;\n    }\n}\n_StaveTempo_durationToCode = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Font } from './font';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: '\\uE047' /*segno*/,\n            tr: '\\uE566' /*ornamentTrill*/,\n            mordent: '\\uE56D' /*ornamentMordent*/,\n            mordentUpper: '\\uE56C' /*ornamentShortTrill*/,\n            mordentLower: '\\uE56D' /*ornamentMordent*/,\n            f: '\\uE522' /*dynamicForte*/,\n            p: '\\uE520' /*dynamicPiano*/,\n            m: '\\uE521' /*dynamicMezzo*/,\n            s: '\\uE524' /*dynamicSforzando*/,\n            z: '\\uE525' /*dynamicZ*/,\n            coda: '\\uE048' /*coda*/,\n            pedalOpen: '\\uE650' /*keyboardPedalPed*/,\n            pedalClose: '\\uE655' /*keyboardPedalUp*/,\n            caesuraStraight: '\\uE4D1' /*caesura*/,\n            caesuraCurved: '\\uE4D4' /*caesuraCurved*/,\n            breath: '\\uE4CE' /*breathMarkComma*/,\n            tick: '\\uE4CF' /*breathMarkTick*/,\n            turn: '\\uE567' /*ornamentTurn*/,\n            turnInverted: '\\uE569' /*ornamentTurnSlash*/,\n        };\n    }\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.text = (_a = noteStruct.text) !== null && _a !== void 0 ? _a : '';\n        if (noteStruct.glyph) {\n            this.text += TextNote.GLYPHS[noteStruct.glyph] || noteStruct.glyph;\n        }\n        if (noteStruct.font) {\n            this.setFont(noteStruct.font);\n        }\n        else if (noteStruct.glyph === undefined) {\n            this.setFont(Tables.lookupMetricFontInfo('TextNote.text.fontSize'));\n        }\n        // Scale the font size by 1/1.3.\n        const smallerFontSize = Font.convertSizeToPointValue(this.fontInfo.size) * 0.769231;\n        if (noteStruct.superscript) {\n            this.superscript = new Element('TexNote.subSuper');\n            this.superscript.setText(noteStruct.superscript);\n            this.superscript.setFontSize(smallerFontSize);\n        }\n        if (noteStruct.subscript) {\n            this.subscript = new Element('TexNote.subSuper');\n            this.subscript.setText(noteStruct.subscript);\n            this.subscript.setFontSize(smallerFontSize);\n        }\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignoreTicks = noteStruct.ignoreTicks || false;\n        this.justification = TextJustification.LEFT;\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        const y = stave.getYForLine(this.line + -3);\n        this.applyStyle(ctx);\n        this.renderText(ctx, x, y);\n        const height = this.getHeight();\n        if (this.superscript) {\n            this.superscript.renderText(ctx, x + this.width + 2, y - height / 2.2);\n        }\n        if (this.subscript) {\n            this.subscript.renderText(ctx, x + this.width + 2, y + height / 2.2 - 1);\n        }\n        this.restoreStyle(ctx);\n    }\n}\nTextNote.Justification = TextJustification;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, label, x, yShift) {\n        super();\n        this.type = type;\n        this.x = x;\n        this.yShift = yShift;\n        this.text = label;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const topY = stave.getYForTopText(stave.getNumLines()) + this.yShift;\n        const vertHeight = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.type) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.type === VoltaType.BEGIN || this.type === VoltaType.BEGIN_END) {\n            this.renderText(ctx, x + 5, topY - this.yShift + 15);\n        }\n        ctx.fillRect(this.x + x, topY, width, 1);\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2014\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    constructor(text, position, options = {}) {\n        var _a, _b, _c;\n        super();\n        this.setText(text);\n        this.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        this.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.position = position;\n        this.justification = (_c = options.justification) !== null && _c !== void 0 ? _c : TextNote.Justification.CENTER;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - this.width - 24;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX();\n                if (this.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - this.width / 2;\n                }\n                else if (this.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - this.width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2);\n                }\n                else {\n                    y = stave.getYForBottomText(2);\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        this.renderText(ctx, x, y + 4);\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Element } from './element';\nimport { Glyphs } from './glyphs';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) === false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\n/**\n * A TimeSignature is a StaveModifier that can make its appropriate Glyphs directly from\n * a provided \"timeSpec\" such as \"4/4\", \"C|\" (cut time), or even something more advanced\n * such as \"3/4(6/8)\" or \"2/4+5/8\".\n */\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validateArgs = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.isNumeric = true;\n        this.topStartX = 0;\n        this.botStartX = 0;\n        this.lineShift = 0;\n        this.topText = new Element();\n        this.botText = new Element();\n        this.validateArgs = validateArgs;\n        const padding = customPadding;\n        this.topLine = 1;\n        this.bottomLine = 3;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    static getTimeSigCode(key, smallSig = false) {\n        let code = Glyphs.null;\n        switch (key) {\n            case 'C':\n                code = Glyphs.timeSigCommon;\n                break;\n            case 'C|':\n                code = Glyphs.timeSigCutCommon;\n                break;\n            case '+':\n                code = smallSig ? Glyphs.timeSigPlusSmall : Glyphs.timeSigPlus;\n                break;\n            case '-':\n                code = Glyphs.timeSigMinus;\n                break;\n            case '(':\n                code = smallSig ? Glyphs.timeSigParensLeftSmall : Glyphs.timeSigParensLeft;\n                break;\n            case ')':\n                code = smallSig ? Glyphs.timeSigParensRightSmall : Glyphs.timeSigParensRight;\n                break;\n            default:\n                code = String.fromCodePoint(0xe080 + Number(key[0])) /* timeSigN = Glyphs.timeSig0 + N */;\n                break;\n        }\n        return code;\n    }\n    /**\n     * Returns a new TimeSignatureGlyph (a Glyph subclass that knows how to draw both\n     * top and bottom digits along with plus signs etc.)\n     */\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        // note that 'code' is ignored by TimeSignatureGlyph when rendering.\n        let txt = '';\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(topDigits[i], botDigits.length > 0);\n            txt += code;\n        }\n        this.topText.setText(txt);\n        topWidth = this.topText.getWidth();\n        height = this.topText.getHeight();\n        let botWidth = 0;\n        txt = '';\n        for (let i = 0; i < botDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(botDigits[i], true);\n            txt += code;\n        }\n        this.botText.setText(txt);\n        botWidth = this.botText.getWidth();\n        height = Math.max(height, this.botText.getHeight());\n        // If the height of the digits is more than two staff spaces (20), shift to the next line\n        // in order to center the digits on lines 1 and 5 rather than 2 and 4.\n        this.lineShift = height > 22 ? 1 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n    }\n    /**\n     * Set a new time signature specification without changing customPadding, etc.\n     *\n     * The getter for this is `getTimeSpec` not `getTimeSig`.\n     */\n    setTimeSig(timeSpec) {\n        var _a, _b;\n        this.timeSpec = timeSpec;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const code = TimeSignature.getTimeSigCode(timeSpec);\n            this.line = 2;\n            this.text = code;\n            this.isNumeric = false;\n        }\n        else {\n            if (this.validateArgs) {\n                assertIsValidTimeSig(timeSpec);\n            }\n            const parts = timeSpec.split('/');\n            this.line = 0;\n            this.isNumeric = true;\n            this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : '');\n        }\n        return this;\n    }\n    /**\n     * Return the timeSpec (such as '4/4' or 'C|' or even '2/4+3/8') of the TimeSignature\n     */\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    /**\n     * Return the staff line that the TimeSignature sits on.  Generally 0 for numerator/\n     * denominator time signatures such as 3/4 and 2 for cut/common.\n     */\n    getLine() {\n        return this.line;\n    }\n    /**\n     * Set the line number that the TimeSignature sits on.  Half-values are acceptable\n     * for spaces, etc. Can be altered, for instance, for signatures that sit above the\n     * staff in large orchestral scores.\n     */\n    setLine(line) {\n        this.line = line;\n    }\n    /**\n     * Return a boolean on whether this TimeSignature is drawn with one or more numbers\n     * (such as 4/4) or not (as in cut time).\n     */\n    getIsNumeric() {\n        return this.isNumeric;\n    }\n    /**\n     * Set whether this TimeSignature is drawn with one or more numbers.\n     */\n    setIsNumeric(isNumeric) {\n        this.isNumeric = isNumeric;\n    }\n    /**\n     * Draw the time signature on a Stave using its RenderContext.  Both setStave\n     * and setContext must already be run.\n     */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.drawAt(ctx, stave, this.x);\n    }\n    drawAt(ctx, stave, x) {\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        if (this.isNumeric) {\n            let startX = x + this.topStartX;\n            let y = 0;\n            if (this.botText.getText().length > 0)\n                y = stave.getYForLine(this.topLine - this.lineShift);\n            else\n                y = (stave.getYForLine(this.topLine) + stave.getYForLine(this.bottomLine)) / 2;\n            this.topText.renderText(ctx, startX, y);\n            startX = x + this.botStartX;\n            y = stave.getYForLine(this.bottomLine + this.lineShift);\n            this.botText.renderText(ctx, startX, y);\n        }\n        else {\n            this.renderText(ctx, x - this.x, stave.getYForLine(this.line));\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        return Tables.lookupMetric('Stave.padding') + Tables.lookupMetric('Stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        return Tables.lookupMetric('Stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.startX = x + 5;\n        this.endX = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.options = Object.assign({ verticalBarWidth: 10, numLines: 5, fillStyle: '#999999', leftBar: true, rightBar: true, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, spaceAboveStaffLn: 4, spaceBelowStaffLn: 4, topTextPosition: 1, bottomTextPosition: 4, lineConfig: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.leftBar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.rightBar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacingBetweenLinesPx * spacing;\n    }\n    resetLines() {\n        this.options.lineConfig = [];\n        for (let i = 0; i < this.options.numLines; i++) {\n            this.options.lineConfig.push({ visible: true });\n        }\n        this.height = (this.options.numLines + this.options.spaceAboveStaffLn) * this.options.spacingBetweenLinesPx;\n        this.options.bottomTextPosition = this.options.numLines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.startX = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.startX;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.endX;\n    }\n    getTieStartX() {\n        return this.startX;\n    }\n    getTieEndX() {\n        return this.endX;\n    }\n    getNumLines() {\n        return this.options.numLines;\n    }\n    setNumLines(n) {\n        this.options.numLines = n;\n        this.resetLines();\n        return this;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.startX += shift;\n        this.endX += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.endX = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.endX);\n        return this;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fillStyle, strokeStyle: this.options.fillStyle, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let startX = this.startX - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && startX > begBarline.getWidth()) {\n            startX -= begBarline.getWidth();\n        }\n        return startX;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, label, y) {\n        this.modifiers.push(new Volta(type, label, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize) {\n            staveSection.setFontSize(fontSize);\n        }\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setStaveText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacingBetweenLinesPx;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const scoreBottom = this.getYForLine(options.numLines) + options.spaceBelowStaffLn * spacing;\n        return scoreBottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.numLines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.topTextPosition);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottomTextPosition + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        var _a, _b, _c, _d;\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.startX = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = (_a = layoutMetrics.xMax) !== null && _a !== void 0 ? _a : 0;\n                    widths.paddingRight = (_b = layoutMetrics.paddingRight) !== null && _b !== void 0 ? _b : 0;\n                }\n                widths.left = (_c = -layoutMetrics.xMin) !== null && _c !== void 0 ? _c : 0;\n                widths.paddingLeft = (_d = layoutMetrics.paddingLeft) !== null && _d !== void 0 ? _d : 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.endX = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.applyStyle();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const numLines = this.options.numLines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < numLines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.lineConfig[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.fontInfo);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.verticalBarWidth;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.lineConfig;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param lineNumber The index of the line to configure.\n     * @param lineConfig An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(lineNumber, lineConfig) {\n        if (lineNumber >= this.options.numLines || lineNumber < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (lineConfig.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof lineConfig.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.lineConfig[lineNumber] = lineConfig;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param linesConfiguration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the numLines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(linesConfiguration) {\n        if (linesConfiguration.length !== this.options.numLines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const lineConfig in linesConfiguration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (linesConfiguration[lineConfig].visible === undefined) {\n                linesConfiguration[lineConfig] = this.options.lineConfig[lineConfig];\n            }\n            this.options.lineConfig[lineConfig] = Object.assign(Object.assign({}, this.options.lineConfig[lineConfig]), linesConfiguration[lineConfig]);\n        }\n        this.options.lineConfig = linesConfiguration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            // Calculate min start X for the category\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Consider only the first instance\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Calculate adjustement required for the stave\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                // Apply adjustment to all the modifiers in and beyond the category\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                // Apply adjustment also to note start.\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        // Make sure that staves are formatted\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        // Align Clefs\n        adjustCategoryStartX(Category.Clef);\n        // Align key signatures\n        adjustCategoryStartX(Category.KeySignature);\n        // Align time signatures\n        adjustCategoryStartX(Category.TimeSignature);\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let xShift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        xShift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + xShift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    constructor(topStave, bottomStave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.topStave = topStave;\n        this.bottomStave = bottomStave;\n        this.type = StaveConnector.type.DOUBLE;\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.xShift = 0;\n        this.texts = [];\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        var _a, _b;\n        const textElement = new Element('StaveConnector.text');\n        textElement.setText(text);\n        textElement.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        textElement.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.texts.push(textElement);\n        return this;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.topStave.getYForLine(0);\n        let botY = this.bottomStave.getYForLine(this.bottomStave.getNumLines() - 1) + this.thickness;\n        let width = 3;\n        let topX = this.topStave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.topStave.getX() + this.topStave.getWidth();\n        }\n        let attachmentHeight = botY - topY;\n        const element = new Element();\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= 5;\n                topY -= this.thickness;\n                attachmentHeight += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.topStave.getX() - 2 + this.xShift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachmentHeight / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachmentHeight;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachmentHeight;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachmentHeight;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachmentHeight;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachmentHeight;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachmentHeight;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachmentHeight = botY - topY;\n                element.setText('\\ue003' /* bracketTop */);\n                element.renderText(ctx, topX - 5, topY);\n                element.setText('\\ue004' /* bracketBottom */);\n                element.renderText(ctx, topX - 5, botY);\n                topX -= 5;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.xShift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachmentHeight -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachmentHeight);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachmentHeight);\n        }\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const textElement = this.texts[i];\n            const x = this.topStave.getX() - textElement.getWidth() - 24;\n            const y = (this.topStave.getYForLine(0) + this.bottomStave.getBottomLineY()) / 2;\n            textElement.renderText(ctx, x, y + 4);\n        }\n    }\n}\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Beam } from './beam';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util';\nimport { Voice } from './voice';\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length === 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        var _a, _b;\n        options = Object.assign({ stavePadding: Tables.lookupMetric('Stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Tables.lookupMetric('fontFamily'), 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${((_a = formatter.totalCost) !== null && _a !== void 0 ? _a : 0).toFixed(2)} Shift: ${((_b = formatter.totalShift) !== null && _b !== void 0 ? _b : 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autoBeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autoBeam: true})`\n     *    * Setting `alignRests` a struct is needed `(context, stave, notes, {alignRests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autoBeam: true, alignRests: true})`\n     *    * `autoBeam` automatically generates beams for the notes.\n     *    * `alignRests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            autoBeam: false,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.autoBeam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.autoBeam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { alignRests: options.alignRests })\n            .formatToStave([voice], stave, { alignRests: options.alignRests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autoBeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autoBeam` automatically generates beams for the notes.\n     *    * `alignRests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autoBeam, params) {\n        let opts = {\n            autoBeam,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.autoBeam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.autoBeam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { alignRests: opts.alignRests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { alignRests: opts.alignRests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const line = currTickable.getLineForRest();\n                if (line !== 3) {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.lookupMetric('Stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length === 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const configMinPadding = Tables.lookupMetric('Stave.endPaddingMin');\n        const configMaxPadding = Tables.lookupMetric('Stave.endPaddingMax');\n        const leftPadding = Tables.lookupMetric('Stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.alignRests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ alignRests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.alignRests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.numNotes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   numNotes: fit this many notes into...\n *   notesOccupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of numNotes : notesOccupied.\n *       numNotes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notesOccupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between numNotes and\n *     notesOccupied is greater than 1.\n *\n *   yOffset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    constructor(notes, options = {}) {\n        super();\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.numNotes = this.options.numNotes !== undefined ? this.options.numNotes : notes.length;\n        this.notesOccupied = this.options.notesOccupied || 2;\n        if (this.options.bracketed !== undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed !== undefined ? this.options.ratioed : Math.abs(this.notesOccupied - this.numNotes) > 1;\n        this.textElement = new Element('Tuplet');\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.numNotes;\n    }\n    getNotesOccupied() {\n        return this.notesOccupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notesOccupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        let numerator = '';\n        let denominator = '';\n        let n = this.numNotes;\n        while (n >= 1) {\n            numerator = String.fromCharCode(0xe880 /* tuplet0 */ + (n % 10)) + numerator;\n            n = Math.floor(n / 10);\n        }\n        if (this.ratioed) {\n            n = this.notesOccupied;\n            while (n >= 1) {\n                denominator = String.fromCharCode(0xe880 /* tuplet0 */ + (n % 10)) + denominator;\n                n = Math.floor(n / 10);\n            }\n            denominator = '\\uE88A' /* tupletColon */ + denominator;\n        }\n        this.textElement.setText(numerator + denominator);\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const firstNote = this.notes[0];\n        let maxTupletCount = countTuplets(firstNote, location);\n        let minTupletCount = countTuplets(firstNote, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        var _a;\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nestedTupletYOffset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual yOffset:\n        const yOffset = (_a = this.options.yOffset) !== null && _a !== void 0 ? _a : 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base yPosition\n        const firstNote = this.notes[0];\n        let yPosition;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            yPosition = firstNote.checkStave().getYForLine(0) - 1.5 * Tables.STAVE_LINE_DISTANCE;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().topTextLine);\n                }\n                const modY = note.getYForTopText(modLines) - 2 * Tables.STAVE_LINE_DISTANCE;\n                if (note.hasStem() || note.isRest()) {\n                    const topY = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tables.STAVE_LINE_DISTANCE\n                        : note.getStemExtents().baseY - 2 * Tables.STAVE_LINE_DISTANCE;\n                    yPosition = Math.min(topY, yPosition);\n                    if (modLines > 0) {\n                        yPosition = Math.min(modY, yPosition);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = 4; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().textLine + 1);\n                }\n            });\n            yPosition = firstNote.checkStave().getYForLine(lineCheck) + 2 * Tables.STAVE_LINE_DISTANCE;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottomY = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + 2 * Tables.STAVE_LINE_DISTANCE\n                        : this.notes[i].getStemExtents().topY + Tables.STAVE_LINE_DISTANCE;\n                    if (bottomY > yPosition) {\n                        yPosition = bottomY;\n                    }\n                }\n            }\n        }\n        return yPosition + nestedTupletYOffset + yOffset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        let xPos = 0;\n        let yPos = 0;\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const firstNote = this.notes[0];\n        const lastNote = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            xPos = firstNote.getStemX();\n            this.width = lastNote.getStemX() - xPos;\n        }\n        else {\n            xPos = firstNote.getTieLeftX() - 5;\n            this.width = lastNote.getTieRightX() - xPos + 5;\n        }\n        // determine y value for tuplet\n        yPos = this.getYPosition();\n        const notationCenterX = xPos + this.width / 2;\n        const notationStartX = notationCenterX - this.textElement.getWidth() / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const lineWidth = this.width / 2 - this.textElement.getWidth() / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (lineWidth > 0) {\n                ctx.fillRect(xPos, yPos, lineWidth, 1);\n                ctx.fillRect(xPos + this.width / 2 + this.textElement.getWidth() / 2 + 5, yPos, lineWidth, 1);\n                ctx.fillRect(xPos, yPos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(xPos + this.width, yPos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw text\n        this.textElement.renderText(ctx, notationStartX, yPos + this.textElement.getHeight() / 2);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Beam_stemDirection, _Beam_ticks, _Beam_yShift, _Beam_breakOnIndexes, _Beam_beamCount, _Beam_unbeamable, _Beam_forcedPartialDirections;\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(timeSig) {\n        if (!timeSig || timeSig === 'c') {\n            timeSig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[timeSig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(timeSig.split('/')[0], 10);\n            const beatValue = parseInt(timeSig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stemDirection a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stemDirection, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stemDirection });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stemDirection: -1,\n     *   beamRests: true,\n     *   beamMiddleOnly: true,\n     *   showStemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stemDirection set to apply the same direction to all notes\n     * @param config.beamRests set to `true` to include rests in the beams\n     * @param config.beamMiddleOnly set to `true` to only beam rests in the middle of the beat\n     * @param config.showStemlets set to `true` to draw stemlets for rests\n     * @param config.maintainStemDirections set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(notes) {\n            return notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beamRests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beamRests && config.beamMiddleOnly && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintainStemDirections && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintainStemDirections) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stemDirection) {\n                        stemDirection = config.stemDirection;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.showStemlets) {\n                beam.renderOptions.showStemlets = true;\n            }\n            if (config.secondaryBreaks) {\n                beam.renderOptions.secondaryBreakTicks = Tables.durationToTicks(config.secondaryBreaks);\n            }\n            if (config.flatBeams === true) {\n                beam.renderOptions.flatBeams = true;\n                beam.renderOptions.flatBeamOffset = config.flatBeamOffset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stemDirection === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, autoStem = false) {\n        super();\n        this.slope = 0;\n        _Beam_stemDirection.set(this, void 0);\n        _Beam_ticks.set(this, void 0);\n        _Beam_yShift.set(this, 0);\n        _Beam_breakOnIndexes.set(this, void 0);\n        _Beam_beamCount.set(this, void 0);\n        _Beam_unbeamable.set(this, void 0);\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        _Beam_forcedPartialDirections.set(this, {});\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        __classPrivateFieldSet(this, _Beam_ticks, notes[0].getIntrinsicTicks(), \"f\");\n        if (__classPrivateFieldGet(this, _Beam_ticks, \"f\") >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        __classPrivateFieldSet(this, _Beam_stemDirection, notes[0].getStemDirection(), \"f\");\n        let stemDirection = __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        // Figure out optimal stem direction based on given notes\n        if (autoStem && isStaveNote(notes[0])) {\n            stemDirection = calculateStemDirection(notes);\n        }\n        else if (autoStem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stemWeight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stemDirection = stemWeight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (autoStem) {\n                note.setStemDirection(stemDirection);\n                __classPrivateFieldSet(this, _Beam_stemDirection, stemDirection, \"f\");\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        __classPrivateFieldSet(this, _Beam_beamCount, this.getBeamCount(), \"f\");\n        __classPrivateFieldSet(this, _Beam_breakOnIndexes, [], \"f\");\n        this.renderOptions = {\n            beamWidth: 5,\n            maxSlope: 0.25,\n            minSlope: -0.25,\n            slopeIterations: 20,\n            slopeCost: 100,\n            showStemlets: false,\n            stemletExtension: 7,\n            partialBeamLength: 10,\n            flatBeams: false,\n            minFlatBeamOffset: 15,\n        };\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beamCount);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indexes` to break the secondary beam at. */\n    breakSecondaryAt(indexes) {\n        __classPrivateFieldSet(this, _Beam_breakOnIndexes, indexes, \"f\");\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        __classPrivateFieldGet(this, _Beam_forcedPartialDirections, \"f\")[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete __classPrivateFieldGet(this, _Beam_forcedPartialDirections, \"f\")[noteIndex];\n        return this;\n    }\n    /**\n     * @param firstX specified in pixels.\n     * @param firstY specified in pixels.\n     *\n     * @return the y coordinate for linear function.\n     */\n    getSlopeY(x, firstX, firstY, slope) {\n        return firstY + (x - firstX) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, renderOptions: { maxSlope, minSlope, slopeIterations, slopeCost }, } = this;\n        const stemDirection = __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (maxSlope - minSlope) / slopeIterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = minSlope; slope <= maxSlope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.renderOptions.slopeCost = 0\n            const cost = slopeCost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        __classPrivateFieldSet(this, _Beam_yShift, yShift, \"f\");\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, renderOptions: { beamWidth, minFlatBeamOffset, flatBeamOffset }, } = this;\n        const stemDirection = __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stemDirection === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stemDirection === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        // works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        // based on the highest or lowest note (again, based on the stem\n        // direction). This also takes into account the added height due to\n        // the width of the beams.\n        const extremeTest = minFlatBeamOffset + extremeBeamCount * beamWidth * 1.5;\n        const newOffset = extremeY + extremeTest * -stemDirection;\n        if (stemDirection === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stemDirection === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flatBeamOffset) {\n            // Set the offset for the group based on the calculations above.\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.DOWN && offset > flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.UP && offset < flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        // For flat beams, the slope and yShift are 0.\n        this.slope = 0;\n        __classPrivateFieldSet(this, _Beam_yShift, 0, \"f\");\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.renderOptions.flatBeams && this.renderOptions.flatBeamOffset) {\n            beamY = this.renderOptions.flatBeamOffset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, renderOptions: { showStemlets, stemletExtension, beamWidth }, } = this;\n        const yShift = __classPrivateFieldGet(this, _Beam_yShift, \"f\");\n        const beamCount = __classPrivateFieldGet(this, _Beam_beamCount, \"f\");\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + yShift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                // Determine necessary extension for cross-stave notes in the beam group\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== __classPrivateFieldGet(this, _Beam_stemDirection, \"f\")) {\n                    const beamCount = note.getGlyphProps().beamCount;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.renderOptions.beamWidth;\n                    /* This will be required if the partial beams are moved to the note side.\n                    if (i > 0 && note.getGlyph().beamCount > 1) {\n                      const prevBeamCount = this.notes[i - 1].getGlyph().beamCount;\n                      const beamDiff = Math.abs(prevBeamCount - beamCount);\n                      if (beamDiff > 0) crossStemExtension -= beamDiff * (this.renderOptions.beamWidth * 1.5);\n                    }\n                    */\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && showStemlets) {\n                    const totalBeamWidth = (beamCount - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemletExtension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prevTick, tick, nextTick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = __classPrivateFieldGet(this, _Beam_forcedPartialDirections, \"f\")[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookupDuration = `${Tables.durationToNumber(duration) / 2}`;\n        const prevNoteGetsBeam = prevTick < Tables.durationToTicks(lookupDuration);\n        const nextNoteGetsBeam = nextTick < Tables.durationToTicks(lookupDuration);\n        const noteGetsBeam = tick < Tables.durationToTicks(lookupDuration);\n        if (prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_BOTH;\n        }\n        else if (prevNoteGetsBeam && !nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_LEFT;\n        }\n        else if (!prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookupDuration, prevTick, tick, nextTick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tickOfDuration = Tables.durationToTicks(duration);\n        let beamStarted = false;\n        const beamLines = [];\n        let currentBeam = undefined;\n        const partialBeamLength = this.renderOptions.partialBeamLength;\n        let previousShouldBreak = false;\n        let tickTally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tickTally += ticks;\n            let shouldBreak = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indexes were set up through breakSecondaryAt()\n                shouldBreak = __classPrivateFieldGet(this, _Beam_breakOnIndexes, \"f\").indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.renderOptions.secondaryBreakTicks && tickTally >= this.renderOptions.secondaryBreakTicks) {\n                    tickTally = 0;\n                    shouldBreak = true;\n                }\n            }\n            const noteGetsBeam = note.getIntrinsicTicks() < tickOfDuration;\n            const stemX = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prevNote = this.notes[i - 1];\n            const nextNote = this.notes[i + 1];\n            const nextNoteGetsBeam = nextNote && nextNote.getIntrinsicTicks() < tickOfDuration;\n            const prevNoteGetsBeam = prevNote && prevNote.getIntrinsicTicks() < tickOfDuration;\n            const beamAlone = prevNote && nextNote && noteGetsBeam && !prevNoteGetsBeam && !nextNoteGetsBeam;\n            // const beamAlone = noteGetsBeam && !prevNoteGetsBeam && !nextNoteGetsBeam;\n            if (noteGetsBeam) {\n                // This note gets a beam at the current level\n                if (beamStarted) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    currentBeam = beamLines[beamLines.length - 1];\n                    currentBeam.end = stemX;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (shouldBreak) {\n                        beamStarted = false;\n                        if (nextNote && !nextNoteGetsBeam && currentBeam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    currentBeam = { start: stemX, end: undefined };\n                    beamStarted = true;\n                    if (beamAlone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prevTick = prevNote.getIntrinsicTicks();\n                        const nextTick = nextNote.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beamDirection = this.lookupBeamDirection(duration, prevTick, tick, nextTick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beamDirection)) {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                        else {\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                    }\n                    else if (!nextNoteGetsBeam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previousShouldBreak || i === 0) && nextNote) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                    else if (shouldBreak) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        currentBeam.end = currentBeam.start - partialBeamLength;\n                        beamStarted = false;\n                    }\n                    beamLines.push(currentBeam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beamStarted = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previousShouldBreak = shouldBreak;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const lastBeam = beamLines[beamLines.length - 1];\n        if (lastBeam && lastBeam.end === undefined) {\n            lastBeam.end = lastBeam.start - partialBeamLength;\n        }\n        return beamLines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                stem.setNoteHeadXBounds(stemX, stemX);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const validBeamDurations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.renderOptions.beamWidth * __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        // Draw the beams.\n        for (let i = 0; i < validBeamDurations.length; ++i) {\n            const duration = validBeamDurations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beamLine = beamLines[j];\n                const startBeamX = beamLine.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beamLine.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.renderOptions.flatBeams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (__classPrivateFieldGet(this, _Beam_unbeamable, \"f\"))\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n_Beam_stemDirection = new WeakMap(), _Beam_ticks = new WeakMap(), _Beam_yShift = new WeakMap(), _Beam_breakOnIndexes = new WeakMap(), _Beam_beamCount = new WeakMap(), _Beam_unbeamable = new WeakMap(), _Beam_forcedPartialDirections = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    constructor(type, size = 'default', annotation) {\n        super({ duration: 'b' });\n        this.setType(type, size, annotation);\n        this.ignoreTicks = true;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.clef = new Clef(type, size, annotation);\n        this.setWidth(this.clef.getWidth());\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.clef.renderText(ctx, this.getAbsoluteX() - this.x, stave.getYForLine(this.clef.line));\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Helper to draw the hairpin.\nfunction renderHairpin(ctx, params) {\n    const beginX = params.beginX;\n    const endX = params.endX;\n    const y = params.y;\n    const halfHeight = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(beginX, y - halfHeight);\n        ctx.lineTo(endX, y);\n        ctx.lineTo(beginX, y + halfHeight);\n    }\n    else {\n        ctx.moveTo(endX, y - halfHeight);\n        ctx.lineTo(beginX, y);\n        ctx.lineTo(endX, y + halfHeight);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        var _a;\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extendLeft: 0,\n            extendRight: 0,\n            // Vertical shift\n            yShift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = (_a = noteStruct.line) !== null && _a !== void 0 ? _a : 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tickContext = this.getTickContext();\n        const nextContext = TickContext.getNextContext(tickContext);\n        const beginX = this.getAbsoluteX();\n        const endX = nextContext ? nextContext.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', beginX - endX);\n        renderHairpin(ctx, {\n            beginX: beginX - this.options.extendLeft,\n            endX: endX + this.options.extendRight,\n            y: y + this.options.yShift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    xShift: pixels to shift\n    //    yShift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.renderOptions = Object.assign({ thickness: 2, xShift: 0, yShift: 10, position: CurvePosition.NEAR_HEAD, positionEnd: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const xShift = this.renderOptions.xShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        const firstX = params.firstX + xShift;\n        const firstY = params.firstY + yShift;\n        const lastX = params.lastX - xShift;\n        const lastY = params.lastY + yShift;\n        const thickness = this.renderOptions.thickness;\n        const cps = this.renderOptions.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const controlPointSpacing = (lastX - firstX) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(firstX, firstY);\n        ctx.bezierCurveTo(firstX + controlPointSpacing + cp0x, firstY + cp0y * params.direction, lastX - controlPointSpacing + cp1x, lastY + cp1y * params.direction, lastX, lastY);\n        ctx.bezierCurveTo(lastX - controlPointSpacing + cp1x, lastY + (cp1y + thickness) * params.direction, firstX + controlPointSpacing + cp0x, firstY + (cp0y + thickness) * params.direction, firstX, firstY);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.from;\n        const lastNote = this.to;\n        let firstX;\n        let lastX;\n        let firstY;\n        let lastY;\n        let stemDirection = 0;\n        let metric = 'baseY';\n        let endMetric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.renderOptions.position);\n        const positionEnd = getPosition(this.renderOptions.positionEnd);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            endMetric = 'topY';\n        }\n        if (positionEnd === CurvePosition.NEAR_HEAD) {\n            endMetric = 'baseY';\n        }\n        else if (positionEnd === CurvePosition.NEAR_TOP) {\n            endMetric = 'topY';\n        }\n        if (firstNote) {\n            firstX = firstNote.getTieRightX();\n            stemDirection = firstNote.getStemDirection();\n            firstY = firstNote.getStemExtents()[metric];\n        }\n        else {\n            const stave = lastNote.checkStave();\n            firstX = stave.getTieStartX();\n            firstY = lastNote.getStemExtents()[metric];\n        }\n        if (lastNote) {\n            lastX = lastNote.getTieLeftX();\n            stemDirection = lastNote.getStemDirection();\n            lastY = lastNote.getStemExtents()[endMetric];\n        }\n        else {\n            const stave = firstNote.checkStave();\n            lastX = stave.getTieEndX();\n            lastY = firstNote.getStemExtents()[endMetric];\n        }\n        this.renderCurve({\n            firstX,\n            lastX,\n            firstY,\n            lastY,\n            direction: stemDirection * (this.renderOptions.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const autoStem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) === 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, autoStem });\n        if (!autoStem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// Any glyph that is set to appear on a Stave and take up musical time and graphical space.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignoreTicks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.text = glyph;\n        return this;\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        this.renderText(ctx, x, stave.getYForLine(this.options.line));\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ glyphFontScale: Tables.lookupMetric('fontSize') * GraceNote.SCALE, strokePx: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stemExtensionOverride) {\n            return this.stemExtensionOverride;\n        }\n        let ret = super.getStemExtension();\n        ret = Stem.HEIGHT * this.getStaveNoteScale() - Stem.HEIGHT + ret;\n        return ret;\n    }\n    getStaveNoteScale() {\n        return 2 / 3;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const scale = this.getStaveNoteScale();\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * scale, 8 * scale, {\n                    stem: 6 * scale,\n                    beam: 5 * scale,\n                });\n            }\n            else {\n                const stemDirection = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteHeadWidth = this.noteHeads[0].getWidth();\n                const x = stemDirection === Stem.DOWN ? this.getAbsoluteX() : this.getAbsoluteX() + noteHeadWidth;\n                const defaultOffsetY = (Tables.STEM_HEIGHT * scale) / 2;\n                const y = stemDirection === Stem.DOWN ? noteHeadBounds.yBottom + defaultOffsetY : noteHeadBounds.yTop - defaultOffsetY;\n                if (stemDirection === Stem.DOWN) {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y - noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y + noteHeadWidth,\n                    };\n                }\n                else {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y + noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y - noteHeadWidth,\n                    };\n                }\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * scale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beamSlope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beamAngle = Math.atan(beamSlope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beamAngle) * slashBeamOffset,\n            dy: Math.sin(beamAngle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slashAngle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusionStemDeltaX = Math.cos(slashAngle) * protrusions.stem * scaleX;\n        const protrusionStemDeltaY = Math.sin(slashAngle) * protrusions.stem;\n        const protrusionBeamDeltaX = Math.cos(slashAngle) * protrusions.beam * scaleX;\n        const protrusionBeamDeltaY = Math.sin(slashAngle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beamSlope;\n        const ret = {\n            x1: stemX - protrusionStemDeltaX,\n            y1: stemY + slashStemOffset - protrusionStemDeltaY,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusionBeamDeltaX,\n            y2: stemY + iPointOnBeam.dy + protrusionBeamDeltaY,\n        };\n        return ret;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignoreTicks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements multiple measure rests.\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _MultiMeasureRest_hasPaddingLeft, _MultiMeasureRest_hasPaddingRight, _MultiMeasureRest_hasLineThickness, _MultiMeasureRest_hasSymbolSpacing;\nimport { Element } from './element';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    /**\n     *\n     * @param numberOfMeasures Number of measures.\n     * @param options The options object.\n     */\n    constructor(numberOfMeasures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        _MultiMeasureRest_hasPaddingLeft.set(this, false);\n        _MultiMeasureRest_hasPaddingRight.set(this, false);\n        _MultiMeasureRest_hasLineThickness.set(this, false);\n        _MultiMeasureRest_hasSymbolSpacing.set(this, false);\n        const fontSize = (_a = options.numberGlyphPoint) !== null && _a !== void 0 ? _a : Tables.lookupMetric('MultiMeasureRest.fontSize'); // same as TimeSignature.\n        this.fontInfo.size = fontSize;\n        this.numberOfMeasures = numberOfMeasures;\n        this.text = '';\n        const t = `${this.numberOfMeasures}`;\n        for (const digit of t) {\n            // 0xe080 is timeSig0. We calculate the code point for timeSigN to assemble the digits via SMuFL glyphs.\n            this.text += String.fromCodePoint(0xe080 + Number(digit));\n        }\n        // Keep track of whether these four options were provided.\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasPaddingLeft, typeof options.paddingLeft === 'number', \"f\");\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasPaddingRight, typeof options.paddingRight === 'number', \"f\");\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasLineThickness, typeof options.lineThickness === 'number', \"f\");\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasSymbolSpacing, typeof options.symbolSpacing === 'number', \"f\");\n        this.renderOptions = Object.assign({ useSymbols: false, showNumber: true, numberLine: -0.5, numberGlyphPoint: fontSize, line: 2, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, serifThickness: 2, semibreveRestGlyphScale: Tables.lookupMetric('fontSize'), paddingLeft: 0, paddingRight: 0, lineThickness: 5, symbolSpacing: 0 }, options);\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right) {\n        const options = this.renderOptions;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let txt = '\\ue4ef'; /*restHBarLeft*/\n        const el = new Element();\n        el.setText(txt);\n        // Add middle bars until the right padding is reached\n        for (let i = 1; (i + 2) * el.getWidth() + left <= right; i++) {\n            txt += '\\ue4f0'; /*restHBarMiddle*/\n        }\n        txt += '\\ue4f1'; /*restHBarRight*/\n        el.setText(txt);\n        el.renderText(ctx, left + (right - left) * 0.5 - el.getWidth() * 0.5, y);\n    }\n    drawSymbols(stave, ctx, left, right) {\n        const n4 = Math.floor(this.numberOfMeasures / 4);\n        const n = this.numberOfMeasures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.renderOptions;\n        const elMiddle = new Element();\n        let txt = '';\n        for (let i = 0; i < n4; ++i) {\n            txt += '\\ue4e1' /*restLonga*/ + ' ';\n        }\n        for (let i = 0; i < n2; ++i) {\n            txt += '\\ue4e2' /*restDoubleWhole*/ + ' ';\n        }\n        elMiddle.setText(txt);\n        const elTop = new Element();\n        txt = '';\n        for (let i = 0; i < n1; ++i) {\n            txt += '\\ue4e3' /*restWhole*/ + ' ';\n        }\n        elTop.setText(txt);\n        const width = elMiddle.getWidth() + elTop.getWidth();\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        elMiddle.renderText(ctx, x, yMiddle);\n        x += elMiddle.getWidth();\n        elTop.renderText(ctx, x, yTop);\n        x += elTop.getWidth();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.renderOptions;\n        if (__classPrivateFieldGet(this, _MultiMeasureRest_hasPaddingLeft, \"f\")) {\n            left = stave.getX() + options.paddingLeft;\n        }\n        if (__classPrivateFieldGet(this, _MultiMeasureRest_hasPaddingRight, \"f\")) {\n            right = stave.getX() + stave.getWidth() - options.paddingRight;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        if (options.useSymbols) {\n            this.drawSymbols(stave, ctx, left, right);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right);\n        }\n        if (options.showNumber) {\n            this.renderText(ctx, left + (right - left) * 0.5 - this.width * 0.5, stave.getYForLine(options.numberLine) - this.height * 0.5);\n        }\n    }\n}\n_MultiMeasureRest_hasPaddingLeft = new WeakMap(), _MultiMeasureRest_hasPaddingRight = new WeakMap(), _MultiMeasureRest_hasLineThickness = new WeakMap(), _MultiMeasureRest_hasSymbolSpacing = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, ctx, x, y) {\n    var _a;\n    const glyph = new Element(PedalMarking.CATEGORY);\n    glyph.setText((_a = PedalMarking.GLYPHS[name]) !== null && _a !== void 0 ? _a : name);\n    glyph.renderText(ctx, x - (glyph.getWidth() - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.customDepressText = '';\n        this.customReleaseText = '';\n        this.renderOptions = {\n            bracketHeight: 10,\n            textMarginRight: 6,\n            bracketLineWidth: 1,\n            color: 'black',\n        };\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.customDepressText = depress || '';\n        this.customReleaseText = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        let prevX;\n        let prevY;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            isPedalDepressed = !isPedalDepressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prevX) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const nextNoteIsSame = notes[index + 1] === note;\n            const prevNoteIsSame = notes[index - 1] === note;\n            let xShift = 0;\n            if (isPedalDepressed) {\n                // Adjustment for release+depress\n                xShift = prevNoteIsSame ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prevNoteIsSame) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.customDepressText) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const textWidth = ctx.measureText(this.customDepressText).width;\n                        ctx.fillText(this.customDepressText, x - textWidth / 2, y);\n                        xShift = textWidth / 2 + this.renderOptions.textMarginRight;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedalDepress', ctx, x, y);\n                        xShift = 20 + this.renderOptions.textMarginRight;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.renderOptions.bracketHeight);\n                    ctx.lineTo(x + xShift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                xShift = nextNoteIsSame ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prevX, prevY);\n                ctx.lineTo(x + xShift, y);\n                ctx.lineTo(x, y - this.renderOptions.bracketHeight);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prevX = x + xShift;\n            prevY = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            isPedalDepressed = !isPedalDepressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            let textWidth = 0;\n            if (isPedalDepressed) {\n                if (this.customDepressText) {\n                    textWidth = ctx.measureText(this.customDepressText).width;\n                    ctx.fillText(this.customDepressText, x - textWidth / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedalDepress', ctx, x, y);\n                }\n            }\n            else {\n                if (this.customReleaseText) {\n                    textWidth = ctx.measureText(this.customReleaseText).width;\n                    ctx.fillText(this.customReleaseText, x - textWidth / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedalRelease', ctx, x, y);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.renderOptions.color);\n        ctx.setFillStyle(this.renderOptions.color);\n        ctx.setFont(Tables.lookupMetricFontInfo('PedalMarking.text'));\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.renderOptions.bracketLineWidth);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedalDepress: '\\uE650' /*keyboardPedalPed*/,\n    pedalRelease: '\\uE655' /*keyboardPedalUp*/,\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { GlyphNote } from './glyphnote';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': '\\uE500' /*repeat1Bar*/,\n    '2': '\\uE501' /*repeat2Bars*/,\n    '4': '\\uE502' /*repeat4Bars*/,\n    slash: '\\uE504' /*repeatBarSlash*/,\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || '\\uE500'; /*repeat1Bar*/\n        super(glyphCode, Object.assign({ duration: 'q', alignCenter: type !== 'slash' }, noteStruct), options);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `renderOptions`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    firstNote: Note,\n    //    lastNote: Note,\n    //    firstIndexes: [n1, n2, n3],\n    //    lastIndexes: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.renderOptions = {\n            // Space to add to the left or the right\n            paddingLeft: 4,\n            paddingRight: 3,\n            // The width of the line in pixels\n            lineWidth: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            lineDash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            roundedEnd: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            drawStartArrow: false,\n            drawEndArrow: false,\n            // The length of the arrowhead sides\n            arrowheadLength: 10,\n            // The angle of the arrowhead\n            arrowheadAngle: Math.PI / 8,\n            // The position of the text\n            textPositionVertical: StaveLine.TextVerticalPosition.TOP,\n            textJustification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes)\n            notes.firstIndexes = [0];\n        if (!notes.lastIndexes)\n            notes.lastIndexes = [0];\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.firstIndexes = notes.firstIndexes;\n        this.lastNote = notes.lastNote;\n        this.lastIndexes = notes.lastIndexes;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const renderOptions = this.renderOptions;\n        if (renderOptions.lineDash) {\n            ctx.setLineDash(renderOptions.lineDash);\n        }\n        if (renderOptions.lineWidth) {\n            ctx.setLineWidth(renderOptions.lineWidth);\n        }\n        if (renderOptions.roundedEnd) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.fontInfo);\n        const renderOptions = this.renderOptions;\n        const color = renderOptions.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const bothArrows = this.renderOptions.drawStartArrow && this.renderOptions.drawEndArrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.renderOptions.arrowheadLength / 3) / distance;\n        let endX;\n        let endY;\n        let startX;\n        let startY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            endX = Math.round(x1 + (x2 - x1) * ratio);\n            endY = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            endX = x2;\n            endY = y2;\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            startX = x1 + (x2 - x1) * (1 - ratio);\n            startY = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            startX = x1;\n            startY = y1;\n        }\n        if (this.renderOptions.color) {\n            ctx.setStrokeStyle(this.renderOptions.color);\n            ctx.setFillStyle(this.renderOptions.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const lineAngle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.renderOptions.arrowheadLength / Math.cos(this.renderOptions.arrowheadAngle));\n        let angle1;\n        let angle2;\n        let topX;\n        let topY;\n        let bottomX;\n        let bottomY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            angle1 = lineAngle + Math.PI + this.renderOptions.arrowheadAngle;\n            topX = x2 + Math.cos(angle1) * h;\n            topY = y2 + Math.sin(angle1) * h;\n            angle2 = lineAngle + Math.PI - this.renderOptions.arrowheadAngle;\n            bottomX = x2 + Math.cos(angle2) * h;\n            bottomY = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x2, y2, bottomX, bottomY);\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            angle1 = lineAngle + this.renderOptions.arrowheadAngle;\n            topX = x1 + Math.cos(angle1) * h;\n            topY = y1 + Math.sin(angle1) * h;\n            angle2 = lineAngle - this.renderOptions.arrowheadAngle;\n            bottomX = x1 + Math.cos(angle2) * h;\n            bottomY = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x1, y1, bottomX, bottomY);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        const renderOptions = this.renderOptions;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indexes and draw lines\n        let startPosition = { x: 0, y: 0 };\n        let endPosition = { x: 0, y: 0 };\n        this.firstIndexes.forEach((firstIndex, i) => {\n            const lastIndex = this.lastIndexes[i];\n            // Get initial coordinates for the start/end of the line\n            startPosition = firstNote.getModifierStartXY(2, firstIndex);\n            endPosition = lastNote.getModifierStartXY(1, lastIndex);\n            const upwardsSlope = startPosition.y > endPosition.y;\n            // Adjust `x` coordinates for modifiers\n            startPosition.x += firstNote.getMetrics().modRightPx + renderOptions.paddingLeft;\n            endPosition.x -= lastNote.getMetrics().modLeftPx + renderOptions.paddingRight;\n            // Adjust first `x` coordinates for displacements\n            const noteheadWidth = firstNote.getGlyphWidth();\n            const firstDisplaced = firstNote.getKeyProps()[firstIndex].displaced;\n            if (firstDisplaced && firstNote.getStemDirection() === 1) {\n                startPosition.x += noteheadWidth + renderOptions.paddingLeft;\n            }\n            // Adjust last `x` coordinates for displacements\n            const lastDisplaced = lastNote.getKeyProps()[lastIndex].displaced;\n            if (lastDisplaced && lastNote.getStemDirection() === -1) {\n                endPosition.x -= noteheadWidth + renderOptions.paddingRight;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            startPosition.y += upwardsSlope ? -3 : 1;\n            endPosition.y += upwardsSlope ? 2 : 0;\n            this.drawArrowLine(ctx, startPosition, endPosition);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const textWidth = ctx.measureText(this.text).width;\n        const justification = renderOptions.textJustification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = startPosition.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const deltaX = endPosition.x - startPosition.x;\n            const centerX = deltaX / 2 + startPosition.x;\n            x = centerX - textWidth / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = endPosition.x - textWidth;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const verticalPosition = renderOptions.textPositionVertical;\n        if (verticalPosition === StaveLine.TextVerticalPosition.TOP) {\n            y = firstNote.checkStave().getYForTopText();\n        }\n        else if (verticalPosition === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = firstNote.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    static get CATEGORY() {\n        return Category.System;\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Get origin X. */\n    getX() {\n        return this.options.x;\n    }\n    /** Set origin X. */\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n        return this;\n    }\n    /** Get origin y. */\n    getY() {\n        return this.options.y;\n    }\n    /** Set origin y. */\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n        return this;\n    }\n    /** Get associated staves. */\n    getStaves() {\n        return this.partStaves;\n    }\n    /** Get associated voices. */\n    getVoices() {\n        return this.partVoices;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            topStave: this.partStaves[0],\n            bottomStave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ leftBar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    /**\n     * Add voices to the system with stave already assigned.\n     */\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    /** Format the system. */\n    format() {\n        const optionsDetails = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(optionsDetails);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        // Re-assign Stave to update y position\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        // Join the voices\n        formatter.joinVoices(this.partVoices);\n        // Update the start position of all staves.\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(optionsDetails);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        var _a;\n        return new BoundingBox(this.options.x, this.options.y, this.options.width, ((_a = this.lastY) !== null && _a !== void 0 ? _a : 0) - this.options.y);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Gets the unused strings grouped together if consecutive.\n * @param numLines The number of lines.\n * @param stringsUsed An array of numbers representing which strings have fret positions.\n * @returns\n */\nfunction getUnusedStringGroups(numLines, stringsUsed) {\n    const stemThrough = [];\n    let group = [];\n    for (let string = 1; string <= numLines; string++) {\n        const isUsed = stringsUsed.indexOf(string) > -1;\n        if (!isUsed) {\n            group.push(string);\n        }\n        else {\n            stemThrough.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stemThrough.push(group);\n    return stemThrough;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stemY - The `y` coordinate the stem is located on\n// * unusedStrings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stemDirection - The direction of the stem\nfunction getPartialStemLines(stemY, unusedStrings, stave, stemDirection) {\n    const upStem = stemDirection !== 1;\n    const downStem = stemDirection !== -1;\n    const lineSpacing = stave.getSpacingBetweenLines();\n    const totalLines = stave.getNumLines();\n    const stemLines = [];\n    unusedStrings.forEach((strings) => {\n        const containsLastString = strings.indexOf(totalLines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((upStem && containsFirstString) || (downStem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const lineYs = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === totalLines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= lineSpacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += lineSpacing / 2 - 1;\n            }\n            // Store the y value\n            lineYs.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stemDirection === 1 && isTopBound) {\n                lineYs.push(stemY - 2);\n            }\n            else if (stemDirection === -1 && isBottomBound) {\n                lineYs.push(stemY + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stemLines.push(lineYs.sort((a, b) => a - b));\n    });\n    return stemLines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `drawStem` when rendering the note\n    constructor(noteStruct, drawStem = false) {\n        super(noteStruct);\n        this.fretElement = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // font size for note heads and rests\n            glyphFontScale: Tables.lookupMetric('TabNote.fontSize'), \n            // Flag to draw a stem\n            drawStem, \n            // Flag to draw dot modifiers\n            drawDots: drawStem, \n            // Flag to extend the main stem through the stave and fret positions\n            drawStemThroughStave: false, \n            // vertical shift from stave line\n            yShift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: Tables.lookupMetric('fontFamily') });\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stemDirection) {\n            this.setStemDirection(noteStruct.stemDirection);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.renderOptions.drawStem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        return this.flag.getHeight() > Stem.HEIGHT ? this.flag.getHeight() - Stem.HEIGHT : 0;\n    }\n    static tabToElement(fret) {\n        let el;\n        if (fret.toUpperCase() === 'X') {\n            el = new Element('TabNote');\n            el.setText('\\ue263' /*accidentalDoubleSharp*/);\n        }\n        else {\n            el = new Element('TabNote.text');\n            el.setText(fret);\n            el.setYShift(el.getHeight() / 2);\n        }\n        return el;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.fretElement = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const el = TabNote.tabToElement(fret.toString());\n            this.fretElement.push(el);\n            this.width = Math.max(el.getWidth(), this.width);\n        }\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const noteGlyphWidth = this.width;\n            x = noteGlyphWidth / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const numLines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = numLines - 0.5;\n        const stemStartLine = Stem.UP === this.stemDirection ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        const { beam, glyphProps, renderOptions: { drawStem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam === undefined && drawStem;\n        // Now it's the flag's turn.\n        if (glyphProps.codeFlagUp && shouldDrawFlag) {\n            const flagX = this.getStemX();\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - this.getStemExtension()\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + this.getStemExtension();\n            // Draw the Flag\n            this.applyStyle(context, this.flagStyle);\n            this.flag.renderText(context, flagX, flagY);\n            this.restoreStyle(context, this.flagStyle);\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.renderOptions.drawDots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.renderOptions.drawStem;\n        const stemThrough = this.renderOptions.drawStemThroughStave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.renderOptions.yShift;\n            const el = this.fretElement[i];\n            // Center the fret text beneath the stem\n            const tabX = x - el.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tabX - 2, y - 3, el.getWidth() + 4, 6);\n            el.renderText(ctx, tabX, y);\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const renderStem = this.beam === undefined && this.renderOptions.drawStem;\n        this.applyStyle();\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && renderStem) {\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tabOptions = Object.assign({ spacingBetweenLinesPx: 13, numLines: 6, topTextPosition: 1 }, options);\n        super(x, y, width, tabOptions);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.textElement = new Element('TextBracket');\n        this.textElement.setText(text);\n        this.superscriptElement = new Element('TextBracket');\n        this.superscriptElement.setText(superscript);\n        const smallerFontSize = Font.scaleSize(this.fontInfo.size, 0.714286);\n        this.superscriptElement.setFontSize(smallerFontSize);\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.renderOptions = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            lineWidth: 1,\n            showBracket: true,\n            bracketHeight: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underlineSuperscript: true,\n        };\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        this.textElement.setFont(this.fontInfo);\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        const { family, size, weight, style } = this.fontInfo;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        this.superscriptElement.setFont(family, smallerFontSize, weight, style);\n        const options = this.renderOptions;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.lineWidth);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.renderOptions.dashed = dashed;\n        if (dash)\n            this.renderOptions.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracketHeight = this.renderOptions.bracketHeight * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        this.textElement.renderText(ctx, start.x, start.y);\n        // Get the width and height for the octave number\n        const mainWidth = this.textElement.getWidth();\n        const mainHeight = this.textElement.getHeight();\n        // Calculate the y position for the super script\n        const superY = start.y - mainHeight / 2.5;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        this.superscriptElement.renderText(ctx, start.x + mainWidth + 1, superY);\n        // Determine width and height of the superscript\n        const superWidth = this.superscriptElement.getWidth();\n        const superHeight = this.superscriptElement.getHeight();\n        // Setup initial coordinates for the bracket line\n        let startX = start.x;\n        let lineY = superY;\n        const endX = stop.x + this.stop.getGlyphWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            startX += mainWidth + superWidth + 5;\n            lineY -= superHeight / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            lineY += superHeight / 2.7;\n            startX += mainWidth + 2;\n            if (!this.renderOptions.underlineSuperscript) {\n                startX += superWidth;\n            }\n        }\n        if (this.renderOptions.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, startX, lineY, endX, lineY, this.renderOptions.dash);\n            // Ending Bracket\n            if (this.renderOptions.showBracket) {\n                Renderer.drawDashedLine(ctx, endX, lineY + 1 * this.position, endX, lineY + bracketHeight, this.renderOptions.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(startX, lineY);\n            // Main line\n            ctx.lineTo(endX, lineY);\n            if (this.renderOptions.showBracket) {\n                // Ending bracket\n                ctx.lineTo(endX, lineY + bracketHeight);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: '\\uE522' /*dynamicForte*/,\n            p: '\\uE520' /*dynamicPiano*/,\n            m: '\\uE521' /*dynamicMezzo*/,\n            s: '\\uE524' /*dynamicSforzando*/,\n            z: '\\uE525' /*dynamicZ*/,\n            r: '\\uE523' /*dynamicRinforzando*/,\n        };\n    }\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.sequence = ((_a = noteStruct.text) !== null && _a !== void 0 ? _a : '').toLowerCase();\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.text = '';\n        this.renderOptions = Object.assign({ glyphFontSize: Tables.lookupMetric('fontSize') }, this.renderOptions);\n        this.fontInfo.size = defined(this.renderOptions.glyphFontSize) * this.renderOptions.glyphFontScale;\n        L('New Dynamics Text: ', this.sequence);\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.text = '';\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph = TextDynamics.GLYPHS[letter];\n            if (!glyph)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            // Add the glyph\n            this.text += glyph;\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        this.renderText(this.checkContext(), x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getWidth());\n        // Note properties\n        this.ignoreTicks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.timeSig.drawAt(ctx, stave, this.getAbsoluteX());\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracketData) {\n        super();\n        this.vibrato = new Vibrato();\n        if (bracketData.start)\n            this.start = bracketData.start;\n        if (bracketData.stop)\n            this.stop = bracketData.stop;\n        this.line = 1;\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set vibrato code. */\n    setVibratoCode(code) {\n        this.vibrato.setVibratoCode(code);\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const startX = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stopX = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.vibrato.setVibratoWidth(stopX - startX);\n        L('Rendering VibratoBracket: startX:', startX, 'stopX:', stopX, 'y:', y);\n        this.vibrato.renderText(ctx, startX, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId === null) {\n            return;\n        }\n        if (elementId === '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center' }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) !== undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined) {\n            ornament.setPosition(params.position);\n        }\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.numberOfMeasures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.topStave, params.bottomStave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.code)\n            vibratoBracket.setVibratoCode(params.options.code);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // vertical shift from stave line\n            yShift: 0.3, \n            // grace glyph scale\n            scale: 0.6 });\n        this.updateWidth();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const isSupportedType = Music.scaleTypes[this.keyParts.type];\n        if (!isSupportedType) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.rootIndexes[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote !== undefined) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote !== undefined) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// @author Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   yShift: px,         // vertical offset\n     *   leftShiftTicks: 0, // left horizontal offset expressed in ticks\n     *   rightShiftTicks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt === null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const leftShiftPx = ppt * ((_a = options.leftShiftTicks) !== null && _a !== void 0 ? _a : 0);\n        const rightShiftPx = ppt * ((_b = options.rightShiftTicks) !== null && _b !== void 0 ? _b : 0);\n        const hairpinOptions = {\n            height: options.height,\n            yShift: options.yShift,\n            leftShiftPx,\n            rightShiftPx,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n        new StaveHairpin({\n            firstNote: notes.firstNote,\n            lastNote: notes.lastNote,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpinOptions)\n            .setPosition(position)\n            .draw();\n    }\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.renderOptions = {\n            height: 10,\n            yShift: 0,\n            leftShiftPx: 0,\n            rightShiftPx: 0,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        this.renderOptions = options;\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either firstNote or lastNote set.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.lastNote = notes.lastNote;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.renderOptions.yShift + 20;\n        let yShift = params.firstY;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            yShift = params.firstY - params.staffHeight;\n        }\n        const leftShiftPx = this.renderOptions.leftShiftPx;\n        const rightShiftPx = this.renderOptions.rightShiftPx;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.lastX + rightShiftPx, yShift + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.firstX + leftShiftPx, yShift + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            firstX: start.x,\n            lastX: end.x,\n            firstY: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            lastY: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staffHeight: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *    firstIndexes: [n1, n2, n3],\n     *    lastIndexes: [n1, n2, n3]\n     *  }\n     * @param notes.firstNote the starting note of the slide\n     * @param notes.lastNote the ending note of the slide\n     * @param notes.firstIndexes specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.lastIndexes currently unused. we assume it's the same as firstIndexes.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let firstFret = notes.firstNote.getPositions()[0].fret;\n            if (typeof firstFret === 'string') {\n                firstFret = parseInt(firstFret, 10);\n            }\n            let lastFret = notes.lastNote.getPositions()[0].fret;\n            if (typeof lastFret === 'string') {\n                lastFret = parseInt(lastFret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(firstFret) || isNaN(lastFret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = firstFret > lastFret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.renderOptions.cp1 = 11;\n        this.renderOptions.cp2 = 14;\n        this.renderOptions.yShift = 0.5;\n    }\n    /**\n     * @param params.firstX is specified in pixels.\n     * @param params.lastX is specified in pixels.\n     */\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const firstX = params.firstX; // pixel units\n        const firstYs = params.firstYs;\n        const lastX = params.lastX; // pixel units\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const firstIndexes = this.notes.firstIndexes;\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const slideY = firstYs[firstIndexes[i]] + this.renderOptions.yShift;\n            if (isNaN(slideY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(firstX, slideY + 3 * direction);\n            ctx.lineTo(lastX, slideY - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.text = '\\uE220' /*tremolo1*/;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const scale = isGraceNote(note) ? GraceNote.SCALE : 1;\n        const ySpacing = Tables.lookupMetric(`Tremolo.spacing`) * stemDirection * scale;\n        const x = note.getAbsoluteX() + (stemDirection === Stem.UP ? note.getGlyphWidth() - Stem.WIDTH / 2 : Stem.WIDTH / 2);\n        let y = note.getStemExtents().topY + (this.num <= 3 ? ySpacing : 0);\n        this.fontInfo.size = Tables.lookupMetric(`Tremolo.fontSize`) * scale;\n        for (let i = 0; i < this.num; ++i) {\n            this.renderText(ctx, x, y);\n            y += ySpacing;\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).intValue) !== null && _a !== void 0 ? _a : -1;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","import { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { Glyphs } from './glyphs';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { CommonMetrics, Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        CommonMetrics.fontFamily = fontNames.join(',');\n    }\n    static getMusicFont() {\n        return Tables.lookupMetric('fontFamily').split(',');\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.GlyphNote = GlyphNote;\nFlow.Glyphs = Glyphs;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '5.0.0-alpha.2';\nexport const ID = 'e3cea21b35e80034de3c2108be6b5d43c1763ee3';\nexport const DATE = '2023-09-17T19:01:46.834Z';\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element with id `canvasId`.\n    static getCanvasContext(canvasId) {\n        if (!canvasId) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasId);\n        }\n        const canvas = document.getElementById(canvasId);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const startTime = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - startTime;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// vexflow.ts is the entry point for the build output file vexflow.js.\n// It statically bundles all the music engraving fonts, and sets the music font stack to:\n// Flow.setMusicFont('Bravura', 'Roboto Slab');\n// The webpack config inside Gruntfile.js sets the mode to 'production' to produce a minified build.\nimport { Flow } from '../src/flow';\nFlow.setMusicFont('Bravura', 'Roboto Slab');\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","n","parseInt","prefix","text","upperFirst","s","charAt","toUpperCase","normalizeAngle","Math","PI","sumArray","arr","reduce","_a","_Fraction_fractionA","_Fraction_fractionB","Glyphs","__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","Fraction","static","Number","isNaN","t","GCD","length","LCM","shift","LCMM","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","copy","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","toMixedString","q","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","newX","newY","newW","max","newH","RESOLUTION","CommonMetrics","fontFamily","fontSize","fontWeight","fontStyle","cautionary","grace","noteheadAccidentalPadding","leftPadding","accidentalSpacing","Bend","ChordSymbol","spacing","subscriptOffset","superscriptOffset","superSubRatio","FretHandFinger","NoteHead","minPadding","PedalMarking","Repetition","offsetX","offsetY","coda","segno","Stave","padding","endPaddingMax","endPaddingMin","unalignedNotePadding","StaveConnector","StaveLine","StaveSection","StaveTempo","glyph","name","StaveText","StaveTie","StringNumber","verticalPadding","stemPadding","rightPadding","Stroke","TabSlide","TabTie","TextBracket","TextNote","Tremolo","Volta","durations","durationAliases","keySignatures","C","num","Am","F","accidental","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","lineShift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","index","intVal","CN","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","X","accidentals","bb","db","bs","bss","k","bbs","ashs","afhf","articulations","betweenLines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordentInverted","turn","turnInverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","MUSIC_FONT_STACK","clef","family","lookupMetric","size","weight","style","defaultValue","keyParts","lastKeyPart","pop","curr","retVal","keyPart","keyOctaveGlyph","type","params","options","octaveShift","duration","assign","sanitizeDuration","pieces","octave","clefProperties","intValue","glyphName","codeNoteHead","displaced","integer","noteValue","artic","ornament","spec","keySpec","notes","accList","push","durationNumber","durationToFraction","ticks","null","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","durationCodes","stem","beamCount","stemBeamExtension","codeFlagUp","NOTATION_FONT_SCALE","TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalColumnsTable","secondOnBottom","spacedOutTetrachord","spacedOutPentachord","verySpacedOutPentachord","spacedOutHexachord","verySpacedOutHexachord","unicode","sharp","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","numBeats","beatValue","resolution","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Font","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","fromCSSString","NORMAL","cssFontShorthand","document","createElement","font","fontInfo","st","trim","wt","sz","scaleFactor","parsedWeight","ITALIC","fontName","woffURL","fontFace","FontFace","load","fonts","fontNames","allFiles","WEB_FONT_FILES","keys","host","WEB_FONT_HOST","fontPath","loadWebFont","px","em","in","mm","cm","Academico","Bravura","BravuraText","GonvilleSmufl","Gootville","GootvilleText","Leland","LelandText","Petaluma","MuseJazz","MuseJazzText","FinaleAsh","FinaleAshText","FinaleJazz","FinaleJazzText","FinaleBroadway","FinaleBroadwayText","FinaleMaestro","FinaleMaestroText","_Registry_defaultRegistry","__classPrivateFieldSet","Index","id","class","Registry","registry","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","_c","getElementsByAttribute","attribute","indexAttr","indexAttrVal","map","getElementsByType","getElementsByClass","className","onUpdate","info","includes","_Element_context","_Element_attrs","_Element_fontInfo","_Element_text","_Element_metricsValid","_Element_textMetrics","_Element_height","_Element_width","_Element_txtCanvas","Element","ID","children","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","actualBoundingBoxLeft","actualBoundingBoxRight","width","xShift","yShift","newID","rendered","lookupMetricFontInfo","getDefaultRegistry","addChildElement","child","getCategory","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","textMetrics","height","getContext","setContext","setFont","toCSSString","defaultTextFont","fontIsObject","fontIsString","sizeWeightStyleAreUndefined","validate","getFont","setFontSize","getFontSize","fontSizeInPoints","convertSizeToPointValue","fontSizeInPixels","convertSizeToPixelValue","getWidth","measureText","setWidth","setYShift","getYShift","setXShift","getXShift","setText","getText","renderText","ctx","xPos","yPos","fillText","txtCanvas","getTextMetrics","getHeight","setOriginX","bbox","setOriginY","setOrigin","WeakMap","_Modifier_spacingFromNextModifier","_Modifier_modifierContext","ModifierPosition","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","textLine","position","reset","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","checkModifierContext","setModifierContext","c","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","metrics","getMetrics","stave","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setStave","setXOffset","Music","NUM_TONES","canonicalNotes","roots","rootValues","rootIndexes","diatonicIntervals","diatonicAccidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","rootIndex","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","parts","rootValue","multiplier","reverseInterval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySignature","keySigParts","scaleName","keySigString","scale","noteLocation","scaleMap","rootName","noteName","_Accidental_checkCollision","AnnotationHorizontalJustify","AnnotationVerticalJustify","L","DEBUG","leftShift","additionalPadding","accidentalLinePositionsAndSpaceNeeds","prevNote","extraXSpaceNeededForLeftDisplacedNotehead","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","round","extraXSpaceNeeded","spacingBetweenStaveLines","sort","staveLineAccidentalLayoutMetrics","maxExtraXSpaceNeeded","accidentalLinePositionAndSpaceNeeds","accidentalType","priorLineMetric","currentLineMetric","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","accidentalCodes","setAsCautionary","start","getModifierStartXY","accX","accY","clearance","clearanceRequired","collision","Stem","UP","DOWN","WIDTH","HEIGHT","_d","_e","_f","_g","stemUpYOffset","stemDownYOffset","stemUpYBaseOffset","stemDownYBaseOffset","xBegin","xEnd","yTop","yBottom","stemExtension","stemDirection","hide","isStemlet","stemletHeight","renderHeightAdjustment","setOptions","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","yOffset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stemX","stemY","yBaseOffset","stemletYOffset","openGroup","pointerBBox","beginPath","moveTo","lineTo","stroke","closeGroup","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","verticalSpaceNeeded","glyphWidth","getGlyphWidth","textWidth","horizontalJustification","hasStem","getStemDirection","lines","renderOptions","drawStem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","topTextLine","BOTTOM","greatestString","curBottom","rightOverlap","rightShift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","textHeight","getStemX","stemExt","checkStave","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","getTopY","stemTipY","stemBaseY","getBottomY","getInitialOffset","isOnStemTip","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","heightShift","articulationCodes","codePointAt","setBetweenLines","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","INITIAL_OFFSET","offsetDirection","articLine","snappedLine","snapLineToStaff","drawDot","color","arc","closePath","fill","_Tickable_preFormatted","_Tickable_postFormatted","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolModifiers","Tickable","intrinsicTicks","tickMultiplier","modifiers","tupletStack","alignCenter","centerXShift","ignoreTicks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","flag","modifierContext","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","codeHead","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xFreedomRight","xWidth","x1","x2","yy","spaceDeviation","durationString","dots","noteStruct","durationProps","parseDuration","customTypes","durationToTicks","currentTicks","parsedNoteStruct","parseNoteStruct","JSON","stringify","keyProps","noteType","durationOverride","glyphProps","getGlyphProps","customGlyphs","playNote","annotationSpacing","glyphFontScale","strokePx","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","parentheses","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifier","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","doubleBar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dotX","dotRadius","dotY","BarNote","barline","bends","lastWidth","stringPos","phrase","tap","lineStyle","bendWidth","releaseWidth","updateWidth","setTap","getTextHeight","totalWidth","additionalWidth","drawWidth","lowestY","bendHeight","annotationY","renderBend","cpX","cpY","quadraticCurveTo","renderRelease","renderArrowHead","yBase","renderX","lastBend","lastBendDrawWidth","lastDrawnWidth","ChordSymbolBlock","symbolModifier","vAlign","isSuperscript","SUPERSCRIPT","isSubscript","SUBSCRIPT","spacingBetweenBlocks","symbols","symbol","lineSpaces","j","symbolBlocks","sup","sub","prev","getVertical","getReportWidth","getHorizontal","horizontal","vertical","reportWidth","setReportWidth","getSymbolBlock","symbolBlock","smallerFontSize","scaleSize","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","glyphs","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stemBase","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","over","symbolModifiers","all","dot","dotList","maxShiftMap","noteId","dotShift","lastLine","lastNote","prevDottedSpace","halfShiftY","dotShiftY","radius","setDotShiftY","forceFlagRight","nums","numsList","shiftLeft","shiftRight","pos","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","numShift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","setFretHandFinger","xOffset","getFretHandFinger","setOffsetX","setOffsetY","customGlyph","ledger","customGlyphCode","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","getYForNote","flagStyle","setStem","buildStem","buildFlag","hasFlag","flagCode","String","fromCodePoint","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","frac","beamIsUndefined","setStemDirection","getCenterGlyphX","getStaveNoteScale","flagHeight","stemExtensionOverride","setStemLength","stemOptions","_StaveNote_noteHeads","_StaveNote_sortedKeyProps","shiftRestVertical","rest","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","minL","stemMax","stemMin","maxL","isrest","voiceShift","getVoiceShiftWidth","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","useDefaultHeadX","calculateKeyProps","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","keyProperties","getNoteHeadBounds","noteStemHeight","flagX","flagY","bbFlag","resultLine","thisLine","val","isChord","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","restShift","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","noteHeads","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","Infinity","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","minX","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","drawNoteHeads","superStemExtension","midLineDistance","linesOverOctaveFromMidLine","spacingBetweenLines","shouldRenderStem","setNotes","cp1","cp2","textShiftX","firstXShift","lastXShift","tieSpacing","firstNote","firstIndexes","lastIndexes","isPartial","renderTie","firstYs","lastYs","lastX","firstX","firstY","lastY","topControlPointY","bottomControlPointY","renderTieText","centerX","getNotes","getTieStartX","getTieEndX","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","pow","softmax","tickValue","v","exp","addTickable","addTickables","gracenoteGroups","groupList","gracenoteGroup","isStavenote","formatWidth","groupShift","graceNotes","showSlur","slur","slurYShift","beams","formatter","Formatter","joinVoices","format","getMinTotalWidth","beamNotes","Beam","beamWidth","partialBeamLength","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","ornamentNoteTransition","ornamentAttack","ornamentAlignWithNoteHead","ornamentRelease","ornamentLeft","ornamentRight","ornamentYShift","ornamentArticulation","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","ornamentCodes","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","glyphX","glyphY","delayXShift","startX","nextContext","getNextContext","charCodeAt","Parenthesis","parenthesis","isHTMLCanvas","global","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","limit","context2D","curTransfrom","getTransform","canvas","clearRect","cls","attrs","openRotation","angleDegrees","translate","rotate","closeRotation","setTransform","setBackgroundFillStyle","blur","sqrt","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","dpr","sanitizeCanvasDims","rect","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","_SVGContext_instances","_SVGContext_getShadowStyle","ATTRIBUTES_TO_IGNORE","path","TWO_PI","SVGContext","precision","backgroundFillStyle","fontCSSString","svg","create","parent","pen","NaN","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadowAttributes","stateStack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBoxOrMinX","minY","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","y1","y2","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","measureTextElement","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","WeakSet","sa","Renderer","elementId","backend","background","renderer","lastContext","buildContext","Backends","CANVAS","SVG","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","extraXSpaceForDisplacedNotehead","glyphLine","numXShift","stringNumber","stemOffset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","drawDashedLine","strokes","strokeList","string","getPositions","strokeShift","allVoices","fontScale","addEndNote","noteEnd","yPositions","arrow","arrowY","textY","Type","BRUSH_DOWN","ROLL_DOWN","RASQUEDO_DOWN","BRUSH_UP","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","lineGlyph","el","Vibrato","vibratos","vibrato","setVibratoWidth","items","setVibratoCode","vx","vy","ModifierContext","members","formatted","member","getLeftShift","Clef","types","gClef","fClef","cClef","unpitchedPercussionClef1","sixStringTabClef","tab","gClef8va","fClef8va","gClef8vb","fClef8vb","getPoint","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","paddingForced","convertToGlyph","acc","nextAcc","prevGlyph","cancelKey","convertToCancelAccList","cancelAccList","differentTypes","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","getEndClef","getClef","symbolType","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSegnoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","drawCoda","textX","getVerticalBarWidth","section","drawRect","setStaveSection","headroom","_StaveTempo_durationToCode","TextJustification","VoltaType","tempo","shiftY","setTempo","shiftX","bpm","GLYPHS","mordentUpper","mordentLower","p","z","pedalOpen","pedalClose","caesuraStraight","caesuraCurved","breath","superscript","subscript","smooth","justification","Justification","getBottomLineY","label","vertHeight","BEGIN_END","TimeSignature","timeSpec","customPadding","validateArgs","isNumeric","topStartX","botStartX","topText","botText","topLine","bottomLine","setTimeSig","smallSig","timeSigCommon","timeSigCutCommon","timeSigPlusSmall","timeSigPlus","timeSigMinus","timeSigParensLeftSmall","timeSigParensLeft","timeSigParensRightSmall","timeSigParensRight","makeTimeSignatureGlyph","topDigits","botDigits","topWidth","getTimeSigCode","botWidth","numbers","test","assertIsValidTimeSig","getTimeSpec","getIsNumeric","setIsNumeric","drawAt","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","defaultPadding","endX","measure","endClef","verticalBarWidth","numLines","leftBar","rightBar","spacingBetweenLinesPx","spaceAboveStaffLn","spaceBelowStaffLn","topTextPosition","bottomTextPosition","lineConfig","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","setSection","staveSection","setStaveText","getLineForY","getYForGlyphs","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","lineNumber","setConfigForLines","linesConfiguration","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","topStave","bottomStave","texts","newType","values","textElement","SINGLE_RIGHT","THIN_DOUBLE","attachmentHeight","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","paddingBetween","accumulator","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","autoBeam","alignRests","applyAndGetBeams","formatToStave","tabstave","tabnotes","opts","notevoice","tabvoice","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","AlignRestsToNotes","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","Map","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","numNotes","bracketed","some","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","setNotesOccupied","fromCharCode","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nestedTupletYOffset","yPosition","modLines","modY","lineCheck","nn","bottomY","notationStartX","_Beam_stemDirection","_Beam_ticks","_Beam_yShift","_Beam_breakOnIndexes","_Beam_beamCount","_Beam_unbeamable","_Beam_forcedPartialDirections","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","timeSig","beatTotal","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","memo","unbeamable","durationToNumber","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beamRests","breaksOnFirstOrLastRest","beamMiddleOnly","breakOnStemChange","maintainStemDirections","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","showStemlets","secondaryBreaks","secondaryBreakTicks","flatBeams","flatBeamOffset","slope","stemWeight","maxSlope","minSlope","slopeIterations","slopeCost","stemletExtension","minFlatBeamOffset","breakSecondaryAt","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","nextTick","forcedBeamDirection","lookupDuration","prevNoteGetsBeam","nextNoteGetsBeam","noteGetsBeam","getBeamLines","tickOfDuration","beamStarted","beamLines","currentBeam","previousShouldBreak","tickTally","shouldBreak","beamAlone","beamDirection","lastBeam","drawStems","drawBeamLines","validBeamDurations","beamThickness","beamLine","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","Crescendo","extendLeft","extendRight","decrescendo","setHeight","setDecrescendo","decresc","beginX","halfHeight","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","positionEnd","invert","cps","renderCurve","cp0x","cp0y","controlPointSpacing","metric","endMetric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","buildAndAttach","setId","commaSeparatedRegex","setClass","defaults","easyScoreHook","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","setGlyph","SCALE","slash","ret","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","noteHeadWidth","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beamSlope","beamAngle","atan","iPointOnBeam","slashAngle","protrusionStemDeltaX","protrusionStemDeltaY","protrusionBeamDeltaX","protrusionBeamDeltaY","stem0X","KeySigNote","_MultiMeasureRest_hasPaddingLeft","_MultiMeasureRest_hasPaddingRight","_MultiMeasureRest_hasLineThickness","_MultiMeasureRest_hasSymbolSpacing","MultiMeasureRest","numberOfMeasures","xs","numberGlyphPoint","digit","lineThickness","symbolSpacing","useSymbols","showNumber","numberLine","serifThickness","semibreveRestGlyphScale","getXs","drawLine","drawSymbols","n4","n2","n1","elMiddle","elTop","yMiddle","drawPedalGlyph","pedal","MIXED","setCustomText","TEXT","customDepressText","customReleaseText","bracketHeight","textMarginRight","bracketLineWidth","depress","release","drawBracketed","prevX","prevY","isPedalDepressed","nextNoteIsSame","prevNoteIsSame","drawText","pedalDepress","pedalRelease","mixed","CODES","RepeatNote","drawArrowHead","roundedEnd","drawStartArrow","drawEndArrow","arrowheadLength","arrowheadAngle","textPositionVertical","TextVerticalPosition","textJustification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","bothArrows","distance","ratio","endY","startY","lineAngle","angle1","angle2","bottomX","startPosition","endPosition","firstIndex","lastIndex","upwardsSlope","noteheadWidth","verticalPosition","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","optionsDetails","debugNoteMetricsYs","part","formatBegModifiers","plotDebugging","plotMetrics","fretElement","positions","ghost","drawDots","drawStemThroughStave","setGhost","fret","tabToElement","getStemY","stemDownLine","stemStartLine","drawStemThrough","stemThrough","unusedStrings","stringsUsed","getUnusedStringGroups","stemLines","upStem","downStem","totalLines","strings","containsLastString","containsFirstString","lineYs","isTopBound","isBottomBound","getPartialStemLines","drawPositions","tabX","renderStem","TabStave","addTabGlyph","TextBracketPosition","stop","superscriptElement","showBracket","underlineSuperscript","mainWidth","mainHeight","superY","superWidth","superHeight","lineY","TextDynamics","sequence","glyphFontSize","letter","TimeSigNote","VibratoBracket","bracketData","stopX","Factory","renderQ","systems","initRenderer","staveSpace","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","chordSymbol","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","entries","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","ppt","pixelsPerTick","leftShiftPx","leftShiftTicks","rightShiftPx","rightShiftTicks","hairpinOptions","setRenderOptions","hairpin","dis","staffHeight","CRESC","DECRESC","SLIDE_UP","SLIDE_DOWN","firstFret","lastFret","slideY","ySpacing","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","integerToNote","Flow","BUILD","VERSION","DATE","hasKeySignature","getKeySignatures","Vex","cmp","eq","newArr","last","canvasId","startTime","Date","getTime","setMusicFont"],"sourceRoot":""}