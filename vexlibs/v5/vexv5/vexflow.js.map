{"version":3,"file":"vexflow.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/glyphs.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/bravura_glyphs.ts","webpack://Vex/./src/fonts/common_metrics.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/gonville_glyphs.ts","webpack://Vex/./src/fonts/leland_glyphs.ts","webpack://Vex/./src/fonts/petaluma_glyphs.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_bravura.ts","webpack://Vex/./src/fonts/load_finaleash.ts","webpack://Vex/./src/fonts/load_finalebroadway.ts","webpack://Vex/./src/fonts/load_finalemaestro.ts","webpack://Vex/./src/fonts/load_gonville.ts","webpack://Vex/./src/fonts/load_gootville.ts","webpack://Vex/./src/fonts/load_petaluma.ts","webpack://Vex/./src/fonts/load_all.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./src/fonts/load_leland.ts","webpack://Vex/./src/fonts/load_musejazz.ts","webpack://Vex/./entry/vexflow.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let midLine = b + (a - b) / 2;\n    if (midLine % 2 > 0) {\n        midLine = roundN(midLine * 10, 5) / 10;\n    }\n    return midLine;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * @param s\n * @returns `s` with the first letter capitalized.\n */\nexport function upperFirst(s = '') {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n/**\n * Return the sum of an array of numbers.\n */\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// @author Joshua Koo / @zz85\n// @author @incompleteopus\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _Fraction_fractionA, _Fraction_fractionB;\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(compare).simplify();\n        const b = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionB).copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = __classPrivateFieldGet(Fraction, _a, \"f\", _Fraction_fractionA).copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n_a = Fraction;\n// Cached objects for comparisons.\n_Fraction_fractionA = { value: new Fraction() };\n_Fraction_fractionB = { value: new Fraction() };\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nexport class BoundingBox {\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const newX = this.x < that.x ? this.x : that.x;\n        const newY = this.y < that.y ? this.y : that.y;\n        const newW = Math.max(this.x + this.w, that.x + that.w) - newX;\n        const newH = Math.max(this.y + this.h, that.y + that.h) - newY;\n        this.x = newX;\n        this.y = newY;\n        this.w = newW;\n        this.h = newH;\n        return this;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fontFace = new FontFace(fontName, `url(${woffURL})`);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by your app.\n     * If fontNames is undefined, all fonts in Font.WEB_FONT_FILES will be loaded.\n     *\n     * For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts(fontNames) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allFiles = Font.WEB_FONT_FILES;\n            if (!fontNames) {\n                fontNames = Object.keys(allFiles);\n            }\n            const host = Font.WEB_FONT_HOST;\n            for (const fontName of fontNames) {\n                const fontPath = allFiles[fontName];\n                if (fontPath) {\n                    Font.loadWebFont(fontName, host + fontPath);\n                }\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Discussion on GDPR concerns:\n * https://www.jsdelivr.com/blog/how-the-german-courts-ruling-on-google-fonts-affects-jsdelivr-and-why-it-is-safe-to-use/\n *\n * You can also self host, and specify your own server URL here.\n */\nFont.WEB_FONT_HOST = 'https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.6/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    Academico: 'academico/Academico_0.902.woff2',\n    Bravura: 'bravura/Bravura_1.392.woff2',\n    BravuraText: 'bravura/BravuraText_1.393.woff2',\n    GonvilleSmufl: 'gonvillesmufl/GonvilleSmufl_1.100.woff2',\n    Gootville: 'gootville/Gootville_1.3.woff2',\n    GootvilleText: 'gootville/GootvilleText_1.2.woff2',\n    Leland: 'leland/Leland_0.75.woff2',\n    LelandText: 'leland/LelandText_0.75.woff2',\n    Petaluma: 'petaluma/Petaluma_1.065.woff2',\n    'Petaluma Script': 'petaluma/PetalumaScript_1.10_FS.woff2',\n    MuseJazz: 'musejazz/MuseJazz_1.0.woff2',\n    MuseJazzText: 'musejazz/MuseJazzText_1.0.woff2',\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff2',\n    FinaleAsh: 'finale/FinaleAsh_1.7.woff2',\n    FinaleAshText: 'finale/FinaleAshText_1.3.woff2',\n    FinaleJazz: 'finale/FinaleJazz_1.9.woff2',\n    FinaleJazzText: 'finale/FinaleJazzText_1.3.woff2',\n    FinaleBroadway: 'finale/FinaleBroadway_1.4.woff2',\n    FinaleBroadwayText: 'finale/FinaleBroadwayText_1.1.woff2',\n    FinaleMaestro: 'finale/FinaleMaestro_2.7.woff2',\n    FinaleMaestroText: 'finale/FinaleMaestroText-Regular_1.6.woff2',\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _a, _Registry_defaultRegistry;\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return __classPrivateFieldGet(Registry, _a, \"f\", _Registry_defaultRegistry);\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        __classPrivateFieldSet(Registry, _a, registry, \"f\", _Registry_defaultRegistry);\n    }\n    static disableDefaultRegistry() {\n        __classPrivateFieldSet(Registry, _a, undefined, \"f\", _Registry_defaultRegistry);\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _b, _c;\n        return (_c = (_b = this.index.id) === null || _b === void 0 ? void 0 : _b[id]) === null || _c === void 0 ? void 0 : _c[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const indexAttr = this.index[attribute];\n        if (indexAttr) {\n            const indexAttrVal = indexAttr[value];\n            if (indexAttrVal) {\n                const keys = Object.keys(indexAttrVal);\n                return keys.map((k) => indexAttrVal[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n_a = Registry;\n_Registry_defaultRegistry = { value: void 0 };\n","// This file was generated by `glyph_codes.js'\n// The enum includes all SMuFL glyphs, and a few others that VexFlow uses.\n// See the list of SMuFL glyphs:\n//   https://w3c.github.io/smufl/latest/tables/\n//   https://raw.githubusercontent.com/w3c/smufl/gh-pages/metadata/glyphnames.json\n// We renamed the two SMuFL names that start with a digit:\n//   4stringTabClef => fourStringTabClef\n//   6stringTabClef => sixStringTabClef\n//\nexport var Glyphs;\n(function (Glyphs) {\n    ////// SPECIAL GLYPHS ///////////////////////////////////////\n    // Null character\n    Glyphs[\"null\"] = \"\\0\";\n    ////// SMuFL GLYPHS /////////////////////////////////////////\n    // U+E06E  4-string tab clef\n    Glyphs[\"fourStringTabClef\"] = \"\\uE06E\";\n    // U+E06D  6-string tab clef\n    Glyphs[\"sixStringTabClef\"] = \"\\uE06D\";\n    // U+E30D  11 large diesis down, 3° down [46 EDO]\n    Glyphs[\"accSagittal11LargeDiesisDown\"] = \"\\uE30D\";\n    // U+E30C  11 large diesis up, (11L), (sharp less 11M), 3° up [46 EDO]\n    Glyphs[\"accSagittal11LargeDiesisUp\"] = \"\\uE30C\";\n    // U+E30B  11 medium diesis down, 1°[17 31] 2°46 down, 1/4-tone down\n    Glyphs[\"accSagittal11MediumDiesisDown\"] = \"\\uE30B\";\n    // U+E30A  11 medium diesis up, (11M), 1°[17 31] 2°46 up, 1/4-tone up\n    Glyphs[\"accSagittal11MediumDiesisUp\"] = \"\\uE30A\";\n    // U+E3AB  11:19 large diesis down\n    Glyphs[\"accSagittal11v19LargeDiesisDown\"] = \"\\uE3AB\";\n    // U+E3AA  11:19 large diesis up, (11:19L, apotome less 11:19M)\n    Glyphs[\"accSagittal11v19LargeDiesisUp\"] = \"\\uE3AA\";\n    // U+E3A3  11:19 medium diesis down\n    Glyphs[\"accSagittal11v19MediumDiesisDown\"] = \"\\uE3A3\";\n    // U+E3A2  11:19 medium diesis up, (11:19M, 11M plus 19s)\n    Glyphs[\"accSagittal11v19MediumDiesisUp\"] = \"\\uE3A2\";\n    // U+E397  11:49 comma down\n    Glyphs[\"accSagittal11v49CommaDown\"] = \"\\uE397\";\n    // U+E396  11:49 comma up, (11:49C, 11M less 49C)\n    Glyphs[\"accSagittal11v49CommaUp\"] = \"\\uE396\";\n    // U+E395  143 comma down\n    Glyphs[\"accSagittal143CommaDown\"] = \"\\uE395\";\n    // U+E394  143 comma up, (143C, 13L less 11M)\n    Glyphs[\"accSagittal143CommaUp\"] = \"\\uE394\";\n    // U+E343  17 comma down\n    Glyphs[\"accSagittal17CommaDown\"] = \"\\uE343\";\n    // U+E342  17 comma up, (17C)\n    Glyphs[\"accSagittal17CommaUp\"] = \"\\uE342\";\n    // U+E393  17 kleisma down\n    Glyphs[\"accSagittal17KleismaDown\"] = \"\\uE393\";\n    // U+E392  17 kleisma up, (17k)\n    Glyphs[\"accSagittal17KleismaUp\"] = \"\\uE392\";\n    // U+E399  19 comma down\n    Glyphs[\"accSagittal19CommaDown\"] = \"\\uE399\";\n    // U+E398  19 comma up, (19C)\n    Glyphs[\"accSagittal19CommaUp\"] = \"\\uE398\";\n    // U+E391  19 schisma down\n    Glyphs[\"accSagittal19SchismaDown\"] = \"\\uE391\";\n    // U+E390  19 schisma up, (19s)\n    Glyphs[\"accSagittal19SchismaUp\"] = \"\\uE390\";\n    // U+E3F5  1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down\n    Glyphs[\"accSagittal1MinaDown\"] = \"\\uE3F5\";\n    // U+E3F4  1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up\n    Glyphs[\"accSagittal1MinaUp\"] = \"\\uE3F4\";\n    // U+E3F9  1 tina down, 7²⋅11⋅19/5-schismina down, 0.17 cents down\n    Glyphs[\"accSagittal1TinaDown\"] = \"\\uE3F9\";\n    // U+E3F8  1 tina up, 7²⋅11⋅19/5-schismina up, 0.17 cents up\n    Glyphs[\"accSagittal1TinaUp\"] = \"\\uE3F8\";\n    // U+E371  23 comma down, 2° down [96 EDO], 1/8-tone down\n    Glyphs[\"accSagittal23CommaDown\"] = \"\\uE371\";\n    // U+E370  23 comma up, (23C), 2° up [96 EDO], 1/8-tone up\n    Glyphs[\"accSagittal23CommaUp\"] = \"\\uE370\";\n    // U+E39F  23 small diesis down\n    Glyphs[\"accSagittal23SmallDiesisDown\"] = \"\\uE39F\";\n    // U+E39E  23 small diesis up, (23S)\n    Glyphs[\"accSagittal23SmallDiesisUp\"] = \"\\uE39E\";\n    // U+E307  25 small diesis down, 2° down [53 EDO]\n    Glyphs[\"accSagittal25SmallDiesisDown\"] = \"\\uE307\";\n    // U+E306  25 small diesis up, (25S, ~5:13S, ~37S, 5C plus 5C), 2° up [53 EDO]\n    Glyphs[\"accSagittal25SmallDiesisUp\"] = \"\\uE306\";\n    // U+E3F7  2 minas down, 65/77-schismina down, 0.83 cents down\n    Glyphs[\"accSagittal2MinasDown\"] = \"\\uE3F7\";\n    // U+E3F6  2 minas up, 65/77-schismina up, 0.83 cents up\n    Glyphs[\"accSagittal2MinasUp\"] = \"\\uE3F6\";\n    // U+E3FB  2 tinas down, 1/(7³⋅17)-schismina down, 0.30 cents down\n    Glyphs[\"accSagittal2TinasDown\"] = \"\\uE3FB\";\n    // U+E3FA  2 tinas up, 1/(7³⋅17)-schismina up, 0.30 cents up\n    Glyphs[\"accSagittal2TinasUp\"] = \"\\uE3FA\";\n    // U+E30F  35 large diesis down, 2° down [50 EDO], 5/18-tone down\n    Glyphs[\"accSagittal35LargeDiesisDown\"] = \"\\uE30F\";\n    // U+E30E  35 large diesis up, (35L, ~13L, ~125L, sharp less 35M), 2°50 up\n    Glyphs[\"accSagittal35LargeDiesisUp\"] = \"\\uE30E\";\n    // U+E309  35 medium diesis down, 1°[50] 2°[27] down, 2/9-tone down\n    Glyphs[\"accSagittal35MediumDiesisDown\"] = \"\\uE309\";\n    // U+E308  35 medium diesis up, (35M, ~13M, ~125M, 5C plus 7C), 2/9-tone up\n    Glyphs[\"accSagittal35MediumDiesisUp\"] = \"\\uE308\";\n    // U+E3FD  3 tinas down, 1 mina down, 1/(5⋅7⋅13)-schismina down, 0.42 cents down\n    Glyphs[\"accSagittal3TinasDown\"] = \"\\uE3FD\";\n    // U+E3FC  3 tinas up, 1 mina up, 1/(5⋅7⋅13)-schismina up, 0.42 cents up\n    Glyphs[\"accSagittal3TinasUp\"] = \"\\uE3FC\";\n    // U+E3A9  49 large diesis down\n    Glyphs[\"accSagittal49LargeDiesisDown\"] = \"\\uE3A9\";\n    // U+E3A8  49 large diesis up, (49L, ~31L, apotome less 49M)\n    Glyphs[\"accSagittal49LargeDiesisUp\"] = \"\\uE3A8\";\n    // U+E3A5  49 medium diesis down\n    Glyphs[\"accSagittal49MediumDiesisDown\"] = \"\\uE3A5\";\n    // U+E3A4  49 medium diesis up, (49M, ~31M, 7C plus 7C)\n    Glyphs[\"accSagittal49MediumDiesisUp\"] = \"\\uE3A4\";\n    // U+E39D  49 small diesis down\n    Glyphs[\"accSagittal49SmallDiesisDown\"] = \"\\uE39D\";\n    // U+E39C  49 small diesis up, (49S, ~31S)\n    Glyphs[\"accSagittal49SmallDiesisUp\"] = \"\\uE39C\";\n    // U+E3FF  4 tinas down, 5²⋅11²/7-schismina down, 0.57 cents down\n    Glyphs[\"accSagittal4TinasDown\"] = \"\\uE3FF\";\n    // U+E3FE  4 tinas up, 5²⋅11²/7-schismina up, 0.57 cents up\n    Glyphs[\"accSagittal4TinasUp\"] = \"\\uE3FE\";\n    // U+E345  55 comma down, 3° down [96 EDO], 3/16-tone down\n    Glyphs[\"accSagittal55CommaDown\"] = \"\\uE345\";\n    // U+E344  55 comma up, (55C, 11M less 5C), 3°up [96 EDO], 3/16-tone up\n    Glyphs[\"accSagittal55CommaUp\"] = \"\\uE344\";\n    // U+E303  5 comma down, 1° down [22 27 29 34 41 46 53 96 EDOs], 1/12-tone down\n    Glyphs[\"accSagittal5CommaDown\"] = \"\\uE303\";\n    // U+E302  5 comma up, (5C), 1° up [22 27 29 34 41 46 53 96 EDOs], 1/12-tone up\n    Glyphs[\"accSagittal5CommaUp\"] = \"\\uE302\";\n    // U+E401  5 tinas down, 7⁴/25-schismina down, 0.72 cents down\n    Glyphs[\"accSagittal5TinasDown\"] = \"\\uE401\";\n    // U+E400  5 tinas up, 7⁴/25-schismina up, 0.72 cents up\n    Glyphs[\"accSagittal5TinasUp\"] = \"\\uE400\";\n    // U+E349  5:11 small diesis down\n    Glyphs[\"accSagittal5v11SmallDiesisDown\"] = \"\\uE349\";\n    // U+E348  5:11 small diesis up, (5:11S, ~7:13S, ~11:17S, 5:7k plus 7:11C)\n    Glyphs[\"accSagittal5v11SmallDiesisUp\"] = \"\\uE348\";\n    // U+E3AD  5:13 large diesis down\n    Glyphs[\"accSagittal5v13LargeDiesisDown\"] = \"\\uE3AD\";\n    // U+E3AC  5:13 large diesis up, (5:13L, ~37L, apotome less 5:13M)\n    Glyphs[\"accSagittal5v13LargeDiesisUp\"] = \"\\uE3AC\";\n    // U+E3A1  5:13 medium diesis down\n    Glyphs[\"accSagittal5v13MediumDiesisDown\"] = \"\\uE3A1\";\n    // U+E3A0  5:13 medium diesis up, (5:13M, ~37M, 5C plus 13C)\n    Glyphs[\"accSagittal5v13MediumDiesisUp\"] = \"\\uE3A0\";\n    // U+E373  5:19 comma down, 1/20-tone down\n    Glyphs[\"accSagittal5v19CommaDown\"] = \"\\uE373\";\n    // U+E372  5:19 comma up, (5:19C, 5C plus 19s), 1/20-tone up\n    Glyphs[\"accSagittal5v19CommaUp\"] = \"\\uE372\";\n    // U+E375  5:23 small diesis down, 2° down [60 EDO], 1/5-tone down\n    Glyphs[\"accSagittal5v23SmallDiesisDown\"] = \"\\uE375\";\n    // U+E374  5:23 small diesis up, (5:23S, 5C plus 23C), 2° up [60 EDO], 1/5-tone up\n    Glyphs[\"accSagittal5v23SmallDiesisUp\"] = \"\\uE374\";\n    // U+E3A7  5:49 medium diesis down\n    Glyphs[\"accSagittal5v49MediumDiesisDown\"] = \"\\uE3A7\";\n    // U+E3A6  5:49 medium diesis up, (5:49M, half apotome)\n    Glyphs[\"accSagittal5v49MediumDiesisUp\"] = \"\\uE3A6\";\n    // U+E301  5:7 kleisma down\n    Glyphs[\"accSagittal5v7KleismaDown\"] = \"\\uE301\";\n    // U+E300  5:7 kleisma up, (5:7k, ~11:13k, 7C less 5C)\n    Glyphs[\"accSagittal5v7KleismaUp\"] = \"\\uE300\";\n    // U+E403  6 tinas down, 2 minas down, 65/77-schismina down, 0.83 cents down\n    Glyphs[\"accSagittal6TinasDown\"] = \"\\uE403\";\n    // U+E402  6 tinas up, 2 minas up, 65/77-schismina up, 0.83 cents up\n    Glyphs[\"accSagittal6TinasUp\"] = \"\\uE402\";\n    // U+E305  7 comma down, 1° down [43 EDO], 2° down [72 EDO], 1/6-tone down\n    Glyphs[\"accSagittal7CommaDown\"] = \"\\uE305\";\n    // U+E304  7 comma up, (7C), 1° up [43 EDO], 2° up [72 EDO], 1/6-tone up\n    Glyphs[\"accSagittal7CommaUp\"] = \"\\uE304\";\n    // U+E405  7 tinas down, 7/(5²⋅17)-schismina down, 1.02 cents down\n    Glyphs[\"accSagittal7TinasDown\"] = \"\\uE405\";\n    // U+E404  7 tinas up, 7/(5²⋅17)-schismina up, 1.02 cents up\n    Glyphs[\"accSagittal7TinasUp\"] = \"\\uE404\";\n    // U+E347  7:11 comma down, 1° down [60 EDO], 1/10-tone down\n    Glyphs[\"accSagittal7v11CommaDown\"] = \"\\uE347\";\n    // U+E346  7:11 comma up, (7:11C, ~13:17S, ~29S, 11L less 7C), 1° up [60 EDO]\n    Glyphs[\"accSagittal7v11CommaUp\"] = \"\\uE346\";\n    // U+E341  7:11 kleisma down\n    Glyphs[\"accSagittal7v11KleismaDown\"] = \"\\uE341\";\n    // U+E340  7:11 kleisma up, (7:11k, ~29k)\n    Glyphs[\"accSagittal7v11KleismaUp\"] = \"\\uE340\";\n    // U+E39B  7:19 comma down\n    Glyphs[\"accSagittal7v19CommaDown\"] = \"\\uE39B\";\n    // U+E39A  7:19 comma up, (7:19C, 7C less 19s)\n    Glyphs[\"accSagittal7v19CommaUp\"] = \"\\uE39A\";\n    // U+E407  8 tinas down, 11⋅17/(5²⋅7)-schismina down, 1.14 cents down\n    Glyphs[\"accSagittal8TinasDown\"] = \"\\uE407\";\n    // U+E406  8 tinas up, 11⋅17/(5²⋅7)-schismina up, 1.14 cents up\n    Glyphs[\"accSagittal8TinasUp\"] = \"\\uE406\";\n    // U+E409  9 tinas down, 1/(7²⋅11)-schismina down, 1.26 cents down\n    Glyphs[\"accSagittal9TinasDown\"] = \"\\uE409\";\n    // U+E408  9 tinas up, 1/(7²⋅11)-schismina up, 1.26 cents up\n    Glyphs[\"accSagittal9TinasUp\"] = \"\\uE408\";\n    // U+E3F2  Acute, 5 schisma up (5s), 2 cents up\n    Glyphs[\"accSagittalAcute\"] = \"\\uE3F2\";\n    // U+E335  Double flat, (2 apotomes down)[almost all EDOs], whole-tone down\n    Glyphs[\"accSagittalDoubleFlat\"] = \"\\uE335\";\n    // U+E3E9  Double flat 11:49C-up\n    Glyphs[\"accSagittalDoubleFlat11v49CUp\"] = \"\\uE3E9\";\n    // U+E3EB  Double flat 143C-up\n    Glyphs[\"accSagittalDoubleFlat143CUp\"] = \"\\uE3EB\";\n    // U+E365  Double flat 17C-up\n    Glyphs[\"accSagittalDoubleFlat17CUp\"] = \"\\uE365\";\n    // U+E3ED  Double flat 17k-up\n    Glyphs[\"accSagittalDoubleFlat17kUp\"] = \"\\uE3ED\";\n    // U+E3E7  Double flat 19C-up\n    Glyphs[\"accSagittalDoubleFlat19CUp\"] = \"\\uE3E7\";\n    // U+E3EF  Double flat 19s-up\n    Glyphs[\"accSagittalDoubleFlat19sUp\"] = \"\\uE3EF\";\n    // U+E387  Double flat 23C-up, 14° down [96 EDO], 7/8-tone down\n    Glyphs[\"accSagittalDoubleFlat23CUp\"] = \"\\uE387\";\n    // U+E3E1  Double flat 23S-up\n    Glyphs[\"accSagittalDoubleFlat23SUp\"] = \"\\uE3E1\";\n    // U+E32D  Double flat 25S-up, 8°down [53 EDO]\n    Glyphs[\"accSagittalDoubleFlat25SUp\"] = \"\\uE32D\";\n    // U+E3E3  Double flat 49S-up\n    Glyphs[\"accSagittalDoubleFlat49SUp\"] = \"\\uE3E3\";\n    // U+E363  Double flat 55C-up, 13° down [96 EDO], 13/16-tone down\n    Glyphs[\"accSagittalDoubleFlat55CUp\"] = \"\\uE363\";\n    // U+E331  Double flat 5C-up, 5°[22 29] 7°[34 41] 9°53 down, 11/12 tone down\n    Glyphs[\"accSagittalDoubleFlat5CUp\"] = \"\\uE331\";\n    // U+E35F  Double flat 5:11S-up\n    Glyphs[\"accSagittalDoubleFlat5v11SUp\"] = \"\\uE35F\";\n    // U+E385  Double flat 5:19C-up, 19/20-tone down\n    Glyphs[\"accSagittalDoubleFlat5v19CUp\"] = \"\\uE385\";\n    // U+E383  Double flat 5:23S-up, 8° down [60 EDO], 4/5-tone down\n    Glyphs[\"accSagittalDoubleFlat5v23SUp\"] = \"\\uE383\";\n    // U+E333  Double flat 5:7k-up\n    Glyphs[\"accSagittalDoubleFlat5v7kUp\"] = \"\\uE333\";\n    // U+E32F  Double flat 7C-up, 5° down [43 EDO], 10° down [72 EDO], 5/6-tone down\n    Glyphs[\"accSagittalDoubleFlat7CUp\"] = \"\\uE32F\";\n    // U+E361  Double flat 7:11C-up, 9° down [60 EDO], 9/10-tone down\n    Glyphs[\"accSagittalDoubleFlat7v11CUp\"] = \"\\uE361\";\n    // U+E367  Double flat 7:11k-up\n    Glyphs[\"accSagittalDoubleFlat7v11kUp\"] = \"\\uE367\";\n    // U+E3E5  Double flat 7:19C-up\n    Glyphs[\"accSagittalDoubleFlat7v19CUp\"] = \"\\uE3E5\";\n    // U+E334  Double sharp, (2 apotomes up)[almost all EDOs], whole-tone up\n    Glyphs[\"accSagittalDoubleSharp\"] = \"\\uE334\";\n    // U+E3E8  Double sharp 11:49C-down\n    Glyphs[\"accSagittalDoubleSharp11v49CDown\"] = \"\\uE3E8\";\n    // U+E3EA  Double sharp 143C-down\n    Glyphs[\"accSagittalDoubleSharp143CDown\"] = \"\\uE3EA\";\n    // U+E364  Double sharp 17C-down\n    Glyphs[\"accSagittalDoubleSharp17CDown\"] = \"\\uE364\";\n    // U+E3EC  Double sharp 17k-down\n    Glyphs[\"accSagittalDoubleSharp17kDown\"] = \"\\uE3EC\";\n    // U+E3E6  Double sharp 19C-down\n    Glyphs[\"accSagittalDoubleSharp19CDown\"] = \"\\uE3E6\";\n    // U+E3EE  Double sharp 19s-down\n    Glyphs[\"accSagittalDoubleSharp19sDown\"] = \"\\uE3EE\";\n    // U+E386  Double sharp 23C-down, 14°up [96 EDO], 7/8-tone up\n    Glyphs[\"accSagittalDoubleSharp23CDown\"] = \"\\uE386\";\n    // U+E3E0  Double sharp 23S-down\n    Glyphs[\"accSagittalDoubleSharp23SDown\"] = \"\\uE3E0\";\n    // U+E32C  Double sharp 25S-down, 8°up [53 EDO]\n    Glyphs[\"accSagittalDoubleSharp25SDown\"] = \"\\uE32C\";\n    // U+E3E2  Double sharp 49S-down\n    Glyphs[\"accSagittalDoubleSharp49SDown\"] = \"\\uE3E2\";\n    // U+E362  Double sharp 55C-down, 13° up [96 EDO], 13/16-tone up\n    Glyphs[\"accSagittalDoubleSharp55CDown\"] = \"\\uE362\";\n    // U+E330  Double sharp 5C-down, 5°[22 29] 7°[34 41] 9°53 up, 11/12 tone up\n    Glyphs[\"accSagittalDoubleSharp5CDown\"] = \"\\uE330\";\n    // U+E35E  Double sharp 5:11S-down\n    Glyphs[\"accSagittalDoubleSharp5v11SDown\"] = \"\\uE35E\";\n    // U+E384  Double sharp 5:19C-down, 19/20-tone up\n    Glyphs[\"accSagittalDoubleSharp5v19CDown\"] = \"\\uE384\";\n    // U+E382  Double sharp 5:23S-down, 8° up [60 EDO], 4/5-tone up\n    Glyphs[\"accSagittalDoubleSharp5v23SDown\"] = \"\\uE382\";\n    // U+E332  Double sharp 5:7k-down\n    Glyphs[\"accSagittalDoubleSharp5v7kDown\"] = \"\\uE332\";\n    // U+E32E  Double sharp 7C-down, 5°[43] 10°[72] up, 5/6-tone up\n    Glyphs[\"accSagittalDoubleSharp7CDown\"] = \"\\uE32E\";\n    // U+E360  Double sharp 7:11C-down, 9° up [60 EDO], 9/10-tone up\n    Glyphs[\"accSagittalDoubleSharp7v11CDown\"] = \"\\uE360\";\n    // U+E366  Double sharp 7:11k-down\n    Glyphs[\"accSagittalDoubleSharp7v11kDown\"] = \"\\uE366\";\n    // U+E3E4  Double sharp 7:19C-down\n    Glyphs[\"accSagittalDoubleSharp7v19CDown\"] = \"\\uE3E4\";\n    // U+E319  Flat, (apotome down)[almost all EDOs], 1/2-tone down\n    Glyphs[\"accSagittalFlat\"] = \"\\uE319\";\n    // U+E329  Flat 11L-down, 8° up [46 EDO]\n    Glyphs[\"accSagittalFlat11LDown\"] = \"\\uE329\";\n    // U+E327  Flat 11M-down, 3° down [17 31 EDOs], 7° down [46 EDO], 3/4-tone down\n    Glyphs[\"accSagittalFlat11MDown\"] = \"\\uE327\";\n    // U+E3DB  Flat 11:19L-down\n    Glyphs[\"accSagittalFlat11v19LDown\"] = \"\\uE3DB\";\n    // U+E3D3  Flat 11:19M-down\n    Glyphs[\"accSagittalFlat11v19MDown\"] = \"\\uE3D3\";\n    // U+E3C7  Flat 11:49C-down\n    Glyphs[\"accSagittalFlat11v49CDown\"] = \"\\uE3C7\";\n    // U+E3B9  Flat 11:49C-up\n    Glyphs[\"accSagittalFlat11v49CUp\"] = \"\\uE3B9\";\n    // U+E3C5  Flat 143C-down\n    Glyphs[\"accSagittalFlat143CDown\"] = \"\\uE3C5\";\n    // U+E3BB  Flat 143C-up\n    Glyphs[\"accSagittalFlat143CUp\"] = \"\\uE3BB\";\n    // U+E357  Flat 17C-down\n    Glyphs[\"accSagittalFlat17CDown\"] = \"\\uE357\";\n    // U+E351  Flat 17C-up\n    Glyphs[\"accSagittalFlat17CUp\"] = \"\\uE351\";\n    // U+E3C3  Flat 17k-down\n    Glyphs[\"accSagittalFlat17kDown\"] = \"\\uE3C3\";\n    // U+E3BD  Flat 17k-up\n    Glyphs[\"accSagittalFlat17kUp\"] = \"\\uE3BD\";\n    // U+E3C9  Flat 19C-down\n    Glyphs[\"accSagittalFlat19CDown\"] = \"\\uE3C9\";\n    // U+E3B7  Flat 19C-up\n    Glyphs[\"accSagittalFlat19CUp\"] = \"\\uE3B7\";\n    // U+E3C1  Flat 19s-down\n    Glyphs[\"accSagittalFlat19sDown\"] = \"\\uE3C1\";\n    // U+E3BF  Flat 19s-up\n    Glyphs[\"accSagittalFlat19sUp\"] = \"\\uE3BF\";\n    // U+E37D  Flat 23C-down, 10° down [96 EDO], 5/8-tone down\n    Glyphs[\"accSagittalFlat23CDown\"] = \"\\uE37D\";\n    // U+E37B  Flat 23C-up, 6° down [96 EDO], 3/8-tone down\n    Glyphs[\"accSagittalFlat23CUp\"] = \"\\uE37B\";\n    // U+E3CF  Flat 23S-down\n    Glyphs[\"accSagittalFlat23SDown\"] = \"\\uE3CF\";\n    // U+E3B1  Flat 23S-up\n    Glyphs[\"accSagittalFlat23SUp\"] = \"\\uE3B1\";\n    // U+E323  Flat 25S-down, 7° down [53 EDO]\n    Glyphs[\"accSagittalFlat25SDown\"] = \"\\uE323\";\n    // U+E311  Flat 25S-up, 3° down [53 EDO]\n    Glyphs[\"accSagittalFlat25SUp\"] = \"\\uE311\";\n    // U+E32B  Flat 35L-down, 5° down [50 EDO]\n    Glyphs[\"accSagittalFlat35LDown\"] = \"\\uE32B\";\n    // U+E325  Flat 35M-down, 4° down [50 EDO], 6° down [27 EDO], 13/18-tone down\n    Glyphs[\"accSagittalFlat35MDown\"] = \"\\uE325\";\n    // U+E3D9  Flat 49L-down\n    Glyphs[\"accSagittalFlat49LDown\"] = \"\\uE3D9\";\n    // U+E3D5  Flat 49M-down\n    Glyphs[\"accSagittalFlat49MDown\"] = \"\\uE3D5\";\n    // U+E3CD  Flat 49S-down\n    Glyphs[\"accSagittalFlat49SDown\"] = \"\\uE3CD\";\n    // U+E3B3  Flat 49S-up\n    Glyphs[\"accSagittalFlat49SUp\"] = \"\\uE3B3\";\n    // U+E359  Flat 55C-down, 11° down [96 EDO], 11/16-tone down\n    Glyphs[\"accSagittalFlat55CDown\"] = \"\\uE359\";\n    // U+E34F  Flat 55C-up, 5° down [96 EDO], 5/16-tone down\n    Glyphs[\"accSagittalFlat55CUp\"] = \"\\uE34F\";\n    // U+E31F  Flat 5C-down, 4°[22 29] 5°[27 34 41] 6°[39 46 53] down, 7/12-tone down\n    Glyphs[\"accSagittalFlat5CDown\"] = \"\\uE31F\";\n    // U+E315  Flat 5C-up, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°72 7°[96] down, 5/12-tone down\n    Glyphs[\"accSagittalFlat5CUp\"] = \"\\uE315\";\n    // U+E35D  Flat 5:11S-down\n    Glyphs[\"accSagittalFlat5v11SDown\"] = \"\\uE35D\";\n    // U+E34B  Flat 5:11S-up\n    Glyphs[\"accSagittalFlat5v11SUp\"] = \"\\uE34B\";\n    // U+E3DD  Flat 5:13L-down\n    Glyphs[\"accSagittalFlat5v13LDown\"] = \"\\uE3DD\";\n    // U+E3D1  Flat 5:13M-down\n    Glyphs[\"accSagittalFlat5v13MDown\"] = \"\\uE3D1\";\n    // U+E37F  Flat 5:19C-down, 11/20-tone down\n    Glyphs[\"accSagittalFlat5v19CDown\"] = \"\\uE37F\";\n    // U+E379  Flat 5:19C-up, 9/20-tone down\n    Glyphs[\"accSagittalFlat5v19CUp\"] = \"\\uE379\";\n    // U+E381  Flat 5:23S-down, 7° down [60 EDO], 7/10-tone down\n    Glyphs[\"accSagittalFlat5v23SDown\"] = \"\\uE381\";\n    // U+E377  Flat 5:23S-up, 3° down [60 EDO], 3/10-tone down\n    Glyphs[\"accSagittalFlat5v23SUp\"] = \"\\uE377\";\n    // U+E3D7  Flat 5:49M-down\n    Glyphs[\"accSagittalFlat5v49MDown\"] = \"\\uE3D7\";\n    // U+E31D  Flat 5:7k-down\n    Glyphs[\"accSagittalFlat5v7kDown\"] = \"\\uE31D\";\n    // U+E317  Flat 5:7k-up\n    Glyphs[\"accSagittalFlat5v7kUp\"] = \"\\uE317\";\n    // U+E321  Flat 7C-down, 4° down [43 EDO], 8° down [72 EDO], 2/3-tone down\n    Glyphs[\"accSagittalFlat7CDown\"] = \"\\uE321\";\n    // U+E313  Flat 7C-up, 2° down [43 EDO], 4° down [72 EDO], 1/3-tone down\n    Glyphs[\"accSagittalFlat7CUp\"] = \"\\uE313\";\n    // U+E35B  Flat 7:11C-down, 6° down [60 EDO], 3/5- tone down\n    Glyphs[\"accSagittalFlat7v11CDown\"] = \"\\uE35B\";\n    // U+E34D  Flat 7:11C-up, 4° down [60 EDO], 2/5-tone down\n    Glyphs[\"accSagittalFlat7v11CUp\"] = \"\\uE34D\";\n    // U+E355  Flat 7:11k-down\n    Glyphs[\"accSagittalFlat7v11kDown\"] = \"\\uE355\";\n    // U+E353  Flat 7:11k-up\n    Glyphs[\"accSagittalFlat7v11kUp\"] = \"\\uE353\";\n    // U+E3CB  Flat 7:19C-down\n    Glyphs[\"accSagittalFlat7v19CDown\"] = \"\\uE3CB\";\n    // U+E3B5  Flat 7:19C-up\n    Glyphs[\"accSagittalFlat7v19CUp\"] = \"\\uE3B5\";\n    // U+E40B  Fractional tina down, 77/(5⋅37)-schismina down, 0.08 cents down\n    Glyphs[\"accSagittalFractionalTinaDown\"] = \"\\uE40B\";\n    // U+E40A  Fractional tina up, 77/(5⋅37)-schismina up, 0.08 cents up\n    Glyphs[\"accSagittalFractionalTinaUp\"] = \"\\uE40A\";\n    // U+E3F3  Grave, 5 schisma down, 2 cents down\n    Glyphs[\"accSagittalGrave\"] = \"\\uE3F3\";\n    // U+E3F1  Shaft down, (natural for use with only diacritics down)\n    Glyphs[\"accSagittalShaftDown\"] = \"\\uE3F1\";\n    // U+E3F0  Shaft up, (natural for use with only diacritics up)\n    Glyphs[\"accSagittalShaftUp\"] = \"\\uE3F0\";\n    // U+E318  Sharp, (apotome up)[almost all EDOs], 1/2-tone up\n    Glyphs[\"accSagittalSharp\"] = \"\\uE318\";\n    // U+E328  Sharp 11L-up, 8° up [46 EDO]\n    Glyphs[\"accSagittalSharp11LUp\"] = \"\\uE328\";\n    // U+E326  Sharp 11M-up, 3° up [17 31 EDOs], 7° up [46 EDO], 3/4-tone up\n    Glyphs[\"accSagittalSharp11MUp\"] = \"\\uE326\";\n    // U+E3DA  Sharp 11:19L-up\n    Glyphs[\"accSagittalSharp11v19LUp\"] = \"\\uE3DA\";\n    // U+E3D2  Sharp 11:19M-up\n    Glyphs[\"accSagittalSharp11v19MUp\"] = \"\\uE3D2\";\n    // U+E3B8  Sharp 11:49C-down\n    Glyphs[\"accSagittalSharp11v49CDown\"] = \"\\uE3B8\";\n    // U+E3C6  Sharp 11:49C-up\n    Glyphs[\"accSagittalSharp11v49CUp\"] = \"\\uE3C6\";\n    // U+E3BA  Sharp 143C-down\n    Glyphs[\"accSagittalSharp143CDown\"] = \"\\uE3BA\";\n    // U+E3C4  Sharp 143C-up\n    Glyphs[\"accSagittalSharp143CUp\"] = \"\\uE3C4\";\n    // U+E350  Sharp 17C-down\n    Glyphs[\"accSagittalSharp17CDown\"] = \"\\uE350\";\n    // U+E356  Sharp 17C-up\n    Glyphs[\"accSagittalSharp17CUp\"] = \"\\uE356\";\n    // U+E3BC  Sharp 17k-down\n    Glyphs[\"accSagittalSharp17kDown\"] = \"\\uE3BC\";\n    // U+E3C2  Sharp 17k-up\n    Glyphs[\"accSagittalSharp17kUp\"] = \"\\uE3C2\";\n    // U+E3B6  Sharp 19C-down\n    Glyphs[\"accSagittalSharp19CDown\"] = \"\\uE3B6\";\n    // U+E3C8  Sharp 19C-up\n    Glyphs[\"accSagittalSharp19CUp\"] = \"\\uE3C8\";\n    // U+E3BE  Sharp 19s-down\n    Glyphs[\"accSagittalSharp19sDown\"] = \"\\uE3BE\";\n    // U+E3C0  Sharp 19s-up\n    Glyphs[\"accSagittalSharp19sUp\"] = \"\\uE3C0\";\n    // U+E37A  Sharp 23C-down, 6° up [96 EDO], 3/8-tone up\n    Glyphs[\"accSagittalSharp23CDown\"] = \"\\uE37A\";\n    // U+E37C  Sharp 23C-up, 10° up [96 EDO], 5/8-tone up\n    Glyphs[\"accSagittalSharp23CUp\"] = \"\\uE37C\";\n    // U+E3B0  Sharp 23S-down\n    Glyphs[\"accSagittalSharp23SDown\"] = \"\\uE3B0\";\n    // U+E3CE  Sharp 23S-up\n    Glyphs[\"accSagittalSharp23SUp\"] = \"\\uE3CE\";\n    // U+E310  Sharp 25S-down, 3° up [53 EDO]\n    Glyphs[\"accSagittalSharp25SDown\"] = \"\\uE310\";\n    // U+E322  Sharp 25S-up, 7° up [53 EDO]\n    Glyphs[\"accSagittalSharp25SUp\"] = \"\\uE322\";\n    // U+E32A  Sharp 35L-up, 5° up [50 EDO]\n    Glyphs[\"accSagittalSharp35LUp\"] = \"\\uE32A\";\n    // U+E324  Sharp 35M-up, 4° up [50 EDO], 6° up [27 EDO], 13/18-tone up\n    Glyphs[\"accSagittalSharp35MUp\"] = \"\\uE324\";\n    // U+E3D8  Sharp 49L-up\n    Glyphs[\"accSagittalSharp49LUp\"] = \"\\uE3D8\";\n    // U+E3D4  Sharp 49M-up\n    Glyphs[\"accSagittalSharp49MUp\"] = \"\\uE3D4\";\n    // U+E3B2  Sharp 49S-down\n    Glyphs[\"accSagittalSharp49SDown\"] = \"\\uE3B2\";\n    // U+E3CC  Sharp 49S-up\n    Glyphs[\"accSagittalSharp49SUp\"] = \"\\uE3CC\";\n    // U+E34E  Sharp 55C-down, 5° up [96 EDO], 5/16-tone up\n    Glyphs[\"accSagittalSharp55CDown\"] = \"\\uE34E\";\n    // U+E358  Sharp 55C-up, 11° up [96 EDO], 11/16-tone up\n    Glyphs[\"accSagittalSharp55CUp\"] = \"\\uE358\";\n    // U+E314  Sharp 5C-down, 2°[22 29] 3°[27 34 41] 4°[39 46 53] 5°[72] 7°[96] up, 5/12-tone up\n    Glyphs[\"accSagittalSharp5CDown\"] = \"\\uE314\";\n    // U+E31E  Sharp 5C-up, 4°[22 29] 5°[27 34 41] 6°[39 46 53] up, 7/12-tone up\n    Glyphs[\"accSagittalSharp5CUp\"] = \"\\uE31E\";\n    // U+E34A  Sharp 5:11S-down\n    Glyphs[\"accSagittalSharp5v11SDown\"] = \"\\uE34A\";\n    // U+E35C  Sharp 5:11S-up\n    Glyphs[\"accSagittalSharp5v11SUp\"] = \"\\uE35C\";\n    // U+E3DC  Sharp 5:13L-up\n    Glyphs[\"accSagittalSharp5v13LUp\"] = \"\\uE3DC\";\n    // U+E3D0  Sharp 5:13M-up\n    Glyphs[\"accSagittalSharp5v13MUp\"] = \"\\uE3D0\";\n    // U+E378  Sharp 5:19C-down, 9/20-tone up\n    Glyphs[\"accSagittalSharp5v19CDown\"] = \"\\uE378\";\n    // U+E37E  Sharp 5:19C-up, 11/20-tone up\n    Glyphs[\"accSagittalSharp5v19CUp\"] = \"\\uE37E\";\n    // U+E376  Sharp 5:23S-down, 3° up [60 EDO], 3/10-tone up\n    Glyphs[\"accSagittalSharp5v23SDown\"] = \"\\uE376\";\n    // U+E380  Sharp 5:23S-up, 7° up [60 EDO], 7/10-tone up\n    Glyphs[\"accSagittalSharp5v23SUp\"] = \"\\uE380\";\n    // U+E3D6  Sharp 5:49M-up, (one and a half apotomes)\n    Glyphs[\"accSagittalSharp5v49MUp\"] = \"\\uE3D6\";\n    // U+E316  Sharp 5:7k-down\n    Glyphs[\"accSagittalSharp5v7kDown\"] = \"\\uE316\";\n    // U+E31C  Sharp 5:7k-up\n    Glyphs[\"accSagittalSharp5v7kUp\"] = \"\\uE31C\";\n    // U+E312  Sharp 7C-down, 2° up [43 EDO], 4° up [72 EDO], 1/3-tone up\n    Glyphs[\"accSagittalSharp7CDown\"] = \"\\uE312\";\n    // U+E320  Sharp 7C-up, 4° up [43 EDO], 8° up [72 EDO], 2/3-tone up\n    Glyphs[\"accSagittalSharp7CUp\"] = \"\\uE320\";\n    // U+E34C  Sharp 7:11C-down, 4° up [60 EDO], 2/5-tone up\n    Glyphs[\"accSagittalSharp7v11CDown\"] = \"\\uE34C\";\n    // U+E35A  Sharp 7:11C-up, 6° up [60 EDO], 3/5- tone up\n    Glyphs[\"accSagittalSharp7v11CUp\"] = \"\\uE35A\";\n    // U+E352  Sharp 7:11k-down\n    Glyphs[\"accSagittalSharp7v11kDown\"] = \"\\uE352\";\n    // U+E354  Sharp 7:11k-up\n    Glyphs[\"accSagittalSharp7v11kUp\"] = \"\\uE354\";\n    // U+E3B4  Sharp 7:19C-down\n    Glyphs[\"accSagittalSharp7v19CDown\"] = \"\\uE3B4\";\n    // U+E3CA  Sharp 7:19C-up\n    Glyphs[\"accSagittalSharp7v19CUp\"] = \"\\uE3CA\";\n    // U+E31A  Unused\n    Glyphs[\"accSagittalUnused1\"] = \"\\uE31A\";\n    // U+E31B  Unused\n    Glyphs[\"accSagittalUnused2\"] = \"\\uE31B\";\n    // U+E3DE  Unused\n    Glyphs[\"accSagittalUnused3\"] = \"\\uE3DE\";\n    // U+E3DF  Unused\n    Glyphs[\"accSagittalUnused4\"] = \"\\uE3DF\";\n    // U+E8CA  Combining accordion coupler dot\n    Glyphs[\"accdnCombDot\"] = \"\\uE8CA\";\n    // U+E8C8  Combining left hand, 2 ranks, empty\n    Glyphs[\"accdnCombLH2RanksEmpty\"] = \"\\uE8C8\";\n    // U+E8C9  Combining left hand, 3 ranks, empty (square)\n    Glyphs[\"accdnCombLH3RanksEmptySquare\"] = \"\\uE8C9\";\n    // U+E8C6  Combining right hand, 3 ranks, empty\n    Glyphs[\"accdnCombRH3RanksEmpty\"] = \"\\uE8C6\";\n    // U+E8C7  Combining right hand, 4 ranks, empty\n    Glyphs[\"accdnCombRH4RanksEmpty\"] = \"\\uE8C7\";\n    // U+E079  Diatonic accordion clef\n    Glyphs[\"accdnDiatonicClef\"] = \"\\uE079\";\n    // U+E8BC  Left hand, 2 ranks, 16' stop (round)\n    Glyphs[\"accdnLH2Ranks16Round\"] = \"\\uE8BC\";\n    // U+E8BD  Left hand, 2 ranks, 8' stop + 16' stop (round)\n    Glyphs[\"accdnLH2Ranks8Plus16Round\"] = \"\\uE8BD\";\n    // U+E8BB  Left hand, 2 ranks, 8' stop (round)\n    Glyphs[\"accdnLH2Ranks8Round\"] = \"\\uE8BB\";\n    // U+E8C0  Left hand, 2 ranks, full master (round)\n    Glyphs[\"accdnLH2RanksFullMasterRound\"] = \"\\uE8C0\";\n    // U+E8BF  Left hand, 2 ranks, master + 16' stop (round)\n    Glyphs[\"accdnLH2RanksMasterPlus16Round\"] = \"\\uE8BF\";\n    // U+E8BE  Left hand, 2 ranks, master (round)\n    Glyphs[\"accdnLH2RanksMasterRound\"] = \"\\uE8BE\";\n    // U+E8C4  Left hand, 3 ranks, 2' stop + 8' stop (square)\n    Glyphs[\"accdnLH3Ranks2Plus8Square\"] = \"\\uE8C4\";\n    // U+E8C2  Left hand, 3 ranks, 2' stop (square)\n    Glyphs[\"accdnLH3Ranks2Square\"] = \"\\uE8C2\";\n    // U+E8C1  Left hand, 3 ranks, 8' stop (square)\n    Glyphs[\"accdnLH3Ranks8Square\"] = \"\\uE8C1\";\n    // U+E8C3  Left hand, 3 ranks, double 8' stop (square)\n    Glyphs[\"accdnLH3RanksDouble8Square\"] = \"\\uE8C3\";\n    // U+E8C5  Left hand, 3 ranks, 2' stop + double 8' stop (tutti) (square)\n    Glyphs[\"accdnLH3RanksTuttiSquare\"] = \"\\uE8C5\";\n    // U+E8CC  Pull\n    Glyphs[\"accdnPull\"] = \"\\uE8CC\";\n    // U+E8CB  Push\n    Glyphs[\"accdnPush\"] = \"\\uE8CB\";\n    // U+E8AC  Right hand, 3 ranks, 8' stop + upper tremolo 8' stop + 16' stop (accordion)\n    Glyphs[\"accdnRH3RanksAccordion\"] = \"\\uE8AC\";\n    // U+E8A8  Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop (authentic musette)\n    Glyphs[\"accdnRH3RanksAuthenticMusette\"] = \"\\uE8A8\";\n    // U+E8AB  Right hand, 3 ranks, 8' stop + 16' stop (bandoneón)\n    Glyphs[\"accdnRH3RanksBandoneon\"] = \"\\uE8AB\";\n    // U+E8A4  Right hand, 3 ranks, 16' stop (bassoon)\n    Glyphs[\"accdnRH3RanksBassoon\"] = \"\\uE8A4\";\n    // U+E8A1  Right hand, 3 ranks, 8' stop (clarinet)\n    Glyphs[\"accdnRH3RanksClarinet\"] = \"\\uE8A1\";\n    // U+E8B1  Right hand, 3 ranks, lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop\n    Glyphs[\"accdnRH3RanksDoubleTremoloLower8ve\"] = \"\\uE8B1\";\n    // U+E8B2  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksDoubleTremoloUpper8ve\"] = \"\\uE8B2\";\n    // U+E8B3  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + 8' stop + upper tremolo 8' stop + 16' stop\n    Glyphs[\"accdnRH3RanksFullFactory\"] = \"\\uE8B3\";\n    // U+E8AA  Right hand, 3 ranks, 4' stop + 8' stop + 16' stop (harmonium)\n    Glyphs[\"accdnRH3RanksHarmonium\"] = \"\\uE8AA\";\n    // U+E8A7  Right hand, 3 ranks, 4' stop + 8' stop + upper tremolo 8' stop (imitation musette)\n    Glyphs[\"accdnRH3RanksImitationMusette\"] = \"\\uE8A7\";\n    // U+E8A3  Right hand, 3 ranks, lower tremolo 8' stop\n    Glyphs[\"accdnRH3RanksLowerTremolo8\"] = \"\\uE8A3\";\n    // U+E8AD  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop + 16' stop (master)\n    Glyphs[\"accdnRH3RanksMaster\"] = \"\\uE8AD\";\n    // U+E8A5  Right hand, 3 ranks, 4' stop + 8' stop (oboe)\n    Glyphs[\"accdnRH3RanksOboe\"] = \"\\uE8A5\";\n    // U+E8A9  Right hand, 3 ranks, 4' stop + 16' stop (organ)\n    Glyphs[\"accdnRH3RanksOrgan\"] = \"\\uE8A9\";\n    // U+E8A0  Right hand, 3 ranks, 4' stop (piccolo)\n    Glyphs[\"accdnRH3RanksPiccolo\"] = \"\\uE8A0\";\n    // U+E8AF  Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop + 16' stop\n    Glyphs[\"accdnRH3RanksTremoloLower8ve\"] = \"\\uE8AF\";\n    // U+E8B0  Right hand, 3 ranks, 4' stop + lower tremolo 8' stop + upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksTremoloUpper8ve\"] = \"\\uE8B0\";\n    // U+E8AE  Right hand, 3 ranks, lower tremolo 8' stop + upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksTwoChoirs\"] = \"\\uE8AE\";\n    // U+E8A2  Right hand, 3 ranks, upper tremolo 8' stop\n    Glyphs[\"accdnRH3RanksUpperTremolo8\"] = \"\\uE8A2\";\n    // U+E8A6  Right hand, 3 ranks, 8' stop + upper tremolo 8' stop (violin)\n    Glyphs[\"accdnRH3RanksViolin\"] = \"\\uE8A6\";\n    // U+E8B5  Right hand, 4 ranks, alto\n    Glyphs[\"accdnRH4RanksAlto\"] = \"\\uE8B5\";\n    // U+E8BA  Right hand, 4 ranks, bass/alto\n    Glyphs[\"accdnRH4RanksBassAlto\"] = \"\\uE8BA\";\n    // U+E8B7  Right hand, 4 ranks, master\n    Glyphs[\"accdnRH4RanksMaster\"] = \"\\uE8B7\";\n    // U+E8B8  Right hand, 4 ranks, soft bass\n    Glyphs[\"accdnRH4RanksSoftBass\"] = \"\\uE8B8\";\n    // U+E8B9  Right hand, 4 ranks, soft tenor\n    Glyphs[\"accdnRH4RanksSoftTenor\"] = \"\\uE8B9\";\n    // U+E8B4  Right hand, 4 ranks, soprano\n    Glyphs[\"accdnRH4RanksSoprano\"] = \"\\uE8B4\";\n    // U+E8B6  Right hand, 4 ranks, tenor\n    Glyphs[\"accdnRH4RanksTenor\"] = \"\\uE8B6\";\n    // U+E8CD  Ricochet (2 tones)\n    Glyphs[\"accdnRicochet2\"] = \"\\uE8CD\";\n    // U+E8CE  Ricochet (3 tones)\n    Glyphs[\"accdnRicochet3\"] = \"\\uE8CE\";\n    // U+E8CF  Ricochet (4 tones)\n    Glyphs[\"accdnRicochet4\"] = \"\\uE8CF\";\n    // U+E8D0  Ricochet (5 tones)\n    Glyphs[\"accdnRicochet5\"] = \"\\uE8D0\";\n    // U+E8D1  Ricochet (6 tones)\n    Glyphs[\"accdnRicochet6\"] = \"\\uE8D1\";\n    // U+E8D2  Combining ricochet for stem (2 tones)\n    Glyphs[\"accdnRicochetStem2\"] = \"\\uE8D2\";\n    // U+E8D3  Combining ricochet for stem (3 tones)\n    Glyphs[\"accdnRicochetStem3\"] = \"\\uE8D3\";\n    // U+E8D4  Combining ricochet for stem (4 tones)\n    Glyphs[\"accdnRicochetStem4\"] = \"\\uE8D4\";\n    // U+E8D5  Combining ricochet for stem (5 tones)\n    Glyphs[\"accdnRicochetStem5\"] = \"\\uE8D5\";\n    // U+E8D6  Combining ricochet for stem (6 tones)\n    Glyphs[\"accdnRicochetStem6\"] = \"\\uE8D6\";\n    // U+E454  1-comma flat\n    Glyphs[\"accidental1CommaFlat\"] = \"\\uE454\";\n    // U+E450  1-comma sharp\n    Glyphs[\"accidental1CommaSharp\"] = \"\\uE450\";\n    // U+E455  2-comma flat\n    Glyphs[\"accidental2CommaFlat\"] = \"\\uE455\";\n    // U+E451  2-comma sharp\n    Glyphs[\"accidental2CommaSharp\"] = \"\\uE451\";\n    // U+E456  3-comma flat\n    Glyphs[\"accidental3CommaFlat\"] = \"\\uE456\";\n    // U+E452  3-comma sharp\n    Glyphs[\"accidental3CommaSharp\"] = \"\\uE452\";\n    // U+E457  4-comma flat\n    Glyphs[\"accidental4CommaFlat\"] = \"\\uE457\";\n    // U+E453  5-comma sharp\n    Glyphs[\"accidental5CommaSharp\"] = \"\\uE453\";\n    // U+E27B  Arrow down (lower by one quarter-tone)\n    Glyphs[\"accidentalArrowDown\"] = \"\\uE27B\";\n    // U+E27A  Arrow up (raise by one quarter-tone)\n    Glyphs[\"accidentalArrowUp\"] = \"\\uE27A\";\n    // U+E442  Bakiye (flat)\n    Glyphs[\"accidentalBakiyeFlat\"] = \"\\uE442\";\n    // U+E445  Bakiye (sharp)\n    Glyphs[\"accidentalBakiyeSharp\"] = \"\\uE445\";\n    // U+E26C  Accidental bracket, left\n    Glyphs[\"accidentalBracketLeft\"] = \"\\uE26C\";\n    // U+E26D  Accidental bracket, right\n    Glyphs[\"accidentalBracketRight\"] = \"\\uE26D\";\n    // U+E440  Büyük mücenneb (flat)\n    Glyphs[\"accidentalBuyukMucennebFlat\"] = \"\\uE440\";\n    // U+E447  Büyük mücenneb (sharp)\n    Glyphs[\"accidentalBuyukMucennebSharp\"] = \"\\uE447\";\n    // U+E2EF  Combining close curly brace\n    Glyphs[\"accidentalCombiningCloseCurlyBrace\"] = \"\\uE2EF\";\n    // U+E2E6  Combining lower by one 17-limit schisma\n    Glyphs[\"accidentalCombiningLower17Schisma\"] = \"\\uE2E6\";\n    // U+E2E8  Combining lower by one 19-limit schisma\n    Glyphs[\"accidentalCombiningLower19Schisma\"] = \"\\uE2E8\";\n    // U+E2EA  Combining lower by one 23-limit comma\n    Glyphs[\"accidentalCombiningLower23Limit29LimitComma\"] = \"\\uE2EA\";\n    // U+EE50  Combining lower by one 29-limit comma\n    Glyphs[\"accidentalCombiningLower29LimitComma\"] = \"\\uEE50\";\n    // U+E2EC  Combining lower by one 31-limit schisma\n    Glyphs[\"accidentalCombiningLower31Schisma\"] = \"\\uE2EC\";\n    // U+EE52  Combining lower by one 37-limit quartertone\n    Glyphs[\"accidentalCombiningLower37Quartertone\"] = \"\\uEE52\";\n    // U+EE54  Combining lower by one 41-limit comma\n    Glyphs[\"accidentalCombiningLower41Comma\"] = \"\\uEE54\";\n    // U+EE56  Combining lower by one 43-limit comma\n    Glyphs[\"accidentalCombiningLower43Comma\"] = \"\\uEE56\";\n    // U+EE58  Combining lower by one 47-limit quartertone\n    Glyphs[\"accidentalCombiningLower47Quartertone\"] = \"\\uEE58\";\n    // U+E2F7  Combining lower by one 53-limit comma\n    Glyphs[\"accidentalCombiningLower53LimitComma\"] = \"\\uE2F7\";\n    // U+E2EE  Combining open curly brace\n    Glyphs[\"accidentalCombiningOpenCurlyBrace\"] = \"\\uE2EE\";\n    // U+E2E7  Combining raise by one 17-limit schisma\n    Glyphs[\"accidentalCombiningRaise17Schisma\"] = \"\\uE2E7\";\n    // U+E2E9  Combining raise by one 19-limit schisma\n    Glyphs[\"accidentalCombiningRaise19Schisma\"] = \"\\uE2E9\";\n    // U+E2EB  Combining raise by one 23-limit comma\n    Glyphs[\"accidentalCombiningRaise23Limit29LimitComma\"] = \"\\uE2EB\";\n    // U+EE51  Combining raise by one 29-limit comma\n    Glyphs[\"accidentalCombiningRaise29LimitComma\"] = \"\\uEE51\";\n    // U+E2ED  Combining raise by one 31-limit schisma\n    Glyphs[\"accidentalCombiningRaise31Schisma\"] = \"\\uE2ED\";\n    // U+EE53  Combining raise by one 37-limit quartertone\n    Glyphs[\"accidentalCombiningRaise37Quartertone\"] = \"\\uEE53\";\n    // U+EE55  Combining raise by one 41-limit comma\n    Glyphs[\"accidentalCombiningRaise41Comma\"] = \"\\uEE55\";\n    // U+EE57  Combining raise by one 43-limit comma\n    Glyphs[\"accidentalCombiningRaise43Comma\"] = \"\\uEE57\";\n    // U+EE59  Combining raise by one 47-limit quartertone\n    Glyphs[\"accidentalCombiningRaise47Quartertone\"] = \"\\uEE59\";\n    // U+E2F8  Combining raise by one 53-limit comma\n    Glyphs[\"accidentalCombiningRaise53LimitComma\"] = \"\\uE2F8\";\n    // U+E47A  Syntonic/Didymus comma (80:81) down (Bosanquet)\n    Glyphs[\"accidentalCommaSlashDown\"] = \"\\uE47A\";\n    // U+E479  Syntonic/Didymus comma (80:81) up (Bosanquet)\n    Glyphs[\"accidentalCommaSlashUp\"] = \"\\uE479\";\n    // U+E264  Double flat\n    Glyphs[\"accidentalDoubleFlat\"] = \"\\uE264\";\n    // U+1D12B  Double flat\n    Glyphs[\"accidentalDoubleFlatAlternate\"] = \"\\uD834\\uDD2B\";\n    // U+ED30  Arabic double flat\n    Glyphs[\"accidentalDoubleFlatArabic\"] = \"\\uED30\";\n    // U+E2F0  Double flat equal tempered semitone\n    Glyphs[\"accidentalDoubleFlatEqualTempered\"] = \"\\uE2F0\";\n    // U+E2C0  Double flat lowered by one syntonic comma\n    Glyphs[\"accidentalDoubleFlatOneArrowDown\"] = \"\\uE2C0\";\n    // U+E2C5  Double flat raised by one syntonic comma\n    Glyphs[\"accidentalDoubleFlatOneArrowUp\"] = \"\\uE2C5\";\n    // U+E483  Reversed double flat\n    Glyphs[\"accidentalDoubleFlatReversed\"] = \"\\uE483\";\n    // U+E2D4  Double flat lowered by three syntonic commas\n    Glyphs[\"accidentalDoubleFlatThreeArrowsDown\"] = \"\\uE2D4\";\n    // U+E2D9  Double flat raised by three syntonic commas\n    Glyphs[\"accidentalDoubleFlatThreeArrowsUp\"] = \"\\uE2D9\";\n    // U+E485  Turned double flat\n    Glyphs[\"accidentalDoubleFlatTurned\"] = \"\\uE485\";\n    // U+E2CA  Double flat lowered by two syntonic commas\n    Glyphs[\"accidentalDoubleFlatTwoArrowsDown\"] = \"\\uE2CA\";\n    // U+E2CF  Double flat raised by two syntonic commas\n    Glyphs[\"accidentalDoubleFlatTwoArrowsUp\"] = \"\\uE2CF\";\n    // U+E263  Double sharp\n    Glyphs[\"accidentalDoubleSharp\"] = \"\\uE263\";\n    // U+1D12A  Double sharp\n    Glyphs[\"accidentalDoubleSharpAlternate\"] = \"\\uD834\\uDD2A\";\n    // U+ED38  Arabic double sharp\n    Glyphs[\"accidentalDoubleSharpArabic\"] = \"\\uED38\";\n    // U+E2F4  Double sharp equal tempered semitone\n    Glyphs[\"accidentalDoubleSharpEqualTempered\"] = \"\\uE2F4\";\n    // U+E2C4  Double sharp lowered by one syntonic comma\n    Glyphs[\"accidentalDoubleSharpOneArrowDown\"] = \"\\uE2C4\";\n    // U+E2C9  Double sharp raised by one syntonic comma\n    Glyphs[\"accidentalDoubleSharpOneArrowUp\"] = \"\\uE2C9\";\n    // U+E2D8  Double sharp lowered by three syntonic commas\n    Glyphs[\"accidentalDoubleSharpThreeArrowsDown\"] = \"\\uE2D8\";\n    // U+E2DD  Double sharp raised by three syntonic commas\n    Glyphs[\"accidentalDoubleSharpThreeArrowsUp\"] = \"\\uE2DD\";\n    // U+E2CE  Double sharp lowered by two syntonic commas\n    Glyphs[\"accidentalDoubleSharpTwoArrowsDown\"] = \"\\uE2CE\";\n    // U+E2D3  Double sharp raised by two syntonic commas\n    Glyphs[\"accidentalDoubleSharpTwoArrowsUp\"] = \"\\uE2D3\";\n    // U+E2FA  Enharmonically reinterpret accidental almost equal to\n    Glyphs[\"accidentalEnharmonicAlmostEqualTo\"] = \"\\uE2FA\";\n    // U+E2FB  Enharmonically reinterpret accidental equals\n    Glyphs[\"accidentalEnharmonicEquals\"] = \"\\uE2FB\";\n    // U+E2F9  Enharmonically reinterpret accidental tilde\n    Glyphs[\"accidentalEnharmonicTilde\"] = \"\\uE2F9\";\n    // U+E296  Filled reversed flat and flat\n    Glyphs[\"accidentalFilledReversedFlatAndFlat\"] = \"\\uE296\";\n    // U+E298  Filled reversed flat and flat with arrow down\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowDown\"] = \"\\uE298\";\n    // U+E297  Filled reversed flat and flat with arrow up\n    Glyphs[\"accidentalFilledReversedFlatAndFlatArrowUp\"] = \"\\uE297\";\n    // U+E293  Filled reversed flat with arrow down\n    Glyphs[\"accidentalFilledReversedFlatArrowDown\"] = \"\\uE293\";\n    // U+E292  Filled reversed flat with arrow up\n    Glyphs[\"accidentalFilledReversedFlatArrowUp\"] = \"\\uE292\";\n    // U+E279  Five-quarter-tones flat\n    Glyphs[\"accidentalFiveQuarterTonesFlatArrowDown\"] = \"\\uE279\";\n    // U+E276  Five-quarter-tones sharp\n    Glyphs[\"accidentalFiveQuarterTonesSharpArrowUp\"] = \"\\uE276\";\n    // U+E260  Flat\n    Glyphs[\"accidentalFlat\"] = \"\\uE260\";\n    // U+266D  Flat\n    Glyphs[\"accidentalFlatAlternate\"] = \"\\u266D\";\n    // U+ED32  Arabic half-tone flat\n    Glyphs[\"accidentalFlatArabic\"] = \"\\uED32\";\n    // U+E2F1  Flat equal tempered semitone\n    Glyphs[\"accidentalFlatEqualTempered\"] = \"\\uE2F1\";\n    // U+ED53  Lowered flat (Stockhausen)\n    Glyphs[\"accidentalFlatLoweredStockhausen\"] = \"\\uED53\";\n    // U+E2C1  Flat lowered by one syntonic comma\n    Glyphs[\"accidentalFlatOneArrowDown\"] = \"\\uE2C1\";\n    // U+E2C6  Flat raised by one syntonic comma\n    Glyphs[\"accidentalFlatOneArrowUp\"] = \"\\uE2C6\";\n    // U+ED52  Raised flat (Stockhausen)\n    Glyphs[\"accidentalFlatRaisedStockhausen\"] = \"\\uED52\";\n    // U+ED5C  Repeated flat, note on line (Stockhausen)\n    Glyphs[\"accidentalFlatRepeatedLineStockhausen\"] = \"\\uED5C\";\n    // U+ED5B  Repeated flat, note in space (Stockhausen)\n    Glyphs[\"accidentalFlatRepeatedSpaceStockhausen\"] = \"\\uED5B\";\n    // U+E2D5  Flat lowered by three syntonic commas\n    Glyphs[\"accidentalFlatThreeArrowsDown\"] = \"\\uE2D5\";\n    // U+E2DA  Flat raised by three syntonic commas\n    Glyphs[\"accidentalFlatThreeArrowsUp\"] = \"\\uE2DA\";\n    // U+E484  Turned flat\n    Glyphs[\"accidentalFlatTurned\"] = \"\\uE484\";\n    // U+E2CB  Flat lowered by two syntonic commas\n    Glyphs[\"accidentalFlatTwoArrowsDown\"] = \"\\uE2CB\";\n    // U+E2D0  Flat raised by two syntonic commas\n    Glyphs[\"accidentalFlatTwoArrowsUp\"] = \"\\uE2D0\";\n    // U+EE65  Quarter-tone higher (Alois Hába)\n    Glyphs[\"accidentalHabaFlatQuarterToneHigher\"] = \"\\uEE65\";\n    // U+EE69  Three quarter-tones lower (Alois Hába)\n    Glyphs[\"accidentalHabaFlatThreeQuarterTonesLower\"] = \"\\uEE69\";\n    // U+EE64  Quarter-tone higher (Alois Hába)\n    Glyphs[\"accidentalHabaQuarterToneHigher\"] = \"\\uEE64\";\n    // U+EE67  Quarter-tone lower (Alois Hába)\n    Glyphs[\"accidentalHabaQuarterToneLower\"] = \"\\uEE67\";\n    // U+EE68  Quarter-tone lower (Alois Hába)\n    Glyphs[\"accidentalHabaSharpQuarterToneLower\"] = \"\\uEE68\";\n    // U+EE66  Three quarter-tones higher (Alois Hába)\n    Glyphs[\"accidentalHabaSharpThreeQuarterTonesHigher\"] = \"\\uEE66\";\n    // U+E29A  Half sharp with arrow down\n    Glyphs[\"accidentalHalfSharpArrowDown\"] = \"\\uE29A\";\n    // U+E299  Half sharp with arrow up\n    Glyphs[\"accidentalHalfSharpArrowUp\"] = \"\\uE299\";\n    // U+E2B6  Thirteen (raise by 65:64)\n    Glyphs[\"accidentalJohnston13\"] = \"\\uE2B6\";\n    // U+E2B7  Inverted 13 (lower by 65:64)\n    Glyphs[\"accidentalJohnston31\"] = \"\\uE2B7\";\n    // U+E2B5  Down arrow (lower by 33:32)\n    Glyphs[\"accidentalJohnstonDown\"] = \"\\uE2B5\";\n    // U+E2B2  Inverted seven (raise by 36:35)\n    Glyphs[\"accidentalJohnstonEl\"] = \"\\uE2B2\";\n    // U+E2B1  Minus (lower by 81:80)\n    Glyphs[\"accidentalJohnstonMinus\"] = \"\\uE2B1\";\n    // U+E2B0  Plus (raise by 81:80)\n    Glyphs[\"accidentalJohnstonPlus\"] = \"\\uE2B0\";\n    // U+E2B3  Seven (lower by 36:35)\n    Glyphs[\"accidentalJohnstonSeven\"] = \"\\uE2B3\";\n    // U+E2B4  Up arrow (raise by 33:32)\n    Glyphs[\"accidentalJohnstonUp\"] = \"\\uE2B4\";\n    // U+E443  Koma (flat)\n    Glyphs[\"accidentalKomaFlat\"] = \"\\uE443\";\n    // U+E444  Koma (sharp)\n    Glyphs[\"accidentalKomaSharp\"] = \"\\uE444\";\n    // U+E460  Koron (quarter tone flat)\n    Glyphs[\"accidentalKoron\"] = \"\\uE460\";\n    // U+E441  Küçük mücenneb (flat)\n    Glyphs[\"accidentalKucukMucennebFlat\"] = \"\\uE441\";\n    // U+E446  Küçük mücenneb (sharp)\n    Glyphs[\"accidentalKucukMucennebSharp\"] = \"\\uE446\";\n    // U+E47D  Large double sharp\n    Glyphs[\"accidentalLargeDoubleSharp\"] = \"\\uE47D\";\n    // U+E2DE  Lower by one septimal comma\n    Glyphs[\"accidentalLowerOneSeptimalComma\"] = \"\\uE2DE\";\n    // U+E2E4  Lower by one tridecimal quartertone\n    Glyphs[\"accidentalLowerOneTridecimalQuartertone\"] = \"\\uE2E4\";\n    // U+E2E2  Lower by one undecimal quartertone\n    Glyphs[\"accidentalLowerOneUndecimalQuartertone\"] = \"\\uE2E2\";\n    // U+E2E0  Lower by two septimal commas\n    Glyphs[\"accidentalLowerTwoSeptimalCommas\"] = \"\\uE2E0\";\n    // U+ED51  Lowered (Stockhausen)\n    Glyphs[\"accidentalLoweredStockhausen\"] = \"\\uED51\";\n    // U+E284  Narrow reversed flat(quarter-tone flat)\n    Glyphs[\"accidentalNarrowReversedFlat\"] = \"\\uE284\";\n    // U+E285  Narrow reversed flat and flat(three-quarter-tones flat)\n    Glyphs[\"accidentalNarrowReversedFlatAndFlat\"] = \"\\uE285\";\n    // U+E261  Natural\n    Glyphs[\"accidentalNatural\"] = \"\\uE261\";\n    // U+266E  Natural\n    Glyphs[\"accidentalNaturalAlternate\"] = \"\\u266E\";\n    // U+ED34  Arabic natural\n    Glyphs[\"accidentalNaturalArabic\"] = \"\\uED34\";\n    // U+E2F2  Natural equal tempered semitone\n    Glyphs[\"accidentalNaturalEqualTempered\"] = \"\\uE2F2\";\n    // U+E267  Natural flat\n    Glyphs[\"accidentalNaturalFlat\"] = \"\\uE267\";\n    // U+ED55  Lowered natural (Stockhausen)\n    Glyphs[\"accidentalNaturalLoweredStockhausen\"] = \"\\uED55\";\n    // U+E2C2  Natural lowered by one syntonic comma\n    Glyphs[\"accidentalNaturalOneArrowDown\"] = \"\\uE2C2\";\n    // U+E2C7  Natural raised by one syntonic comma\n    Glyphs[\"accidentalNaturalOneArrowUp\"] = \"\\uE2C7\";\n    // U+ED54  Raised natural (Stockhausen)\n    Glyphs[\"accidentalNaturalRaisedStockhausen\"] = \"\\uED54\";\n    // U+E482  Reversed natural\n    Glyphs[\"accidentalNaturalReversed\"] = \"\\uE482\";\n    // U+E268  Natural sharp\n    Glyphs[\"accidentalNaturalSharp\"] = \"\\uE268\";\n    // U+E2D6  Natural lowered by three syntonic commas\n    Glyphs[\"accidentalNaturalThreeArrowsDown\"] = \"\\uE2D6\";\n    // U+E2DB  Natural raised by three syntonic commas\n    Glyphs[\"accidentalNaturalThreeArrowsUp\"] = \"\\uE2DB\";\n    // U+E2CC  Natural lowered by two syntonic commas\n    Glyphs[\"accidentalNaturalTwoArrowsDown\"] = \"\\uE2CC\";\n    // U+E2D1  Natural raised by two syntonic commas\n    Glyphs[\"accidentalNaturalTwoArrowsUp\"] = \"\\uE2D1\";\n    // U+E29C  One and a half sharps with arrow down\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowDown\"] = \"\\uE29C\";\n    // U+E29B  One and a half sharps with arrow up\n    Glyphs[\"accidentalOneAndAHalfSharpsArrowUp\"] = \"\\uE29B\";\n    // U+E48F  One-quarter-tone flat (Ferneyhough)\n    Glyphs[\"accidentalOneQuarterToneFlatFerneyhough\"] = \"\\uE48F\";\n    // U+ED59  One-quarter-tone flat (Stockhausen)\n    Glyphs[\"accidentalOneQuarterToneFlatStockhausen\"] = \"\\uED59\";\n    // U+E48E  One-quarter-tone sharp (Ferneyhough)\n    Glyphs[\"accidentalOneQuarterToneSharpFerneyhough\"] = \"\\uE48E\";\n    // U+ED58  One-quarter-tone sharp (Stockhausen)\n    Glyphs[\"accidentalOneQuarterToneSharpStockhausen\"] = \"\\uED58\";\n    // U+E48B  One-third-tone flat (Ferneyhough)\n    Glyphs[\"accidentalOneThirdToneFlatFerneyhough\"] = \"\\uE48B\";\n    // U+E48A  One-third-tone sharp (Ferneyhough)\n    Glyphs[\"accidentalOneThirdToneSharpFerneyhough\"] = \"\\uE48A\";\n    // U+E26A  Accidental parenthesis, left\n    Glyphs[\"accidentalParensLeft\"] = \"\\uE26A\";\n    // U+E26B  Accidental parenthesis, right\n    Glyphs[\"accidentalParensRight\"] = \"\\uE26B\";\n    // U+E2F5  Lower by one equal tempered quarter-tone\n    Glyphs[\"accidentalQuarterFlatEqualTempered\"] = \"\\uE2F5\";\n    // U+E2F6  Raise by one equal tempered quarter tone\n    Glyphs[\"accidentalQuarterSharpEqualTempered\"] = \"\\uE2F6\";\n    // U+E47F  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlat4\"] = \"\\uE47F\";\n    // U+1D133  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlat4Alternate\"] = \"\\uD834\\uDD33\";\n    // U+ED33  Arabic quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatArabic\"] = \"\\uED33\";\n    // U+E270  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatArrowUp\"] = \"\\uE270\";\n    // U+1D12C  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatArrowUpAlternate\"] = \"\\uD834\\uDD2C\";\n    // U+E480  Filled reversed flat (quarter-tone flat)\n    Glyphs[\"accidentalQuarterToneFlatFilledReversed\"] = \"\\uE480\";\n    // U+E273  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatNaturalArrowDown\"] = \"\\uE273\";\n    // U+1D12F  Quarter-tone flat\n    Glyphs[\"accidentalQuarterToneFlatNaturalArrowDownAlternate\"] = \"\\uD834\\uDD2F\";\n    // U+E478  Quarter tone flat (Penderecki)\n    Glyphs[\"accidentalQuarterToneFlatPenderecki\"] = \"\\uE478\";\n    // U+E280  Reversed flat (quarter-tone flat) (Stein)\n    Glyphs[\"accidentalQuarterToneFlatStein\"] = \"\\uE280\";\n    // U+E488  Quarter-tone flat (van Blankenburg)\n    Glyphs[\"accidentalQuarterToneFlatVanBlankenburg\"] = \"\\uE488\";\n    // U+E47E  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharp4\"] = \"\\uE47E\";\n    // U+1D132  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharp4Alternate\"] = \"\\uD834\\uDD32\";\n    // U+ED35  Arabic quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpArabic\"] = \"\\uED35\";\n    // U+E275  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpArrowDown\"] = \"\\uE275\";\n    // U+1D131  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpArrowDownAlternate\"] = \"\\uD834\\uDD31\";\n    // U+E472  Quarter tone sharp (Bussotti)\n    Glyphs[\"accidentalQuarterToneSharpBusotti\"] = \"\\uE472\";\n    // U+E272  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpNaturalArrowUp\"] = \"\\uE272\";\n    // U+1D12E  Quarter-tone sharp\n    Glyphs[\"accidentalQuarterToneSharpNaturalArrowUpAlternate\"] = \"\\uD834\\uDD2E\";\n    // U+E282  Half sharp (quarter-tone sharp) (Stein)\n    Glyphs[\"accidentalQuarterToneSharpStein\"] = \"\\uE282\";\n    // U+E475  Quarter tone sharp with wiggly tail\n    Glyphs[\"accidentalQuarterToneSharpWiggle\"] = \"\\uE475\";\n    // U+E2DF  Raise by one septimal comma\n    Glyphs[\"accidentalRaiseOneSeptimalComma\"] = \"\\uE2DF\";\n    // U+E2E5  Raise by one tridecimal quartertone\n    Glyphs[\"accidentalRaiseOneTridecimalQuartertone\"] = \"\\uE2E5\";\n    // U+E2E3  Raise by one undecimal quartertone\n    Glyphs[\"accidentalRaiseOneUndecimalQuartertone\"] = \"\\uE2E3\";\n    // U+E2E1  Raise by two septimal commas\n    Glyphs[\"accidentalRaiseTwoSeptimalCommas\"] = \"\\uE2E1\";\n    // U+ED50  Raised (Stockhausen)\n    Glyphs[\"accidentalRaisedStockhausen\"] = \"\\uED50\";\n    // U+E295  Reversed flat and flat with arrow down\n    Glyphs[\"accidentalReversedFlatAndFlatArrowDown\"] = \"\\uE295\";\n    // U+E294  Reversed flat and flat with arrow up\n    Glyphs[\"accidentalReversedFlatAndFlatArrowUp\"] = \"\\uE294\";\n    // U+E291  Reversed flat with arrow down\n    Glyphs[\"accidentalReversedFlatArrowDown\"] = \"\\uE291\";\n    // U+E290  Reversed flat with arrow up\n    Glyphs[\"accidentalReversedFlatArrowUp\"] = \"\\uE290\";\n    // U+E262  Sharp\n    Glyphs[\"accidentalSharp\"] = \"\\uE262\";\n    // U+266F  Sharp\n    Glyphs[\"accidentalSharpAlternate\"] = \"\\u266F\";\n    // U+ED36  Arabic half-tone sharp\n    Glyphs[\"accidentalSharpArabic\"] = \"\\uED36\";\n    // U+E2F3  Sharp equal tempered semitone\n    Glyphs[\"accidentalSharpEqualTempered\"] = \"\\uE2F3\";\n    // U+ED57  Lowered sharp (Stockhausen)\n    Glyphs[\"accidentalSharpLoweredStockhausen\"] = \"\\uED57\";\n    // U+E2C3  Sharp lowered by one syntonic comma\n    Glyphs[\"accidentalSharpOneArrowDown\"] = \"\\uE2C3\";\n    // U+E2C8  Sharp raised by one syntonic comma\n    Glyphs[\"accidentalSharpOneArrowUp\"] = \"\\uE2C8\";\n    // U+E473  One or three quarter tones sharp\n    Glyphs[\"accidentalSharpOneHorizontalStroke\"] = \"\\uE473\";\n    // U+ED56  Raised sharp (Stockhausen)\n    Glyphs[\"accidentalSharpRaisedStockhausen\"] = \"\\uED56\";\n    // U+ED5E  Repeated sharp, note on line (Stockhausen)\n    Glyphs[\"accidentalSharpRepeatedLineStockhausen\"] = \"\\uED5E\";\n    // U+ED5D  Repeated sharp, note in space (Stockhausen)\n    Glyphs[\"accidentalSharpRepeatedSpaceStockhausen\"] = \"\\uED5D\";\n    // U+E481  Reversed sharp\n    Glyphs[\"accidentalSharpReversed\"] = \"\\uE481\";\n    // U+E269  Sharp sharp\n    Glyphs[\"accidentalSharpSharp\"] = \"\\uE269\";\n    // U+E2D7  Sharp lowered by three syntonic commas\n    Glyphs[\"accidentalSharpThreeArrowsDown\"] = \"\\uE2D7\";\n    // U+E2DC  Sharp raised by three syntonic commas\n    Glyphs[\"accidentalSharpThreeArrowsUp\"] = \"\\uE2DC\";\n    // U+E2CD  Sharp lowered by two syntonic commas\n    Glyphs[\"accidentalSharpTwoArrowsDown\"] = \"\\uE2CD\";\n    // U+E2D2  Sharp raised by two syntonic commas\n    Glyphs[\"accidentalSharpTwoArrowsUp\"] = \"\\uE2D2\";\n    // U+E2A0  1/12 tone low\n    Glyphs[\"accidentalSims12Down\"] = \"\\uE2A0\";\n    // U+E2A3  1/12 tone high\n    Glyphs[\"accidentalSims12Up\"] = \"\\uE2A3\";\n    // U+E2A2  1/4 tone low\n    Glyphs[\"accidentalSims4Down\"] = \"\\uE2A2\";\n    // U+E2A5  1/4 tone high\n    Glyphs[\"accidentalSims4Up\"] = \"\\uE2A5\";\n    // U+E2A1  1/6 tone low\n    Glyphs[\"accidentalSims6Down\"] = \"\\uE2A1\";\n    // U+E2A4  1/6 tone high\n    Glyphs[\"accidentalSims6Up\"] = \"\\uE2A4\";\n    // U+E461  Sori (quarter tone sharp)\n    Glyphs[\"accidentalSori\"] = \"\\uE461\";\n    // U+E477  Byzantine-style Bakiye flat (Tavener)\n    Glyphs[\"accidentalTavenerFlat\"] = \"\\uE477\";\n    // U+E476  Byzantine-style Büyük mücenneb sharp (Tavener)\n    Glyphs[\"accidentalTavenerSharp\"] = \"\\uE476\";\n    // U+ED31  Arabic three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArabic\"] = \"\\uED31\";\n    // U+E271  Three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowDown\"] = \"\\uE271\";\n    // U+1D12D  Three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowDownAlternate\"] = \"\\uD834\\uDD2D\";\n    // U+E278  Three-quarter-tones flat\n    Glyphs[\"accidentalThreeQuarterTonesFlatArrowUp\"] = \"\\uE278\";\n    // U+E489  Three-quarter-tones flat (Couper)\n    Glyphs[\"accidentalThreeQuarterTonesFlatCouper\"] = \"\\uE489\";\n    // U+E486  Three-quarter-tones flat (Grisey)\n    Glyphs[\"accidentalThreeQuarterTonesFlatGrisey\"] = \"\\uE486\";\n    // U+E487  Three-quarter-tones flat (Tartini)\n    Glyphs[\"accidentalThreeQuarterTonesFlatTartini\"] = \"\\uE487\";\n    // U+E281  Reversed flat and flat (three-quarter-tones flat) (Zimmermann)\n    Glyphs[\"accidentalThreeQuarterTonesFlatZimmermann\"] = \"\\uE281\";\n    // U+ED37  Arabic three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArabic\"] = \"\\uED37\";\n    // U+E277  Three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowDown\"] = \"\\uE277\";\n    // U+E274  Three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowUp\"] = \"\\uE274\";\n    // U+1D130  Three-quarter-tones sharp\n    Glyphs[\"accidentalThreeQuarterTonesSharpArrowUpAlternate\"] = \"\\uD834\\uDD30\";\n    // U+E474  Three quarter tones sharp (Bussotti)\n    Glyphs[\"accidentalThreeQuarterTonesSharpBusotti\"] = \"\\uE474\";\n    // U+E283  One and a half sharps (three-quarter-tones sharp) (Stein)\n    Glyphs[\"accidentalThreeQuarterTonesSharpStein\"] = \"\\uE283\";\n    // U+ED5A  Three-quarter-tones sharp (Stockhausen)\n    Glyphs[\"accidentalThreeQuarterTonesSharpStockhausen\"] = \"\\uED5A\";\n    // U+E266  Triple flat\n    Glyphs[\"accidentalTripleFlat\"] = \"\\uE266\";\n    // U+E265  Triple sharp\n    Glyphs[\"accidentalTripleSharp\"] = \"\\uE265\";\n    // U+E48D  Two-third-tones flat (Ferneyhough)\n    Glyphs[\"accidentalTwoThirdTonesFlatFerneyhough\"] = \"\\uE48D\";\n    // U+E48C  Two-third-tones sharp (Ferneyhough)\n    Glyphs[\"accidentalTwoThirdTonesSharpFerneyhough\"] = \"\\uE48C\";\n    // U+EE61  Accidental down\n    Glyphs[\"accidentalUpsAndDownsDown\"] = \"\\uEE61\";\n    // U+EE63  Accidental less\n    Glyphs[\"accidentalUpsAndDownsLess\"] = \"\\uEE63\";\n    // U+EE62  Accidental more\n    Glyphs[\"accidentalUpsAndDownsMore\"] = \"\\uEE62\";\n    // U+EE60  Accidental up\n    Glyphs[\"accidentalUpsAndDownsUp\"] = \"\\uEE60\";\n    // U+E47C  Wilson minus (5 comma down)\n    Glyphs[\"accidentalWilsonMinus\"] = \"\\uE47C\";\n    // U+E47B  Wilson plus (5 comma up)\n    Glyphs[\"accidentalWilsonPlus\"] = \"\\uE47B\";\n    // U+E434  5/6 tone flat\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsFlat\"] = \"\\uE434\";\n    // U+E429  5/6 tone sharp\n    Glyphs[\"accidentalWyschnegradsky10TwelfthsSharp\"] = \"\\uE429\";\n    // U+E435  11/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsFlat\"] = \"\\uE435\";\n    // U+E42A  11/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky11TwelfthsSharp\"] = \"\\uE42A\";\n    // U+E42B  1/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsFlat\"] = \"\\uE42B\";\n    // U+E420  1/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky1TwelfthsSharp\"] = \"\\uE420\";\n    // U+E42C  1/6 tone flat\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsFlat\"] = \"\\uE42C\";\n    // U+E421  1/6 tone sharp\n    Glyphs[\"accidentalWyschnegradsky2TwelfthsSharp\"] = \"\\uE421\";\n    // U+E42D  1/4 tone flat\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsFlat\"] = \"\\uE42D\";\n    // U+E422  1/4 tone sharp\n    Glyphs[\"accidentalWyschnegradsky3TwelfthsSharp\"] = \"\\uE422\";\n    // U+E42E  1/3 tone flat\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsFlat\"] = \"\\uE42E\";\n    // U+E423  1/3 tone sharp\n    Glyphs[\"accidentalWyschnegradsky4TwelfthsSharp\"] = \"\\uE423\";\n    // U+E42F  5/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsFlat\"] = \"\\uE42F\";\n    // U+E424  5/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky5TwelfthsSharp\"] = \"\\uE424\";\n    // U+E430  1/2 tone flat\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsFlat\"] = \"\\uE430\";\n    // U+E425  1/2 tone sharp\n    Glyphs[\"accidentalWyschnegradsky6TwelfthsSharp\"] = \"\\uE425\";\n    // U+E431  7/12 tone flat\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsFlat\"] = \"\\uE431\";\n    // U+E426  7/12 tone sharp\n    Glyphs[\"accidentalWyschnegradsky7TwelfthsSharp\"] = \"\\uE426\";\n    // U+E432  2/3 tone flat\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsFlat\"] = \"\\uE432\";\n    // U+E427  2/3 tone sharp\n    Glyphs[\"accidentalWyschnegradsky8TwelfthsSharp\"] = \"\\uE427\";\n    // U+E433  3/4 tone flat\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsFlat\"] = \"\\uE433\";\n    // U+E428  3/4 tone sharp\n    Glyphs[\"accidentalWyschnegradsky9TwelfthsSharp\"] = \"\\uE428\";\n    // U+E470  One-third-tone sharp (Xenakis)\n    Glyphs[\"accidentalXenakisOneThirdToneSharp\"] = \"\\uE470\";\n    // U+E471  Two-third-tones sharp (Xenakis)\n    Glyphs[\"accidentalXenakisTwoThirdTonesSharp\"] = \"\\uE471\";\n    // U+E86A  Choralmelodie (Berg)\n    Glyphs[\"analyticsChoralmelodie\"] = \"\\uE86A\";\n    // U+E863  End of stimme\n    Glyphs[\"analyticsEndStimme\"] = \"\\uE863\";\n    // U+1D1A8  End of stimme\n    Glyphs[\"analyticsEndStimmeAlternate\"] = \"\\uD834\\uDDA8\";\n    // U+E86B  Hauptrhythmus (Berg)\n    Glyphs[\"analyticsHauptrhythmus\"] = \"\\uE86B\";\n    // U+E860  Hauptstimme\n    Glyphs[\"analyticsHauptstimme\"] = \"\\uE860\";\n    // U+1D1A6  Hauptstimme\n    Glyphs[\"analyticsHauptstimmeAlternate\"] = \"\\uD834\\uDDA6\";\n    // U+E869  Inversion 1\n    Glyphs[\"analyticsInversion1\"] = \"\\uE869\";\n    // U+E861  Nebenstimme\n    Glyphs[\"analyticsNebenstimme\"] = \"\\uE861\";\n    // U+1D1A7  Nebenstimme\n    Glyphs[\"analyticsNebenstimmeAlternate\"] = \"\\uD834\\uDDA7\";\n    // U+E862  Start of stimme\n    Glyphs[\"analyticsStartStimme\"] = \"\\uE862\";\n    // U+E864  Theme\n    Glyphs[\"analyticsTheme\"] = \"\\uE864\";\n    // U+E868  Theme 1\n    Glyphs[\"analyticsTheme1\"] = \"\\uE868\";\n    // U+E867  Inversion of theme\n    Glyphs[\"analyticsThemeInversion\"] = \"\\uE867\";\n    // U+E865  Retrograde of theme\n    Glyphs[\"analyticsThemeRetrograde\"] = \"\\uE865\";\n    // U+E866  Retrograde inversion of theme\n    Glyphs[\"analyticsThemeRetrogradeInversion\"] = \"\\uE866\";\n    // U+E63C  Arpeggiato\n    Glyphs[\"arpeggiato\"] = \"\\uE63C\";\n    // U+E635  Arpeggiato down\n    Glyphs[\"arpeggiatoDown\"] = \"\\uE635\";\n    // U+1D184  Arpeggiato down\n    Glyphs[\"arpeggiatoDownAlternate\"] = \"\\uD834\\uDD84\";\n    // U+E634  Arpeggiato up\n    Glyphs[\"arpeggiatoUp\"] = \"\\uE634\";\n    // U+1D183  Arpeggiato up\n    Glyphs[\"arpeggiatoUpAlternate\"] = \"\\uD834\\uDD83\";\n    // U+EB64  Black arrow down (S)\n    Glyphs[\"arrowBlackDown\"] = \"\\uEB64\";\n    // U+EB65  Black arrow down-left (SW)\n    Glyphs[\"arrowBlackDownLeft\"] = \"\\uEB65\";\n    // U+EB63  Black arrow down-right (SE)\n    Glyphs[\"arrowBlackDownRight\"] = \"\\uEB63\";\n    // U+EB66  Black arrow left (W)\n    Glyphs[\"arrowBlackLeft\"] = \"\\uEB66\";\n    // U+EB62  Black arrow right (E)\n    Glyphs[\"arrowBlackRight\"] = \"\\uEB62\";\n    // U+EB60  Black arrow up (N)\n    Glyphs[\"arrowBlackUp\"] = \"\\uEB60\";\n    // U+EB67  Black arrow up-left (NW)\n    Glyphs[\"arrowBlackUpLeft\"] = \"\\uEB67\";\n    // U+EB61  Black arrow up-right (NE)\n    Glyphs[\"arrowBlackUpRight\"] = \"\\uEB61\";\n    // U+EB74  Open arrow down (S)\n    Glyphs[\"arrowOpenDown\"] = \"\\uEB74\";\n    // U+EB75  Open arrow down-left (SW)\n    Glyphs[\"arrowOpenDownLeft\"] = \"\\uEB75\";\n    // U+EB73  Open arrow down-right (SE)\n    Glyphs[\"arrowOpenDownRight\"] = \"\\uEB73\";\n    // U+EB76  Open arrow left (W)\n    Glyphs[\"arrowOpenLeft\"] = \"\\uEB76\";\n    // U+EB72  Open arrow right (E)\n    Glyphs[\"arrowOpenRight\"] = \"\\uEB72\";\n    // U+EB70  Open arrow up (N)\n    Glyphs[\"arrowOpenUp\"] = \"\\uEB70\";\n    // U+EB77  Open arrow up-left (NW)\n    Glyphs[\"arrowOpenUpLeft\"] = \"\\uEB77\";\n    // U+EB71  Open arrow up-right (NE)\n    Glyphs[\"arrowOpenUpRight\"] = \"\\uEB71\";\n    // U+EB6C  White arrow down (S)\n    Glyphs[\"arrowWhiteDown\"] = \"\\uEB6C\";\n    // U+EB6D  White arrow down-left (SW)\n    Glyphs[\"arrowWhiteDownLeft\"] = \"\\uEB6D\";\n    // U+EB6B  White arrow down-right (SE)\n    Glyphs[\"arrowWhiteDownRight\"] = \"\\uEB6B\";\n    // U+EB6E  White arrow left (W)\n    Glyphs[\"arrowWhiteLeft\"] = \"\\uEB6E\";\n    // U+EB6A  White arrow right (E)\n    Glyphs[\"arrowWhiteRight\"] = \"\\uEB6A\";\n    // U+EB68  White arrow up (N)\n    Glyphs[\"arrowWhiteUp\"] = \"\\uEB68\";\n    // U+EB6F  White arrow up-left (NW)\n    Glyphs[\"arrowWhiteUpLeft\"] = \"\\uEB6F\";\n    // U+EB69  White arrow up-right (NE)\n    Glyphs[\"arrowWhiteUpRight\"] = \"\\uEB69\";\n    // U+EB7C  Black arrowhead down (S)\n    Glyphs[\"arrowheadBlackDown\"] = \"\\uEB7C\";\n    // U+EB7D  Black arrowhead down-left (SW)\n    Glyphs[\"arrowheadBlackDownLeft\"] = \"\\uEB7D\";\n    // U+EB7B  Black arrowhead down-right (SE)\n    Glyphs[\"arrowheadBlackDownRight\"] = \"\\uEB7B\";\n    // U+EB7E  Black arrowhead left (W)\n    Glyphs[\"arrowheadBlackLeft\"] = \"\\uEB7E\";\n    // U+EB7A  Black arrowhead right (E)\n    Glyphs[\"arrowheadBlackRight\"] = \"\\uEB7A\";\n    // U+EB78  Black arrowhead up (N)\n    Glyphs[\"arrowheadBlackUp\"] = \"\\uEB78\";\n    // U+EB7F  Black arrowhead up-left (NW)\n    Glyphs[\"arrowheadBlackUpLeft\"] = \"\\uEB7F\";\n    // U+EB79  Black arrowhead up-right (NE)\n    Glyphs[\"arrowheadBlackUpRight\"] = \"\\uEB79\";\n    // U+EB8C  Open arrowhead down (S)\n    Glyphs[\"arrowheadOpenDown\"] = \"\\uEB8C\";\n    // U+EB8D  Open arrowhead down-left (SW)\n    Glyphs[\"arrowheadOpenDownLeft\"] = \"\\uEB8D\";\n    // U+EB8B  Open arrowhead down-right (SE)\n    Glyphs[\"arrowheadOpenDownRight\"] = \"\\uEB8B\";\n    // U+EB8E  Open arrowhead left (W)\n    Glyphs[\"arrowheadOpenLeft\"] = \"\\uEB8E\";\n    // U+EB8A  Open arrowhead right (E)\n    Glyphs[\"arrowheadOpenRight\"] = \"\\uEB8A\";\n    // U+EB88  Open arrowhead up (N)\n    Glyphs[\"arrowheadOpenUp\"] = \"\\uEB88\";\n    // U+EB8F  Open arrowhead up-left (NW)\n    Glyphs[\"arrowheadOpenUpLeft\"] = \"\\uEB8F\";\n    // U+EB89  Open arrowhead up-right (NE)\n    Glyphs[\"arrowheadOpenUpRight\"] = \"\\uEB89\";\n    // U+EB84  White arrowhead down (S)\n    Glyphs[\"arrowheadWhiteDown\"] = \"\\uEB84\";\n    // U+EB85  White arrowhead down-left (SW)\n    Glyphs[\"arrowheadWhiteDownLeft\"] = \"\\uEB85\";\n    // U+EB83  White arrowhead down-right (SE)\n    Glyphs[\"arrowheadWhiteDownRight\"] = \"\\uEB83\";\n    // U+EB86  White arrowhead left (W)\n    Glyphs[\"arrowheadWhiteLeft\"] = \"\\uEB86\";\n    // U+EB82  White arrowhead right (E)\n    Glyphs[\"arrowheadWhiteRight\"] = \"\\uEB82\";\n    // U+EB80  White arrowhead up (N)\n    Glyphs[\"arrowheadWhiteUp\"] = \"\\uEB80\";\n    // U+EB87  White arrowhead up-left (NW)\n    Glyphs[\"arrowheadWhiteUpLeft\"] = \"\\uEB87\";\n    // U+EB81  White arrowhead up-right (NE)\n    Glyphs[\"arrowheadWhiteUpRight\"] = \"\\uEB81\";\n    // U+E4A0  Accent above\n    Glyphs[\"articAccentAbove\"] = \"\\uE4A0\";\n    // U+1D17B  Accent above\n    Glyphs[\"articAccentAboveAlternate\"] = \"\\uD834\\uDD7B\";\n    // U+E4A1  Accent below\n    Glyphs[\"articAccentBelow\"] = \"\\uE4A1\";\n    // U+E4B0  Accent-staccato above\n    Glyphs[\"articAccentStaccatoAbove\"] = \"\\uE4B0\";\n    // U+1D181  Accent-staccato above\n    Glyphs[\"articAccentStaccatoAboveAlternate\"] = \"\\uD834\\uDD81\";\n    // U+E4B1  Accent-staccato below\n    Glyphs[\"articAccentStaccatoBelow\"] = \"\\uE4B1\";\n    // U+E4BA  Laissez vibrer (l.v.) above\n    Glyphs[\"articLaissezVibrerAbove\"] = \"\\uE4BA\";\n    // U+E4BB  Laissez vibrer (l.v.) below\n    Glyphs[\"articLaissezVibrerBelow\"] = \"\\uE4BB\";\n    // U+E4AC  Marcato above\n    Glyphs[\"articMarcatoAbove\"] = \"\\uE4AC\";\n    // U+1D17F  Marcato above\n    Glyphs[\"articMarcatoAboveAlternate\"] = \"\\uD834\\uDD7F\";\n    // U+E4AD  Marcato below\n    Glyphs[\"articMarcatoBelow\"] = \"\\uE4AD\";\n    // U+E4AE  Marcato-staccato above\n    Glyphs[\"articMarcatoStaccatoAbove\"] = \"\\uE4AE\";\n    // U+1D180  Marcato-staccato above\n    Glyphs[\"articMarcatoStaccatoAboveAlternate\"] = \"\\uD834\\uDD80\";\n    // U+E4AF  Marcato-staccato below\n    Glyphs[\"articMarcatoStaccatoBelow\"] = \"\\uE4AF\";\n    // U+E4BC  Marcato-tenuto above\n    Glyphs[\"articMarcatoTenutoAbove\"] = \"\\uE4BC\";\n    // U+E4BD  Marcato-tenuto below\n    Glyphs[\"articMarcatoTenutoBelow\"] = \"\\uE4BD\";\n    // U+ED40  Soft accent above\n    Glyphs[\"articSoftAccentAbove\"] = \"\\uED40\";\n    // U+ED41  Soft accent below\n    Glyphs[\"articSoftAccentBelow\"] = \"\\uED41\";\n    // U+ED42  Soft accent-staccato above\n    Glyphs[\"articSoftAccentStaccatoAbove\"] = \"\\uED42\";\n    // U+ED43  Soft accent-staccato below\n    Glyphs[\"articSoftAccentStaccatoBelow\"] = \"\\uED43\";\n    // U+ED44  Soft accent-tenuto above\n    Glyphs[\"articSoftAccentTenutoAbove\"] = \"\\uED44\";\n    // U+ED45  Soft accent-tenuto below\n    Glyphs[\"articSoftAccentTenutoBelow\"] = \"\\uED45\";\n    // U+ED46  Soft accent-tenuto-staccato above\n    Glyphs[\"articSoftAccentTenutoStaccatoAbove\"] = \"\\uED46\";\n    // U+ED47  Soft accent-tenuto-staccato below\n    Glyphs[\"articSoftAccentTenutoStaccatoBelow\"] = \"\\uED47\";\n    // U+E4A6  Staccatissimo above\n    Glyphs[\"articStaccatissimoAbove\"] = \"\\uE4A6\";\n    // U+1D17E  Staccatissimo above\n    Glyphs[\"articStaccatissimoAboveAlternate\"] = \"\\uD834\\uDD7E\";\n    // U+E4A7  Staccatissimo below\n    Glyphs[\"articStaccatissimoBelow\"] = \"\\uE4A7\";\n    // U+E4AA  Staccatissimo stroke above\n    Glyphs[\"articStaccatissimoStrokeAbove\"] = \"\\uE4AA\";\n    // U+E4AB  Staccatissimo stroke below\n    Glyphs[\"articStaccatissimoStrokeBelow\"] = \"\\uE4AB\";\n    // U+E4A8  Staccatissimo wedge above\n    Glyphs[\"articStaccatissimoWedgeAbove\"] = \"\\uE4A8\";\n    // U+E4A9  Staccatissimo wedge below\n    Glyphs[\"articStaccatissimoWedgeBelow\"] = \"\\uE4A9\";\n    // U+E4A2  Staccato above\n    Glyphs[\"articStaccatoAbove\"] = \"\\uE4A2\";\n    // U+1D17C  Staccato above\n    Glyphs[\"articStaccatoAboveAlternate\"] = \"\\uD834\\uDD7C\";\n    // U+E4A3  Staccato below\n    Glyphs[\"articStaccatoBelow\"] = \"\\uE4A3\";\n    // U+E4B6  Stress above\n    Glyphs[\"articStressAbove\"] = \"\\uE4B6\";\n    // U+E4B7  Stress below\n    Glyphs[\"articStressBelow\"] = \"\\uE4B7\";\n    // U+E4A4  Tenuto above\n    Glyphs[\"articTenutoAbove\"] = \"\\uE4A4\";\n    // U+1D17D  Tenuto above\n    Glyphs[\"articTenutoAboveAlternate\"] = \"\\uD834\\uDD7D\";\n    // U+E4B4  Tenuto-accent above\n    Glyphs[\"articTenutoAccentAbove\"] = \"\\uE4B4\";\n    // U+E4B5  Tenuto-accent below\n    Glyphs[\"articTenutoAccentBelow\"] = \"\\uE4B5\";\n    // U+E4A5  Tenuto below\n    Glyphs[\"articTenutoBelow\"] = \"\\uE4A5\";\n    // U+E4B2  Louré (tenuto-staccato) above\n    Glyphs[\"articTenutoStaccatoAbove\"] = \"\\uE4B2\";\n    // U+1D182  Louré (tenuto-staccato) above\n    Glyphs[\"articTenutoStaccatoAboveAlternate\"] = \"\\uD834\\uDD82\";\n    // U+E4B3  Louré (tenuto-staccato) below\n    Glyphs[\"articTenutoStaccatoBelow\"] = \"\\uE4B3\";\n    // U+E4B8  Unstress above\n    Glyphs[\"articUnstressAbove\"] = \"\\uE4B8\";\n    // U+E4B9  Unstress below\n    Glyphs[\"articUnstressBelow\"] = \"\\uE4B9\";\n    // U+E1E7  Augmentation dot\n    Glyphs[\"augmentationDot\"] = \"\\uE1E7\";\n    // U+1D16D  Augmentation dot\n    Glyphs[\"augmentationDotAlternate\"] = \"\\uD834\\uDD6D\";\n    // U+E036  Dashed barline\n    Glyphs[\"barlineDashed\"] = \"\\uE036\";\n    // U+1D104  Dashed barline\n    Glyphs[\"barlineDashedAlternate\"] = \"\\uD834\\uDD04\";\n    // U+E037  Dotted barline\n    Glyphs[\"barlineDotted\"] = \"\\uE037\";\n    // U+E031  Double barline\n    Glyphs[\"barlineDouble\"] = \"\\uE031\";\n    // U+1D101  Double barline\n    Glyphs[\"barlineDoubleAlternate\"] = \"\\uD834\\uDD01\";\n    // U+E032  Final barline\n    Glyphs[\"barlineFinal\"] = \"\\uE032\";\n    // U+1D102  Final barline\n    Glyphs[\"barlineFinalAlternate\"] = \"\\uD834\\uDD02\";\n    // U+E034  Heavy barline\n    Glyphs[\"barlineHeavy\"] = \"\\uE034\";\n    // U+E035  Heavy double barline\n    Glyphs[\"barlineHeavyHeavy\"] = \"\\uE035\";\n    // U+E033  Reverse final barline\n    Glyphs[\"barlineReverseFinal\"] = \"\\uE033\";\n    // U+1D103  Reverse final barline\n    Glyphs[\"barlineReverseFinalAlternate\"] = \"\\uD834\\uDD03\";\n    // U+E038  Short barline\n    Glyphs[\"barlineShort\"] = \"\\uE038\";\n    // U+1D105  Short barline\n    Glyphs[\"barlineShortAlternate\"] = \"\\uD834\\uDD05\";\n    // U+E030  Single barline\n    Glyphs[\"barlineSingle\"] = \"\\uE030\";\n    // U+1D100  Single barline\n    Glyphs[\"barlineSingleAlternate\"] = \"\\uD834\\uDD00\";\n    // U+E039  Tick barline\n    Glyphs[\"barlineTick\"] = \"\\uE039\";\n    // U+EAF4  Accel./rit. beam 1 (widest)\n    Glyphs[\"beamAccelRit1\"] = \"\\uEAF4\";\n    // U+EAFD  Accel./rit. beam 10\n    Glyphs[\"beamAccelRit10\"] = \"\\uEAFD\";\n    // U+EAFE  Accel./rit. beam 11\n    Glyphs[\"beamAccelRit11\"] = \"\\uEAFE\";\n    // U+EAFF  Accel./rit. beam 12\n    Glyphs[\"beamAccelRit12\"] = \"\\uEAFF\";\n    // U+EB00  Accel./rit. beam 13\n    Glyphs[\"beamAccelRit13\"] = \"\\uEB00\";\n    // U+EB01  Accel./rit. beam 14\n    Glyphs[\"beamAccelRit14\"] = \"\\uEB01\";\n    // U+EB02  Accel./rit. beam 15 (narrowest)\n    Glyphs[\"beamAccelRit15\"] = \"\\uEB02\";\n    // U+EAF5  Accel./rit. beam 2\n    Glyphs[\"beamAccelRit2\"] = \"\\uEAF5\";\n    // U+EAF6  Accel./rit. beam 3\n    Glyphs[\"beamAccelRit3\"] = \"\\uEAF6\";\n    // U+EAF7  Accel./rit. beam 4\n    Glyphs[\"beamAccelRit4\"] = \"\\uEAF7\";\n    // U+EAF8  Accel./rit. beam 5\n    Glyphs[\"beamAccelRit5\"] = \"\\uEAF8\";\n    // U+EAF9  Accel./rit. beam 6\n    Glyphs[\"beamAccelRit6\"] = \"\\uEAF9\";\n    // U+EAFA  Accel./rit. beam 7\n    Glyphs[\"beamAccelRit7\"] = \"\\uEAFA\";\n    // U+EAFB  Accel./rit. beam 8\n    Glyphs[\"beamAccelRit8\"] = \"\\uEAFB\";\n    // U+EAFC  Accel./rit. beam 9\n    Glyphs[\"beamAccelRit9\"] = \"\\uEAFC\";\n    // U+EB03  Accel./rit. beam terminating line\n    Glyphs[\"beamAccelRitFinal\"] = \"\\uEB03\";\n    // U+E000  Brace\n    Glyphs[\"brace\"] = \"\\uE000\";\n    // U+1D114  Brace\n    Glyphs[\"braceAlternate\"] = \"\\uD834\\uDD14\";\n    // U+E002  Bracket\n    Glyphs[\"bracket\"] = \"\\uE002\";\n    // U+1D115  Bracket\n    Glyphs[\"bracketAlternate\"] = \"\\uD834\\uDD15\";\n    // U+E004  Bracket bottom\n    Glyphs[\"bracketBottom\"] = \"\\uE004\";\n    // U+E003  Bracket top\n    Glyphs[\"bracketTop\"] = \"\\uE003\";\n    // U+E5E3  Bend\n    Glyphs[\"brassBend\"] = \"\\uE5E3\";\n    // U+1D189  Bend\n    Glyphs[\"brassBendAlternate\"] = \"\\uD834\\uDD89\";\n    // U+E5D6  Doit, long\n    Glyphs[\"brassDoitLong\"] = \"\\uE5D6\";\n    // U+E5D5  Doit, medium\n    Glyphs[\"brassDoitMedium\"] = \"\\uE5D5\";\n    // U+E5D4  Doit, short\n    Glyphs[\"brassDoitShort\"] = \"\\uE5D4\";\n    // U+1D185  Doit, short\n    Glyphs[\"brassDoitShortAlternate\"] = \"\\uD834\\uDD85\";\n    // U+E5D9  Lip fall, long\n    Glyphs[\"brassFallLipLong\"] = \"\\uE5D9\";\n    // U+E5D8  Lip fall, medium\n    Glyphs[\"brassFallLipMedium\"] = \"\\uE5D8\";\n    // U+E5D7  Lip fall, short\n    Glyphs[\"brassFallLipShort\"] = \"\\uE5D7\";\n    // U+1D186  Lip fall, short\n    Glyphs[\"brassFallLipShortAlternate\"] = \"\\uD834\\uDD86\";\n    // U+E5DF  Rough fall, long\n    Glyphs[\"brassFallRoughLong\"] = \"\\uE5DF\";\n    // U+E5DE  Rough fall, medium\n    Glyphs[\"brassFallRoughMedium\"] = \"\\uE5DE\";\n    // U+E5DD  Rough fall, short\n    Glyphs[\"brassFallRoughShort\"] = \"\\uE5DD\";\n    // U+E5DC  Smooth fall, long\n    Glyphs[\"brassFallSmoothLong\"] = \"\\uE5DC\";\n    // U+E5DB  Smooth fall, medium\n    Glyphs[\"brassFallSmoothMedium\"] = \"\\uE5DB\";\n    // U+E5DA  Smooth fall, short\n    Glyphs[\"brassFallSmoothShort\"] = \"\\uE5DA\";\n    // U+E5E1  Flip\n    Glyphs[\"brassFlip\"] = \"\\uE5E1\";\n    // U+1D187  Flip\n    Glyphs[\"brassFlipAlternate\"] = \"\\uD834\\uDD87\";\n    // U+E5E8  Harmon mute, stem in\n    Glyphs[\"brassHarmonMuteClosed\"] = \"\\uE5E8\";\n    // U+E5E9  Harmon mute, stem extended, left\n    Glyphs[\"brassHarmonMuteStemHalfLeft\"] = \"\\uE5E9\";\n    // U+E5EA  Harmon mute, stem extended, right\n    Glyphs[\"brassHarmonMuteStemHalfRight\"] = \"\\uE5EA\";\n    // U+E5EB  Harmon mute, stem out\n    Glyphs[\"brassHarmonMuteStemOpen\"] = \"\\uE5EB\";\n    // U+E5E4  Jazz turn\n    Glyphs[\"brassJazzTurn\"] = \"\\uE5E4\";\n    // U+E5D3  Lift, long\n    Glyphs[\"brassLiftLong\"] = \"\\uE5D3\";\n    // U+E5D2  Lift, medium\n    Glyphs[\"brassLiftMedium\"] = \"\\uE5D2\";\n    // U+E5D1  Lift, short\n    Glyphs[\"brassLiftShort\"] = \"\\uE5D1\";\n    // U+E5EE  Smooth lift, long\n    Glyphs[\"brassLiftSmoothLong\"] = \"\\uE5EE\";\n    // U+E5ED  Smooth lift, medium\n    Glyphs[\"brassLiftSmoothMedium\"] = \"\\uE5ED\";\n    // U+E5EC  Smooth lift, short\n    Glyphs[\"brassLiftSmoothShort\"] = \"\\uE5EC\";\n    // U+E5E5  Muted (closed)\n    Glyphs[\"brassMuteClosed\"] = \"\\uE5E5\";\n    // U+E5E6  Half-muted (half-closed)\n    Glyphs[\"brassMuteHalfClosed\"] = \"\\uE5E6\";\n    // U+E5E7  Open\n    Glyphs[\"brassMuteOpen\"] = \"\\uE5E7\";\n    // U+E5E0  Plop\n    Glyphs[\"brassPlop\"] = \"\\uE5E0\";\n    // U+E5D0  Scoop\n    Glyphs[\"brassScoop\"] = \"\\uE5D0\";\n    // U+E5E2  Smear\n    Glyphs[\"brassSmear\"] = \"\\uE5E2\";\n    // U+1D188  Smear\n    Glyphs[\"brassSmearAlternate\"] = \"\\uD834\\uDD88\";\n    // U+E5EF  Valve trill\n    Glyphs[\"brassValveTrill\"] = \"\\uE5EF\";\n    // U+E4CE  Breath mark (comma)\n    Glyphs[\"breathMarkComma\"] = \"\\uE4CE\";\n    // U+1D112  Breath mark (comma)\n    Glyphs[\"breathMarkCommaAlternate\"] = \"\\uD834\\uDD12\";\n    // U+E4D5  Breath mark (Salzedo)\n    Glyphs[\"breathMarkSalzedo\"] = \"\\uE4D5\";\n    // U+E4CF  Breath mark (tick-like)\n    Glyphs[\"breathMarkTick\"] = \"\\uE4CF\";\n    // U+E4D0  Breath mark (upbow-like)\n    Glyphs[\"breathMarkUpbow\"] = \"\\uE4D0\";\n    // U+E078  Bridge clef\n    Glyphs[\"bridgeClef\"] = \"\\uE078\";\n    // U+E22A  Buzz roll\n    Glyphs[\"buzzRoll\"] = \"\\uE22A\";\n    // U+E05C  C clef\n    Glyphs[\"cClef\"] = \"\\uE05C\";\n    // U+1D121  C clef\n    Glyphs[\"cClefAlternate\"] = \"\\uD834\\uDD21\";\n    // U+E05D  C clef ottava bassa\n    Glyphs[\"cClef8vb\"] = \"\\uE05D\";\n    // U+E05F  C clef, arrow down\n    Glyphs[\"cClefArrowDown\"] = \"\\uE05F\";\n    // U+E05E  C clef, arrow up\n    Glyphs[\"cClefArrowUp\"] = \"\\uE05E\";\n    // U+E07B  C clef change\n    Glyphs[\"cClefChange\"] = \"\\uE07B\";\n    // U+E061  Combining C clef\n    Glyphs[\"cClefCombining\"] = \"\\uE061\";\n    // U+E075  Reversed C clef\n    Glyphs[\"cClefReversed\"] = \"\\uE075\";\n    // U+E060  C clef (19th century)\n    Glyphs[\"cClefSquare\"] = \"\\uE060\";\n    // U+E4D1  Caesura\n    Glyphs[\"caesura\"] = \"\\uE4D1\";\n    // U+1D113  Caesura\n    Glyphs[\"caesuraAlternate\"] = \"\\uD834\\uDD13\";\n    // U+E4D4  Curved caesura\n    Glyphs[\"caesuraCurved\"] = \"\\uE4D4\";\n    // U+E4D3  Short caesura\n    Glyphs[\"caesuraShort\"] = \"\\uE4D3\";\n    // U+E4D7  Single stroke caesura\n    Glyphs[\"caesuraSingleStroke\"] = \"\\uE4D7\";\n    // U+E4D2  Thick caesura\n    Glyphs[\"caesuraThick\"] = \"\\uE4D2\";\n    // U+E9D6  Accentus above\n    Glyphs[\"chantAccentusAbove\"] = \"\\uE9D6\";\n    // U+E9D7  Accentus below\n    Glyphs[\"chantAccentusBelow\"] = \"\\uE9D7\";\n    // U+E994  Punctum auctum, ascending\n    Glyphs[\"chantAuctumAsc\"] = \"\\uE994\";\n    // U+E995  Punctum auctum, descending\n    Glyphs[\"chantAuctumDesc\"] = \"\\uE995\";\n    // U+E9D9  Augmentum (mora)\n    Glyphs[\"chantAugmentum\"] = \"\\uE9D9\";\n    // U+E8F8  Caesura\n    Glyphs[\"chantCaesura\"] = \"\\uE8F8\";\n    // U+E906  Plainchant C clef\n    Glyphs[\"chantCclef\"] = \"\\uE906\";\n    // U+1D1D0  Plainchant C clef\n    Glyphs[\"chantCclefAlternate\"] = \"\\uD834\\uDDD0\";\n    // U+E9D2  Circulus above\n    Glyphs[\"chantCirculusAbove\"] = \"\\uE9D2\";\n    // U+E9D3  Circulus below\n    Glyphs[\"chantCirculusBelow\"] = \"\\uE9D3\";\n    // U+E9BD  Connecting line, ascending 2nd\n    Glyphs[\"chantConnectingLineAsc2nd\"] = \"\\uE9BD\";\n    // U+E9BE  Connecting line, ascending 3rd\n    Glyphs[\"chantConnectingLineAsc3rd\"] = \"\\uE9BE\";\n    // U+E9BF  Connecting line, ascending 4th\n    Glyphs[\"chantConnectingLineAsc4th\"] = \"\\uE9BF\";\n    // U+E9C0  Connecting line, ascending 5th\n    Glyphs[\"chantConnectingLineAsc5th\"] = \"\\uE9C0\";\n    // U+E9C1  Connecting line, ascending 6th\n    Glyphs[\"chantConnectingLineAsc6th\"] = \"\\uE9C1\";\n    // U+EA08  Plainchant custos, stem down, high position\n    Glyphs[\"chantCustosStemDownPosHigh\"] = \"\\uEA08\";\n    // U+EA09  Plainchant custos, stem down, highest position\n    Glyphs[\"chantCustosStemDownPosHighest\"] = \"\\uEA09\";\n    // U+EA07  Plainchant custos, stem down, middle position\n    Glyphs[\"chantCustosStemDownPosMiddle\"] = \"\\uEA07\";\n    // U+EA05  Plainchant custos, stem up, low position\n    Glyphs[\"chantCustosStemUpPosLow\"] = \"\\uEA05\";\n    // U+EA04  Plainchant custos, stem up, lowest position\n    Glyphs[\"chantCustosStemUpPosLowest\"] = \"\\uEA04\";\n    // U+EA06  Plainchant custos, stem up, middle position\n    Glyphs[\"chantCustosStemUpPosMiddle\"] = \"\\uEA06\";\n    // U+E9B3  Punctum deminutum, lower\n    Glyphs[\"chantDeminutumLower\"] = \"\\uE9B3\";\n    // U+E9B2  Punctum deminutum, upper\n    Glyphs[\"chantDeminutumUpper\"] = \"\\uE9B2\";\n    // U+E8F6  Divisio finalis\n    Glyphs[\"chantDivisioFinalis\"] = \"\\uE8F6\";\n    // U+E8F4  Divisio maior\n    Glyphs[\"chantDivisioMaior\"] = \"\\uE8F4\";\n    // U+E8F5  Divisio maxima\n    Glyphs[\"chantDivisioMaxima\"] = \"\\uE8F5\";\n    // U+E8F3  Divisio minima\n    Glyphs[\"chantDivisioMinima\"] = \"\\uE8F3\";\n    // U+E9B4  Entry line, ascending 2nd\n    Glyphs[\"chantEntryLineAsc2nd\"] = \"\\uE9B4\";\n    // U+E9B5  Entry line, ascending 3rd\n    Glyphs[\"chantEntryLineAsc3rd\"] = \"\\uE9B5\";\n    // U+E9B6  Entry line, ascending 4th\n    Glyphs[\"chantEntryLineAsc4th\"] = \"\\uE9B6\";\n    // U+E9B7  Entry line, ascending 5th\n    Glyphs[\"chantEntryLineAsc5th\"] = \"\\uE9B7\";\n    // U+E9B8  Entry line, ascending 6th\n    Glyphs[\"chantEntryLineAsc6th\"] = \"\\uE9B8\";\n    // U+E9D8  Episema\n    Glyphs[\"chantEpisema\"] = \"\\uE9D8\";\n    // U+E902  Plainchant F clef\n    Glyphs[\"chantFclef\"] = \"\\uE902\";\n    // U+1D1D1  Plainchant F clef\n    Glyphs[\"chantFclefAlternate\"] = \"\\uD834\\uDDD1\";\n    // U+E9D0  Ictus above\n    Glyphs[\"chantIctusAbove\"] = \"\\uE9D0\";\n    // U+E9D1  Ictus below\n    Glyphs[\"chantIctusBelow\"] = \"\\uE9D1\";\n    // U+E9B9  Ligated stroke, descending 2nd\n    Glyphs[\"chantLigaturaDesc2nd\"] = \"\\uE9B9\";\n    // U+E9BA  Ligated stroke, descending 3rd\n    Glyphs[\"chantLigaturaDesc3rd\"] = \"\\uE9BA\";\n    // U+E9BB  Ligated stroke, descending 4th\n    Glyphs[\"chantLigaturaDesc4th\"] = \"\\uE9BB\";\n    // U+E9BC  Ligated stroke, descending 5th\n    Glyphs[\"chantLigaturaDesc5th\"] = \"\\uE9BC\";\n    // U+E99C  Oriscus ascending\n    Glyphs[\"chantOriscusAscending\"] = \"\\uE99C\";\n    // U+E99D  Oriscus descending\n    Glyphs[\"chantOriscusDescending\"] = \"\\uE99D\";\n    // U+E99E  Oriscus liquescens\n    Glyphs[\"chantOriscusLiquescens\"] = \"\\uE99E\";\n    // U+E9B0  Podatus, lower\n    Glyphs[\"chantPodatusLower\"] = \"\\uE9B0\";\n    // U+E9B1  Podatus, upper\n    Glyphs[\"chantPodatusUpper\"] = \"\\uE9B1\";\n    // U+1D1D4  Podatus, upper\n    Glyphs[\"chantPodatusUpperAlternate\"] = \"\\uD834\\uDDD4\";\n    // U+E990  Punctum\n    Glyphs[\"chantPunctum\"] = \"\\uE990\";\n    // U+E998  Punctum cavum\n    Glyphs[\"chantPunctumCavum\"] = \"\\uE998\";\n    // U+E9A1  Punctum deminutum\n    Glyphs[\"chantPunctumDeminutum\"] = \"\\uE9A1\";\n    // U+E991  Punctum inclinatum\n    Glyphs[\"chantPunctumInclinatum\"] = \"\\uE991\";\n    // U+E992  Punctum inclinatum auctum\n    Glyphs[\"chantPunctumInclinatumAuctum\"] = \"\\uE992\";\n    // U+E993  Punctum inclinatum deminutum\n    Glyphs[\"chantPunctumInclinatumDeminutum\"] = \"\\uE993\";\n    // U+E999  Punctum linea\n    Glyphs[\"chantPunctumLinea\"] = \"\\uE999\";\n    // U+E99A  Punctum linea cavum\n    Glyphs[\"chantPunctumLineaCavum\"] = \"\\uE99A\";\n    // U+E996  Punctum virga\n    Glyphs[\"chantPunctumVirga\"] = \"\\uE996\";\n    // U+1D1D3  Punctum virga\n    Glyphs[\"chantPunctumVirgaAlternate\"] = \"\\uD834\\uDDD3\";\n    // U+E997  Punctum virga, reversed\n    Glyphs[\"chantPunctumVirgaReversed\"] = \"\\uE997\";\n    // U+E99B  Quilisma\n    Glyphs[\"chantQuilisma\"] = \"\\uE99B\";\n    // U+E9D4  Semicirculus above\n    Glyphs[\"chantSemicirculusAbove\"] = \"\\uE9D4\";\n    // U+E9D5  Semicirculus below\n    Glyphs[\"chantSemicirculusBelow\"] = \"\\uE9D5\";\n    // U+E8F0  Plainchant staff\n    Glyphs[\"chantStaff\"] = \"\\uE8F0\";\n    // U+E8F2  Plainchant staff (narrow)\n    Glyphs[\"chantStaffNarrow\"] = \"\\uE8F2\";\n    // U+E8F1  Plainchant staff (wide)\n    Glyphs[\"chantStaffWide\"] = \"\\uE8F1\";\n    // U+E99F  Strophicus\n    Glyphs[\"chantStrophicus\"] = \"\\uE99F\";\n    // U+E9A0  Strophicus auctus\n    Glyphs[\"chantStrophicusAuctus\"] = \"\\uE9A0\";\n    // U+E9C2  Strophicus liquescens, 2nd\n    Glyphs[\"chantStrophicusLiquescens2nd\"] = \"\\uE9C2\";\n    // U+E9C3  Strophicus liquescens, 3rd\n    Glyphs[\"chantStrophicusLiquescens3rd\"] = \"\\uE9C3\";\n    // U+E9C4  Strophicus liquescens, 4th\n    Glyphs[\"chantStrophicusLiquescens4th\"] = \"\\uE9C4\";\n    // U+E9C5  Strophicus liquescens, 5th\n    Glyphs[\"chantStrophicusLiquescens5th\"] = \"\\uE9C5\";\n    // U+E8F7  Virgula\n    Glyphs[\"chantVirgula\"] = \"\\uE8F7\";\n    // U+E07E  15 for clefs\n    Glyphs[\"clef15\"] = \"\\uE07E\";\n    // U+E07D  8 for clefs\n    Glyphs[\"clef8\"] = \"\\uE07D\";\n    // U+E07F  Combining clef change\n    Glyphs[\"clefChangeCombining\"] = \"\\uE07F\";\n    // U+E048  Coda\n    Glyphs[\"coda\"] = \"\\uE048\";\n    // U+1D10C  Coda\n    Glyphs[\"codaAlternate\"] = \"\\uD834\\uDD0C\";\n    // U+E049  Square coda\n    Glyphs[\"codaSquare\"] = \"\\uE049\";\n    // U+E897  Beat 2, compound time\n    Glyphs[\"conductorBeat2Compound\"] = \"\\uE897\";\n    // U+E894  Beat 2, simple time\n    Glyphs[\"conductorBeat2Simple\"] = \"\\uE894\";\n    // U+E898  Beat 3, compound time\n    Glyphs[\"conductorBeat3Compound\"] = \"\\uE898\";\n    // U+E895  Beat 3, simple time\n    Glyphs[\"conductorBeat3Simple\"] = \"\\uE895\";\n    // U+E899  Beat 4, compound time\n    Glyphs[\"conductorBeat4Compound\"] = \"\\uE899\";\n    // U+E896  Beat 4, simple time\n    Glyphs[\"conductorBeat4Simple\"] = \"\\uE896\";\n    // U+E891  Left-hand beat or cue\n    Glyphs[\"conductorLeftBeat\"] = \"\\uE891\";\n    // U+E892  Right-hand beat or cue\n    Glyphs[\"conductorRightBeat\"] = \"\\uE892\";\n    // U+E890  Strong beat or cue\n    Glyphs[\"conductorStrongBeat\"] = \"\\uE890\";\n    // U+E89A  Unconducted/free passages\n    Glyphs[\"conductorUnconducted\"] = \"\\uE89A\";\n    // U+E893  Weak beat or cue\n    Glyphs[\"conductorWeakBeat\"] = \"\\uE893\";\n    // U+E8E0  Begin beam\n    Glyphs[\"controlBeginBeam\"] = \"\\uE8E0\";\n    // U+1D173  Begin beam\n    Glyphs[\"controlBeginBeamAlternate\"] = \"\\uD834\\uDD73\";\n    // U+E8E6  Begin phrase\n    Glyphs[\"controlBeginPhrase\"] = \"\\uE8E6\";\n    // U+1D179  Begin phrase\n    Glyphs[\"controlBeginPhraseAlternate\"] = \"\\uD834\\uDD79\";\n    // U+E8E4  Begin slur\n    Glyphs[\"controlBeginSlur\"] = \"\\uE8E4\";\n    // U+1D177  Begin slur\n    Glyphs[\"controlBeginSlurAlternate\"] = \"\\uD834\\uDD77\";\n    // U+E8E2  Begin tie\n    Glyphs[\"controlBeginTie\"] = \"\\uE8E2\";\n    // U+1D175  Begin tie\n    Glyphs[\"controlBeginTieAlternate\"] = \"\\uD834\\uDD75\";\n    // U+E8E1  End beam\n    Glyphs[\"controlEndBeam\"] = \"\\uE8E1\";\n    // U+1D174  End beam\n    Glyphs[\"controlEndBeamAlternate\"] = \"\\uD834\\uDD74\";\n    // U+E8E7  End phrase\n    Glyphs[\"controlEndPhrase\"] = \"\\uE8E7\";\n    // U+1D17A  End phrase\n    Glyphs[\"controlEndPhraseAlternate\"] = \"\\uD834\\uDD7A\";\n    // U+E8E5  End slur\n    Glyphs[\"controlEndSlur\"] = \"\\uE8E5\";\n    // U+1D178  End slur\n    Glyphs[\"controlEndSlurAlternate\"] = \"\\uD834\\uDD78\";\n    // U+E8E3  End tie\n    Glyphs[\"controlEndTie\"] = \"\\uE8E3\";\n    // U+1D176  End tie\n    Glyphs[\"controlEndTieAlternate\"] = \"\\uD834\\uDD76\";\n    // U+ED64  Double flat\n    Glyphs[\"csymAccidentalDoubleFlat\"] = \"\\uED64\";\n    // U+ED63  Double sharp\n    Glyphs[\"csymAccidentalDoubleSharp\"] = \"\\uED63\";\n    // U+ED60  Flat\n    Glyphs[\"csymAccidentalFlat\"] = \"\\uED60\";\n    // U+ED61  Natural\n    Glyphs[\"csymAccidentalNatural\"] = \"\\uED61\";\n    // U+ED62  Sharp\n    Glyphs[\"csymAccidentalSharp\"] = \"\\uED62\";\n    // U+ED66  Triple flat\n    Glyphs[\"csymAccidentalTripleFlat\"] = \"\\uED66\";\n    // U+ED65  Triple sharp\n    Glyphs[\"csymAccidentalTripleSharp\"] = \"\\uED65\";\n    // U+E87B  Slash for altered bass note\n    Glyphs[\"csymAlteredBassSlash\"] = \"\\uE87B\";\n    // U+E872  Augmented\n    Glyphs[\"csymAugmented\"] = \"\\uE872\";\n    // U+E877  Double-height left bracket\n    Glyphs[\"csymBracketLeftTall\"] = \"\\uE877\";\n    // U+E878  Double-height right bracket\n    Glyphs[\"csymBracketRightTall\"] = \"\\uE878\";\n    // U+E87C  Slash for chord symbols arranged diagonally\n    Glyphs[\"csymDiagonalArrangementSlash\"] = \"\\uE87C\";\n    // U+E870  Diminished\n    Glyphs[\"csymDiminished\"] = \"\\uE870\";\n    // U+1D1A9  Diminished\n    Glyphs[\"csymDiminishedAlternate\"] = \"\\uD834\\uDDA9\";\n    // U+E871  Half-diminished\n    Glyphs[\"csymHalfDiminished\"] = \"\\uE871\";\n    // U+E873  Major seventh\n    Glyphs[\"csymMajorSeventh\"] = \"\\uE873\";\n    // U+E874  Minor\n    Glyphs[\"csymMinor\"] = \"\\uE874\";\n    // U+E875  Double-height left parenthesis\n    Glyphs[\"csymParensLeftTall\"] = \"\\uE875\";\n    // U+E879  Triple-height left parenthesis\n    Glyphs[\"csymParensLeftVeryTall\"] = \"\\uE879\";\n    // U+E876  Double-height right parenthesis\n    Glyphs[\"csymParensRightTall\"] = \"\\uE876\";\n    // U+E87A  Triple-height right parenthesis\n    Glyphs[\"csymParensRightVeryTall\"] = \"\\uE87A\";\n    // U+E4D6  Curlew (Britten)\n    Glyphs[\"curlewSign\"] = \"\\uE4D6\";\n    // U+E046  Da capo\n    Glyphs[\"daCapo\"] = \"\\uE046\";\n    // U+1D10A  Da capo\n    Glyphs[\"daCapoAlternate\"] = \"\\uD834\\uDD0A\";\n    // U+E045  Dal segno\n    Glyphs[\"dalSegno\"] = \"\\uE045\";\n    // U+1D109  Dal segno\n    Glyphs[\"dalSegnoAlternate\"] = \"\\uD834\\uDD09\";\n    // U+EA3C  Daseian excellentes 1\n    Glyphs[\"daseianExcellentes1\"] = \"\\uEA3C\";\n    // U+EA3D  Daseian excellentes 2\n    Glyphs[\"daseianExcellentes2\"] = \"\\uEA3D\";\n    // U+EA3E  Daseian excellentes 3\n    Glyphs[\"daseianExcellentes3\"] = \"\\uEA3E\";\n    // U+EA3F  Daseian excellentes 4\n    Glyphs[\"daseianExcellentes4\"] = \"\\uEA3F\";\n    // U+EA34  Daseian finales 1\n    Glyphs[\"daseianFinales1\"] = \"\\uEA34\";\n    // U+EA35  Daseian finales 2\n    Glyphs[\"daseianFinales2\"] = \"\\uEA35\";\n    // U+EA36  Daseian finales 3\n    Glyphs[\"daseianFinales3\"] = \"\\uEA36\";\n    // U+EA37  Daseian finales 4\n    Glyphs[\"daseianFinales4\"] = \"\\uEA37\";\n    // U+EA30  Daseian graves 1\n    Glyphs[\"daseianGraves1\"] = \"\\uEA30\";\n    // U+EA31  Daseian graves 2\n    Glyphs[\"daseianGraves2\"] = \"\\uEA31\";\n    // U+EA32  Daseian graves 3\n    Glyphs[\"daseianGraves3\"] = \"\\uEA32\";\n    // U+EA33  Daseian graves 4\n    Glyphs[\"daseianGraves4\"] = \"\\uEA33\";\n    // U+EA40  Daseian residua 1\n    Glyphs[\"daseianResidua1\"] = \"\\uEA40\";\n    // U+EA41  Daseian residua 2\n    Glyphs[\"daseianResidua2\"] = \"\\uEA41\";\n    // U+EA38  Daseian superiores 1\n    Glyphs[\"daseianSuperiores1\"] = \"\\uEA38\";\n    // U+EA39  Daseian superiores 2\n    Glyphs[\"daseianSuperiores2\"] = \"\\uEA39\";\n    // U+EA3A  Daseian superiores 3\n    Glyphs[\"daseianSuperiores3\"] = \"\\uEA3A\";\n    // U+EA3B  Daseian superiores 4\n    Glyphs[\"daseianSuperiores4\"] = \"\\uEA3B\";\n    // U+E234  Double lateral roll (Stevens)\n    Glyphs[\"doubleLateralRollStevens\"] = \"\\uE234\";\n    // U+E5F0  Double-tongue above\n    Glyphs[\"doubleTongueAbove\"] = \"\\uE5F0\";\n    // U+1D18A  Double-tongue above\n    Glyphs[\"doubleTongueAboveAlternate\"] = \"\\uD834\\uDD8A\";\n    // U+E5F1  Double-tongue below\n    Glyphs[\"doubleTongueBelow\"] = \"\\uE5F1\";\n    // U+E546  Colon separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorColon\"] = \"\\uE546\";\n    // U+E547  Hyphen separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorHyphen\"] = \"\\uE547\";\n    // U+E549  Slash separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorSlash\"] = \"\\uE549\";\n    // U+E548  Space separator for combined dynamics\n    Glyphs[\"dynamicCombinedSeparatorSpace\"] = \"\\uE548\";\n    // U+E53E  Crescendo\n    Glyphs[\"dynamicCrescendoHairpin\"] = \"\\uE53E\";\n    // U+1D192  Crescendo\n    Glyphs[\"dynamicCrescendoHairpinAlternate\"] = \"\\uD834\\uDD92\";\n    // U+E53F  Diminuendo\n    Glyphs[\"dynamicDiminuendoHairpin\"] = \"\\uE53F\";\n    // U+1D193  Diminuendo\n    Glyphs[\"dynamicDiminuendoHairpinAlternate\"] = \"\\uD834\\uDD93\";\n    // U+E52F  ff\n    Glyphs[\"dynamicFF\"] = \"\\uE52F\";\n    // U+E530  fff\n    Glyphs[\"dynamicFFF\"] = \"\\uE530\";\n    // U+E531  ffff\n    Glyphs[\"dynamicFFFF\"] = \"\\uE531\";\n    // U+E532  fffff\n    Glyphs[\"dynamicFFFFF\"] = \"\\uE532\";\n    // U+E533  ffffff\n    Glyphs[\"dynamicFFFFFF\"] = \"\\uE533\";\n    // U+E522  Forte\n    Glyphs[\"dynamicForte\"] = \"\\uE522\";\n    // U+1D191  Forte\n    Glyphs[\"dynamicForteAlternate\"] = \"\\uD834\\uDD91\";\n    // U+E534  Forte-piano\n    Glyphs[\"dynamicFortePiano\"] = \"\\uE534\";\n    // U+E535  Forzando\n    Glyphs[\"dynamicForzando\"] = \"\\uE535\";\n    // U+E544  Left bracket (for hairpins)\n    Glyphs[\"dynamicHairpinBracketLeft\"] = \"\\uE544\";\n    // U+E545  Right bracket (for hairpins)\n    Glyphs[\"dynamicHairpinBracketRight\"] = \"\\uE545\";\n    // U+E542  Left parenthesis (for hairpins)\n    Glyphs[\"dynamicHairpinParenthesisLeft\"] = \"\\uE542\";\n    // U+E543  Right parenthesis (for hairpins)\n    Glyphs[\"dynamicHairpinParenthesisRight\"] = \"\\uE543\";\n    // U+E52D  mf\n    Glyphs[\"dynamicMF\"] = \"\\uE52D\";\n    // U+E52C  mp\n    Glyphs[\"dynamicMP\"] = \"\\uE52C\";\n    // U+E540  Messa di voce\n    Glyphs[\"dynamicMessaDiVoce\"] = \"\\uE540\";\n    // U+E521  Mezzo\n    Glyphs[\"dynamicMezzo\"] = \"\\uE521\";\n    // U+1D190  Mezzo\n    Glyphs[\"dynamicMezzoAlternate\"] = \"\\uD834\\uDD90\";\n    // U+E526  Niente\n    Glyphs[\"dynamicNiente\"] = \"\\uE526\";\n    // U+E541  Niente (for hairpins)\n    Glyphs[\"dynamicNienteForHairpin\"] = \"\\uE541\";\n    // U+E52E  pf\n    Glyphs[\"dynamicPF\"] = \"\\uE52E\";\n    // U+E52B  pp\n    Glyphs[\"dynamicPP\"] = \"\\uE52B\";\n    // U+E52A  ppp\n    Glyphs[\"dynamicPPP\"] = \"\\uE52A\";\n    // U+E529  pppp\n    Glyphs[\"dynamicPPPP\"] = \"\\uE529\";\n    // U+E528  ppppp\n    Glyphs[\"dynamicPPPPP\"] = \"\\uE528\";\n    // U+E527  pppppp\n    Glyphs[\"dynamicPPPPPP\"] = \"\\uE527\";\n    // U+E520  Piano\n    Glyphs[\"dynamicPiano\"] = \"\\uE520\";\n    // U+1D18F  Piano\n    Glyphs[\"dynamicPianoAlternate\"] = \"\\uD834\\uDD8F\";\n    // U+E523  Rinforzando\n    Glyphs[\"dynamicRinforzando\"] = \"\\uE523\";\n    // U+1D18C  Rinforzando\n    Glyphs[\"dynamicRinforzandoAlternate\"] = \"\\uD834\\uDD8C\";\n    // U+E53C  Rinforzando 1\n    Glyphs[\"dynamicRinforzando1\"] = \"\\uE53C\";\n    // U+E53D  Rinforzando 2\n    Glyphs[\"dynamicRinforzando2\"] = \"\\uE53D\";\n    // U+E524  Sforzando\n    Glyphs[\"dynamicSforzando\"] = \"\\uE524\";\n    // U+1D18D  Sforzando\n    Glyphs[\"dynamicSforzandoAlternate\"] = \"\\uD834\\uDD8D\";\n    // U+E536  Sforzando 1\n    Glyphs[\"dynamicSforzando1\"] = \"\\uE536\";\n    // U+E538  Sforzando-pianissimo\n    Glyphs[\"dynamicSforzandoPianissimo\"] = \"\\uE538\";\n    // U+E537  Sforzando-piano\n    Glyphs[\"dynamicSforzandoPiano\"] = \"\\uE537\";\n    // U+E539  Sforzato\n    Glyphs[\"dynamicSforzato\"] = \"\\uE539\";\n    // U+E53B  Sforzatissimo\n    Glyphs[\"dynamicSforzatoFF\"] = \"\\uE53B\";\n    // U+E53A  Sforzato-piano\n    Glyphs[\"dynamicSforzatoPiano\"] = \"\\uE53A\";\n    // U+E525  Z\n    Glyphs[\"dynamicZ\"] = \"\\uE525\";\n    // U+1D18E  Z\n    Glyphs[\"dynamicZAlternate\"] = \"\\uD834\\uDD8E\";\n    // U+EB46  Eight channels (7.1 surround)\n    Glyphs[\"elecAudioChannelsEight\"] = \"\\uEB46\";\n    // U+EB43  Five channels\n    Glyphs[\"elecAudioChannelsFive\"] = \"\\uEB43\";\n    // U+EB42  Four channels\n    Glyphs[\"elecAudioChannelsFour\"] = \"\\uEB42\";\n    // U+EB3E  One channel (mono)\n    Glyphs[\"elecAudioChannelsOne\"] = \"\\uEB3E\";\n    // U+EB45  Seven channels\n    Glyphs[\"elecAudioChannelsSeven\"] = \"\\uEB45\";\n    // U+EB44  Six channels (5.1 surround)\n    Glyphs[\"elecAudioChannelsSix\"] = \"\\uEB44\";\n    // U+EB40  Three channels (frontal)\n    Glyphs[\"elecAudioChannelsThreeFrontal\"] = \"\\uEB40\";\n    // U+EB41  Three channels (surround)\n    Glyphs[\"elecAudioChannelsThreeSurround\"] = \"\\uEB41\";\n    // U+EB3F  Two channels (stereo)\n    Glyphs[\"elecAudioChannelsTwo\"] = \"\\uEB3F\";\n    // U+EB49  Audio in\n    Glyphs[\"elecAudioIn\"] = \"\\uEB49\";\n    // U+EB3C  Mono audio setup\n    Glyphs[\"elecAudioMono\"] = \"\\uEB3C\";\n    // U+EB4A  Audio out\n    Glyphs[\"elecAudioOut\"] = \"\\uEB4A\";\n    // U+EB3D  Stereo audio setup\n    Glyphs[\"elecAudioStereo\"] = \"\\uEB3D\";\n    // U+EB1B  Camera\n    Glyphs[\"elecCamera\"] = \"\\uEB1B\";\n    // U+EB4D  Data in\n    Glyphs[\"elecDataIn\"] = \"\\uEB4D\";\n    // U+EB4E  Data out\n    Glyphs[\"elecDataOut\"] = \"\\uEB4E\";\n    // U+EB13  Disc\n    Glyphs[\"elecDisc\"] = \"\\uEB13\";\n    // U+EB4F  Download\n    Glyphs[\"elecDownload\"] = \"\\uEB4F\";\n    // U+EB2B  Eject\n    Glyphs[\"elecEject\"] = \"\\uEB2B\";\n    // U+EB1F  Fast-forward\n    Glyphs[\"elecFastForward\"] = \"\\uEB1F\";\n    // U+EB11  Headphones\n    Glyphs[\"elecHeadphones\"] = \"\\uEB11\";\n    // U+EB12  Headset\n    Glyphs[\"elecHeadset\"] = \"\\uEB12\";\n    // U+EB47  Line in\n    Glyphs[\"elecLineIn\"] = \"\\uEB47\";\n    // U+EB48  Line out\n    Glyphs[\"elecLineOut\"] = \"\\uEB48\";\n    // U+EB23  Loop\n    Glyphs[\"elecLoop\"] = \"\\uEB23\";\n    // U+EB1A  Loudspeaker\n    Glyphs[\"elecLoudspeaker\"] = \"\\uEB1A\";\n    // U+EB36  MIDI controller 0%\n    Glyphs[\"elecMIDIController0\"] = \"\\uEB36\";\n    // U+EB3B  MIDI controller 100%\n    Glyphs[\"elecMIDIController100\"] = \"\\uEB3B\";\n    // U+EB37  MIDI controller 20%\n    Glyphs[\"elecMIDIController20\"] = \"\\uEB37\";\n    // U+EB38  MIDI controller 40%\n    Glyphs[\"elecMIDIController40\"] = \"\\uEB38\";\n    // U+EB39  MIDI controller 60%\n    Glyphs[\"elecMIDIController60\"] = \"\\uEB39\";\n    // U+EB3A  MIDI controller 80%\n    Glyphs[\"elecMIDIController80\"] = \"\\uEB3A\";\n    // U+EB34  MIDI in\n    Glyphs[\"elecMIDIIn\"] = \"\\uEB34\";\n    // U+EB35  MIDI out\n    Glyphs[\"elecMIDIOut\"] = \"\\uEB35\";\n    // U+EB10  Microphone\n    Glyphs[\"elecMicrophone\"] = \"\\uEB10\";\n    // U+EB28  Mute microphone\n    Glyphs[\"elecMicrophoneMute\"] = \"\\uEB28\";\n    // U+EB29  Unmute microphone\n    Glyphs[\"elecMicrophoneUnmute\"] = \"\\uEB29\";\n    // U+EB15  Mixing console\n    Glyphs[\"elecMixingConsole\"] = \"\\uEB15\";\n    // U+EB18  Monitor\n    Glyphs[\"elecMonitor\"] = \"\\uEB18\";\n    // U+EB26  Mute\n    Glyphs[\"elecMute\"] = \"\\uEB26\";\n    // U+EB1E  Pause\n    Glyphs[\"elecPause\"] = \"\\uEB1E\";\n    // U+EB1C  Play\n    Glyphs[\"elecPlay\"] = \"\\uEB1C\";\n    // U+EB2A  Power on/off\n    Glyphs[\"elecPowerOnOff\"] = \"\\uEB2A\";\n    // U+EB19  Projector\n    Glyphs[\"elecProjector\"] = \"\\uEB19\";\n    // U+EB24  Replay\n    Glyphs[\"elecReplay\"] = \"\\uEB24\";\n    // U+EB20  Rewind\n    Glyphs[\"elecRewind\"] = \"\\uEB20\";\n    // U+EB25  Shuffle\n    Glyphs[\"elecShuffle\"] = \"\\uEB25\";\n    // U+EB22  Skip backwards\n    Glyphs[\"elecSkipBackwards\"] = \"\\uEB22\";\n    // U+EB21  Skip forwards\n    Glyphs[\"elecSkipForwards\"] = \"\\uEB21\";\n    // U+EB1D  Stop\n    Glyphs[\"elecStop\"] = \"\\uEB1D\";\n    // U+EB14  Tape\n    Glyphs[\"elecTape\"] = \"\\uEB14\";\n    // U+EB16  USB connection\n    Glyphs[\"elecUSB\"] = \"\\uEB16\";\n    // U+EB27  Unmute\n    Glyphs[\"elecUnmute\"] = \"\\uEB27\";\n    // U+EB50  Upload\n    Glyphs[\"elecUpload\"] = \"\\uEB50\";\n    // U+EB17  Video camera\n    Glyphs[\"elecVideoCamera\"] = \"\\uEB17\";\n    // U+EB4B  Video in\n    Glyphs[\"elecVideoIn\"] = \"\\uEB4B\";\n    // U+EB4C  Video out\n    Glyphs[\"elecVideoOut\"] = \"\\uEB4C\";\n    // U+EB2C  Combining volume fader\n    Glyphs[\"elecVolumeFader\"] = \"\\uEB2C\";\n    // U+EB2D  Combining volume fader thumb\n    Glyphs[\"elecVolumeFaderThumb\"] = \"\\uEB2D\";\n    // U+EB2E  Volume level 0%\n    Glyphs[\"elecVolumeLevel0\"] = \"\\uEB2E\";\n    // U+EB33  Volume level 100%\n    Glyphs[\"elecVolumeLevel100\"] = \"\\uEB33\";\n    // U+EB2F  Volume level 20%\n    Glyphs[\"elecVolumeLevel20\"] = \"\\uEB2F\";\n    // U+EB30  Volume level 40%\n    Glyphs[\"elecVolumeLevel40\"] = \"\\uEB30\";\n    // U+EB31  Volume level 60%\n    Glyphs[\"elecVolumeLevel60\"] = \"\\uEB31\";\n    // U+EB32  Volume level 80%\n    Glyphs[\"elecVolumeLevel80\"] = \"\\uEB32\";\n    // U+E062  F clef\n    Glyphs[\"fClef\"] = \"\\uE062\";\n    // U+1D122  F clef\n    Glyphs[\"fClefAlternate\"] = \"\\uD834\\uDD22\";\n    // U+E066  F clef quindicesima alta\n    Glyphs[\"fClef15ma\"] = \"\\uE066\";\n    // U+E063  F clef quindicesima bassa\n    Glyphs[\"fClef15mb\"] = \"\\uE063\";\n    // U+E065  F clef ottava alta\n    Glyphs[\"fClef8va\"] = \"\\uE065\";\n    // U+1D123  F clef ottava alta\n    Glyphs[\"fClef8vaAlternate\"] = \"\\uD834\\uDD23\";\n    // U+E064  F clef ottava bassa\n    Glyphs[\"fClef8vb\"] = \"\\uE064\";\n    // U+1D124  F clef ottava bassa\n    Glyphs[\"fClef8vbAlternate\"] = \"\\uD834\\uDD24\";\n    // U+E068  F clef, arrow down\n    Glyphs[\"fClefArrowDown\"] = \"\\uE068\";\n    // U+E067  F clef, arrow up\n    Glyphs[\"fClefArrowUp\"] = \"\\uE067\";\n    // U+E07C  F clef change\n    Glyphs[\"fClefChange\"] = \"\\uE07C\";\n    // U+E076  Reversed F clef\n    Glyphs[\"fClefReversed\"] = \"\\uE076\";\n    // U+E077  Turned F clef\n    Glyphs[\"fClefTurned\"] = \"\\uE077\";\n    // U+E4C0  Fermata above\n    Glyphs[\"fermataAbove\"] = \"\\uE4C0\";\n    // U+1D110  Fermata above\n    Glyphs[\"fermataAboveAlternate\"] = \"\\uD834\\uDD10\";\n    // U+E4C1  Fermata below\n    Glyphs[\"fermataBelow\"] = \"\\uE4C1\";\n    // U+1D111  Fermata below\n    Glyphs[\"fermataBelowAlternate\"] = \"\\uD834\\uDD11\";\n    // U+E4C6  Long fermata above\n    Glyphs[\"fermataLongAbove\"] = \"\\uE4C6\";\n    // U+E4C7  Long fermata below\n    Glyphs[\"fermataLongBelow\"] = \"\\uE4C7\";\n    // U+E4CA  Long fermata (Henze) above\n    Glyphs[\"fermataLongHenzeAbove\"] = \"\\uE4CA\";\n    // U+E4CB  Long fermata (Henze) below\n    Glyphs[\"fermataLongHenzeBelow\"] = \"\\uE4CB\";\n    // U+E4C4  Short fermata above\n    Glyphs[\"fermataShortAbove\"] = \"\\uE4C4\";\n    // U+E4C5  Short fermata below\n    Glyphs[\"fermataShortBelow\"] = \"\\uE4C5\";\n    // U+E4CC  Short fermata (Henze) above\n    Glyphs[\"fermataShortHenzeAbove\"] = \"\\uE4CC\";\n    // U+E4CD  Short fermata (Henze) below\n    Glyphs[\"fermataShortHenzeBelow\"] = \"\\uE4CD\";\n    // U+E4C8  Very long fermata above\n    Glyphs[\"fermataVeryLongAbove\"] = \"\\uE4C8\";\n    // U+E4C9  Very long fermata below\n    Glyphs[\"fermataVeryLongBelow\"] = \"\\uE4C9\";\n    // U+E4C2  Very short fermata above\n    Glyphs[\"fermataVeryShortAbove\"] = \"\\uE4C2\";\n    // U+E4C3  Very short fermata below\n    Glyphs[\"fermataVeryShortBelow\"] = \"\\uE4C3\";\n    // U+EA50  Figured bass 0\n    Glyphs[\"figbass0\"] = \"\\uEA50\";\n    // U+EA51  Figured bass 1\n    Glyphs[\"figbass1\"] = \"\\uEA51\";\n    // U+EA52  Figured bass 2\n    Glyphs[\"figbass2\"] = \"\\uEA52\";\n    // U+EA53  Figured bass 2 raised by half-step\n    Glyphs[\"figbass2Raised\"] = \"\\uEA53\";\n    // U+EA54  Figured bass 3\n    Glyphs[\"figbass3\"] = \"\\uEA54\";\n    // U+EA55  Figured bass 4\n    Glyphs[\"figbass4\"] = \"\\uEA55\";\n    // U+EA56  Figured bass 4 raised by half-step\n    Glyphs[\"figbass4Raised\"] = \"\\uEA56\";\n    // U+EA57  Figured bass 5\n    Glyphs[\"figbass5\"] = \"\\uEA57\";\n    // U+EA58  Figured bass 5 raised by half-step\n    Glyphs[\"figbass5Raised1\"] = \"\\uEA58\";\n    // U+EA59  Figured bass 5 raised by half-step 2\n    Glyphs[\"figbass5Raised2\"] = \"\\uEA59\";\n    // U+EA5A  Figured bass diminished 5\n    Glyphs[\"figbass5Raised3\"] = \"\\uEA5A\";\n    // U+EA5B  Figured bass 6\n    Glyphs[\"figbass6\"] = \"\\uEA5B\";\n    // U+EA5C  Figured bass 6 raised by half-step\n    Glyphs[\"figbass6Raised\"] = \"\\uEA5C\";\n    // U+EA6F  Figured bass 6 raised by half-step 2\n    Glyphs[\"figbass6Raised2\"] = \"\\uEA6F\";\n    // U+EA5D  Figured bass 7\n    Glyphs[\"figbass7\"] = \"\\uEA5D\";\n    // U+ECC0  Figured bass 7 diminished\n    Glyphs[\"figbass7Diminished\"] = \"\\uECC0\";\n    // U+EA5E  Figured bass 7 raised by half-step\n    Glyphs[\"figbass7Raised1\"] = \"\\uEA5E\";\n    // U+EA5F  Figured bass 7 lowered by a half-step\n    Glyphs[\"figbass7Raised2\"] = \"\\uEA5F\";\n    // U+EA60  Figured bass 8\n    Glyphs[\"figbass8\"] = \"\\uEA60\";\n    // U+EA61  Figured bass 9\n    Glyphs[\"figbass9\"] = \"\\uEA61\";\n    // U+EA62  Figured bass 9 raised by half-step\n    Glyphs[\"figbass9Raised\"] = \"\\uEA62\";\n    // U+EA68  Figured bass [\n    Glyphs[\"figbassBracketLeft\"] = \"\\uEA68\";\n    // U+EA69  Figured bass ]\n    Glyphs[\"figbassBracketRight\"] = \"\\uEA69\";\n    // U+EA6E  Combining lower\n    Glyphs[\"figbassCombiningLowering\"] = \"\\uEA6E\";\n    // U+EA6D  Combining raise\n    Glyphs[\"figbassCombiningRaising\"] = \"\\uEA6D\";\n    // U+EA63  Figured bass double flat\n    Glyphs[\"figbassDoubleFlat\"] = \"\\uEA63\";\n    // U+EA67  Figured bass double sharp\n    Glyphs[\"figbassDoubleSharp\"] = \"\\uEA67\";\n    // U+EA64  Figured bass flat\n    Glyphs[\"figbassFlat\"] = \"\\uEA64\";\n    // U+EA65  Figured bass natural\n    Glyphs[\"figbassNatural\"] = \"\\uEA65\";\n    // U+EA6A  Figured bass (\n    Glyphs[\"figbassParensLeft\"] = \"\\uEA6A\";\n    // U+EA6B  Figured bass )\n    Glyphs[\"figbassParensRight\"] = \"\\uEA6B\";\n    // U+EA6C  Figured bass +\n    Glyphs[\"figbassPlus\"] = \"\\uEA6C\";\n    // U+EA66  Figured bass sharp\n    Glyphs[\"figbassSharp\"] = \"\\uEA66\";\n    // U+ECC1  Figured bass triple flat\n    Glyphs[\"figbassTripleFlat\"] = \"\\uECC1\";\n    // U+ECC2  Figured bass triple sharp\n    Glyphs[\"figbassTripleSharp\"] = \"\\uECC2\";\n    // U+ED10  Fingering 0 (open string)\n    Glyphs[\"fingering0\"] = \"\\uED10\";\n    // U+ED80  Fingering 0 italic (open string)\n    Glyphs[\"fingering0Italic\"] = \"\\uED80\";\n    // U+ED11  Fingering 1 (thumb)\n    Glyphs[\"fingering1\"] = \"\\uED11\";\n    // U+ED81  Fingering 1 italic (thumb)\n    Glyphs[\"fingering1Italic\"] = \"\\uED81\";\n    // U+ED12  Fingering 2 (index finger)\n    Glyphs[\"fingering2\"] = \"\\uED12\";\n    // U+ED82  Fingering 2 italic (index finger)\n    Glyphs[\"fingering2Italic\"] = \"\\uED82\";\n    // U+ED13  Fingering 3 (middle finger)\n    Glyphs[\"fingering3\"] = \"\\uED13\";\n    // U+ED83  Fingering 3 italic (middle finger)\n    Glyphs[\"fingering3Italic\"] = \"\\uED83\";\n    // U+ED14  Fingering 4 (ring finger)\n    Glyphs[\"fingering4\"] = \"\\uED14\";\n    // U+ED84  Fingering 4 italic (ring finger)\n    Glyphs[\"fingering4Italic\"] = \"\\uED84\";\n    // U+ED15  Fingering 5 (little finger)\n    Glyphs[\"fingering5\"] = \"\\uED15\";\n    // U+ED85  Fingering 5 italic (little finger)\n    Glyphs[\"fingering5Italic\"] = \"\\uED85\";\n    // U+ED24  Fingering 6\n    Glyphs[\"fingering6\"] = \"\\uED24\";\n    // U+ED86  Fingering 6 italic\n    Glyphs[\"fingering6Italic\"] = \"\\uED86\";\n    // U+ED25  Fingering 7\n    Glyphs[\"fingering7\"] = \"\\uED25\";\n    // U+ED87  Fingering 7 italic\n    Glyphs[\"fingering7Italic\"] = \"\\uED87\";\n    // U+ED26  Fingering 8\n    Glyphs[\"fingering8\"] = \"\\uED26\";\n    // U+ED88  Fingering 8 italic\n    Glyphs[\"fingering8Italic\"] = \"\\uED88\";\n    // U+ED27  Fingering 9\n    Glyphs[\"fingering9\"] = \"\\uED27\";\n    // U+ED89  Fingering 9 italic\n    Glyphs[\"fingering9Italic\"] = \"\\uED89\";\n    // U+ED1B  Fingering a (anular; right-hand ring finger for guitar)\n    Glyphs[\"fingeringALower\"] = \"\\uED1B\";\n    // U+ED1C  Fingering c (right-hand little finger for guitar)\n    Glyphs[\"fingeringCLower\"] = \"\\uED1C\";\n    // U+ED1E  Fingering e (right-hand little finger for guitar)\n    Glyphs[\"fingeringELower\"] = \"\\uED1E\";\n    // U+ED19  Fingering i (indicio; right-hand index finger for guitar)\n    Glyphs[\"fingeringILower\"] = \"\\uED19\";\n    // U+ED2A  Fingering left bracket\n    Glyphs[\"fingeringLeftBracket\"] = \"\\uED2A\";\n    // U+ED8C  Fingering left bracket italic\n    Glyphs[\"fingeringLeftBracketItalic\"] = \"\\uED8C\";\n    // U+ED28  Fingering left parenthesis\n    Glyphs[\"fingeringLeftParenthesis\"] = \"\\uED28\";\n    // U+ED8A  Fingering left parenthesis italic\n    Glyphs[\"fingeringLeftParenthesisItalic\"] = \"\\uED8A\";\n    // U+ED1A  Fingering m (medio; right-hand middle finger for guitar)\n    Glyphs[\"fingeringMLower\"] = \"\\uED1A\";\n    // U+ED23  Multiple notes played by thumb or single finger\n    Glyphs[\"fingeringMultipleNotes\"] = \"\\uED23\";\n    // U+ED1F  Fingering o (right-hand little finger for guitar)\n    Glyphs[\"fingeringOLower\"] = \"\\uED1F\";\n    // U+ED17  Fingering p (pulgar; right-hand thumb for guitar)\n    Glyphs[\"fingeringPLower\"] = \"\\uED17\";\n    // U+ED8E  Fingering q (right-hand little finger for guitar)\n    Glyphs[\"fingeringQLower\"] = \"\\uED8E\";\n    // U+ED2B  Fingering right bracket\n    Glyphs[\"fingeringRightBracket\"] = \"\\uED2B\";\n    // U+ED8D  Fingering right bracket italic\n    Glyphs[\"fingeringRightBracketItalic\"] = \"\\uED8D\";\n    // U+ED29  Fingering right parenthesis\n    Glyphs[\"fingeringRightParenthesis\"] = \"\\uED29\";\n    // U+ED8B  Fingering right parenthesis italic\n    Glyphs[\"fingeringRightParenthesisItalic\"] = \"\\uED8B\";\n    // U+ED8F  Fingering s (right-hand little finger for guitar)\n    Glyphs[\"fingeringSLower\"] = \"\\uED8F\";\n    // U+ED2C  Fingering middle dot separator\n    Glyphs[\"fingeringSeparatorMiddleDot\"] = \"\\uED2C\";\n    // U+ED2D  Fingering white middle dot separator\n    Glyphs[\"fingeringSeparatorMiddleDotWhite\"] = \"\\uED2D\";\n    // U+ED2E  Fingering forward slash separator\n    Glyphs[\"fingeringSeparatorSlash\"] = \"\\uED2E\";\n    // U+ED20  Finger substitution above\n    Glyphs[\"fingeringSubstitutionAbove\"] = \"\\uED20\";\n    // U+ED21  Finger substitution below\n    Glyphs[\"fingeringSubstitutionBelow\"] = \"\\uED21\";\n    // U+ED22  Finger substitution dash\n    Glyphs[\"fingeringSubstitutionDash\"] = \"\\uED22\";\n    // U+ED18  Fingering t (right-hand thumb for guitar)\n    Glyphs[\"fingeringTLower\"] = \"\\uED18\";\n    // U+ED16  Fingering T (left-hand thumb for guitar)\n    Glyphs[\"fingeringTUpper\"] = \"\\uED16\";\n    // U+ED1D  Fingering x (right-hand little finger for guitar)\n    Glyphs[\"fingeringXLower\"] = \"\\uED1D\";\n    // U+E24F  Combining flag 8 (1024th) below\n    Glyphs[\"flag1024thDown\"] = \"\\uE24F\";\n    // U+E24E  Combining flag 8 (1024th) above\n    Glyphs[\"flag1024thUp\"] = \"\\uE24E\";\n    // U+E249  Combining flag 5 (128th) below\n    Glyphs[\"flag128thDown\"] = \"\\uE249\";\n    // U+E248  Combining flag 5 (128th) above\n    Glyphs[\"flag128thUp\"] = \"\\uE248\";\n    // U+1D172  Combining flag 5 (128th) above\n    Glyphs[\"flag128thUpAlternate\"] = \"\\uD834\\uDD72\";\n    // U+E243  Combining flag 2 (16th) below\n    Glyphs[\"flag16thDown\"] = \"\\uE243\";\n    // U+E242  Combining flag 2 (16th) above\n    Glyphs[\"flag16thUp\"] = \"\\uE242\";\n    // U+1D16F  Combining flag 2 (16th) above\n    Glyphs[\"flag16thUpAlternate\"] = \"\\uD834\\uDD6F\";\n    // U+E24B  Combining flag 6 (256th) below\n    Glyphs[\"flag256thDown\"] = \"\\uE24B\";\n    // U+E24A  Combining flag 6 (256th) above\n    Glyphs[\"flag256thUp\"] = \"\\uE24A\";\n    // U+E245  Combining flag 3 (32nd) below\n    Glyphs[\"flag32ndDown\"] = \"\\uE245\";\n    // U+E244  Combining flag 3 (32nd) above\n    Glyphs[\"flag32ndUp\"] = \"\\uE244\";\n    // U+1D170  Combining flag 3 (32nd) above\n    Glyphs[\"flag32ndUpAlternate\"] = \"\\uD834\\uDD70\";\n    // U+E24D  Combining flag 7 (512th) below\n    Glyphs[\"flag512thDown\"] = \"\\uE24D\";\n    // U+E24C  Combining flag 7 (512th) above\n    Glyphs[\"flag512thUp\"] = \"\\uE24C\";\n    // U+E247  Combining flag 4 (64th) below\n    Glyphs[\"flag64thDown\"] = \"\\uE247\";\n    // U+E246  Combining flag 4 (64th) above\n    Glyphs[\"flag64thUp\"] = \"\\uE246\";\n    // U+1D171  Combining flag 4 (64th) above\n    Glyphs[\"flag64thUpAlternate\"] = \"\\uD834\\uDD71\";\n    // U+E241  Combining flag 1 (8th) below\n    Glyphs[\"flag8thDown\"] = \"\\uE241\";\n    // U+E240  Combining flag 1 (8th) above\n    Glyphs[\"flag8thUp\"] = \"\\uE240\";\n    // U+1D16E  Combining flag 1 (8th) above\n    Glyphs[\"flag8thUpAlternate\"] = \"\\uD834\\uDD6E\";\n    // U+E251  Internal combining flag below\n    Glyphs[\"flagInternalDown\"] = \"\\uE251\";\n    // U+E250  Internal combining flag above\n    Glyphs[\"flagInternalUp\"] = \"\\uE250\";\n    // U+E850  3-string fretboard\n    Glyphs[\"fretboard3String\"] = \"\\uE850\";\n    // U+E851  3-string fretboard at nut\n    Glyphs[\"fretboard3StringNut\"] = \"\\uE851\";\n    // U+E852  4-string fretboard\n    Glyphs[\"fretboard4String\"] = \"\\uE852\";\n    // U+1D11D  4-string fretboard\n    Glyphs[\"fretboard4StringAlternate\"] = \"\\uD834\\uDD1D\";\n    // U+E853  4-string fretboard at nut\n    Glyphs[\"fretboard4StringNut\"] = \"\\uE853\";\n    // U+E854  5-string fretboard\n    Glyphs[\"fretboard5String\"] = \"\\uE854\";\n    // U+E855  5-string fretboard at nut\n    Glyphs[\"fretboard5StringNut\"] = \"\\uE855\";\n    // U+E856  6-string fretboard\n    Glyphs[\"fretboard6String\"] = \"\\uE856\";\n    // U+1D11C  6-string fretboard\n    Glyphs[\"fretboard6StringAlternate\"] = \"\\uD834\\uDD1C\";\n    // U+E857  6-string fretboard at nut\n    Glyphs[\"fretboard6StringNut\"] = \"\\uE857\";\n    // U+E858  Fingered fret (filled circle)\n    Glyphs[\"fretboardFilledCircle\"] = \"\\uE858\";\n    // U+E85A  Open string (O)\n    Glyphs[\"fretboardO\"] = \"\\uE85A\";\n    // U+E859  String not played (X)\n    Glyphs[\"fretboardX\"] = \"\\uE859\";\n    // U+EA93  Function theory angle bracket left\n    Glyphs[\"functionAngleLeft\"] = \"\\uEA93\";\n    // U+EA94  Function theory angle bracket right\n    Glyphs[\"functionAngleRight\"] = \"\\uEA94\";\n    // U+EA8F  Function theory bracket left\n    Glyphs[\"functionBracketLeft\"] = \"\\uEA8F\";\n    // U+EA90  Function theory bracket right\n    Glyphs[\"functionBracketRight\"] = \"\\uEA90\";\n    // U+EA81  Function theory dominant of dominant\n    Glyphs[\"functionDD\"] = \"\\uEA81\";\n    // U+EA80  Function theory minor dominant\n    Glyphs[\"functionDLower\"] = \"\\uEA80\";\n    // U+EA7F  Function theory major dominant\n    Glyphs[\"functionDUpper\"] = \"\\uEA7F\";\n    // U+EA78  Function theory 8\n    Glyphs[\"functionEight\"] = \"\\uEA78\";\n    // U+EA99  Function theory F\n    Glyphs[\"functionFUpper\"] = \"\\uEA99\";\n    // U+EA75  Function theory 5\n    Glyphs[\"functionFive\"] = \"\\uEA75\";\n    // U+EA74  Function theory 4\n    Glyphs[\"functionFour\"] = \"\\uEA74\";\n    // U+EA84  Function theory g\n    Glyphs[\"functionGLower\"] = \"\\uEA84\";\n    // U+EA83  Function theory G\n    Glyphs[\"functionGUpper\"] = \"\\uEA83\";\n    // U+EA7C  Function theory greater than\n    Glyphs[\"functionGreaterThan\"] = \"\\uEA7C\";\n    // U+EA9B  Function theory i\n    Glyphs[\"functionILower\"] = \"\\uEA9B\";\n    // U+EA9A  Function theory I\n    Glyphs[\"functionIUpper\"] = \"\\uEA9A\";\n    // U+EA9D  Function theory k\n    Glyphs[\"functionKLower\"] = \"\\uEA9D\";\n    // U+EA9C  Function theory K\n    Glyphs[\"functionKUpper\"] = \"\\uEA9C\";\n    // U+EA9F  Function theory l\n    Glyphs[\"functionLLower\"] = \"\\uEA9F\";\n    // U+EA9E  Function theory L\n    Glyphs[\"functionLUpper\"] = \"\\uEA9E\";\n    // U+EA7A  Function theory less than\n    Glyphs[\"functionLessThan\"] = \"\\uEA7A\";\n    // U+ED01  Function theory m\n    Glyphs[\"functionMLower\"] = \"\\uED01\";\n    // U+ED00  Function theory M\n    Glyphs[\"functionMUpper\"] = \"\\uED00\";\n    // U+EA7B  Function theory minus\n    Glyphs[\"functionMinus\"] = \"\\uEA7B\";\n    // U+EA86  Function theory n\n    Glyphs[\"functionNLower\"] = \"\\uEA86\";\n    // U+EA85  Function theory N\n    Glyphs[\"functionNUpper\"] = \"\\uEA85\";\n    // U+ED02  Function theory superscript N\n    Glyphs[\"functionNUpperSuperscript\"] = \"\\uED02\";\n    // U+EA79  Function theory 9\n    Glyphs[\"functionNine\"] = \"\\uEA79\";\n    // U+EA71  Function theory 1\n    Glyphs[\"functionOne\"] = \"\\uEA71\";\n    // U+EA88  Function theory p\n    Glyphs[\"functionPLower\"] = \"\\uEA88\";\n    // U+EA87  Function theory P\n    Glyphs[\"functionPUpper\"] = \"\\uEA87\";\n    // U+EA91  Function theory parenthesis left\n    Glyphs[\"functionParensLeft\"] = \"\\uEA91\";\n    // U+EA92  Function theory parenthesis right\n    Glyphs[\"functionParensRight\"] = \"\\uEA92\";\n    // U+EA98  Function theory prefix plus\n    Glyphs[\"functionPlus\"] = \"\\uEA98\";\n    // U+ED03  Function theory r\n    Glyphs[\"functionRLower\"] = \"\\uED03\";\n    // U+EA95  Function theory repetition 1\n    Glyphs[\"functionRepetition1\"] = \"\\uEA95\";\n    // U+EA96  Function theory repetition 2\n    Glyphs[\"functionRepetition2\"] = \"\\uEA96\";\n    // U+EA97  Function theory prefix ring\n    Glyphs[\"functionRing\"] = \"\\uEA97\";\n    // U+EA8A  Function theory minor subdominant\n    Glyphs[\"functionSLower\"] = \"\\uEA8A\";\n    // U+EA7E  Function theory minor subdominant of subdominant\n    Glyphs[\"functionSSLower\"] = \"\\uEA7E\";\n    // U+EA7D  Function theory major subdominant of subdominant\n    Glyphs[\"functionSSUpper\"] = \"\\uEA7D\";\n    // U+EA89  Function theory major subdominant\n    Glyphs[\"functionSUpper\"] = \"\\uEA89\";\n    // U+EA77  Function theory 7\n    Glyphs[\"functionSeven\"] = \"\\uEA77\";\n    // U+EA76  Function theory 6\n    Glyphs[\"functionSix\"] = \"\\uEA76\";\n    // U+EA82  Function theory double dominant seventh\n    Glyphs[\"functionSlashedDD\"] = \"\\uEA82\";\n    // U+EA8C  Function theory minor tonic\n    Glyphs[\"functionTLower\"] = \"\\uEA8C\";\n    // U+EA8B  Function theory tonic\n    Glyphs[\"functionTUpper\"] = \"\\uEA8B\";\n    // U+EA73  Function theory 3\n    Glyphs[\"functionThree\"] = \"\\uEA73\";\n    // U+EA72  Function theory 2\n    Glyphs[\"functionTwo\"] = \"\\uEA72\";\n    // U+EA8E  Function theory v\n    Glyphs[\"functionVLower\"] = \"\\uEA8E\";\n    // U+EA8D  Function theory V\n    Glyphs[\"functionVUpper\"] = \"\\uEA8D\";\n    // U+EA70  Function theory 0\n    Glyphs[\"functionZero\"] = \"\\uEA70\";\n    // U+E050  G clef\n    Glyphs[\"gClef\"] = \"\\uE050\";\n    // U+1D11E  G clef\n    Glyphs[\"gClefAlternate\"] = \"\\uD834\\uDD1E\";\n    // U+E054  G clef quindicesima alta\n    Glyphs[\"gClef15ma\"] = \"\\uE054\";\n    // U+E051  G clef quindicesima bassa\n    Glyphs[\"gClef15mb\"] = \"\\uE051\";\n    // U+E053  G clef ottava alta\n    Glyphs[\"gClef8va\"] = \"\\uE053\";\n    // U+1D11F  G clef ottava alta\n    Glyphs[\"gClef8vaAlternate\"] = \"\\uD834\\uDD1F\";\n    // U+E052  G clef ottava bassa\n    Glyphs[\"gClef8vb\"] = \"\\uE052\";\n    // U+1D120  G clef ottava bassa\n    Glyphs[\"gClef8vbAlternate\"] = \"\\uD834\\uDD20\";\n    // U+E056  G clef ottava bassa with C clef\n    Glyphs[\"gClef8vbCClef\"] = \"\\uE056\";\n    // U+E055  G clef ottava bassa (old style)\n    Glyphs[\"gClef8vbOld\"] = \"\\uE055\";\n    // U+E057  G clef, optionally ottava bassa\n    Glyphs[\"gClef8vbParens\"] = \"\\uE057\";\n    // U+E05B  G clef, arrow down\n    Glyphs[\"gClefArrowDown\"] = \"\\uE05B\";\n    // U+E05A  G clef, arrow up\n    Glyphs[\"gClefArrowUp\"] = \"\\uE05A\";\n    // U+E07A  G clef change\n    Glyphs[\"gClefChange\"] = \"\\uE07A\";\n    // U+E059  Combining G clef, number above\n    Glyphs[\"gClefLigatedNumberAbove\"] = \"\\uE059\";\n    // U+E058  Combining G clef, number below\n    Glyphs[\"gClefLigatedNumberBelow\"] = \"\\uE058\";\n    // U+E073  Reversed G clef\n    Glyphs[\"gClefReversed\"] = \"\\uE073\";\n    // U+E074  Turned G clef\n    Glyphs[\"gClefTurned\"] = \"\\uE074\";\n    // U+E586  Glissando down\n    Glyphs[\"glissandoDown\"] = \"\\uE586\";\n    // U+1D1B2  Glissando down\n    Glyphs[\"glissandoDownAlternate\"] = \"\\uD834\\uDDB2\";\n    // U+E585  Glissando up\n    Glyphs[\"glissandoUp\"] = \"\\uE585\";\n    // U+1D1B1  Glissando up\n    Glyphs[\"glissandoUpAlternate\"] = \"\\uD834\\uDDB1\";\n    // U+E561  Slashed grace note stem down\n    Glyphs[\"graceNoteAcciaccaturaStemDown\"] = \"\\uE561\";\n    // U+E560  Slashed grace note stem up\n    Glyphs[\"graceNoteAcciaccaturaStemUp\"] = \"\\uE560\";\n    // U+1D194  Slashed grace note stem up\n    Glyphs[\"graceNoteAcciaccaturaStemUpAlternate\"] = \"\\uD834\\uDD94\";\n    // U+E563  Grace note stem down\n    Glyphs[\"graceNoteAppoggiaturaStemDown\"] = \"\\uE563\";\n    // U+E562  Grace note stem up\n    Glyphs[\"graceNoteAppoggiaturaStemUp\"] = \"\\uE562\";\n    // U+1D195  Grace note stem up\n    Glyphs[\"graceNoteAppoggiaturaStemUpAlternate\"] = \"\\uD834\\uDD95\";\n    // U+E565  Slash for stem down grace note\n    Glyphs[\"graceNoteSlashStemDown\"] = \"\\uE565\";\n    // U+E564  Slash for stem up grace note\n    Glyphs[\"graceNoteSlashStemUp\"] = \"\\uE564\";\n    // U+E848  Full barré\n    Glyphs[\"guitarBarreFull\"] = \"\\uE848\";\n    // U+E849  Half barré\n    Glyphs[\"guitarBarreHalf\"] = \"\\uE849\";\n    // U+E83F  Closed wah/volume pedal\n    Glyphs[\"guitarClosePedal\"] = \"\\uE83F\";\n    // U+E843  Fade in\n    Glyphs[\"guitarFadeIn\"] = \"\\uE843\";\n    // U+E844  Fade out\n    Glyphs[\"guitarFadeOut\"] = \"\\uE844\";\n    // U+E842  Golpe (tapping the pick guard)\n    Glyphs[\"guitarGolpe\"] = \"\\uE842\";\n    // U+E83E  Half-open wah/volume pedal\n    Glyphs[\"guitarHalfOpenPedal\"] = \"\\uE83E\";\n    // U+E840  Left-hand tapping\n    Glyphs[\"guitarLeftHandTapping\"] = \"\\uE840\";\n    // U+E83D  Open wah/volume pedal\n    Glyphs[\"guitarOpenPedal\"] = \"\\uE83D\";\n    // U+E841  Right-hand tapping\n    Glyphs[\"guitarRightHandTapping\"] = \"\\uE841\";\n    // U+E832  Guitar shake\n    Glyphs[\"guitarShake\"] = \"\\uE832\";\n    // U+E833  String number 0\n    Glyphs[\"guitarString0\"] = \"\\uE833\";\n    // U+E834  String number 1\n    Glyphs[\"guitarString1\"] = \"\\uE834\";\n    // U+E84A  String number 10\n    Glyphs[\"guitarString10\"] = \"\\uE84A\";\n    // U+E84B  String number 11\n    Glyphs[\"guitarString11\"] = \"\\uE84B\";\n    // U+E84C  String number 12\n    Glyphs[\"guitarString12\"] = \"\\uE84C\";\n    // U+E84D  String number 13\n    Glyphs[\"guitarString13\"] = \"\\uE84D\";\n    // U+E835  String number 2\n    Glyphs[\"guitarString2\"] = \"\\uE835\";\n    // U+E836  String number 3\n    Glyphs[\"guitarString3\"] = \"\\uE836\";\n    // U+E837  String number 4\n    Glyphs[\"guitarString4\"] = \"\\uE837\";\n    // U+E838  String number 5\n    Glyphs[\"guitarString5\"] = \"\\uE838\";\n    // U+E839  String number 6\n    Glyphs[\"guitarString6\"] = \"\\uE839\";\n    // U+E83A  String number 7\n    Glyphs[\"guitarString7\"] = \"\\uE83A\";\n    // U+E83B  String number 8\n    Glyphs[\"guitarString8\"] = \"\\uE83B\";\n    // U+E83C  String number 9\n    Glyphs[\"guitarString9\"] = \"\\uE83C\";\n    // U+E847  Strum direction down\n    Glyphs[\"guitarStrumDown\"] = \"\\uE847\";\n    // U+E846  Strum direction up\n    Glyphs[\"guitarStrumUp\"] = \"\\uE846\";\n    // U+E831  Guitar vibrato bar dip\n    Glyphs[\"guitarVibratoBarDip\"] = \"\\uE831\";\n    // U+E830  Guitar vibrato bar scoop\n    Glyphs[\"guitarVibratoBarScoop\"] = \"\\uE830\";\n    // U+EAB2  Vibrato wiggle segment\n    Glyphs[\"guitarVibratoStroke\"] = \"\\uEAB2\";\n    // U+E845  Volume swell\n    Glyphs[\"guitarVolumeSwell\"] = \"\\uE845\";\n    // U+EAB3  Wide vibrato wiggle segment\n    Glyphs[\"guitarWideVibratoStroke\"] = \"\\uEAB3\";\n    // U+E81F  Belltree\n    Glyphs[\"handbellsBelltree\"] = \"\\uE81F\";\n    // U+E81E  Damp 3\n    Glyphs[\"handbellsDamp3\"] = \"\\uE81E\";\n    // U+E81B  Echo\n    Glyphs[\"handbellsEcho1\"] = \"\\uE81B\";\n    // U+E81C  Echo 2\n    Glyphs[\"handbellsEcho2\"] = \"\\uE81C\";\n    // U+E81D  Gyro\n    Glyphs[\"handbellsGyro\"] = \"\\uE81D\";\n    // U+E812  Hand martellato\n    Glyphs[\"handbellsHandMartellato\"] = \"\\uE812\";\n    // U+E815  Mallet, bell on table\n    Glyphs[\"handbellsMalletBellOnTable\"] = \"\\uE815\";\n    // U+E814  Mallet, bell suspended\n    Glyphs[\"handbellsMalletBellSuspended\"] = \"\\uE814\";\n    // U+E816  Mallet lift\n    Glyphs[\"handbellsMalletLft\"] = \"\\uE816\";\n    // U+E810  Martellato\n    Glyphs[\"handbellsMartellato\"] = \"\\uE810\";\n    // U+E811  Martellato lift\n    Glyphs[\"handbellsMartellatoLift\"] = \"\\uE811\";\n    // U+E813  Muted martellato\n    Glyphs[\"handbellsMutedMartellato\"] = \"\\uE813\";\n    // U+E817  Pluck lift\n    Glyphs[\"handbellsPluckLift\"] = \"\\uE817\";\n    // U+E81A  Swing\n    Glyphs[\"handbellsSwing\"] = \"\\uE81A\";\n    // U+E819  Swing down\n    Glyphs[\"handbellsSwingDown\"] = \"\\uE819\";\n    // U+E818  Swing up\n    Glyphs[\"handbellsSwingUp\"] = \"\\uE818\";\n    // U+E821  Table pair of handbells\n    Glyphs[\"handbellsTablePairBells\"] = \"\\uE821\";\n    // U+E820  Table single handbell\n    Glyphs[\"handbellsTableSingleBell\"] = \"\\uE820\";\n    // U+E68F  Metal rod pictogram\n    Glyphs[\"harpMetalRod\"] = \"\\uE68F\";\n    // U+E681  Harp pedal centered (natural)\n    Glyphs[\"harpPedalCentered\"] = \"\\uE681\";\n    // U+E683  Harp pedal divider\n    Glyphs[\"harpPedalDivider\"] = \"\\uE683\";\n    // U+E682  Harp pedal lowered (sharp)\n    Glyphs[\"harpPedalLowered\"] = \"\\uE682\";\n    // U+E680  Harp pedal raised (flat)\n    Glyphs[\"harpPedalRaised\"] = \"\\uE680\";\n    // U+E695  Ascending aeolian chords (Salzedo)\n    Glyphs[\"harpSalzedoAeolianAscending\"] = \"\\uE695\";\n    // U+E696  Descending aeolian chords (Salzedo)\n    Glyphs[\"harpSalzedoAeolianDescending\"] = \"\\uE696\";\n    // U+E69A  Damp above (Salzedo)\n    Glyphs[\"harpSalzedoDampAbove\"] = \"\\uE69A\";\n    // U+E699  Damp below (Salzedo)\n    Glyphs[\"harpSalzedoDampBelow\"] = \"\\uE699\";\n    // U+E698  Damp with both hands (Salzedo)\n    Glyphs[\"harpSalzedoDampBothHands\"] = \"\\uE698\";\n    // U+E697  Damp only low strings (Salzedo)\n    Glyphs[\"harpSalzedoDampLowStrings\"] = \"\\uE697\";\n    // U+E68D  Fluidic sounds, left hand (Salzedo)\n    Glyphs[\"harpSalzedoFluidicSoundsLeft\"] = \"\\uE68D\";\n    // U+E68E  Fluidic sounds, right hand (Salzedo)\n    Glyphs[\"harpSalzedoFluidicSoundsRight\"] = \"\\uE68E\";\n    // U+E69C  Isolated sounds (Salzedo)\n    Glyphs[\"harpSalzedoIsolatedSounds\"] = \"\\uE69C\";\n    // U+E688  Metallic sounds (Salzedo)\n    Glyphs[\"harpSalzedoMetallicSounds\"] = \"\\uE688\";\n    // U+E69B  Metallic sounds, one string (Salzedo)\n    Glyphs[\"harpSalzedoMetallicSoundsOneString\"] = \"\\uE69B\";\n    // U+E68C  Muffle totally (Salzedo)\n    Glyphs[\"harpSalzedoMuffleTotally\"] = \"\\uE68C\";\n    // U+E685  Oboic flux (Salzedo)\n    Glyphs[\"harpSalzedoOboicFlux\"] = \"\\uE685\";\n    // U+E68A  Play at upper end of strings (Salzedo)\n    Glyphs[\"harpSalzedoPlayUpperEnd\"] = \"\\uE68A\";\n    // U+E684  Slide with suppleness (Salzedo)\n    Glyphs[\"harpSalzedoSlideWithSuppleness\"] = \"\\uE684\";\n    // U+E69D  Snare drum effect (Salzedo)\n    Glyphs[\"harpSalzedoSnareDrum\"] = \"\\uE69D\";\n    // U+E689  Tam-tam sounds (Salzedo)\n    Glyphs[\"harpSalzedoTamTamSounds\"] = \"\\uE689\";\n    // U+E686  Thunder effect (Salzedo)\n    Glyphs[\"harpSalzedoThunderEffect\"] = \"\\uE686\";\n    // U+E68B  Timpanic sounds (Salzedo)\n    Glyphs[\"harpSalzedoTimpanicSounds\"] = \"\\uE68B\";\n    // U+E687  Whistling sounds (Salzedo)\n    Glyphs[\"harpSalzedoWhistlingSounds\"] = \"\\uE687\";\n    // U+E694  Combining string noise for stem\n    Glyphs[\"harpStringNoiseStem\"] = \"\\uE694\";\n    // U+E690  Tuning key pictogram\n    Glyphs[\"harpTuningKey\"] = \"\\uE690\";\n    // U+E693  Retune strings for glissando\n    Glyphs[\"harpTuningKeyGlissando\"] = \"\\uE693\";\n    // U+E691  Use handle of tuning key pictogram\n    Glyphs[\"harpTuningKeyHandle\"] = \"\\uE691\";\n    // U+E692  Use shank of tuning key pictogram\n    Glyphs[\"harpTuningKeyShank\"] = \"\\uE692\";\n    // U+ED70  Indian drum clef\n    Glyphs[\"indianDrumClef\"] = \"\\uED70\";\n    // U+EDE2  Back-chug\n    Glyphs[\"kahnBackChug\"] = \"\\uEDE2\";\n    // U+EDD8  Back-flap\n    Glyphs[\"kahnBackFlap\"] = \"\\uEDD8\";\n    // U+EDE1  Back-riff\n    Glyphs[\"kahnBackRiff\"] = \"\\uEDE1\";\n    // U+EDDA  Back-rip\n    Glyphs[\"kahnBackRip\"] = \"\\uEDDA\";\n    // U+EDC6  Ball-change\n    Glyphs[\"kahnBallChange\"] = \"\\uEDC6\";\n    // U+EDCD  Ball-dig\n    Glyphs[\"kahnBallDig\"] = \"\\uEDCD\";\n    // U+EDA7  Brush-backward\n    Glyphs[\"kahnBrushBackward\"] = \"\\uEDA7\";\n    // U+EDA6  Brush-forward\n    Glyphs[\"kahnBrushForward\"] = \"\\uEDA6\";\n    // U+EDDD  Chug\n    Glyphs[\"kahnChug\"] = \"\\uEDDD\";\n    // U+EDB8  Clap\n    Glyphs[\"kahnClap\"] = \"\\uEDB8\";\n    // U+EDBA  Double-snap\n    Glyphs[\"kahnDoubleSnap\"] = \"\\uEDBA\";\n    // U+EDEB  Double-wing\n    Glyphs[\"kahnDoubleWing\"] = \"\\uEDEB\";\n    // U+EDB2  Draw-step\n    Glyphs[\"kahnDrawStep\"] = \"\\uEDB2\";\n    // U+EDB3  Draw-tap\n    Glyphs[\"kahnDrawTap\"] = \"\\uEDB3\";\n    // U+EDCF  Flam\n    Glyphs[\"kahnFlam\"] = \"\\uEDCF\";\n    // U+EDD5  Flap\n    Glyphs[\"kahnFlap\"] = \"\\uEDD5\";\n    // U+EDD7  Flap-step\n    Glyphs[\"kahnFlapStep\"] = \"\\uEDD7\";\n    // U+EDA9  Flat\n    Glyphs[\"kahnFlat\"] = \"\\uEDA9\";\n    // U+EDB0  Flea-hop\n    Glyphs[\"kahnFleaHop\"] = \"\\uEDB0\";\n    // U+EDB1  Flea-tap\n    Glyphs[\"kahnFleaTap\"] = \"\\uEDB1\";\n    // U+EDA8  Grace-tap\n    Glyphs[\"kahnGraceTap\"] = \"\\uEDA8\";\n    // U+EDD1  Grace-tap-change\n    Glyphs[\"kahnGraceTapChange\"] = \"\\uEDD1\";\n    // U+EDD0  Grace-tap-hop\n    Glyphs[\"kahnGraceTapHop\"] = \"\\uEDD0\";\n    // U+EDD3  Grace-tap-stamp\n    Glyphs[\"kahnGraceTapStamp\"] = \"\\uEDD3\";\n    // U+EDAA  Heel\n    Glyphs[\"kahnHeel\"] = \"\\uEDAA\";\n    // U+EDC9  Heel-change\n    Glyphs[\"kahnHeelChange\"] = \"\\uEDC9\";\n    // U+EDBB  Heel-click\n    Glyphs[\"kahnHeelClick\"] = \"\\uEDBB\";\n    // U+EDB6  Heel-drop\n    Glyphs[\"kahnHeelDrop\"] = \"\\uEDB6\";\n    // U+EDC4  Heel-step\n    Glyphs[\"kahnHeelStep\"] = \"\\uEDC4\";\n    // U+EDCB  Heel-tap\n    Glyphs[\"kahnHeelTap\"] = \"\\uEDCB\";\n    // U+EDA2  Hop\n    Glyphs[\"kahnHop\"] = \"\\uEDA2\";\n    // U+EDA5  Jump-apart\n    Glyphs[\"kahnJumpApart\"] = \"\\uEDA5\";\n    // U+EDA4  Jump-together\n    Glyphs[\"kahnJumpTogether\"] = \"\\uEDA4\";\n    // U+EDAD  Knee-inward\n    Glyphs[\"kahnKneeInward\"] = \"\\uEDAD\";\n    // U+EDAC  Knee-outward\n    Glyphs[\"kahnKneeOutward\"] = \"\\uEDAC\";\n    // U+EDA3  Leap\n    Glyphs[\"kahnLeap\"] = \"\\uEDA3\";\n    // U+EDD2  Leap-flat-foot\n    Glyphs[\"kahnLeapFlatFoot\"] = \"\\uEDD2\";\n    // U+EDD4  Leap-heel-click\n    Glyphs[\"kahnLeapHeelClick\"] = \"\\uEDD4\";\n    // U+EDBF  Left-catch\n    Glyphs[\"kahnLeftCatch\"] = \"\\uEDBF\";\n    // U+EDBD  Left-cross\n    Glyphs[\"kahnLeftCross\"] = \"\\uEDBD\";\n    // U+EDEE  Left-foot\n    Glyphs[\"kahnLeftFoot\"] = \"\\uEDEE\";\n    // U+EDC1  Left-toe-strike\n    Glyphs[\"kahnLeftToeStrike\"] = \"\\uEDC1\";\n    // U+EDF0  Left-turn\n    Glyphs[\"kahnLeftTurn\"] = \"\\uEDF0\";\n    // U+EDEC  Over-the-top\n    Glyphs[\"kahnOverTheTop\"] = \"\\uEDEC\";\n    // U+EDED  Over-the-top-tap\n    Glyphs[\"kahnOverTheTopTap\"] = \"\\uEDED\";\n    // U+EDE3  Pull\n    Glyphs[\"kahnPull\"] = \"\\uEDE3\";\n    // U+EDDE  Push\n    Glyphs[\"kahnPush\"] = \"\\uEDDE\";\n    // U+EDE0  Riff\n    Glyphs[\"kahnRiff\"] = \"\\uEDE0\";\n    // U+EDE7  Riffle\n    Glyphs[\"kahnRiffle\"] = \"\\uEDE7\";\n    // U+EDC0  Right-catch\n    Glyphs[\"kahnRightCatch\"] = \"\\uEDC0\";\n    // U+EDBE  Right-cross\n    Glyphs[\"kahnRightCross\"] = \"\\uEDBE\";\n    // U+EDEF  Right-foot\n    Glyphs[\"kahnRightFoot\"] = \"\\uEDEF\";\n    // U+EDC2  Right-toe-strike\n    Glyphs[\"kahnRightToeStrike\"] = \"\\uEDC2\";\n    // U+EDF1  Right-turn\n    Glyphs[\"kahnRightTurn\"] = \"\\uEDF1\";\n    // U+EDD6  Rip\n    Glyphs[\"kahnRip\"] = \"\\uEDD6\";\n    // U+EDE8  Ripple\n    Glyphs[\"kahnRipple\"] = \"\\uEDE8\";\n    // U+EDAE  Scrape\n    Glyphs[\"kahnScrape\"] = \"\\uEDAE\";\n    // U+EDDC  Scuff\n    Glyphs[\"kahnScuff\"] = \"\\uEDDC\";\n    // U+EDE6  Scuffle\n    Glyphs[\"kahnScuffle\"] = \"\\uEDE6\";\n    // U+EDE5  Shuffle\n    Glyphs[\"kahnShuffle\"] = \"\\uEDE5\";\n    // U+EDCE  Slam\n    Glyphs[\"kahnSlam\"] = \"\\uEDCE\";\n    // U+EDD9  Slap\n    Glyphs[\"kahnSlap\"] = \"\\uEDD9\";\n    // U+EDB4  Slide-step\n    Glyphs[\"kahnSlideStep\"] = \"\\uEDB4\";\n    // U+EDB5  Slide-tap\n    Glyphs[\"kahnSlideTap\"] = \"\\uEDB5\";\n    // U+EDB9  Snap\n    Glyphs[\"kahnSnap\"] = \"\\uEDB9\";\n    // U+EDC3  Stamp\n    Glyphs[\"kahnStamp\"] = \"\\uEDC3\";\n    // U+EDC8  Stamp-stamp\n    Glyphs[\"kahnStampStamp\"] = \"\\uEDC8\";\n    // U+EDA0  Step\n    Glyphs[\"kahnStep\"] = \"\\uEDA0\";\n    // U+EDC7  Step-stamp\n    Glyphs[\"kahnStepStamp\"] = \"\\uEDC7\";\n    // U+EDCA  Stomp\n    Glyphs[\"kahnStomp\"] = \"\\uEDCA\";\n    // U+EDDB  Stomp-brush\n    Glyphs[\"kahnStompBrush\"] = \"\\uEDDB\";\n    // U+EDA1  Tap\n    Glyphs[\"kahnTap\"] = \"\\uEDA1\";\n    // U+EDAB  Toe\n    Glyphs[\"kahnToe\"] = \"\\uEDAB\";\n    // U+EDBC  Toe-click\n    Glyphs[\"kahnToeClick\"] = \"\\uEDBC\";\n    // U+EDB7  Toe-drop\n    Glyphs[\"kahnToeDrop\"] = \"\\uEDB7\";\n    // U+EDC5  Toe-step\n    Glyphs[\"kahnToeStep\"] = \"\\uEDC5\";\n    // U+EDCC  Toe-tap\n    Glyphs[\"kahnToeTap\"] = \"\\uEDCC\";\n    // U+EDAF  Trench\n    Glyphs[\"kahnTrench\"] = \"\\uEDAF\";\n    // U+EDE9  Wing\n    Glyphs[\"kahnWing\"] = \"\\uEDE9\";\n    // U+EDEA  Wing-change\n    Glyphs[\"kahnWingChange\"] = \"\\uEDEA\";\n    // U+EDE4  Zank\n    Glyphs[\"kahnZank\"] = \"\\uEDE4\";\n    // U+EDDF  Zink\n    Glyphs[\"kahnZink\"] = \"\\uEDDF\";\n    // U+E668  Clavichord bebung, 2 finger movements (above)\n    Glyphs[\"keyboardBebung2DotsAbove\"] = \"\\uE668\";\n    // U+E669  Clavichord bebung, 2 finger movements (below)\n    Glyphs[\"keyboardBebung2DotsBelow\"] = \"\\uE669\";\n    // U+E66A  Clavichord bebung, 3 finger movements (above)\n    Glyphs[\"keyboardBebung3DotsAbove\"] = \"\\uE66A\";\n    // U+E66B  Clavichord bebung, 3 finger movements (below)\n    Glyphs[\"keyboardBebung3DotsBelow\"] = \"\\uE66B\";\n    // U+E66C  Clavichord bebung, 4 finger movements (above)\n    Glyphs[\"keyboardBebung4DotsAbove\"] = \"\\uE66C\";\n    // U+E66D  Clavichord bebung, 4 finger movements (below)\n    Glyphs[\"keyboardBebung4DotsBelow\"] = \"\\uE66D\";\n    // U+E65E  Left pedal pictogram\n    Glyphs[\"keyboardLeftPedalPictogram\"] = \"\\uE65E\";\n    // U+E65F  Middle pedal pictogram\n    Glyphs[\"keyboardMiddlePedalPictogram\"] = \"\\uE65F\";\n    // U+E653  Pedal d\n    Glyphs[\"keyboardPedalD\"] = \"\\uE653\";\n    // U+E654  Pedal dot\n    Glyphs[\"keyboardPedalDot\"] = \"\\uE654\";\n    // U+E652  Pedal e\n    Glyphs[\"keyboardPedalE\"] = \"\\uE652\";\n    // U+E656  Half-pedal mark\n    Glyphs[\"keyboardPedalHalf\"] = \"\\uE656\";\n    // U+1D1B0  Half-pedal mark\n    Glyphs[\"keyboardPedalHalfAlternate\"] = \"\\uD834\\uDDB0\";\n    // U+E65B  Half pedal mark 1\n    Glyphs[\"keyboardPedalHalf2\"] = \"\\uE65B\";\n    // U+E65C  Half pedal mark 2\n    Glyphs[\"keyboardPedalHalf3\"] = \"\\uE65C\";\n    // U+E661  Pedal heel 1\n    Glyphs[\"keyboardPedalHeel1\"] = \"\\uE661\";\n    // U+E662  Pedal heel 2\n    Glyphs[\"keyboardPedalHeel2\"] = \"\\uE662\";\n    // U+E663  Pedal heel 3 (Davis)\n    Glyphs[\"keyboardPedalHeel3\"] = \"\\uE663\";\n    // U+E674  Pedal heel to toe\n    Glyphs[\"keyboardPedalHeelToToe\"] = \"\\uE674\";\n    // U+E666  Pedal heel or toe\n    Glyphs[\"keyboardPedalHeelToe\"] = \"\\uE666\";\n    // U+E673  Pedal hook end\n    Glyphs[\"keyboardPedalHookEnd\"] = \"\\uE673\";\n    // U+E672  Pedal hook start\n    Glyphs[\"keyboardPedalHookStart\"] = \"\\uE672\";\n    // U+E658  Pedal hyphen\n    Glyphs[\"keyboardPedalHyphen\"] = \"\\uE658\";\n    // U+E651  Pedal P\n    Glyphs[\"keyboardPedalP\"] = \"\\uE651\";\n    // U+E676  Left parenthesis for pedal marking\n    Glyphs[\"keyboardPedalParensLeft\"] = \"\\uE676\";\n    // U+E677  Right parenthesis for pedal marking\n    Glyphs[\"keyboardPedalParensRight\"] = \"\\uE677\";\n    // U+E650  Pedal mark\n    Glyphs[\"keyboardPedalPed\"] = \"\\uE650\";\n    // U+1D1AE  Pedal mark\n    Glyphs[\"keyboardPedalPedAlternate\"] = \"\\uD834\\uDDAE\";\n    // U+E65A  Pedal S\n    Glyphs[\"keyboardPedalS\"] = \"\\uE65A\";\n    // U+E659  Sostenuto pedal mark\n    Glyphs[\"keyboardPedalSost\"] = \"\\uE659\";\n    // U+E664  Pedal toe 1\n    Glyphs[\"keyboardPedalToe1\"] = \"\\uE664\";\n    // U+E665  Pedal toe 2\n    Glyphs[\"keyboardPedalToe2\"] = \"\\uE665\";\n    // U+E675  Pedal toe to heel\n    Glyphs[\"keyboardPedalToeToHeel\"] = \"\\uE675\";\n    // U+E655  Pedal up mark\n    Glyphs[\"keyboardPedalUp\"] = \"\\uE655\";\n    // U+1D1AF  Pedal up mark\n    Glyphs[\"keyboardPedalUpAlternate\"] = \"\\uD834\\uDDAF\";\n    // U+E657  Pedal up notch\n    Glyphs[\"keyboardPedalUpNotch\"] = \"\\uE657\";\n    // U+E65D  Pedal up special\n    Glyphs[\"keyboardPedalUpSpecial\"] = \"\\uE65D\";\n    // U+E670  Play with left hand\n    Glyphs[\"keyboardPlayWithLH\"] = \"\\uE670\";\n    // U+E671  Play with left hand (end)\n    Glyphs[\"keyboardPlayWithLHEnd\"] = \"\\uE671\";\n    // U+E66E  Play with right hand\n    Glyphs[\"keyboardPlayWithRH\"] = \"\\uE66E\";\n    // U+E66F  Play with right hand (end)\n    Glyphs[\"keyboardPlayWithRHEnd\"] = \"\\uE66F\";\n    // U+E667  Pluck strings inside piano (Maderna)\n    Glyphs[\"keyboardPluckInside\"] = \"\\uE667\";\n    // U+E660  Right pedal pictogram\n    Glyphs[\"keyboardRightPedalPictogram\"] = \"\\uE660\";\n    // U+EC3E  Kievan flat\n    Glyphs[\"kievanAccidentalFlat\"] = \"\\uEC3E\";\n    // U+1D1E8  Kievan flat\n    Glyphs[\"kievanAccidentalFlatAlternate\"] = \"\\uD834\\uDDE8\";\n    // U+EC3D  Kievan sharp\n    Glyphs[\"kievanAccidentalSharp\"] = \"\\uEC3D\";\n    // U+EC3C  Kievan augmentation dot\n    Glyphs[\"kievanAugmentationDot\"] = \"\\uEC3C\";\n    // U+EC30  Kievan C clef (tse-fa-ut)\n    Glyphs[\"kievanCClef\"] = \"\\uEC30\";\n    // U+1D1DE  Kievan C clef (tse-fa-ut)\n    Glyphs[\"kievanCClefAlternate\"] = \"\\uD834\\uDDDE\";\n    // U+EC31  Kievan ending symbol\n    Glyphs[\"kievanEndingSymbol\"] = \"\\uEC31\";\n    // U+1D1DF  Kievan ending symbol\n    Glyphs[\"kievanEndingSymbolAlternate\"] = \"\\uD834\\uDDDF\";\n    // U+EC3A  Kievan eighth note, stem down\n    Glyphs[\"kievanNote8thStemDown\"] = \"\\uEC3A\";\n    // U+1D1E6  Kievan eighth note, stem down\n    Glyphs[\"kievanNote8thStemDownAlternate\"] = \"\\uD834\\uDDE6\";\n    // U+EC39  Kievan eighth note, stem up\n    Glyphs[\"kievanNote8thStemUp\"] = \"\\uEC39\";\n    // U+1D1E7  Kievan eighth note, stem up\n    Glyphs[\"kievanNote8thStemUpAlternate\"] = \"\\uD834\\uDDE7\";\n    // U+EC3B  Kievan beam\n    Glyphs[\"kievanNoteBeam\"] = \"\\uEC3B\";\n    // U+EC35  Kievan half note (on staff line)\n    Glyphs[\"kievanNoteHalfStaffLine\"] = \"\\uEC35\";\n    // U+1D1E3  Kievan half note (on staff line)\n    Glyphs[\"kievanNoteHalfStaffLineAlternate\"] = \"\\uD834\\uDDE3\";\n    // U+EC36  Kievan half note (in staff space)\n    Glyphs[\"kievanNoteHalfStaffSpace\"] = \"\\uEC36\";\n    // U+EC38  Kievan quarter note, stem down\n    Glyphs[\"kievanNoteQuarterStemDown\"] = \"\\uEC38\";\n    // U+1D1E4  Kievan quarter note, stem down\n    Glyphs[\"kievanNoteQuarterStemDownAlternate\"] = \"\\uD834\\uDDE4\";\n    // U+EC37  Kievan quarter note, stem up\n    Glyphs[\"kievanNoteQuarterStemUp\"] = \"\\uEC37\";\n    // U+1D1E5  Kievan quarter note, stem up\n    Glyphs[\"kievanNoteQuarterStemUpAlternate\"] = \"\\uD834\\uDDE5\";\n    // U+EC32  Kievan reciting note\n    Glyphs[\"kievanNoteReciting\"] = \"\\uEC32\";\n    // U+1D1E1  Kievan reciting note\n    Glyphs[\"kievanNoteRecitingAlternate\"] = \"\\uD834\\uDDE1\";\n    // U+EC33  Kievan whole note\n    Glyphs[\"kievanNoteWhole\"] = \"\\uEC33\";\n    // U+1D1E2  Kievan whole note\n    Glyphs[\"kievanNoteWholeAlternate\"] = \"\\uD834\\uDDE2\";\n    // U+EC34  Kievan final whole note\n    Glyphs[\"kievanNoteWholeFinal\"] = \"\\uEC34\";\n    // U+1D1E0  Kievan final whole note\n    Glyphs[\"kievanNoteWholeFinalAlternate\"] = \"\\uD834\\uDDE0\";\n    // U+EC40  Do hand sign\n    Glyphs[\"kodalyHandDo\"] = \"\\uEC40\";\n    // U+EC43  Fa hand sign\n    Glyphs[\"kodalyHandFa\"] = \"\\uEC43\";\n    // U+EC45  La hand sign\n    Glyphs[\"kodalyHandLa\"] = \"\\uEC45\";\n    // U+EC42  Mi hand sign\n    Glyphs[\"kodalyHandMi\"] = \"\\uEC42\";\n    // U+EC41  Re hand sign\n    Glyphs[\"kodalyHandRe\"] = \"\\uEC41\";\n    // U+EC44  So hand sign\n    Glyphs[\"kodalyHandSo\"] = \"\\uEC44\";\n    // U+EC46  Ti hand sign\n    Glyphs[\"kodalyHandTi\"] = \"\\uEC46\";\n    // U+E04C  Left repeat sign within bar\n    Glyphs[\"leftRepeatSmall\"] = \"\\uE04C\";\n    // U+E022  Leger line\n    Glyphs[\"legerLine\"] = \"\\uE022\";\n    // U+E024  Leger line (narrow)\n    Glyphs[\"legerLineNarrow\"] = \"\\uE024\";\n    // U+E023  Leger line (wide)\n    Glyphs[\"legerLineWide\"] = \"\\uE023\";\n    // U+EBA4  Lute tablature end repeat barline\n    Glyphs[\"luteBarlineEndRepeat\"] = \"\\uEBA4\";\n    // U+EBA5  Lute tablature final barline\n    Glyphs[\"luteBarlineFinal\"] = \"\\uEBA5\";\n    // U+EBA3  Lute tablature start repeat barline\n    Glyphs[\"luteBarlineStartRepeat\"] = \"\\uEBA3\";\n    // U+EBAB  16th note (semiquaver) duration sign\n    Glyphs[\"luteDuration16th\"] = \"\\uEBAB\";\n    // U+EBAC  32nd note (demisemiquaver) duration sign\n    Glyphs[\"luteDuration32nd\"] = \"\\uEBAC\";\n    // U+EBAA  Eighth note (quaver) duration sign\n    Glyphs[\"luteDuration8th\"] = \"\\uEBAA\";\n    // U+EBA6  Double whole note (breve) duration sign\n    Glyphs[\"luteDurationDoubleWhole\"] = \"\\uEBA6\";\n    // U+EBA8  Half note (minim) duration sign\n    Glyphs[\"luteDurationHalf\"] = \"\\uEBA8\";\n    // U+EBA9  Quarter note (crotchet) duration sign\n    Glyphs[\"luteDurationQuarter\"] = \"\\uEBA9\";\n    // U+EBA7  Whole note (semibreve) duration sign\n    Glyphs[\"luteDurationWhole\"] = \"\\uEBA7\";\n    // U+EBAE  Right-hand fingering, first finger\n    Glyphs[\"luteFingeringRHFirst\"] = \"\\uEBAE\";\n    // U+EBAF  Right-hand fingering, second finger\n    Glyphs[\"luteFingeringRHSecond\"] = \"\\uEBAF\";\n    // U+EBB0  Right-hand fingering, third finger\n    Glyphs[\"luteFingeringRHThird\"] = \"\\uEBB0\";\n    // U+EBAD  Right-hand fingering, thumb\n    Glyphs[\"luteFingeringRHThumb\"] = \"\\uEBAD\";\n    // U+EBD0  10th course (diapason)\n    Glyphs[\"luteFrench10thCourse\"] = \"\\uEBD0\";\n    // U+EBCD  Seventh course (diapason)\n    Glyphs[\"luteFrench7thCourse\"] = \"\\uEBCD\";\n    // U+EBCE  Eighth course (diapason)\n    Glyphs[\"luteFrench8thCourse\"] = \"\\uEBCE\";\n    // U+EBCF  Ninth course (diapason)\n    Glyphs[\"luteFrench9thCourse\"] = \"\\uEBCF\";\n    // U+EBD5  Appoggiatura from above\n    Glyphs[\"luteFrenchAppoggiaturaAbove\"] = \"\\uEBD5\";\n    // U+EBD4  Appoggiatura from below\n    Glyphs[\"luteFrenchAppoggiaturaBelow\"] = \"\\uEBD4\";\n    // U+EBC0  Open string (a)\n    Glyphs[\"luteFrenchFretA\"] = \"\\uEBC0\";\n    // U+EBC1  First fret (b)\n    Glyphs[\"luteFrenchFretB\"] = \"\\uEBC1\";\n    // U+EBC2  Second fret (c)\n    Glyphs[\"luteFrenchFretC\"] = \"\\uEBC2\";\n    // U+EBC3  Third fret (d)\n    Glyphs[\"luteFrenchFretD\"] = \"\\uEBC3\";\n    // U+EBC4  Fourth fret (e)\n    Glyphs[\"luteFrenchFretE\"] = \"\\uEBC4\";\n    // U+EBC5  Fifth fret (f)\n    Glyphs[\"luteFrenchFretF\"] = \"\\uEBC5\";\n    // U+EBC6  Sixth fret (g)\n    Glyphs[\"luteFrenchFretG\"] = \"\\uEBC6\";\n    // U+EBC7  Seventh fret (h)\n    Glyphs[\"luteFrenchFretH\"] = \"\\uEBC7\";\n    // U+EBC8  Eighth fret (i)\n    Glyphs[\"luteFrenchFretI\"] = \"\\uEBC8\";\n    // U+EBC9  Ninth fret (k)\n    Glyphs[\"luteFrenchFretK\"] = \"\\uEBC9\";\n    // U+EBCA  10th fret (l)\n    Glyphs[\"luteFrenchFretL\"] = \"\\uEBCA\";\n    // U+EBCB  11th fret (m)\n    Glyphs[\"luteFrenchFretM\"] = \"\\uEBCB\";\n    // U+EBCC  12th fret (n)\n    Glyphs[\"luteFrenchFretN\"] = \"\\uEBCC\";\n    // U+EBD3  Inverted mordent\n    Glyphs[\"luteFrenchMordentInverted\"] = \"\\uEBD3\";\n    // U+EBD2  Mordent with lower auxiliary\n    Glyphs[\"luteFrenchMordentLower\"] = \"\\uEBD2\";\n    // U+EBD1  Mordent with upper auxiliary\n    Glyphs[\"luteFrenchMordentUpper\"] = \"\\uEBD1\";\n    // U+EC00  5th course, 1st fret (a)\n    Glyphs[\"luteGermanALower\"] = \"\\uEC00\";\n    // U+EC17  6th course, 1st fret (A)\n    Glyphs[\"luteGermanAUpper\"] = \"\\uEC17\";\n    // U+EC01  4th course, 1st fret (b)\n    Glyphs[\"luteGermanBLower\"] = \"\\uEC01\";\n    // U+EC18  6th course, 2nd fret (B)\n    Glyphs[\"luteGermanBUpper\"] = \"\\uEC18\";\n    // U+EC02  3rd course, 1st fret (c)\n    Glyphs[\"luteGermanCLower\"] = \"\\uEC02\";\n    // U+EC19  6th course, 3rd fret (C)\n    Glyphs[\"luteGermanCUpper\"] = \"\\uEC19\";\n    // U+EC03  2nd course, 1st fret (d)\n    Glyphs[\"luteGermanDLower\"] = \"\\uEC03\";\n    // U+EC1A  6th course, 4th fret (D)\n    Glyphs[\"luteGermanDUpper\"] = \"\\uEC1A\";\n    // U+EC04  1st course, 1st fret (e)\n    Glyphs[\"luteGermanELower\"] = \"\\uEC04\";\n    // U+EC1B  6th course, 5th fret (E)\n    Glyphs[\"luteGermanEUpper\"] = \"\\uEC1B\";\n    // U+EC05  5th course, 2nd fret (f)\n    Glyphs[\"luteGermanFLower\"] = \"\\uEC05\";\n    // U+EC1C  6th course, 6th fret (F)\n    Glyphs[\"luteGermanFUpper\"] = \"\\uEC1C\";\n    // U+EC06  4th course, 2nd fret (g)\n    Glyphs[\"luteGermanGLower\"] = \"\\uEC06\";\n    // U+EC1D  6th course, 7th fret (G)\n    Glyphs[\"luteGermanGUpper\"] = \"\\uEC1D\";\n    // U+EC07  3rd course, 2nd fret (h)\n    Glyphs[\"luteGermanHLower\"] = \"\\uEC07\";\n    // U+EC1E  6th course, 8th fret (H)\n    Glyphs[\"luteGermanHUpper\"] = \"\\uEC1E\";\n    // U+EC08  2nd course, 2nd fret (i)\n    Glyphs[\"luteGermanILower\"] = \"\\uEC08\";\n    // U+EC1F  6th course, 9th fret (I)\n    Glyphs[\"luteGermanIUpper\"] = \"\\uEC1F\";\n    // U+EC09  1st course, 2nd fret (k)\n    Glyphs[\"luteGermanKLower\"] = \"\\uEC09\";\n    // U+EC20  6th course, 10th fret (K)\n    Glyphs[\"luteGermanKUpper\"] = \"\\uEC20\";\n    // U+EC0A  5th course, 3rd fret (l)\n    Glyphs[\"luteGermanLLower\"] = \"\\uEC0A\";\n    // U+EC21  6th course, 11th fret (L)\n    Glyphs[\"luteGermanLUpper\"] = \"\\uEC21\";\n    // U+EC0B  4th course, 3rd fret (m)\n    Glyphs[\"luteGermanMLower\"] = \"\\uEC0B\";\n    // U+EC22  6th course, 12th fret (M)\n    Glyphs[\"luteGermanMUpper\"] = \"\\uEC22\";\n    // U+EC0C  3rd course, 3rd fret (n)\n    Glyphs[\"luteGermanNLower\"] = \"\\uEC0C\";\n    // U+EC23  6th course, 13th fret (N)\n    Glyphs[\"luteGermanNUpper\"] = \"\\uEC23\";\n    // U+EC0D  2nd course, 3rd fret (o)\n    Glyphs[\"luteGermanOLower\"] = \"\\uEC0D\";\n    // U+EC0E  1st course, 3rd fret (p)\n    Glyphs[\"luteGermanPLower\"] = \"\\uEC0E\";\n    // U+EC0F  5th course, 4th fret (q)\n    Glyphs[\"luteGermanQLower\"] = \"\\uEC0F\";\n    // U+EC10  4th course, 4th fret (r)\n    Glyphs[\"luteGermanRLower\"] = \"\\uEC10\";\n    // U+EC11  3rd course, 4th fret (s)\n    Glyphs[\"luteGermanSLower\"] = \"\\uEC11\";\n    // U+EC12  2nd course, 4th fret (t)\n    Glyphs[\"luteGermanTLower\"] = \"\\uEC12\";\n    // U+EC13  1st course, 4th fret (v)\n    Glyphs[\"luteGermanVLower\"] = \"\\uEC13\";\n    // U+EC14  5th course, 5th fret (x)\n    Glyphs[\"luteGermanXLower\"] = \"\\uEC14\";\n    // U+EC15  4th course, 5th fret (y)\n    Glyphs[\"luteGermanYLower\"] = \"\\uEC15\";\n    // U+EC16  3rd course, 5th fret (z)\n    Glyphs[\"luteGermanZLower\"] = \"\\uEC16\";\n    // U+EBF1  C sol fa ut clef\n    Glyphs[\"luteItalianClefCSolFaUt\"] = \"\\uEBF1\";\n    // U+EBF0  F fa ut clef\n    Glyphs[\"luteItalianClefFFaUt\"] = \"\\uEBF0\";\n    // U+EBE0  Open string (0)\n    Glyphs[\"luteItalianFret0\"] = \"\\uEBE0\";\n    // U+EBE1  First fret (1)\n    Glyphs[\"luteItalianFret1\"] = \"\\uEBE1\";\n    // U+EBE2  Second fret (2)\n    Glyphs[\"luteItalianFret2\"] = \"\\uEBE2\";\n    // U+EBE3  Third fret (3)\n    Glyphs[\"luteItalianFret3\"] = \"\\uEBE3\";\n    // U+EBE4  Fourth fret (4)\n    Glyphs[\"luteItalianFret4\"] = \"\\uEBE4\";\n    // U+EBE5  Fifth fret (5)\n    Glyphs[\"luteItalianFret5\"] = \"\\uEBE5\";\n    // U+EBE6  Sixth fret (6)\n    Glyphs[\"luteItalianFret6\"] = \"\\uEBE6\";\n    // U+EBE7  Seventh fret (7)\n    Glyphs[\"luteItalianFret7\"] = \"\\uEBE7\";\n    // U+EBE8  Eighth fret (8)\n    Glyphs[\"luteItalianFret8\"] = \"\\uEBE8\";\n    // U+EBE9  Ninth fret (9)\n    Glyphs[\"luteItalianFret9\"] = \"\\uEBE9\";\n    // U+EBF4  Hold finger in place\n    Glyphs[\"luteItalianHoldFinger\"] = \"\\uEBF4\";\n    // U+EBF3  Hold note\n    Glyphs[\"luteItalianHoldNote\"] = \"\\uEBF3\";\n    // U+EBF5  Release finger\n    Glyphs[\"luteItalianReleaseFinger\"] = \"\\uEBF5\";\n    // U+EBEA  Fast tempo indication (de Mudarra)\n    Glyphs[\"luteItalianTempoFast\"] = \"\\uEBEA\";\n    // U+EBEC  Neither fast nor slow tempo indication (de Mudarra)\n    Glyphs[\"luteItalianTempoNeitherFastNorSlow\"] = \"\\uEBEC\";\n    // U+EBED  Slow tempo indication (de Mudarra)\n    Glyphs[\"luteItalianTempoSlow\"] = \"\\uEBED\";\n    // U+EBEB  Somewhat fast tempo indication (de Narvaez)\n    Glyphs[\"luteItalianTempoSomewhatFast\"] = \"\\uEBEB\";\n    // U+EBEE  Very slow indication (de Narvaez)\n    Glyphs[\"luteItalianTempoVerySlow\"] = \"\\uEBEE\";\n    // U+EBEF  Triple time indication\n    Glyphs[\"luteItalianTimeTriple\"] = \"\\uEBEF\";\n    // U+EBF2  Single-finger tremolo or mordent\n    Glyphs[\"luteItalianTremolo\"] = \"\\uEBF2\";\n    // U+EBF6  Vibrato (verre cassé)\n    Glyphs[\"luteItalianVibrato\"] = \"\\uEBF6\";\n    // U+EBA0  Lute tablature staff, 6 courses\n    Glyphs[\"luteStaff6Lines\"] = \"\\uEBA0\";\n    // U+EBA2  Lute tablature staff, 6 courses (narrow)\n    Glyphs[\"luteStaff6LinesNarrow\"] = \"\\uEBA2\";\n    // U+EBA1  Lute tablature staff, 6 courses (wide)\n    Glyphs[\"luteStaff6LinesWide\"] = \"\\uEBA1\";\n    // U+E551  Elision\n    Glyphs[\"lyricsElision\"] = \"\\uE551\";\n    // U+E550  Narrow elision\n    Glyphs[\"lyricsElisionNarrow\"] = \"\\uE550\";\n    // U+E552  Wide elision\n    Glyphs[\"lyricsElisionWide\"] = \"\\uE552\";\n    // U+E553  Baseline hyphen\n    Glyphs[\"lyricsHyphenBaseline\"] = \"\\uE553\";\n    // U+E554  Non-breaking baseline hyphen\n    Glyphs[\"lyricsHyphenBaselineNonBreaking\"] = \"\\uE554\";\n    // U+E555  Text repeats\n    Glyphs[\"lyricsTextRepeat\"] = \"\\uE555\";\n    // U+E9E1  Flat, hard b (mi)\n    Glyphs[\"medRenFlatHardB\"] = \"\\uE9E1\";\n    // U+E9E0  Flat, soft b (fa)\n    Glyphs[\"medRenFlatSoftB\"] = \"\\uE9E0\";\n    // U+1D1D2  Flat, soft b (fa)\n    Glyphs[\"medRenFlatSoftBAlternate\"] = \"\\uD834\\uDDD2\";\n    // U+E9E4  Flat with dot\n    Glyphs[\"medRenFlatWithDot\"] = \"\\uE9E4\";\n    // U+EA24  G clef (Corpus Monodicum)\n    Glyphs[\"medRenGClefCMN\"] = \"\\uEA24\";\n    // U+EA22  Liquescence\n    Glyphs[\"medRenLiquescenceCMN\"] = \"\\uEA22\";\n    // U+EA26  Liquescent ascending (Corpus Monodicum)\n    Glyphs[\"medRenLiquescentAscCMN\"] = \"\\uEA26\";\n    // U+EA27  Liquescent descending (Corpus Monodicum)\n    Glyphs[\"medRenLiquescentDescCMN\"] = \"\\uEA27\";\n    // U+E9E2  Natural\n    Glyphs[\"medRenNatural\"] = \"\\uE9E2\";\n    // U+E9E5  Natural with interrupted cross\n    Glyphs[\"medRenNaturalWithCross\"] = \"\\uE9E5\";\n    // U+EA2A  Oriscus (Corpus Monodicum)\n    Glyphs[\"medRenOriscusCMN\"] = \"\\uEA2A\";\n    // U+EA23  Plica\n    Glyphs[\"medRenPlicaCMN\"] = \"\\uEA23\";\n    // U+EA25  Punctum (Corpus Monodicum)\n    Glyphs[\"medRenPunctumCMN\"] = \"\\uEA25\";\n    // U+EA28  Quilisma (Corpus Monodicum)\n    Glyphs[\"medRenQuilismaCMN\"] = \"\\uEA28\";\n    // U+E9E3  Croix\n    Glyphs[\"medRenSharpCroix\"] = \"\\uE9E3\";\n    // U+1D1CF  Croix\n    Glyphs[\"medRenSharpCroixAlternate\"] = \"\\uD834\\uDDCF\";\n    // U+EA29  Strophicus (Corpus Monodicum)\n    Glyphs[\"medRenStrophicusCMN\"] = \"\\uEA29\";\n    // U+EA10  Alteration sign\n    Glyphs[\"mensuralAlterationSign\"] = \"\\uEA10\";\n    // U+E952  Black mensural brevis\n    Glyphs[\"mensuralBlackBrevis\"] = \"\\uE952\";\n    // U+E956  Black mensural void brevis\n    Glyphs[\"mensuralBlackBrevisVoid\"] = \"\\uE956\";\n    // U+E95A  Black mensural dragma\n    Glyphs[\"mensuralBlackDragma\"] = \"\\uE95A\";\n    // U+E951  Black mensural longa\n    Glyphs[\"mensuralBlackLonga\"] = \"\\uE951\";\n    // U+E950  Black mensural maxima\n    Glyphs[\"mensuralBlackMaxima\"] = \"\\uE950\";\n    // U+E954  Black mensural minima\n    Glyphs[\"mensuralBlackMinima\"] = \"\\uE954\";\n    // U+1D1BC  Black mensural minima\n    Glyphs[\"mensuralBlackMinimaAlternate\"] = \"\\uD834\\uDDBC\";\n    // U+E958  Black mensural void minima\n    Glyphs[\"mensuralBlackMinimaVoid\"] = \"\\uE958\";\n    // U+1D1BB  Black mensural void minima\n    Glyphs[\"mensuralBlackMinimaVoidAlternate\"] = \"\\uD834\\uDDBB\";\n    // U+E953  Black mensural semibrevis\n    Glyphs[\"mensuralBlackSemibrevis\"] = \"\\uE953\";\n    // U+1D1BA  Black mensural semibrevis\n    Glyphs[\"mensuralBlackSemibrevisAlternate\"] = \"\\uD834\\uDDBA\";\n    // U+E959  Black mensural semibrevis caudata\n    Glyphs[\"mensuralBlackSemibrevisCaudata\"] = \"\\uE959\";\n    // U+E95B  Black mensural oblique semibrevis\n    Glyphs[\"mensuralBlackSemibrevisOblique\"] = \"\\uE95B\";\n    // U+E957  Black mensural void semibrevis\n    Glyphs[\"mensuralBlackSemibrevisVoid\"] = \"\\uE957\";\n    // U+1D1B9  Black mensural void semibrevis\n    Glyphs[\"mensuralBlackSemibrevisVoidAlternate\"] = \"\\uD834\\uDDB9\";\n    // U+E955  Black mensural semiminima\n    Glyphs[\"mensuralBlackSemiminima\"] = \"\\uE955\";\n    // U+E905  Mensural C clef\n    Glyphs[\"mensuralCclef\"] = \"\\uE905\";\n    // U+E90A  Petrucci C clef, high position\n    Glyphs[\"mensuralCclefPetrucciPosHigh\"] = \"\\uE90A\";\n    // U+E90B  Petrucci C clef, highest position\n    Glyphs[\"mensuralCclefPetrucciPosHighest\"] = \"\\uE90B\";\n    // U+E908  Petrucci C clef, low position\n    Glyphs[\"mensuralCclefPetrucciPosLow\"] = \"\\uE908\";\n    // U+E907  Petrucci C clef, lowest position\n    Glyphs[\"mensuralCclefPetrucciPosLowest\"] = \"\\uE907\";\n    // U+E909  Petrucci C clef, middle position\n    Glyphs[\"mensuralCclefPetrucciPosMiddle\"] = \"\\uE909\";\n    // U+EA0F  Coloration end, round\n    Glyphs[\"mensuralColorationEndRound\"] = \"\\uEA0F\";\n    // U+EA0D  Coloration end, square\n    Glyphs[\"mensuralColorationEndSquare\"] = \"\\uEA0D\";\n    // U+EA0E  Coloration start, round\n    Glyphs[\"mensuralColorationStartRound\"] = \"\\uEA0E\";\n    // U+EA0C  Coloration start, square\n    Glyphs[\"mensuralColorationStartSquare\"] = \"\\uEA0C\";\n    // U+E940  Combining stem diagonal\n    Glyphs[\"mensuralCombStemDiagonal\"] = \"\\uE940\";\n    // U+E93F  Combining stem down\n    Glyphs[\"mensuralCombStemDown\"] = \"\\uE93F\";\n    // U+E948  Combining stem with extended flag down\n    Glyphs[\"mensuralCombStemDownFlagExtended\"] = \"\\uE948\";\n    // U+E946  Combining stem with flared flag down\n    Glyphs[\"mensuralCombStemDownFlagFlared\"] = \"\\uE946\";\n    // U+E94C  Combining stem with fusa flag down\n    Glyphs[\"mensuralCombStemDownFlagFusa\"] = \"\\uE94C\";\n    // U+E944  Combining stem with flag left down\n    Glyphs[\"mensuralCombStemDownFlagLeft\"] = \"\\uE944\";\n    // U+E942  Combining stem with flag right down\n    Glyphs[\"mensuralCombStemDownFlagRight\"] = \"\\uE942\";\n    // U+E94A  Combining stem with semiminima flag down\n    Glyphs[\"mensuralCombStemDownFlagSemiminima\"] = \"\\uE94A\";\n    // U+E93E  Combining stem up\n    Glyphs[\"mensuralCombStemUp\"] = \"\\uE93E\";\n    // U+E947  Combining stem with extended flag up\n    Glyphs[\"mensuralCombStemUpFlagExtended\"] = \"\\uE947\";\n    // U+E945  Combining stem with flared flag up\n    Glyphs[\"mensuralCombStemUpFlagFlared\"] = \"\\uE945\";\n    // U+E94B  Combining stem with fusa flag up\n    Glyphs[\"mensuralCombStemUpFlagFusa\"] = \"\\uE94B\";\n    // U+E943  Combining stem with flag left up\n    Glyphs[\"mensuralCombStemUpFlagLeft\"] = \"\\uE943\";\n    // U+E941  Combining stem with flag right up\n    Glyphs[\"mensuralCombStemUpFlagRight\"] = \"\\uE941\";\n    // U+E949  Combining stem with semiminima flag up\n    Glyphs[\"mensuralCombStemUpFlagSemiminima\"] = \"\\uE949\";\n    // U+EA0A  Checkmark custos\n    Glyphs[\"mensuralCustosCheckmark\"] = \"\\uEA0A\";\n    // U+EA03  Mensural custos down\n    Glyphs[\"mensuralCustosDown\"] = \"\\uEA03\";\n    // U+EA0B  Turn-like custos\n    Glyphs[\"mensuralCustosTurn\"] = \"\\uEA0B\";\n    // U+EA02  Mensural custos up\n    Glyphs[\"mensuralCustosUp\"] = \"\\uEA02\";\n    // U+E903  Mensural F clef\n    Glyphs[\"mensuralFclef\"] = \"\\uE903\";\n    // U+E904  Petrucci F clef\n    Glyphs[\"mensuralFclefPetrucci\"] = \"\\uE904\";\n    // U+E900  Mensural G clef\n    Glyphs[\"mensuralGclef\"] = \"\\uE900\";\n    // U+E901  Petrucci G clef\n    Glyphs[\"mensuralGclefPetrucci\"] = \"\\uE901\";\n    // U+E92D  Modus imperfectum, vertical\n    Glyphs[\"mensuralModusImperfectumVert\"] = \"\\uE92D\";\n    // U+E92C  Modus perfectum, vertical\n    Glyphs[\"mensuralModusPerfectumVert\"] = \"\\uE92C\";\n    // U+E934  Longa/brevis notehead, black\n    Glyphs[\"mensuralNoteheadLongaBlack\"] = \"\\uE934\";\n    // U+E936  Longa/brevis notehead, black and void\n    Glyphs[\"mensuralNoteheadLongaBlackVoid\"] = \"\\uE936\";\n    // U+E935  Longa/brevis notehead, void\n    Glyphs[\"mensuralNoteheadLongaVoid\"] = \"\\uE935\";\n    // U+E937  Longa/brevis notehead, white\n    Glyphs[\"mensuralNoteheadLongaWhite\"] = \"\\uE937\";\n    // U+E930  Maxima notehead, black\n    Glyphs[\"mensuralNoteheadMaximaBlack\"] = \"\\uE930\";\n    // U+E932  Maxima notehead, black and void\n    Glyphs[\"mensuralNoteheadMaximaBlackVoid\"] = \"\\uE932\";\n    // U+E931  Maxima notehead, void\n    Glyphs[\"mensuralNoteheadMaximaVoid\"] = \"\\uE931\";\n    // U+E933  Maxima notehead, white\n    Glyphs[\"mensuralNoteheadMaximaWhite\"] = \"\\uE933\";\n    // U+E93C  Minima notehead, white\n    Glyphs[\"mensuralNoteheadMinimaWhite\"] = \"\\uE93C\";\n    // U+E938  Semibrevis notehead, black\n    Glyphs[\"mensuralNoteheadSemibrevisBlack\"] = \"\\uE938\";\n    // U+E93A  Semibrevis notehead, black and void\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoid\"] = \"\\uE93A\";\n    // U+E93B  Semibrevis notehead, black and void (turned)\n    Glyphs[\"mensuralNoteheadSemibrevisBlackVoidTurned\"] = \"\\uE93B\";\n    // U+E939  Semibrevis notehead, void\n    Glyphs[\"mensuralNoteheadSemibrevisVoid\"] = \"\\uE939\";\n    // U+E93D  Semiminima/fusa notehead, white\n    Glyphs[\"mensuralNoteheadSemiminimaWhite\"] = \"\\uE93D\";\n    // U+E970  Oblique form, ascending 2nd, black\n    Glyphs[\"mensuralObliqueAsc2ndBlack\"] = \"\\uE970\";\n    // U+E972  Oblique form, ascending 2nd, black and void\n    Glyphs[\"mensuralObliqueAsc2ndBlackVoid\"] = \"\\uE972\";\n    // U+E971  Oblique form, ascending 2nd, void\n    Glyphs[\"mensuralObliqueAsc2ndVoid\"] = \"\\uE971\";\n    // U+E973  Oblique form, ascending 2nd, white\n    Glyphs[\"mensuralObliqueAsc2ndWhite\"] = \"\\uE973\";\n    // U+E974  Oblique form, ascending 3rd, black\n    Glyphs[\"mensuralObliqueAsc3rdBlack\"] = \"\\uE974\";\n    // U+E976  Oblique form, ascending 3rd, black and void\n    Glyphs[\"mensuralObliqueAsc3rdBlackVoid\"] = \"\\uE976\";\n    // U+E975  Oblique form, ascending 3rd, void\n    Glyphs[\"mensuralObliqueAsc3rdVoid\"] = \"\\uE975\";\n    // U+E977  Oblique form, ascending 3rd, white\n    Glyphs[\"mensuralObliqueAsc3rdWhite\"] = \"\\uE977\";\n    // U+E978  Oblique form, ascending 4th, black\n    Glyphs[\"mensuralObliqueAsc4thBlack\"] = \"\\uE978\";\n    // U+E97A  Oblique form, ascending 4th, black and void\n    Glyphs[\"mensuralObliqueAsc4thBlackVoid\"] = \"\\uE97A\";\n    // U+E979  Oblique form, ascending 4th, void\n    Glyphs[\"mensuralObliqueAsc4thVoid\"] = \"\\uE979\";\n    // U+E97B  Oblique form, ascending 4th, white\n    Glyphs[\"mensuralObliqueAsc4thWhite\"] = \"\\uE97B\";\n    // U+E97C  Oblique form, ascending 5th, black\n    Glyphs[\"mensuralObliqueAsc5thBlack\"] = \"\\uE97C\";\n    // U+E97E  Oblique form, ascending 5th, black and void\n    Glyphs[\"mensuralObliqueAsc5thBlackVoid\"] = \"\\uE97E\";\n    // U+E97D  Oblique form, ascending 5th, void\n    Glyphs[\"mensuralObliqueAsc5thVoid\"] = \"\\uE97D\";\n    // U+E97F  Oblique form, ascending 5th, white\n    Glyphs[\"mensuralObliqueAsc5thWhite\"] = \"\\uE97F\";\n    // U+E980  Oblique form, descending 2nd, black\n    Glyphs[\"mensuralObliqueDesc2ndBlack\"] = \"\\uE980\";\n    // U+E982  Oblique form, descending 2nd, black and void\n    Glyphs[\"mensuralObliqueDesc2ndBlackVoid\"] = \"\\uE982\";\n    // U+E981  Oblique form, descending 2nd, void\n    Glyphs[\"mensuralObliqueDesc2ndVoid\"] = \"\\uE981\";\n    // U+E983  Oblique form, descending 2nd, white\n    Glyphs[\"mensuralObliqueDesc2ndWhite\"] = \"\\uE983\";\n    // U+E984  Oblique form, descending 3rd, black\n    Glyphs[\"mensuralObliqueDesc3rdBlack\"] = \"\\uE984\";\n    // U+E986  Oblique form, descending 3rd, black and void\n    Glyphs[\"mensuralObliqueDesc3rdBlackVoid\"] = \"\\uE986\";\n    // U+E985  Oblique form, descending 3rd, void\n    Glyphs[\"mensuralObliqueDesc3rdVoid\"] = \"\\uE985\";\n    // U+E987  Oblique form, descending 3rd, white\n    Glyphs[\"mensuralObliqueDesc3rdWhite\"] = \"\\uE987\";\n    // U+E988  Oblique form, descending 4th, black\n    Glyphs[\"mensuralObliqueDesc4thBlack\"] = \"\\uE988\";\n    // U+E98A  Oblique form, descending 4th, black and void\n    Glyphs[\"mensuralObliqueDesc4thBlackVoid\"] = \"\\uE98A\";\n    // U+E989  Oblique form, descending 4th, void\n    Glyphs[\"mensuralObliqueDesc4thVoid\"] = \"\\uE989\";\n    // U+E98B  Oblique form, descending 4th, white\n    Glyphs[\"mensuralObliqueDesc4thWhite\"] = \"\\uE98B\";\n    // U+E98C  Oblique form, descending 5th, black\n    Glyphs[\"mensuralObliqueDesc5thBlack\"] = \"\\uE98C\";\n    // U+E98E  Oblique form, descending 5th, black and void\n    Glyphs[\"mensuralObliqueDesc5thBlackVoid\"] = \"\\uE98E\";\n    // U+E98D  Oblique form, descending 5th, void\n    Glyphs[\"mensuralObliqueDesc5thVoid\"] = \"\\uE98D\";\n    // U+E98F  Oblique form, descending 5th, white\n    Glyphs[\"mensuralObliqueDesc5thWhite\"] = \"\\uE98F\";\n    // U+E910  Tempus perfectum cum prolatione perfecta (9/8)\n    Glyphs[\"mensuralProlation1\"] = \"\\uE910\";\n    // U+1D1C7  Tempus perfectum cum prolatione perfecta (9/8)\n    Glyphs[\"mensuralProlation1Alternate\"] = \"\\uD834\\uDDC7\";\n    // U+E919  Tempus imperfectum cum prolatione imperfecta diminution 4\n    Glyphs[\"mensuralProlation10\"] = \"\\uE919\";\n    // U+1D1CE  Tempus imperfectum cum prolatione imperfecta diminution 4\n    Glyphs[\"mensuralProlation10Alternate\"] = \"\\uD834\\uDDCE\";\n    // U+E91A  Tempus imperfectum cum prolatione imperfecta diminution 5\n    Glyphs[\"mensuralProlation11\"] = \"\\uE91A\";\n    // U+E911  Tempus perfectum cum prolatione imperfecta (3/4)\n    Glyphs[\"mensuralProlation2\"] = \"\\uE911\";\n    // U+1D1C8  Tempus perfectum cum prolatione imperfecta (3/4)\n    Glyphs[\"mensuralProlation2Alternate\"] = \"\\uD834\\uDDC8\";\n    // U+E912  Tempus perfectum cum prolatione imperfecta diminution 1 (3/8)\n    Glyphs[\"mensuralProlation3\"] = \"\\uE912\";\n    // U+1D1C9  Tempus perfectum cum prolatione imperfecta diminution 1 (3/8)\n    Glyphs[\"mensuralProlation3Alternate\"] = \"\\uD834\\uDDC9\";\n    // U+E913  Tempus perfectum cum prolatione perfecta diminution 2 (9/16)\n    Glyphs[\"mensuralProlation4\"] = \"\\uE913\";\n    // U+E914  Tempus imperfectum cum prolatione perfecta (6/8)\n    Glyphs[\"mensuralProlation5\"] = \"\\uE914\";\n    // U+1D1CA  Tempus imperfectum cum prolatione perfecta (6/8)\n    Glyphs[\"mensuralProlation5Alternate\"] = \"\\uD834\\uDDCA\";\n    // U+E915  Tempus imperfectum cum prolatione imperfecta (2/4)\n    Glyphs[\"mensuralProlation6\"] = \"\\uE915\";\n    // U+1D1CB  Tempus imperfectum cum prolatione imperfecta (2/4)\n    Glyphs[\"mensuralProlation6Alternate\"] = \"\\uD834\\uDDCB\";\n    // U+E916  Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2)\n    Glyphs[\"mensuralProlation7\"] = \"\\uE916\";\n    // U+1D1CC  Tempus imperfectum cum prolatione imperfecta diminution 1 (2/2)\n    Glyphs[\"mensuralProlation7Alternate\"] = \"\\uD834\\uDDCC\";\n    // U+E917  Tempus imperfectum cum prolatione imperfecta diminution 2 (6/16)\n    Glyphs[\"mensuralProlation8\"] = \"\\uE917\";\n    // U+E918  Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2)\n    Glyphs[\"mensuralProlation9\"] = \"\\uE918\";\n    // U+1D1CD  Tempus imperfectum cum prolatione imperfecta diminution 3 (2/2)\n    Glyphs[\"mensuralProlation9Alternate\"] = \"\\uD834\\uDDCD\";\n    // U+E920  Combining dot\n    Glyphs[\"mensuralProlationCombiningDot\"] = \"\\uE920\";\n    // U+E924  Combining void dot\n    Glyphs[\"mensuralProlationCombiningDotVoid\"] = \"\\uE924\";\n    // U+E925  Combining vertical stroke\n    Glyphs[\"mensuralProlationCombiningStroke\"] = \"\\uE925\";\n    // U+E922  Combining three dots horizontal\n    Glyphs[\"mensuralProlationCombiningThreeDots\"] = \"\\uE922\";\n    // U+E923  Combining three dots triangular\n    Glyphs[\"mensuralProlationCombiningThreeDotsTri\"] = \"\\uE923\";\n    // U+E921  Combining two dots\n    Glyphs[\"mensuralProlationCombiningTwoDots\"] = \"\\uE921\";\n    // U+E926  Mensural proportion 1\n    Glyphs[\"mensuralProportion1\"] = \"\\uE926\";\n    // U+E927  Mensural proportion 2\n    Glyphs[\"mensuralProportion2\"] = \"\\uE927\";\n    // U+E928  Mensural proportion 3\n    Glyphs[\"mensuralProportion3\"] = \"\\uE928\";\n    // U+E929  Mensural proportion 4\n    Glyphs[\"mensuralProportion4\"] = \"\\uE929\";\n    // U+EE90  Mensural proportion 5\n    Glyphs[\"mensuralProportion5\"] = \"\\uEE90\";\n    // U+EE91  Mensural proportion 6\n    Glyphs[\"mensuralProportion6\"] = \"\\uEE91\";\n    // U+EE92  Mensural proportion 7\n    Glyphs[\"mensuralProportion7\"] = \"\\uEE92\";\n    // U+EE93  Mensural proportion 8\n    Glyphs[\"mensuralProportion8\"] = \"\\uEE93\";\n    // U+EE94  Mensural proportion 9\n    Glyphs[\"mensuralProportion9\"] = \"\\uEE94\";\n    // U+E92B  Mensural proportion major\n    Glyphs[\"mensuralProportionMajor\"] = \"\\uE92B\";\n    // U+E92A  Mensural proportion minor\n    Glyphs[\"mensuralProportionMinor\"] = \"\\uE92A\";\n    // U+E91C  Proportio dupla 1\n    Glyphs[\"mensuralProportionProportioDupla1\"] = \"\\uE91C\";\n    // U+E91D  Proportio dupla 2\n    Glyphs[\"mensuralProportionProportioDupla2\"] = \"\\uE91D\";\n    // U+E91F  Proportio quadrupla\n    Glyphs[\"mensuralProportionProportioQuadrupla\"] = \"\\uE91F\";\n    // U+E91E  Proportio tripla\n    Glyphs[\"mensuralProportionProportioTripla\"] = \"\\uE91E\";\n    // U+E91B  Tempus perfectum\n    Glyphs[\"mensuralProportionTempusPerfectum\"] = \"\\uE91B\";\n    // U+E9F3  Brevis rest\n    Glyphs[\"mensuralRestBrevis\"] = \"\\uE9F3\";\n    // U+1D1C3  Brevis rest\n    Glyphs[\"mensuralRestBrevisAlternate\"] = \"\\uD834\\uDDC3\";\n    // U+E9F7  Fusa rest\n    Glyphs[\"mensuralRestFusa\"] = \"\\uE9F7\";\n    // U+E9F2  Longa imperfecta rest\n    Glyphs[\"mensuralRestLongaImperfecta\"] = \"\\uE9F2\";\n    // U+1D1C2  Longa imperfecta rest\n    Glyphs[\"mensuralRestLongaImperfectaAlternate\"] = \"\\uD834\\uDDC2\";\n    // U+E9F1  Longa perfecta rest\n    Glyphs[\"mensuralRestLongaPerfecta\"] = \"\\uE9F1\";\n    // U+1D1C1  Longa perfecta rest\n    Glyphs[\"mensuralRestLongaPerfectaAlternate\"] = \"\\uD834\\uDDC1\";\n    // U+E9F0  Maxima rest\n    Glyphs[\"mensuralRestMaxima\"] = \"\\uE9F0\";\n    // U+E9F5  Minima rest\n    Glyphs[\"mensuralRestMinima\"] = \"\\uE9F5\";\n    // U+1D1C5  Minima rest\n    Glyphs[\"mensuralRestMinimaAlternate\"] = \"\\uD834\\uDDC5\";\n    // U+E9F4  Semibrevis rest\n    Glyphs[\"mensuralRestSemibrevis\"] = \"\\uE9F4\";\n    // U+1D1C4  Semibrevis rest\n    Glyphs[\"mensuralRestSemibrevisAlternate\"] = \"\\uD834\\uDDC4\";\n    // U+E9F8  Semifusa rest\n    Glyphs[\"mensuralRestSemifusa\"] = \"\\uE9F8\";\n    // U+E9F6  Semiminima rest\n    Glyphs[\"mensuralRestSemiminima\"] = \"\\uE9F6\";\n    // U+1D1C6  Semiminima rest\n    Glyphs[\"mensuralRestSemiminimaAlternate\"] = \"\\uD834\\uDDC6\";\n    // U+EA01  Signum congruentiae down\n    Glyphs[\"mensuralSignumDown\"] = \"\\uEA01\";\n    // U+EA00  Signum congruentiae up\n    Glyphs[\"mensuralSignumUp\"] = \"\\uEA00\";\n    // U+E92F  Tempus imperfectum, horizontal\n    Glyphs[\"mensuralTempusImperfectumHoriz\"] = \"\\uE92F\";\n    // U+E92E  Tempus perfectum, horizontal\n    Glyphs[\"mensuralTempusPerfectumHoriz\"] = \"\\uE92E\";\n    // U+E95E  White mensural brevis\n    Glyphs[\"mensuralWhiteBrevis\"] = \"\\uE95E\";\n    // U+1D1B8  White mensural brevis\n    Glyphs[\"mensuralWhiteBrevisAlternate\"] = \"\\uD834\\uDDB8\";\n    // U+E961  White mensural fusa\n    Glyphs[\"mensuralWhiteFusa\"] = \"\\uE961\";\n    // U+1D1BE  White mensural fusa\n    Glyphs[\"mensuralWhiteFusaAlternate\"] = \"\\uD834\\uDDBE\";\n    // U+E95D  White mensural longa\n    Glyphs[\"mensuralWhiteLonga\"] = \"\\uE95D\";\n    // U+1D1B7  White mensural longa\n    Glyphs[\"mensuralWhiteLongaAlternate\"] = \"\\uD834\\uDDB7\";\n    // U+E95C  White mensural maxima\n    Glyphs[\"mensuralWhiteMaxima\"] = \"\\uE95C\";\n    // U+1D1B6  White mensural maxima\n    Glyphs[\"mensuralWhiteMaximaAlternate\"] = \"\\uD834\\uDDB6\";\n    // U+E95F  White mensural minima\n    Glyphs[\"mensuralWhiteMinima\"] = \"\\uE95F\";\n    // U+E962  White mensural semibrevis\n    Glyphs[\"mensuralWhiteSemibrevis\"] = \"\\uE962\";\n    // U+1D1B9  White mensural semibrevis\n    Glyphs[\"mensuralWhiteSemibrevisAlternate\"] = \"\\uD834\\uDDB9\";\n    // U+E960  White mensural semiminima\n    Glyphs[\"mensuralWhiteSemiminima\"] = \"\\uE960\";\n    // U+ECB7  Augmentation dot\n    Glyphs[\"metAugmentationDot\"] = \"\\uECB7\";\n    // U+ECB6  1024th note (semihemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"metNote1024thDown\"] = \"\\uECB6\";\n    // U+ECB5  1024th note (semihemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"metNote1024thUp\"] = \"\\uECB5\";\n    // U+ECB0  128th note (semihemidemisemiquaver) stem down\n    Glyphs[\"metNote128thDown\"] = \"\\uECB0\";\n    // U+ECAF  128th note (semihemidemisemiquaver) stem up\n    Glyphs[\"metNote128thUp\"] = \"\\uECAF\";\n    // U+ECAA  16th note (semiquaver) stem down\n    Glyphs[\"metNote16thDown\"] = \"\\uECAA\";\n    // U+ECA9  16th note (semiquaver) stem up\n    Glyphs[\"metNote16thUp\"] = \"\\uECA9\";\n    // U+ECB2  256th note (demisemihemidemisemiquaver) stem down\n    Glyphs[\"metNote256thDown\"] = \"\\uECB2\";\n    // U+ECB1  256th note (demisemihemidemisemiquaver) stem up\n    Glyphs[\"metNote256thUp\"] = \"\\uECB1\";\n    // U+ECAC  32nd note (demisemiquaver) stem down\n    Glyphs[\"metNote32ndDown\"] = \"\\uECAC\";\n    // U+ECAB  32nd note (demisemiquaver) stem up\n    Glyphs[\"metNote32ndUp\"] = \"\\uECAB\";\n    // U+ECB4  512th note (hemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"metNote512thDown\"] = \"\\uECB4\";\n    // U+ECB3  512th note (hemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"metNote512thUp\"] = \"\\uECB3\";\n    // U+ECAE  64th note (hemidemisemiquaver) stem down\n    Glyphs[\"metNote64thDown\"] = \"\\uECAE\";\n    // U+ECAD  64th note (hemidemisemiquaver) stem up\n    Glyphs[\"metNote64thUp\"] = \"\\uECAD\";\n    // U+ECA8  Eighth note (quaver) stem down\n    Glyphs[\"metNote8thDown\"] = \"\\uECA8\";\n    // U+ECA7  Eighth note (quaver) stem up\n    Glyphs[\"metNote8thUp\"] = \"\\uECA7\";\n    // U+ECA0  Double whole note (breve)\n    Glyphs[\"metNoteDoubleWhole\"] = \"\\uECA0\";\n    // U+ECA1  Double whole note (square)\n    Glyphs[\"metNoteDoubleWholeSquare\"] = \"\\uECA1\";\n    // U+ECA4  Half note (minim) stem down\n    Glyphs[\"metNoteHalfDown\"] = \"\\uECA4\";\n    // U+ECA3  Half note (minim) stem up\n    Glyphs[\"metNoteHalfUp\"] = \"\\uECA3\";\n    // U+ECA6  Quarter note (crotchet) stem down\n    Glyphs[\"metNoteQuarterDown\"] = \"\\uECA6\";\n    // U+ECA5  Quarter note (crotchet) stem up\n    Glyphs[\"metNoteQuarterUp\"] = \"\\uECA5\";\n    // U+ECA2  Whole note (semibreve)\n    Glyphs[\"metNoteWhole\"] = \"\\uECA2\";\n    // U+EC63  Left-pointing arrow for metric modulation\n    Glyphs[\"metricModulationArrowLeft\"] = \"\\uEC63\";\n    // U+EC64  Right-pointing arrow for metric modulation\n    Glyphs[\"metricModulationArrowRight\"] = \"\\uEC64\";\n    // U+EC61  Do not copy\n    Glyphs[\"miscDoNotCopy\"] = \"\\uEC61\";\n    // U+EC60  Do not photocopy\n    Glyphs[\"miscDoNotPhotocopy\"] = \"\\uEC60\";\n    // U+EC62  Eyeglasses\n    Glyphs[\"miscEyeglasses\"] = \"\\uEC62\";\n    // U+E1E6  1024th note (semihemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"note1024thDown\"] = \"\\uE1E6\";\n    // U+E1E5  1024th note (semihemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"note1024thUp\"] = \"\\uE1E5\";\n    // U+E1E0  128th note (semihemidemisemiquaver) stem down\n    Glyphs[\"note128thDown\"] = \"\\uE1E0\";\n    // U+E1DF  128th note (semihemidemisemiquaver) stem up\n    Glyphs[\"note128thUp\"] = \"\\uE1DF\";\n    // U+1D164  128th note (semihemidemisemiquaver) stem up\n    Glyphs[\"note128thUpAlternate\"] = \"\\uD834\\uDD64\";\n    // U+E1DA  16th note (semiquaver) stem down\n    Glyphs[\"note16thDown\"] = \"\\uE1DA\";\n    // U+E1D9  16th note (semiquaver) stem up\n    Glyphs[\"note16thUp\"] = \"\\uE1D9\";\n    // U+1D161  16th note (semiquaver) stem up\n    Glyphs[\"note16thUpAlternate\"] = \"\\uD834\\uDD61\";\n    // U+E1E2  256th note (demisemihemidemisemiquaver) stem down\n    Glyphs[\"note256thDown\"] = \"\\uE1E2\";\n    // U+E1E1  256th note (demisemihemidemisemiquaver) stem up\n    Glyphs[\"note256thUp\"] = \"\\uE1E1\";\n    // U+E1DC  32nd note (demisemiquaver) stem down\n    Glyphs[\"note32ndDown\"] = \"\\uE1DC\";\n    // U+E1DB  32nd note (demisemiquaver) stem up\n    Glyphs[\"note32ndUp\"] = \"\\uE1DB\";\n    // U+1D162  32nd note (demisemiquaver) stem up\n    Glyphs[\"note32ndUpAlternate\"] = \"\\uD834\\uDD62\";\n    // U+E1E4  512th note (hemidemisemihemidemisemiquaver) stem down\n    Glyphs[\"note512thDown\"] = \"\\uE1E4\";\n    // U+E1E3  512th note (hemidemisemihemidemisemiquaver) stem up\n    Glyphs[\"note512thUp\"] = \"\\uE1E3\";\n    // U+E1DE  64th note (hemidemisemiquaver) stem down\n    Glyphs[\"note64thDown\"] = \"\\uE1DE\";\n    // U+E1DD  64th note (hemidemisemiquaver) stem up\n    Glyphs[\"note64thUp\"] = \"\\uE1DD\";\n    // U+1D163  64th note (hemidemisemiquaver) stem up\n    Glyphs[\"note64thUpAlternate\"] = \"\\uD834\\uDD63\";\n    // U+E1D8  Eighth note (quaver) stem down\n    Glyphs[\"note8thDown\"] = \"\\uE1D8\";\n    // U+E1D7  Eighth note (quaver) stem up\n    Glyphs[\"note8thUp\"] = \"\\uE1D7\";\n    // U+1D160  Eighth note (quaver) stem up\n    Glyphs[\"note8thUpAlternate\"] = \"\\uD834\\uDD60\";\n    // U+E197  A (black note)\n    Glyphs[\"noteABlack\"] = \"\\uE197\";\n    // U+E196  A flat (black note)\n    Glyphs[\"noteAFlatBlack\"] = \"\\uE196\";\n    // U+E17F  A flat (half note)\n    Glyphs[\"noteAFlatHalf\"] = \"\\uE17F\";\n    // U+E168  A flat (whole note)\n    Glyphs[\"noteAFlatWhole\"] = \"\\uE168\";\n    // U+E180  A (half note)\n    Glyphs[\"noteAHalf\"] = \"\\uE180\";\n    // U+E198  A sharp (black note)\n    Glyphs[\"noteASharpBlack\"] = \"\\uE198\";\n    // U+E181  A sharp (half note)\n    Glyphs[\"noteASharpHalf\"] = \"\\uE181\";\n    // U+E16A  A sharp (whole note)\n    Glyphs[\"noteASharpWhole\"] = \"\\uE16A\";\n    // U+E169  A (whole note)\n    Glyphs[\"noteAWhole\"] = \"\\uE169\";\n    // U+E19A  B (black note)\n    Glyphs[\"noteBBlack\"] = \"\\uE19A\";\n    // U+E199  B flat (black note)\n    Glyphs[\"noteBFlatBlack\"] = \"\\uE199\";\n    // U+E182  B flat (half note)\n    Glyphs[\"noteBFlatHalf\"] = \"\\uE182\";\n    // U+E16B  B flat (whole note)\n    Glyphs[\"noteBFlatWhole\"] = \"\\uE16B\";\n    // U+E183  B (half note)\n    Glyphs[\"noteBHalf\"] = \"\\uE183\";\n    // U+E19B  B sharp (black note)\n    Glyphs[\"noteBSharpBlack\"] = \"\\uE19B\";\n    // U+E184  B sharp (half note)\n    Glyphs[\"noteBSharpHalf\"] = \"\\uE184\";\n    // U+E16D  B sharp (whole note)\n    Glyphs[\"noteBSharpWhole\"] = \"\\uE16D\";\n    // U+E16C  B (whole note)\n    Glyphs[\"noteBWhole\"] = \"\\uE16C\";\n    // U+E19D  C (black note)\n    Glyphs[\"noteCBlack\"] = \"\\uE19D\";\n    // U+E19C  C flat (black note)\n    Glyphs[\"noteCFlatBlack\"] = \"\\uE19C\";\n    // U+E185  C flat (half note)\n    Glyphs[\"noteCFlatHalf\"] = \"\\uE185\";\n    // U+E16E  C flat (whole note)\n    Glyphs[\"noteCFlatWhole\"] = \"\\uE16E\";\n    // U+E186  C (half note)\n    Glyphs[\"noteCHalf\"] = \"\\uE186\";\n    // U+E19E  C sharp (black note)\n    Glyphs[\"noteCSharpBlack\"] = \"\\uE19E\";\n    // U+E187  C sharp (half note)\n    Glyphs[\"noteCSharpHalf\"] = \"\\uE187\";\n    // U+E170  C sharp (whole note)\n    Glyphs[\"noteCSharpWhole\"] = \"\\uE170\";\n    // U+E16F  C (whole note)\n    Glyphs[\"noteCWhole\"] = \"\\uE16F\";\n    // U+E1A0  D (black note)\n    Glyphs[\"noteDBlack\"] = \"\\uE1A0\";\n    // U+E19F  D flat (black note)\n    Glyphs[\"noteDFlatBlack\"] = \"\\uE19F\";\n    // U+E188  D flat (half note)\n    Glyphs[\"noteDFlatHalf\"] = \"\\uE188\";\n    // U+E171  D flat (whole note)\n    Glyphs[\"noteDFlatWhole\"] = \"\\uE171\";\n    // U+E189  D (half note)\n    Glyphs[\"noteDHalf\"] = \"\\uE189\";\n    // U+E1A1  D sharp (black note)\n    Glyphs[\"noteDSharpBlack\"] = \"\\uE1A1\";\n    // U+E18A  D sharp (half note)\n    Glyphs[\"noteDSharpHalf\"] = \"\\uE18A\";\n    // U+E173  D sharp (whole note)\n    Glyphs[\"noteDSharpWhole\"] = \"\\uE173\";\n    // U+E172  D (whole note)\n    Glyphs[\"noteDWhole\"] = \"\\uE172\";\n    // U+EEF2  Di (black note)\n    Glyphs[\"noteDiBlack\"] = \"\\uEEF2\";\n    // U+EEE9  Di (half note)\n    Glyphs[\"noteDiHalf\"] = \"\\uEEE9\";\n    // U+EEE0  Di (whole note)\n    Glyphs[\"noteDiWhole\"] = \"\\uEEE0\";\n    // U+E160  Do (black note)\n    Glyphs[\"noteDoBlack\"] = \"\\uE160\";\n    // U+E158  Do (half note)\n    Glyphs[\"noteDoHalf\"] = \"\\uE158\";\n    // U+E150  Do (whole note)\n    Glyphs[\"noteDoWhole\"] = \"\\uE150\";\n    // U+E1D0  Double whole note (breve)\n    Glyphs[\"noteDoubleWhole\"] = \"\\uE1D0\";\n    // U+1D15C  Double whole note (breve)\n    Glyphs[\"noteDoubleWholeAlternate\"] = \"\\uD834\\uDD5C\";\n    // U+E1D1  Double whole note (square)\n    Glyphs[\"noteDoubleWholeSquare\"] = \"\\uE1D1\";\n    // U+E1A3  E (black note)\n    Glyphs[\"noteEBlack\"] = \"\\uE1A3\";\n    // U+E1A2  E flat (black note)\n    Glyphs[\"noteEFlatBlack\"] = \"\\uE1A2\";\n    // U+E18B  E flat (half note)\n    Glyphs[\"noteEFlatHalf\"] = \"\\uE18B\";\n    // U+E174  E flat (whole note)\n    Glyphs[\"noteEFlatWhole\"] = \"\\uE174\";\n    // U+E18C  E (half note)\n    Glyphs[\"noteEHalf\"] = \"\\uE18C\";\n    // U+E1A4  E sharp (black note)\n    Glyphs[\"noteESharpBlack\"] = \"\\uE1A4\";\n    // U+E18D  E sharp (half note)\n    Glyphs[\"noteESharpHalf\"] = \"\\uE18D\";\n    // U+E176  E sharp (whole note)\n    Glyphs[\"noteESharpWhole\"] = \"\\uE176\";\n    // U+E175  E (whole note)\n    Glyphs[\"noteEWhole\"] = \"\\uE175\";\n    // U+E1AF  Empty black note\n    Glyphs[\"noteEmptyBlack\"] = \"\\uE1AF\";\n    // U+E1AE  Empty half note\n    Glyphs[\"noteEmptyHalf\"] = \"\\uE1AE\";\n    // U+E1AD  Empty whole note\n    Glyphs[\"noteEmptyWhole\"] = \"\\uE1AD\";\n    // U+E1A6  F (black note)\n    Glyphs[\"noteFBlack\"] = \"\\uE1A6\";\n    // U+E1A5  F flat (black note)\n    Glyphs[\"noteFFlatBlack\"] = \"\\uE1A5\";\n    // U+E18E  F flat (half note)\n    Glyphs[\"noteFFlatHalf\"] = \"\\uE18E\";\n    // U+E177  F flat (whole note)\n    Glyphs[\"noteFFlatWhole\"] = \"\\uE177\";\n    // U+E18F  F (half note)\n    Glyphs[\"noteFHalf\"] = \"\\uE18F\";\n    // U+E1A7  F sharp (black note)\n    Glyphs[\"noteFSharpBlack\"] = \"\\uE1A7\";\n    // U+E190  F sharp (half note)\n    Glyphs[\"noteFSharpHalf\"] = \"\\uE190\";\n    // U+E179  F sharp (whole note)\n    Glyphs[\"noteFSharpWhole\"] = \"\\uE179\";\n    // U+E178  F (whole note)\n    Glyphs[\"noteFWhole\"] = \"\\uE178\";\n    // U+E163  Fa (black note)\n    Glyphs[\"noteFaBlack\"] = \"\\uE163\";\n    // U+E15B  Fa (half note)\n    Glyphs[\"noteFaHalf\"] = \"\\uE15B\";\n    // U+E153  Fa (whole note)\n    Glyphs[\"noteFaWhole\"] = \"\\uE153\";\n    // U+EEF6  Fi (black note)\n    Glyphs[\"noteFiBlack\"] = \"\\uEEF6\";\n    // U+EEED  Fi (half note)\n    Glyphs[\"noteFiHalf\"] = \"\\uEEED\";\n    // U+EEE4  Fi (whole note)\n    Glyphs[\"noteFiWhole\"] = \"\\uEEE4\";\n    // U+E1A9  G (black note)\n    Glyphs[\"noteGBlack\"] = \"\\uE1A9\";\n    // U+E1A8  G flat (black note)\n    Glyphs[\"noteGFlatBlack\"] = \"\\uE1A8\";\n    // U+E191  G flat (half note)\n    Glyphs[\"noteGFlatHalf\"] = \"\\uE191\";\n    // U+E17A  G flat (whole note)\n    Glyphs[\"noteGFlatWhole\"] = \"\\uE17A\";\n    // U+E192  G (half note)\n    Glyphs[\"noteGHalf\"] = \"\\uE192\";\n    // U+E1AA  G sharp (black note)\n    Glyphs[\"noteGSharpBlack\"] = \"\\uE1AA\";\n    // U+E193  G sharp (half note)\n    Glyphs[\"noteGSharpHalf\"] = \"\\uE193\";\n    // U+E17C  G sharp (whole note)\n    Glyphs[\"noteGSharpWhole\"] = \"\\uE17C\";\n    // U+E17B  G (whole note)\n    Glyphs[\"noteGWhole\"] = \"\\uE17B\";\n    // U+E1AB  H (black note)\n    Glyphs[\"noteHBlack\"] = \"\\uE1AB\";\n    // U+E194  H (half note)\n    Glyphs[\"noteHHalf\"] = \"\\uE194\";\n    // U+E1AC  H sharp (black note)\n    Glyphs[\"noteHSharpBlack\"] = \"\\uE1AC\";\n    // U+E195  H sharp (half note)\n    Glyphs[\"noteHSharpHalf\"] = \"\\uE195\";\n    // U+E17E  H sharp (whole note)\n    Glyphs[\"noteHSharpWhole\"] = \"\\uE17E\";\n    // U+E17D  H (whole note)\n    Glyphs[\"noteHWhole\"] = \"\\uE17D\";\n    // U+E1D4  Half note (minim) stem down\n    Glyphs[\"noteHalfDown\"] = \"\\uE1D4\";\n    // U+E1D3  Half note (minim) stem up\n    Glyphs[\"noteHalfUp\"] = \"\\uE1D3\";\n    // U+1D15E  Half note (minim) stem up\n    Glyphs[\"noteHalfUpAlternate\"] = \"\\uD834\\uDD5E\";\n    // U+E165  La (black note)\n    Glyphs[\"noteLaBlack\"] = \"\\uE165\";\n    // U+E15D  La (half note)\n    Glyphs[\"noteLaHalf\"] = \"\\uE15D\";\n    // U+E155  La (whole note)\n    Glyphs[\"noteLaWhole\"] = \"\\uE155\";\n    // U+EEF9  Le (black note)\n    Glyphs[\"noteLeBlack\"] = \"\\uEEF9\";\n    // U+EEF0  Le (half note)\n    Glyphs[\"noteLeHalf\"] = \"\\uEEF0\";\n    // U+EEE7  Le (whole note)\n    Glyphs[\"noteLeWhole\"] = \"\\uEEE7\";\n    // U+EEF8  Li (black note)\n    Glyphs[\"noteLiBlack\"] = \"\\uEEF8\";\n    // U+EEEF  Li (half note)\n    Glyphs[\"noteLiHalf\"] = \"\\uEEEF\";\n    // U+EEE6  Li (whole note)\n    Glyphs[\"noteLiWhole\"] = \"\\uEEE6\";\n    // U+EEF5  Me (black note)\n    Glyphs[\"noteMeBlack\"] = \"\\uEEF5\";\n    // U+EEEC  Me (half note)\n    Glyphs[\"noteMeHalf\"] = \"\\uEEEC\";\n    // U+EEE3  Me (whole note)\n    Glyphs[\"noteMeWhole\"] = \"\\uEEE3\";\n    // U+E162  Mi (black note)\n    Glyphs[\"noteMiBlack\"] = \"\\uE162\";\n    // U+E15A  Mi (half note)\n    Glyphs[\"noteMiHalf\"] = \"\\uE15A\";\n    // U+E152  Mi (whole note)\n    Glyphs[\"noteMiWhole\"] = \"\\uE152\";\n    // U+E1D6  Quarter note (crotchet) stem down\n    Glyphs[\"noteQuarterDown\"] = \"\\uE1D6\";\n    // U+E1D5  Quarter note (crotchet) stem up\n    Glyphs[\"noteQuarterUp\"] = \"\\uE1D5\";\n    // U+1D15F  Quarter note (crotchet) stem up\n    Glyphs[\"noteQuarterUpAlternate\"] = \"\\uD834\\uDD5F\";\n    // U+EEF4  Ra (black note)\n    Glyphs[\"noteRaBlack\"] = \"\\uEEF4\";\n    // U+EEEB  Ra (half note)\n    Glyphs[\"noteRaHalf\"] = \"\\uEEEB\";\n    // U+EEE2  Ra (whole note)\n    Glyphs[\"noteRaWhole\"] = \"\\uEEE2\";\n    // U+E161  Re (black note)\n    Glyphs[\"noteReBlack\"] = \"\\uE161\";\n    // U+E159  Re (half note)\n    Glyphs[\"noteReHalf\"] = \"\\uE159\";\n    // U+E151  Re (whole note)\n    Glyphs[\"noteReWhole\"] = \"\\uE151\";\n    // U+EEF3  Ri (black note)\n    Glyphs[\"noteRiBlack\"] = \"\\uEEF3\";\n    // U+EEEA  Ri (half note)\n    Glyphs[\"noteRiHalf\"] = \"\\uEEEA\";\n    // U+EEE1  Ri (whole note)\n    Glyphs[\"noteRiWhole\"] = \"\\uEEE1\";\n    // U+EEF7  Se (black note)\n    Glyphs[\"noteSeBlack\"] = \"\\uEEF7\";\n    // U+EEEE  Se (half note)\n    Glyphs[\"noteSeHalf\"] = \"\\uEEEE\";\n    // U+EEE5  Se (whole note)\n    Glyphs[\"noteSeWhole\"] = \"\\uEEE5\";\n    // U+E1C9  Arrowhead left black (Funk 7-shape re)\n    Glyphs[\"noteShapeArrowheadLeftBlack\"] = \"\\uE1C9\";\n    // U+ECDC  Arrowhead left double whole (Funk 7-shape re)\n    Glyphs[\"noteShapeArrowheadLeftDoubleWhole\"] = \"\\uECDC\";\n    // U+E1C8  Arrowhead left white (Funk 7-shape re)\n    Glyphs[\"noteShapeArrowheadLeftWhite\"] = \"\\uE1C8\";\n    // U+E1B9  Diamond black (4-shape mi; 7-shape mi)\n    Glyphs[\"noteShapeDiamondBlack\"] = \"\\uE1B9\";\n    // U+ECD4  Diamond double whole (4-shape mi; 7-shape mi)\n    Glyphs[\"noteShapeDiamondDoubleWhole\"] = \"\\uECD4\";\n    // U+E1B8  Diamond white (4-shape mi; 7-shape mi)\n    Glyphs[\"noteShapeDiamondWhite\"] = \"\\uE1B8\";\n    // U+E1C5  Isosceles triangle black (Walker 7-shape ti)\n    Glyphs[\"noteShapeIsoscelesTriangleBlack\"] = \"\\uE1C5\";\n    // U+ECDA  Isosceles triangle double whole (Walker 7-shape ti)\n    Glyphs[\"noteShapeIsoscelesTriangleDoubleWhole\"] = \"\\uECDA\";\n    // U+E1C4  Isosceles triangle white (Walker 7-shape ti)\n    Glyphs[\"noteShapeIsoscelesTriangleWhite\"] = \"\\uE1C4\";\n    // U+E1C1  Inverted keystone black (Walker 7-shape do)\n    Glyphs[\"noteShapeKeystoneBlack\"] = \"\\uE1C1\";\n    // U+ECD8  Inverted keystone double whole (Walker 7-shape do)\n    Glyphs[\"noteShapeKeystoneDoubleWhole\"] = \"\\uECD8\";\n    // U+E1C0  Inverted keystone white (Walker 7-shape do)\n    Glyphs[\"noteShapeKeystoneWhite\"] = \"\\uE1C0\";\n    // U+E1BD  Moon black (Aikin 7-shape re)\n    Glyphs[\"noteShapeMoonBlack\"] = \"\\uE1BD\";\n    // U+ECD6  Moon double whole (Aikin 7-shape re)\n    Glyphs[\"noteShapeMoonDoubleWhole\"] = \"\\uECD6\";\n    // U+E1C7  Moon left black (Funk 7-shape do)\n    Glyphs[\"noteShapeMoonLeftBlack\"] = \"\\uE1C7\";\n    // U+ECDB  Moon left double whole (Funk 7-shape do)\n    Glyphs[\"noteShapeMoonLeftDoubleWhole\"] = \"\\uECDB\";\n    // U+E1C6  Moon left white (Funk 7-shape do)\n    Glyphs[\"noteShapeMoonLeftWhite\"] = \"\\uE1C6\";\n    // U+E1BC  Moon white (Aikin 7-shape re)\n    Glyphs[\"noteShapeMoonWhite\"] = \"\\uE1BC\";\n    // U+E1C3  Quarter moon black (Walker 7-shape re)\n    Glyphs[\"noteShapeQuarterMoonBlack\"] = \"\\uE1C3\";\n    // U+ECD9  Quarter moon double whole (Walker 7-shape re)\n    Glyphs[\"noteShapeQuarterMoonDoubleWhole\"] = \"\\uECD9\";\n    // U+E1C2  Quarter moon white (Walker 7-shape re)\n    Glyphs[\"noteShapeQuarterMoonWhite\"] = \"\\uE1C2\";\n    // U+E1B1  Round black (4-shape sol; 7-shape so)\n    Glyphs[\"noteShapeRoundBlack\"] = \"\\uE1B1\";\n    // U+ECD0  Round double whole (4-shape sol; 7-shape so)\n    Glyphs[\"noteShapeRoundDoubleWhole\"] = \"\\uECD0\";\n    // U+E1B0  Round white (4-shape sol; 7-shape so)\n    Glyphs[\"noteShapeRoundWhite\"] = \"\\uE1B0\";\n    // U+E1B3  Square black (4-shape la; Aikin 7-shape la)\n    Glyphs[\"noteShapeSquareBlack\"] = \"\\uE1B3\";\n    // U+ECD1  Square double whole (4-shape la; Aikin 7-shape la)\n    Glyphs[\"noteShapeSquareDoubleWhole\"] = \"\\uECD1\";\n    // U+E1B2  Square white (4-shape la; Aikin 7-shape la)\n    Glyphs[\"noteShapeSquareWhite\"] = \"\\uE1B2\";\n    // U+E1B7  Triangle left black (stem up; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleLeftBlack\"] = \"\\uE1B7\";\n    // U+ECD3  Triangle left double whole (stem up; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleLeftDoubleWhole\"] = \"\\uECD3\";\n    // U+E1B6  Triangle left white (stem up; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleLeftWhite\"] = \"\\uE1B6\";\n    // U+E1B5  Triangle right black (stem down; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleRightBlack\"] = \"\\uE1B5\";\n    // U+ECD2  Triangle right double whole (stem down; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleRightDoubleWhole\"] = \"\\uECD2\";\n    // U+E1B4  Triangle right white (stem down; 4-shape fa; 7-shape fa)\n    Glyphs[\"noteShapeTriangleRightWhite\"] = \"\\uE1B4\";\n    // U+E1BF  Triangle-round black (Aikin 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundBlack\"] = \"\\uE1BF\";\n    // U+ECD7  Triangle-round white (Aikin 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundDoubleWhole\"] = \"\\uECD7\";\n    // U+E1CB  Triangle-round left black (Funk 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundLeftBlack\"] = \"\\uE1CB\";\n    // U+ECDD  Triangle-round left double whole (Funk 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundLeftDoubleWhole\"] = \"\\uECDD\";\n    // U+E1CA  Triangle-round left white (Funk 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundLeftWhite\"] = \"\\uE1CA\";\n    // U+E1BE  Triangle-round white (Aikin 7-shape ti)\n    Glyphs[\"noteShapeTriangleRoundWhite\"] = \"\\uE1BE\";\n    // U+E1BB  Triangle up black (Aikin 7-shape do)\n    Glyphs[\"noteShapeTriangleUpBlack\"] = \"\\uE1BB\";\n    // U+ECD5  Triangle up double whole (Aikin 7-shape do)\n    Glyphs[\"noteShapeTriangleUpDoubleWhole\"] = \"\\uECD5\";\n    // U+E1BA  Triangle up white (Aikin 7-shape do)\n    Glyphs[\"noteShapeTriangleUpWhite\"] = \"\\uE1BA\";\n    // U+E167  Si (black note)\n    Glyphs[\"noteSiBlack\"] = \"\\uE167\";\n    // U+E15F  Si (half note)\n    Glyphs[\"noteSiHalf\"] = \"\\uE15F\";\n    // U+E157  Si (whole note)\n    Glyphs[\"noteSiWhole\"] = \"\\uE157\";\n    // U+E164  So (black note)\n    Glyphs[\"noteSoBlack\"] = \"\\uE164\";\n    // U+E15C  So (half note)\n    Glyphs[\"noteSoHalf\"] = \"\\uE15C\";\n    // U+E154  So (whole note)\n    Glyphs[\"noteSoWhole\"] = \"\\uE154\";\n    // U+EEFA  Te (black note)\n    Glyphs[\"noteTeBlack\"] = \"\\uEEFA\";\n    // U+EEF1  Te (half note)\n    Glyphs[\"noteTeHalf\"] = \"\\uEEF1\";\n    // U+EEE8  Te (whole note)\n    Glyphs[\"noteTeWhole\"] = \"\\uEEE8\";\n    // U+E166  Ti (black note)\n    Glyphs[\"noteTiBlack\"] = \"\\uE166\";\n    // U+E15E  Ti (half note)\n    Glyphs[\"noteTiHalf\"] = \"\\uE15E\";\n    // U+E156  Ti (whole note)\n    Glyphs[\"noteTiWhole\"] = \"\\uE156\";\n    // U+E1D2  Whole note (semibreve)\n    Glyphs[\"noteWhole\"] = \"\\uE1D2\";\n    // U+1D15D  Whole note (semibreve)\n    Glyphs[\"noteWholeAlternate\"] = \"\\uD834\\uDD5D\";\n    // U+E0A4  Black notehead\n    Glyphs[\"noteheadBlack\"] = \"\\uE0A4\";\n    // U+1D158  Black notehead\n    Glyphs[\"noteheadBlackAlternate\"] = \"\\uD834\\uDD58\";\n    // U+E0F7  Circle slash notehead\n    Glyphs[\"noteheadCircleSlash\"] = \"\\uE0F7\";\n    // U+E0B3  Circle X notehead\n    Glyphs[\"noteheadCircleX\"] = \"\\uE0B3\";\n    // U+1D145  Circle X notehead\n    Glyphs[\"noteheadCircleXAlternate\"] = \"\\uD834\\uDD45\";\n    // U+E0B0  Circle X double whole\n    Glyphs[\"noteheadCircleXDoubleWhole\"] = \"\\uE0B0\";\n    // U+E0B2  Circle X half\n    Glyphs[\"noteheadCircleXHalf\"] = \"\\uE0B2\";\n    // U+E0B1  Circle X whole\n    Glyphs[\"noteheadCircleXWhole\"] = \"\\uE0B1\";\n    // U+E0E4  Circled black notehead\n    Glyphs[\"noteheadCircledBlack\"] = \"\\uE0E4\";\n    // U+E0E8  Black notehead in large circle\n    Glyphs[\"noteheadCircledBlackLarge\"] = \"\\uE0E8\";\n    // U+E0E7  Circled double whole notehead\n    Glyphs[\"noteheadCircledDoubleWhole\"] = \"\\uE0E7\";\n    // U+E0EB  Double whole notehead in large circle\n    Glyphs[\"noteheadCircledDoubleWholeLarge\"] = \"\\uE0EB\";\n    // U+E0E5  Circled half notehead\n    Glyphs[\"noteheadCircledHalf\"] = \"\\uE0E5\";\n    // U+E0E9  Half notehead in large circle\n    Glyphs[\"noteheadCircledHalfLarge\"] = \"\\uE0E9\";\n    // U+E0E6  Circled whole notehead\n    Glyphs[\"noteheadCircledWhole\"] = \"\\uE0E6\";\n    // U+E0EA  Whole notehead in large circle\n    Glyphs[\"noteheadCircledWholeLarge\"] = \"\\uE0EA\";\n    // U+E0EC  Cross notehead in large circle\n    Glyphs[\"noteheadCircledXLarge\"] = \"\\uE0EC\";\n    // U+E124  Double whole note cluster, 2nd\n    Glyphs[\"noteheadClusterDoubleWhole2nd\"] = \"\\uE124\";\n    // U+E128  Double whole note cluster, 3rd\n    Glyphs[\"noteheadClusterDoubleWhole3rd\"] = \"\\uE128\";\n    // U+E12E  Combining double whole note cluster, bottom\n    Glyphs[\"noteheadClusterDoubleWholeBottom\"] = \"\\uE12E\";\n    // U+E12D  Combining double whole note cluster, middle\n    Glyphs[\"noteheadClusterDoubleWholeMiddle\"] = \"\\uE12D\";\n    // U+E12C  Combining double whole note cluster, top\n    Glyphs[\"noteheadClusterDoubleWholeTop\"] = \"\\uE12C\";\n    // U+E126  Half note cluster, 2nd\n    Glyphs[\"noteheadClusterHalf2nd\"] = \"\\uE126\";\n    // U+E12A  Half note cluster, 3rd\n    Glyphs[\"noteheadClusterHalf3rd\"] = \"\\uE12A\";\n    // U+E134  Combining half note cluster, bottom\n    Glyphs[\"noteheadClusterHalfBottom\"] = \"\\uE134\";\n    // U+E133  Combining half note cluster, middle\n    Glyphs[\"noteheadClusterHalfMiddle\"] = \"\\uE133\";\n    // U+E132  Combining half note cluster, top\n    Glyphs[\"noteheadClusterHalfTop\"] = \"\\uE132\";\n    // U+E127  Quarter note cluster, 2nd\n    Glyphs[\"noteheadClusterQuarter2nd\"] = \"\\uE127\";\n    // U+E12B  Quarter note cluster, 3rd\n    Glyphs[\"noteheadClusterQuarter3rd\"] = \"\\uE12B\";\n    // U+E137  Combining quarter note cluster, bottom\n    Glyphs[\"noteheadClusterQuarterBottom\"] = \"\\uE137\";\n    // U+E136  Combining quarter note cluster, middle\n    Glyphs[\"noteheadClusterQuarterMiddle\"] = \"\\uE136\";\n    // U+E135  Combining quarter note cluster, top\n    Glyphs[\"noteheadClusterQuarterTop\"] = \"\\uE135\";\n    // U+E123  Cluster notehead black (round)\n    Glyphs[\"noteheadClusterRoundBlack\"] = \"\\uE123\";\n    // U+E122  Cluster notehead white (round)\n    Glyphs[\"noteheadClusterRoundWhite\"] = \"\\uE122\";\n    // U+E121  Cluster notehead black (square)\n    Glyphs[\"noteheadClusterSquareBlack\"] = \"\\uE121\";\n    // U+1D15B  Cluster notehead black (square)\n    Glyphs[\"noteheadClusterSquareBlackAlternate\"] = \"\\uD834\\uDD5B\";\n    // U+E120  Cluster notehead white (square)\n    Glyphs[\"noteheadClusterSquareWhite\"] = \"\\uE120\";\n    // U+1D15A  Cluster notehead white (square)\n    Glyphs[\"noteheadClusterSquareWhiteAlternate\"] = \"\\uD834\\uDD5A\";\n    // U+E125  Whole note cluster, 2nd\n    Glyphs[\"noteheadClusterWhole2nd\"] = \"\\uE125\";\n    // U+E129  Whole note cluster, 3rd\n    Glyphs[\"noteheadClusterWhole3rd\"] = \"\\uE129\";\n    // U+E131  Combining whole note cluster, bottom\n    Glyphs[\"noteheadClusterWholeBottom\"] = \"\\uE131\";\n    // U+E130  Combining whole note cluster, middle\n    Glyphs[\"noteheadClusterWholeMiddle\"] = \"\\uE130\";\n    // U+E12F  Combining whole note cluster, top\n    Glyphs[\"noteheadClusterWholeTop\"] = \"\\uE12F\";\n    // U+EEAE  4/11 note (eleventh note series, Cowell)\n    Glyphs[\"noteheadCowellEleventhNoteSeriesHalf\"] = \"\\uEEAE\";\n    // U+EEAD  8/11 note (eleventh note series, Cowell)\n    Glyphs[\"noteheadCowellEleventhNoteSeriesWhole\"] = \"\\uEEAD\";\n    // U+EEAF  2/11 note (eleventh note series, Cowell)\n    Glyphs[\"noteheadCowellEleventhSeriesBlack\"] = \"\\uEEAF\";\n    // U+EEB5  2/15 note (fifteenth note series, Cowell)\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesBlack\"] = \"\\uEEB5\";\n    // U+EEB4  4/15 note (fifteenth note series, Cowell)\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesHalf\"] = \"\\uEEB4\";\n    // U+EEB3  8/15 note (fifteenth note series, Cowell)\n    Glyphs[\"noteheadCowellFifteenthNoteSeriesWhole\"] = \"\\uEEB3\";\n    // U+EEA6  1/5 note (fifth note series, Cowell)\n    Glyphs[\"noteheadCowellFifthNoteSeriesBlack\"] = \"\\uEEA6\";\n    // U+EEA5  2/5 note (fifth note series, Cowell)\n    Glyphs[\"noteheadCowellFifthNoteSeriesHalf\"] = \"\\uEEA5\";\n    // U+EEA4  4/5 note (fifth note series, Cowell)\n    Glyphs[\"noteheadCowellFifthNoteSeriesWhole\"] = \"\\uEEA4\";\n    // U+EEAC  2/9 note (ninth note series, Cowell)\n    Glyphs[\"noteheadCowellNinthNoteSeriesBlack\"] = \"\\uEEAC\";\n    // U+EEAB  4/9 note (ninth note series, Cowell)\n    Glyphs[\"noteheadCowellNinthNoteSeriesHalf\"] = \"\\uEEAB\";\n    // U+EEAA  8/9 note (ninth note series, Cowell)\n    Glyphs[\"noteheadCowellNinthNoteSeriesWhole\"] = \"\\uEEAA\";\n    // U+EEA9  1/7 note (seventh note series, Cowell)\n    Glyphs[\"noteheadCowellSeventhNoteSeriesBlack\"] = \"\\uEEA9\";\n    // U+EEA8  2/7 note (seventh note series, Cowell)\n    Glyphs[\"noteheadCowellSeventhNoteSeriesHalf\"] = \"\\uEEA8\";\n    // U+EEA7  4/7 note (seventh note series, Cowell)\n    Glyphs[\"noteheadCowellSeventhNoteSeriesWhole\"] = \"\\uEEA7\";\n    // U+EEA3  1/6 note (third note series, Cowell)\n    Glyphs[\"noteheadCowellThirdNoteSeriesBlack\"] = \"\\uEEA3\";\n    // U+EEA2  1/3 note (third note series, Cowell)\n    Glyphs[\"noteheadCowellThirdNoteSeriesHalf\"] = \"\\uEEA2\";\n    // U+EEA1  2/3 note (third note series, Cowell)\n    Glyphs[\"noteheadCowellThirdNoteSeriesWhole\"] = \"\\uEEA1\";\n    // U+EEB2  2/13 note (thirteenth note series, Cowell)\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesBlack\"] = \"\\uEEB2\";\n    // U+EEB1  4/13 note (thirteenth note series, Cowell)\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesHalf\"] = \"\\uEEB1\";\n    // U+EEB0  8/13 note (thirteenth note series, Cowell)\n    Glyphs[\"noteheadCowellThirteenthNoteSeriesWhole\"] = \"\\uEEB0\";\n    // U+E0DB  Diamond black notehead\n    Glyphs[\"noteheadDiamondBlack\"] = \"\\uE0DB\";\n    // U+E0E2  Diamond black notehead (old)\n    Glyphs[\"noteheadDiamondBlackOld\"] = \"\\uE0E2\";\n    // U+E0DC  Diamond black notehead (wide)\n    Glyphs[\"noteheadDiamondBlackWide\"] = \"\\uE0DC\";\n    // U+E139  Black diamond cluster, 2nd\n    Glyphs[\"noteheadDiamondClusterBlack2nd\"] = \"\\uE139\";\n    // U+E13B  Black diamond cluster, 3rd\n    Glyphs[\"noteheadDiamondClusterBlack3rd\"] = \"\\uE13B\";\n    // U+E141  Combining black diamond cluster, bottom\n    Glyphs[\"noteheadDiamondClusterBlackBottom\"] = \"\\uE141\";\n    // U+E140  Combining black diamond cluster, middle\n    Glyphs[\"noteheadDiamondClusterBlackMiddle\"] = \"\\uE140\";\n    // U+E13F  Combining black diamond cluster, top\n    Glyphs[\"noteheadDiamondClusterBlackTop\"] = \"\\uE13F\";\n    // U+E138  White diamond cluster, 2nd\n    Glyphs[\"noteheadDiamondClusterWhite2nd\"] = \"\\uE138\";\n    // U+E13A  White diamond cluster, 3rd\n    Glyphs[\"noteheadDiamondClusterWhite3rd\"] = \"\\uE13A\";\n    // U+E13E  Combining white diamond cluster, bottom\n    Glyphs[\"noteheadDiamondClusterWhiteBottom\"] = \"\\uE13E\";\n    // U+E13D  Combining white diamond cluster, middle\n    Glyphs[\"noteheadDiamondClusterWhiteMiddle\"] = \"\\uE13D\";\n    // U+E13C  Combining white diamond cluster, top\n    Glyphs[\"noteheadDiamondClusterWhiteTop\"] = \"\\uE13C\";\n    // U+E0D7  Diamond double whole notehead\n    Glyphs[\"noteheadDiamondDoubleWhole\"] = \"\\uE0D7\";\n    // U+E0DF  Diamond double whole notehead (old)\n    Glyphs[\"noteheadDiamondDoubleWholeOld\"] = \"\\uE0DF\";\n    // U+E0D9  Diamond half notehead\n    Glyphs[\"noteheadDiamondHalf\"] = \"\\uE0D9\";\n    // U+E0E3  Half-filled diamond notehead\n    Glyphs[\"noteheadDiamondHalfFilled\"] = \"\\uE0E3\";\n    // U+E0E1  Diamond half notehead (old)\n    Glyphs[\"noteheadDiamondHalfOld\"] = \"\\uE0E1\";\n    // U+E0DA  Diamond half notehead (wide)\n    Glyphs[\"noteheadDiamondHalfWide\"] = \"\\uE0DA\";\n    // U+E0FC  Open diamond notehead\n    Glyphs[\"noteheadDiamondOpen\"] = \"\\uE0FC\";\n    // U+E0DD  Diamond white notehead\n    Glyphs[\"noteheadDiamondWhite\"] = \"\\uE0DD\";\n    // U+E0DE  Diamond white notehead (wide)\n    Glyphs[\"noteheadDiamondWhiteWide\"] = \"\\uE0DE\";\n    // U+E0D8  Diamond whole notehead\n    Glyphs[\"noteheadDiamondWhole\"] = \"\\uE0D8\";\n    // U+E0E0  Diamond whole notehead (old)\n    Glyphs[\"noteheadDiamondWholeOld\"] = \"\\uE0E0\";\n    // U+E0A0  Double whole (breve) notehead\n    Glyphs[\"noteheadDoubleWhole\"] = \"\\uE0A0\";\n    // U+E0A1  Double whole (breve) notehead (square)\n    Glyphs[\"noteheadDoubleWholeSquare\"] = \"\\uE0A1\";\n    // U+E0B4  Double whole notehead with X\n    Glyphs[\"noteheadDoubleWholeWithX\"] = \"\\uE0B4\";\n    // U+E0A3  Half (minim) notehead\n    Glyphs[\"noteheadHalf\"] = \"\\uE0A3\";\n    // U+1D157  Half (minim) notehead\n    Glyphs[\"noteheadHalfAlternate\"] = \"\\uD834\\uDD57\";\n    // U+E0FB  Filled half (minim) notehead\n    Glyphs[\"noteheadHalfFilled\"] = \"\\uE0FB\";\n    // U+E0B6  Half notehead with X\n    Glyphs[\"noteheadHalfWithX\"] = \"\\uE0B6\";\n    // U+E0F8  Heavy X notehead\n    Glyphs[\"noteheadHeavyX\"] = \"\\uE0F8\";\n    // U+E0F9  Heavy X with hat notehead\n    Glyphs[\"noteheadHeavyXHat\"] = \"\\uE0F9\";\n    // U+E0F4  Large arrow down (lowest pitch) black notehead\n    Glyphs[\"noteheadLargeArrowDownBlack\"] = \"\\uE0F4\";\n    // U+E0F1  Large arrow down (lowest pitch) double whole notehead\n    Glyphs[\"noteheadLargeArrowDownDoubleWhole\"] = \"\\uE0F1\";\n    // U+E0F3  Large arrow down (lowest pitch) half notehead\n    Glyphs[\"noteheadLargeArrowDownHalf\"] = \"\\uE0F3\";\n    // U+E0F2  Large arrow down (lowest pitch) whole notehead\n    Glyphs[\"noteheadLargeArrowDownWhole\"] = \"\\uE0F2\";\n    // U+E0F0  Large arrow up (highest pitch) black notehead\n    Glyphs[\"noteheadLargeArrowUpBlack\"] = \"\\uE0F0\";\n    // U+E0ED  Large arrow up (highest pitch) double whole notehead\n    Glyphs[\"noteheadLargeArrowUpDoubleWhole\"] = \"\\uE0ED\";\n    // U+E0EF  Large arrow up (highest pitch) half notehead\n    Glyphs[\"noteheadLargeArrowUpHalf\"] = \"\\uE0EF\";\n    // U+E0EE  Large arrow up (highest pitch) whole notehead\n    Glyphs[\"noteheadLargeArrowUpWhole\"] = \"\\uE0EE\";\n    // U+E0CB  Moon notehead black\n    Glyphs[\"noteheadMoonBlack\"] = \"\\uE0CB\";\n    // U+1D153  Moon notehead black\n    Glyphs[\"noteheadMoonBlackAlternate\"] = \"\\uD834\\uDD53\";\n    // U+E0CA  Moon notehead white\n    Glyphs[\"noteheadMoonWhite\"] = \"\\uE0CA\";\n    // U+1D152  Moon notehead white\n    Glyphs[\"noteheadMoonWhiteAlternate\"] = \"\\uD834\\uDD52\";\n    // U+EEA0  Sine notehead (Nancarrow)\n    Glyphs[\"noteheadNancarrowSine\"] = \"\\uEEA0\";\n    // U+E0A5  Null notehead\n    Glyphs[\"noteheadNull\"] = \"\\uE0A5\";\n    // U+1D159  Null notehead\n    Glyphs[\"noteheadNullAlternate\"] = \"\\uD834\\uDD59\";\n    // U+E0CE  Parenthesis notehead\n    Glyphs[\"noteheadParenthesis\"] = \"\\uE0CE\";\n    // U+1D156  Parenthesis notehead\n    Glyphs[\"noteheadParenthesisAlternate\"] = \"\\uD834\\uDD56\";\n    // U+E0F5  Opening parenthesis\n    Glyphs[\"noteheadParenthesisLeft\"] = \"\\uE0F5\";\n    // U+E0F6  Closing parenthesis\n    Glyphs[\"noteheadParenthesisRight\"] = \"\\uE0F6\";\n    // U+E0AF  Plus notehead black\n    Glyphs[\"noteheadPlusBlack\"] = \"\\uE0AF\";\n    // U+1D144  Plus notehead black\n    Glyphs[\"noteheadPlusBlackAlternate\"] = \"\\uD834\\uDD44\";\n    // U+E0AC  Plus notehead double whole\n    Glyphs[\"noteheadPlusDoubleWhole\"] = \"\\uE0AC\";\n    // U+E0AE  Plus notehead half\n    Glyphs[\"noteheadPlusHalf\"] = \"\\uE0AE\";\n    // U+E0AD  Plus notehead whole\n    Glyphs[\"noteheadPlusWhole\"] = \"\\uE0AD\";\n    // U+E144  Combining black rectangular cluster, bottom\n    Glyphs[\"noteheadRectangularClusterBlackBottom\"] = \"\\uE144\";\n    // U+E143  Combining black rectangular cluster, middle\n    Glyphs[\"noteheadRectangularClusterBlackMiddle\"] = \"\\uE143\";\n    // U+E142  Combining black rectangular cluster, top\n    Glyphs[\"noteheadRectangularClusterBlackTop\"] = \"\\uE142\";\n    // U+E147  Combining white rectangular cluster, bottom\n    Glyphs[\"noteheadRectangularClusterWhiteBottom\"] = \"\\uE147\";\n    // U+E146  Combining white rectangular cluster, middle\n    Glyphs[\"noteheadRectangularClusterWhiteMiddle\"] = \"\\uE146\";\n    // U+E145  Combining white rectangular cluster, top\n    Glyphs[\"noteheadRectangularClusterWhiteTop\"] = \"\\uE145\";\n    // U+E113  Round black notehead\n    Glyphs[\"noteheadRoundBlack\"] = \"\\uE113\";\n    // U+E11C  Round black notehead, double slashed\n    Glyphs[\"noteheadRoundBlackDoubleSlashed\"] = \"\\uE11C\";\n    // U+E110  Large round black notehead\n    Glyphs[\"noteheadRoundBlackLarge\"] = \"\\uE110\";\n    // U+E118  Round black notehead, slashed\n    Glyphs[\"noteheadRoundBlackSlashed\"] = \"\\uE118\";\n    // U+E116  Large round black notehead, slashed\n    Glyphs[\"noteheadRoundBlackSlashedLarge\"] = \"\\uE116\";\n    // U+E114  Round white notehead\n    Glyphs[\"noteheadRoundWhite\"] = \"\\uE114\";\n    // U+E11D  Round white notehead, double slashed\n    Glyphs[\"noteheadRoundWhiteDoubleSlashed\"] = \"\\uE11D\";\n    // U+E111  Large round white notehead\n    Glyphs[\"noteheadRoundWhiteLarge\"] = \"\\uE111\";\n    // U+E119  Round white notehead, slashed\n    Glyphs[\"noteheadRoundWhiteSlashed\"] = \"\\uE119\";\n    // U+E117  Large round white notehead, slashed\n    Glyphs[\"noteheadRoundWhiteSlashedLarge\"] = \"\\uE117\";\n    // U+E115  Round white notehead with dot\n    Glyphs[\"noteheadRoundWhiteWithDot\"] = \"\\uE115\";\n    // U+E112  Large round white notehead with dot\n    Glyphs[\"noteheadRoundWhiteWithDotLarge\"] = \"\\uE112\";\n    // U+E104  Large white diamond\n    Glyphs[\"noteheadSlashDiamondWhite\"] = \"\\uE104\";\n    // U+E101  Slash with horizontal ends\n    Glyphs[\"noteheadSlashHorizontalEnds\"] = \"\\uE101\";\n    // U+1D10D  Slash with horizontal ends\n    Glyphs[\"noteheadSlashHorizontalEndsAlternate\"] = \"\\uD834\\uDD0D\";\n    // U+E108  Muted slash with horizontal ends\n    Glyphs[\"noteheadSlashHorizontalEndsMuted\"] = \"\\uE108\";\n    // U+E100  Slash with vertical ends\n    Glyphs[\"noteheadSlashVerticalEnds\"] = \"\\uE100\";\n    // U+E107  Muted slash with vertical ends\n    Glyphs[\"noteheadSlashVerticalEndsMuted\"] = \"\\uE107\";\n    // U+E105  Small slash with vertical ends\n    Glyphs[\"noteheadSlashVerticalEndsSmall\"] = \"\\uE105\";\n    // U+E10A  White slash double whole\n    Glyphs[\"noteheadSlashWhiteDoubleWhole\"] = \"\\uE10A\";\n    // U+E103  White slash half\n    Glyphs[\"noteheadSlashWhiteHalf\"] = \"\\uE103\";\n    // U+E109  Muted white slash\n    Glyphs[\"noteheadSlashWhiteMuted\"] = \"\\uE109\";\n    // U+E102  White slash whole\n    Glyphs[\"noteheadSlashWhiteWhole\"] = \"\\uE102\";\n    // U+E106  Large X notehead\n    Glyphs[\"noteheadSlashX\"] = \"\\uE106\";\n    // U+E0CF  Slashed black notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedBlack1\"] = \"\\uE0CF\";\n    // U+E0D0  Slashed black notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedBlack2\"] = \"\\uE0D0\";\n    // U+E0D5  Slashed double whole notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedDoubleWhole1\"] = \"\\uE0D5\";\n    // U+E0D6  Slashed double whole notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedDoubleWhole2\"] = \"\\uE0D6\";\n    // U+E0D1  Slashed half notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedHalf1\"] = \"\\uE0D1\";\n    // U+E0D2  Slashed half notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedHalf2\"] = \"\\uE0D2\";\n    // U+E0D3  Slashed whole notehead (bottom left to top right)\n    Glyphs[\"noteheadSlashedWhole1\"] = \"\\uE0D3\";\n    // U+E0D4  Slashed whole notehead (top left to bottom right)\n    Glyphs[\"noteheadSlashedWhole2\"] = \"\\uE0D4\";\n    // U+E0B9  Square notehead black\n    Glyphs[\"noteheadSquareBlack\"] = \"\\uE0B9\";\n    // U+1D147  Square notehead black\n    Glyphs[\"noteheadSquareBlackAlternate\"] = \"\\uD834\\uDD47\";\n    // U+E11A  Large square black notehead\n    Glyphs[\"noteheadSquareBlackLarge\"] = \"\\uE11A\";\n    // U+E11B  Large square white notehead\n    Glyphs[\"noteheadSquareBlackWhite\"] = \"\\uE11B\";\n    // U+E0B8  Square notehead white\n    Glyphs[\"noteheadSquareWhite\"] = \"\\uE0B8\";\n    // U+1D146  Square notehead white\n    Glyphs[\"noteheadSquareWhiteAlternate\"] = \"\\uD834\\uDD46\";\n    // U+E0C7  Triangle notehead down black\n    Glyphs[\"noteheadTriangleDownBlack\"] = \"\\uE0C7\";\n    // U+1D14F  Triangle notehead down black\n    Glyphs[\"noteheadTriangleDownBlackAlternate\"] = \"\\uD834\\uDD4F\";\n    // U+E0C3  Triangle notehead down double whole\n    Glyphs[\"noteheadTriangleDownDoubleWhole\"] = \"\\uE0C3\";\n    // U+E0C5  Triangle notehead down half\n    Glyphs[\"noteheadTriangleDownHalf\"] = \"\\uE0C5\";\n    // U+E0C6  Triangle notehead down white\n    Glyphs[\"noteheadTriangleDownWhite\"] = \"\\uE0C6\";\n    // U+1D14E  Triangle notehead down white\n    Glyphs[\"noteheadTriangleDownWhiteAlternate\"] = \"\\uD834\\uDD4E\";\n    // U+E0C4  Triangle notehead down whole\n    Glyphs[\"noteheadTriangleDownWhole\"] = \"\\uE0C4\";\n    // U+E0C0  Triangle notehead left black\n    Glyphs[\"noteheadTriangleLeftBlack\"] = \"\\uE0C0\";\n    // U+1D14B  Triangle notehead left black\n    Glyphs[\"noteheadTriangleLeftBlackAlternate\"] = \"\\uD834\\uDD4B\";\n    // U+E0BF  Triangle notehead left white\n    Glyphs[\"noteheadTriangleLeftWhite\"] = \"\\uE0BF\";\n    // U+1D14A  Triangle notehead left white\n    Glyphs[\"noteheadTriangleLeftWhiteAlternate\"] = \"\\uD834\\uDD4A\";\n    // U+E0C2  Triangle notehead right black\n    Glyphs[\"noteheadTriangleRightBlack\"] = \"\\uE0C2\";\n    // U+1D14D  Triangle notehead right black\n    Glyphs[\"noteheadTriangleRightBlackAlternate\"] = \"\\uD834\\uDD4D\";\n    // U+E0C1  Triangle notehead right white\n    Glyphs[\"noteheadTriangleRightWhite\"] = \"\\uE0C1\";\n    // U+1D14C  Triangle notehead right white\n    Glyphs[\"noteheadTriangleRightWhiteAlternate\"] = \"\\uD834\\uDD4C\";\n    // U+E0CD  Triangle-round notehead down black\n    Glyphs[\"noteheadTriangleRoundDownBlack\"] = \"\\uE0CD\";\n    // U+1D155  Triangle-round notehead down black\n    Glyphs[\"noteheadTriangleRoundDownBlackAlternate\"] = \"\\uD834\\uDD55\";\n    // U+E0CC  Triangle-round notehead down white\n    Glyphs[\"noteheadTriangleRoundDownWhite\"] = \"\\uE0CC\";\n    // U+1D154  Triangle-round notehead down white\n    Glyphs[\"noteheadTriangleRoundDownWhiteAlternate\"] = \"\\uD834\\uDD54\";\n    // U+E0BE  Triangle notehead up black\n    Glyphs[\"noteheadTriangleUpBlack\"] = \"\\uE0BE\";\n    // U+1D149  Triangle notehead up black\n    Glyphs[\"noteheadTriangleUpBlackAlternate\"] = \"\\uD834\\uDD49\";\n    // U+E0BA  Triangle notehead up double whole\n    Glyphs[\"noteheadTriangleUpDoubleWhole\"] = \"\\uE0BA\";\n    // U+E0BC  Triangle notehead up half\n    Glyphs[\"noteheadTriangleUpHalf\"] = \"\\uE0BC\";\n    // U+E0C9  Triangle notehead up right black\n    Glyphs[\"noteheadTriangleUpRightBlack\"] = \"\\uE0C9\";\n    // U+1D151  Triangle notehead up right black\n    Glyphs[\"noteheadTriangleUpRightBlackAlternate\"] = \"\\uD834\\uDD51\";\n    // U+E0C8  Triangle notehead up right white\n    Glyphs[\"noteheadTriangleUpRightWhite\"] = \"\\uE0C8\";\n    // U+1D150  Triangle notehead up right white\n    Glyphs[\"noteheadTriangleUpRightWhiteAlternate\"] = \"\\uD834\\uDD50\";\n    // U+E0BD  Triangle notehead up white\n    Glyphs[\"noteheadTriangleUpWhite\"] = \"\\uE0BD\";\n    // U+1D148  Triangle notehead up white\n    Glyphs[\"noteheadTriangleUpWhiteAlternate\"] = \"\\uD834\\uDD48\";\n    // U+E0BB  Triangle notehead up whole\n    Glyphs[\"noteheadTriangleUpWhole\"] = \"\\uE0BB\";\n    // U+E0B7  Void notehead with X\n    Glyphs[\"noteheadVoidWithX\"] = \"\\uE0B7\";\n    // U+E0A2  Whole (semibreve) notehead\n    Glyphs[\"noteheadWhole\"] = \"\\uE0A2\";\n    // U+E0FA  Filled whole (semibreve) notehead\n    Glyphs[\"noteheadWholeFilled\"] = \"\\uE0FA\";\n    // U+E0B5  Whole notehead with X\n    Glyphs[\"noteheadWholeWithX\"] = \"\\uE0B5\";\n    // U+E0A9  X notehead black\n    Glyphs[\"noteheadXBlack\"] = \"\\uE0A9\";\n    // U+1D143  X notehead black\n    Glyphs[\"noteheadXBlackAlternate\"] = \"\\uD834\\uDD43\";\n    // U+E0A6  X notehead double whole\n    Glyphs[\"noteheadXDoubleWhole\"] = \"\\uE0A6\";\n    // U+E0A8  X notehead half\n    Glyphs[\"noteheadXHalf\"] = \"\\uE0A8\";\n    // U+E0AA  Ornate X notehead\n    Glyphs[\"noteheadXOrnate\"] = \"\\uE0AA\";\n    // U+E0AB  Ornate X notehead in ellipse\n    Glyphs[\"noteheadXOrnateEllipse\"] = \"\\uE0AB\";\n    // U+E0A7  X notehead whole\n    Glyphs[\"noteheadXWhole\"] = \"\\uE0A7\";\n    // U+EC91  a (baseline)\n    Glyphs[\"octaveBaselineA\"] = \"\\uEC91\";\n    // U+EC93  b (baseline)\n    Glyphs[\"octaveBaselineB\"] = \"\\uEC93\";\n    // U+EC95  m (baseline)\n    Glyphs[\"octaveBaselineM\"] = \"\\uEC95\";\n    // U+EC97  v (baseline)\n    Glyphs[\"octaveBaselineV\"] = \"\\uEC97\";\n    // U+E51F  Bassa\n    Glyphs[\"octaveBassa\"] = \"\\uE51F\";\n    // U+EC90  Loco\n    Glyphs[\"octaveLoco\"] = \"\\uEC90\";\n    // U+E51A  Left parenthesis for octave signs\n    Glyphs[\"octaveParensLeft\"] = \"\\uE51A\";\n    // U+E51B  Right parenthesis for octave signs\n    Glyphs[\"octaveParensRight\"] = \"\\uE51B\";\n    // U+EC92  a (superscript)\n    Glyphs[\"octaveSuperscriptA\"] = \"\\uEC92\";\n    // U+EC94  b (superscript)\n    Glyphs[\"octaveSuperscriptB\"] = \"\\uEC94\";\n    // U+EC96  m (superscript)\n    Glyphs[\"octaveSuperscriptM\"] = \"\\uEC96\";\n    // U+EC98  v (superscript)\n    Glyphs[\"octaveSuperscriptV\"] = \"\\uEC98\";\n    // U+E233  One-handed roll (Stevens)\n    Glyphs[\"oneHandedRollStevens\"] = \"\\uE233\";\n    // U+EE2E  Two Fusae\n    Glyphs[\"organGerman2Fusae\"] = \"\\uEE2E\";\n    // U+EE2C  Two Minimae\n    Glyphs[\"organGerman2Minimae\"] = \"\\uEE2C\";\n    // U+EE19  Combining double octave line above\n    Glyphs[\"organGerman2OctaveUp\"] = \"\\uEE19\";\n    // U+EE2F  Two Semifusae\n    Glyphs[\"organGerman2Semifusae\"] = \"\\uEE2F\";\n    // U+EE2D  Two Semiminimae\n    Glyphs[\"organGerman2Semiminimae\"] = \"\\uEE2D\";\n    // U+EE32  Three Fusae\n    Glyphs[\"organGerman3Fusae\"] = \"\\uEE32\";\n    // U+EE30  Three Minimae\n    Glyphs[\"organGerman3Minimae\"] = \"\\uEE30\";\n    // U+EE33  Three Semifusae\n    Glyphs[\"organGerman3Semifusae\"] = \"\\uEE33\";\n    // U+EE31  Three Semiminimae\n    Glyphs[\"organGerman3Semiminimae\"] = \"\\uEE31\";\n    // U+EE36  Four Fusae\n    Glyphs[\"organGerman4Fusae\"] = \"\\uEE36\";\n    // U+EE34  Four Minimae\n    Glyphs[\"organGerman4Minimae\"] = \"\\uEE34\";\n    // U+EE37  Four Semifusae\n    Glyphs[\"organGerman4Semifusae\"] = \"\\uEE37\";\n    // U+EE35  Four Semiminimae\n    Glyphs[\"organGerman4Semiminimae\"] = \"\\uEE35\";\n    // U+EE3A  Five Fusae\n    Glyphs[\"organGerman5Fusae\"] = \"\\uEE3A\";\n    // U+EE38  Five Minimae\n    Glyphs[\"organGerman5Minimae\"] = \"\\uEE38\";\n    // U+EE3B  Five Semifusae\n    Glyphs[\"organGerman5Semifusae\"] = \"\\uEE3B\";\n    // U+EE39  Five Semiminimae\n    Glyphs[\"organGerman5Semiminimae\"] = \"\\uEE39\";\n    // U+EE3E  Six Fusae\n    Glyphs[\"organGerman6Fusae\"] = \"\\uEE3E\";\n    // U+EE3C  Six Minimae\n    Glyphs[\"organGerman6Minimae\"] = \"\\uEE3C\";\n    // U+EE3F  Six Semifusae\n    Glyphs[\"organGerman6Semifusae\"] = \"\\uEE3F\";\n    // U+EE3D  Six Semiminimae\n    Glyphs[\"organGerman6Semiminimae\"] = \"\\uEE3D\";\n    // U+EE15  German organ tablature small A\n    Glyphs[\"organGermanALower\"] = \"\\uEE15\";\n    // U+EE09  German organ tablature great A\n    Glyphs[\"organGermanAUpper\"] = \"\\uEE09\";\n    // U+EE1C  Rhythm Dot\n    Glyphs[\"organGermanAugmentationDot\"] = \"\\uEE1C\";\n    // U+EE16  German organ tablature small B\n    Glyphs[\"organGermanBLower\"] = \"\\uEE16\";\n    // U+EE0A  German organ tablature great B\n    Glyphs[\"organGermanBUpper\"] = \"\\uEE0A\";\n    // U+EE25  Brevis (Binary) Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerBrevis2\"] = \"\\uEE25\";\n    // U+EE24  Brevis (Ternary) Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerBrevis3\"] = \"\\uEE24\";\n    // U+EE1E  Minima Rest Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerMinimaRest\"] = \"\\uEE1E\";\n    // U+EE26  Semibrevis Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerSemibrevis\"] = \"\\uEE26\";\n    // U+EE1D  Semibrevis Rest Buxheimer Orgelbuch\n    Glyphs[\"organGermanBuxheimerSemibrevisRest\"] = \"\\uEE1D\";\n    // U+EE0C  German organ tablature small C\n    Glyphs[\"organGermanCLower\"] = \"\\uEE0C\";\n    // U+EE00  German organ tablature great C\n    Glyphs[\"organGermanCUpper\"] = \"\\uEE00\";\n    // U+EE0D  German organ tablature small Cis\n    Glyphs[\"organGermanCisLower\"] = \"\\uEE0D\";\n    // U+EE01  German organ tablature great Cis\n    Glyphs[\"organGermanCisUpper\"] = \"\\uEE01\";\n    // U+EE0E  German organ tablature small D\n    Glyphs[\"organGermanDLower\"] = \"\\uEE0E\";\n    // U+EE02  German organ tablature great D\n    Glyphs[\"organGermanDUpper\"] = \"\\uEE02\";\n    // U+EE0F  German organ tablature small Dis\n    Glyphs[\"organGermanDisLower\"] = \"\\uEE0F\";\n    // U+EE03  German organ tablature great Dis\n    Glyphs[\"organGermanDisUpper\"] = \"\\uEE03\";\n    // U+EE10  German organ tablature small E\n    Glyphs[\"organGermanELower\"] = \"\\uEE10\";\n    // U+EE04  German organ tablature great E\n    Glyphs[\"organGermanEUpper\"] = \"\\uEE04\";\n    // U+EE11  German organ tablature small F\n    Glyphs[\"organGermanFLower\"] = \"\\uEE11\";\n    // U+EE05  German organ tablature great F\n    Glyphs[\"organGermanFUpper\"] = \"\\uEE05\";\n    // U+EE12  German organ tablature small Fis\n    Glyphs[\"organGermanFisLower\"] = \"\\uEE12\";\n    // U+EE06  German organ tablature great Fis\n    Glyphs[\"organGermanFisUpper\"] = \"\\uEE06\";\n    // U+EE2A  Fusa\n    Glyphs[\"organGermanFusa\"] = \"\\uEE2A\";\n    // U+EE22  Fusa Rest\n    Glyphs[\"organGermanFusaRest\"] = \"\\uEE22\";\n    // U+EE13  German organ tablature small G\n    Glyphs[\"organGermanGLower\"] = \"\\uEE13\";\n    // U+EE07  German organ tablature great G\n    Glyphs[\"organGermanGUpper\"] = \"\\uEE07\";\n    // U+EE14  German organ tablature small Gis\n    Glyphs[\"organGermanGisLower\"] = \"\\uEE14\";\n    // U+EE08  German organ tablature great Gis\n    Glyphs[\"organGermanGisUpper\"] = \"\\uEE08\";\n    // U+EE17  German organ tablature small H\n    Glyphs[\"organGermanHLower\"] = \"\\uEE17\";\n    // U+EE0B  German organ tablature great H\n    Glyphs[\"organGermanHUpper\"] = \"\\uEE0B\";\n    // U+EE28  Minima\n    Glyphs[\"organGermanMinima\"] = \"\\uEE28\";\n    // U+EE20  Minima Rest\n    Glyphs[\"organGermanMinimaRest\"] = \"\\uEE20\";\n    // U+EE1A  Combining single octave line below\n    Glyphs[\"organGermanOctaveDown\"] = \"\\uEE1A\";\n    // U+EE18  Combining single octave line above\n    Glyphs[\"organGermanOctaveUp\"] = \"\\uEE18\";\n    // U+EE27  Semibrevis\n    Glyphs[\"organGermanSemibrevis\"] = \"\\uEE27\";\n    // U+EE1F  Semibrevis Rest\n    Glyphs[\"organGermanSemibrevisRest\"] = \"\\uEE1F\";\n    // U+EE2B  Semifusa\n    Glyphs[\"organGermanSemifusa\"] = \"\\uEE2B\";\n    // U+EE23  Semifusa Rest\n    Glyphs[\"organGermanSemifusaRest\"] = \"\\uEE23\";\n    // U+EE29  Semiminima\n    Glyphs[\"organGermanSemiminima\"] = \"\\uEE29\";\n    // U+EE21  Semiminima Rest\n    Glyphs[\"organGermanSemiminimaRest\"] = \"\\uEE21\";\n    // U+EE1B  Tie\n    Glyphs[\"organGermanTie\"] = \"\\uEE1B\";\n    // U+E59A  Ornament bottom left concave stroke\n    Glyphs[\"ornamentBottomLeftConcaveStroke\"] = \"\\uE59A\";\n    // U+E59B  Ornament bottom left concave stroke, large\n    Glyphs[\"ornamentBottomLeftConcaveStrokeLarge\"] = \"\\uE59B\";\n    // U+1D1A1  Ornament bottom left concave stroke, large\n    Glyphs[\"ornamentBottomLeftConcaveStrokeLargeAlternate\"] = \"\\uD834\\uDDA1\";\n    // U+E59C  Ornament bottom left convex stroke\n    Glyphs[\"ornamentBottomLeftConvexStroke\"] = \"\\uE59C\";\n    // U+E5A7  Ornament bottom right concave stroke\n    Glyphs[\"ornamentBottomRightConcaveStroke\"] = \"\\uE5A7\";\n    // U+1D19F  Ornament bottom right concave stroke\n    Glyphs[\"ornamentBottomRightConcaveStrokeAlternate\"] = \"\\uD834\\uDD9F\";\n    // U+E5A8  Ornament bottom right convex stroke\n    Glyphs[\"ornamentBottomRightConvexStroke\"] = \"\\uE5A8\";\n    // U+E581  Comma\n    Glyphs[\"ornamentComma\"] = \"\\uE581\";\n    // U+E57E  Double oblique straight lines NW-SE\n    Glyphs[\"ornamentDoubleObliqueLinesAfterNote\"] = \"\\uE57E\";\n    // U+E57D  Double oblique straight lines SW-NE\n    Glyphs[\"ornamentDoubleObliqueLinesBeforeNote\"] = \"\\uE57D\";\n    // U+E578  Curve below\n    Glyphs[\"ornamentDownCurve\"] = \"\\uE578\";\n    // U+E56F  Haydn ornament\n    Glyphs[\"ornamentHaydn\"] = \"\\uE56F\";\n    // U+E592  Ornament high left concave stroke\n    Glyphs[\"ornamentHighLeftConcaveStroke\"] = \"\\uE592\";\n    // U+E593  Ornament high left convex stroke\n    Glyphs[\"ornamentHighLeftConvexStroke\"] = \"\\uE593\";\n    // U+1D1A2  Ornament high left convex stroke\n    Glyphs[\"ornamentHighLeftConvexStrokeAlternate\"] = \"\\uD834\\uDDA2\";\n    // U+E5A2  Ornament high right concave stroke\n    Glyphs[\"ornamentHighRightConcaveStroke\"] = \"\\uE5A2\";\n    // U+E5A3  Ornament high right convex stroke\n    Glyphs[\"ornamentHighRightConvexStroke\"] = \"\\uE5A3\";\n    // U+E576  Hook after note\n    Glyphs[\"ornamentHookAfterNote\"] = \"\\uE576\";\n    // U+E575  Hook before note\n    Glyphs[\"ornamentHookBeforeNote\"] = \"\\uE575\";\n    // U+E572  Left-facing half circle\n    Glyphs[\"ornamentLeftFacingHalfCircle\"] = \"\\uE572\";\n    // U+E574  Left-facing hook\n    Glyphs[\"ornamentLeftFacingHook\"] = \"\\uE574\";\n    // U+E597  Ornament left +\n    Glyphs[\"ornamentLeftPlus\"] = \"\\uE597\";\n    // U+E596  Ornament left shake t\n    Glyphs[\"ornamentLeftShakeT\"] = \"\\uE596\";\n    // U+E594  Ornament left vertical stroke\n    Glyphs[\"ornamentLeftVerticalStroke\"] = \"\\uE594\";\n    // U+1D19B  Ornament left vertical stroke\n    Glyphs[\"ornamentLeftVerticalStrokeAlternate\"] = \"\\uD834\\uDD9B\";\n    // U+E595  Ornament left vertical stroke with cross (+)\n    Glyphs[\"ornamentLeftVerticalStrokeWithCross\"] = \"\\uE595\";\n    // U+E598  Ornament low left concave stroke\n    Glyphs[\"ornamentLowLeftConcaveStroke\"] = \"\\uE598\";\n    // U+E599  Ornament low left convex stroke\n    Glyphs[\"ornamentLowLeftConvexStroke\"] = \"\\uE599\";\n    // U+1D1A4  Ornament low left convex stroke\n    Glyphs[\"ornamentLowLeftConvexStrokeAlternate\"] = \"\\uD834\\uDDA4\";\n    // U+E5A5  Ornament low right concave stroke\n    Glyphs[\"ornamentLowRightConcaveStroke\"] = \"\\uE5A5\";\n    // U+1D1A3  Ornament low right concave stroke\n    Glyphs[\"ornamentLowRightConcaveStrokeAlternate\"] = \"\\uD834\\uDDA3\";\n    // U+E5A6  Ornament low right convex stroke\n    Glyphs[\"ornamentLowRightConvexStroke\"] = \"\\uE5A6\";\n    // U+E59F  Ornament middle vertical stroke\n    Glyphs[\"ornamentMiddleVerticalStroke\"] = \"\\uE59F\";\n    // U+1D1A0  Ornament middle vertical stroke\n    Glyphs[\"ornamentMiddleVerticalStrokeAlternate\"] = \"\\uD834\\uDDA0\";\n    // U+E56D  Mordent\n    Glyphs[\"ornamentMordent\"] = \"\\uE56D\";\n    // U+E57C  Oblique straight line NW-SE\n    Glyphs[\"ornamentObliqueLineAfterNote\"] = \"\\uE57C\";\n    // U+E57B  Oblique straight line SW-NE\n    Glyphs[\"ornamentObliqueLineBeforeNote\"] = \"\\uE57B\";\n    // U+E580  Oblique straight line tilted NW-SE\n    Glyphs[\"ornamentObliqueLineHorizAfterNote\"] = \"\\uE580\";\n    // U+E57F  Oblique straight line tilted SW-NE\n    Glyphs[\"ornamentObliqueLineHorizBeforeNote\"] = \"\\uE57F\";\n    // U+EA21  Oriscus\n    Glyphs[\"ornamentOriscus\"] = \"\\uEA21\";\n    // U+E588  Pincé (Couperin)\n    Glyphs[\"ornamentPinceCouperin\"] = \"\\uE588\";\n    // U+E570  Port de voix\n    Glyphs[\"ornamentPortDeVoixV\"] = \"\\uE570\";\n    // U+E5B2  Supported appoggiatura trill\n    Glyphs[\"ornamentPrecompAppoggTrill\"] = \"\\uE5B2\";\n    // U+E5B3  Supported appoggiatura trill with two-note suffix\n    Glyphs[\"ornamentPrecompAppoggTrillSuffix\"] = \"\\uE5B3\";\n    // U+E5BE  Cadence\n    Glyphs[\"ornamentPrecompCadence\"] = \"\\uE5BE\";\n    // U+E5C1  Cadence with upper prefix\n    Glyphs[\"ornamentPrecompCadenceUpperPrefix\"] = \"\\uE5C1\";\n    // U+E5C2  Cadence with upper prefix and turn\n    Glyphs[\"ornamentPrecompCadenceUpperPrefixTurn\"] = \"\\uE5C2\";\n    // U+E5BF  Cadence with turn\n    Glyphs[\"ornamentPrecompCadenceWithTurn\"] = \"\\uE5BF\";\n    // U+E5B1  Descending slide\n    Glyphs[\"ornamentPrecompDescendingSlide\"] = \"\\uE5B1\";\n    // U+E5C0  Double cadence with lower prefix\n    Glyphs[\"ornamentPrecompDoubleCadenceLowerPrefix\"] = \"\\uE5C0\";\n    // U+E5C3  Double cadence with upper prefix\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefix\"] = \"\\uE5C3\";\n    // U+E5C4  Double cadence with upper prefix and turn\n    Glyphs[\"ornamentPrecompDoubleCadenceUpperPrefixTurn\"] = \"\\uE5C4\";\n    // U+E5C7  Inverted mordent with upper prefix\n    Glyphs[\"ornamentPrecompInvertedMordentUpperPrefix\"] = \"\\uE5C7\";\n    // U+E5C5  Mordent with release\n    Glyphs[\"ornamentPrecompMordentRelease\"] = \"\\uE5C5\";\n    // U+E5C6  Mordent with upper prefix\n    Glyphs[\"ornamentPrecompMordentUpperPrefix\"] = \"\\uE5C6\";\n    // U+E5BC  Pre-beat port de voix followed by multiple mordent (Dandrieu)\n    Glyphs[\"ornamentPrecompPortDeVoixMordent\"] = \"\\uE5BC\";\n    // U+E5B0  Slide\n    Glyphs[\"ornamentPrecompSlide\"] = \"\\uE5B0\";\n    // U+E5B8  Slide-trill with two-note suffix (J.S. Bach)\n    Glyphs[\"ornamentPrecompSlideTrillBach\"] = \"\\uE5B8\";\n    // U+E5B5  Slide-trill (D'Anglebert)\n    Glyphs[\"ornamentPrecompSlideTrillDAnglebert\"] = \"\\uE5B5\";\n    // U+E5B6  Slide-trill with one-note suffix (Marpurg)\n    Glyphs[\"ornamentPrecompSlideTrillMarpurg\"] = \"\\uE5B6\";\n    // U+E5B9  Slide-trill (Muffat)\n    Glyphs[\"ornamentPrecompSlideTrillMuffat\"] = \"\\uE5B9\";\n    // U+E5BA  Slide-trill with two-note suffix (Muffat)\n    Glyphs[\"ornamentPrecompSlideTrillSuffixMuffat\"] = \"\\uE5BA\";\n    // U+E5C8  Trill with lower suffix\n    Glyphs[\"ornamentPrecompTrillLowerSuffix\"] = \"\\uE5C8\";\n    // U+E5BB  Trill with two-note suffix (Dandrieu)\n    Glyphs[\"ornamentPrecompTrillSuffixDandrieu\"] = \"\\uE5BB\";\n    // U+E5BD  Trill with mordent\n    Glyphs[\"ornamentPrecompTrillWithMordent\"] = \"\\uE5BD\";\n    // U+E5B7  Turn-trill with two-note suffix (J.S. Bach)\n    Glyphs[\"ornamentPrecompTurnTrillBach\"] = \"\\uE5B7\";\n    // U+E5B4  Turn-trill (D'Anglebert)\n    Glyphs[\"ornamentPrecompTurnTrillDAnglebert\"] = \"\\uE5B4\";\n    // U+EA20  Quilisma\n    Glyphs[\"ornamentQuilisma\"] = \"\\uEA20\";\n    // U+E571  Right-facing half circle\n    Glyphs[\"ornamentRightFacingHalfCircle\"] = \"\\uE571\";\n    // U+E573  Right-facing hook\n    Glyphs[\"ornamentRightFacingHook\"] = \"\\uE573\";\n    // U+E5A4  Ornament right vertical stroke\n    Glyphs[\"ornamentRightVerticalStroke\"] = \"\\uE5A4\";\n    // U+E587  Schleifer (long mordent)\n    Glyphs[\"ornamentSchleifer\"] = \"\\uE587\";\n    // U+E582  Shake\n    Glyphs[\"ornamentShake3\"] = \"\\uE582\";\n    // U+E584  Shake (Muffat)\n    Glyphs[\"ornamentShakeMuffat1\"] = \"\\uE584\";\n    // U+E57A  Short oblique straight line NW-SE\n    Glyphs[\"ornamentShortObliqueLineAfterNote\"] = \"\\uE57A\";\n    // U+E579  Short oblique straight line SW-NE\n    Glyphs[\"ornamentShortObliqueLineBeforeNote\"] = \"\\uE579\";\n    // U+E56C  Short trill\n    Glyphs[\"ornamentShortTrill\"] = \"\\uE56C\";\n    // U+E590  Ornament top left concave stroke\n    Glyphs[\"ornamentTopLeftConcaveStroke\"] = \"\\uE590\";\n    // U+E591  Ornament top left convex stroke\n    Glyphs[\"ornamentTopLeftConvexStroke\"] = \"\\uE591\";\n    // U+1D1A5  Ornament top left convex stroke\n    Glyphs[\"ornamentTopLeftConvexStrokeAlternate\"] = \"\\uD834\\uDDA5\";\n    // U+E5A0  Ornament top right concave stroke\n    Glyphs[\"ornamentTopRightConcaveStroke\"] = \"\\uE5A0\";\n    // U+E5A1  Ornament top right convex stroke\n    Glyphs[\"ornamentTopRightConvexStroke\"] = \"\\uE5A1\";\n    // U+1D19E  Ornament top right convex stroke\n    Glyphs[\"ornamentTopRightConvexStrokeAlternate\"] = \"\\uD834\\uDD9E\";\n    // U+E56E  Tremblement\n    Glyphs[\"ornamentTremblement\"] = \"\\uE56E\";\n    // U+E589  Tremblement appuyé (Couperin)\n    Glyphs[\"ornamentTremblementCouperin\"] = \"\\uE589\";\n    // U+E566  Trill\n    Glyphs[\"ornamentTrill\"] = \"\\uE566\";\n    // U+1D196  Trill\n    Glyphs[\"ornamentTrillAlternate\"] = \"\\uD834\\uDD96\";\n    // U+E567  Turn\n    Glyphs[\"ornamentTurn\"] = \"\\uE567\";\n    // U+1D197  Turn\n    Glyphs[\"ornamentTurnAlternate\"] = \"\\uD834\\uDD97\";\n    // U+E568  Inverted turn\n    Glyphs[\"ornamentTurnInverted\"] = \"\\uE568\";\n    // U+1D198  Inverted turn\n    Glyphs[\"ornamentTurnInvertedAlternate\"] = \"\\uD834\\uDD98\";\n    // U+E569  Turn with slash\n    Glyphs[\"ornamentTurnSlash\"] = \"\\uE569\";\n    // U+1D199  Turn with slash\n    Glyphs[\"ornamentTurnSlashAlternate\"] = \"\\uD834\\uDD99\";\n    // U+E56A  Turn up\n    Glyphs[\"ornamentTurnUp\"] = \"\\uE56A\";\n    // U+1D19A  Turn up\n    Glyphs[\"ornamentTurnUpAlternate\"] = \"\\uD834\\uDD9A\";\n    // U+E56B  Inverted turn up\n    Glyphs[\"ornamentTurnUpS\"] = \"\\uE56B\";\n    // U+E577  Curve above\n    Glyphs[\"ornamentUpCurve\"] = \"\\uE577\";\n    // U+E583  Vertical line\n    Glyphs[\"ornamentVerticalLine\"] = \"\\uE583\";\n    // U+E59D  Ornament zig-zag line without right-hand end\n    Glyphs[\"ornamentZigZagLineNoRightEnd\"] = \"\\uE59D\";\n    // U+1D19C  Ornament zig-zag line without right-hand end\n    Glyphs[\"ornamentZigZagLineNoRightEndAlternate\"] = \"\\uD834\\uDD9C\";\n    // U+E59E  Ornament zig-zag line with right-hand end\n    Glyphs[\"ornamentZigZagLineWithRightEnd\"] = \"\\uE59E\";\n    // U+1D19D  Ornament zig-zag line with right-hand end\n    Glyphs[\"ornamentZigZagLineWithRightEndAlternate\"] = \"\\uD834\\uDD9D\";\n    // U+E510  Ottava\n    Glyphs[\"ottava\"] = \"\\uE510\";\n    // U+E511  Ottava alta\n    Glyphs[\"ottavaAlta\"] = \"\\uE511\";\n    // U+1D136  Ottava alta\n    Glyphs[\"ottavaAltaAlternate\"] = \"\\uD834\\uDD36\";\n    // U+E512  Ottava bassa\n    Glyphs[\"ottavaBassa\"] = \"\\uE512\";\n    // U+1D137  Ottava bassa\n    Glyphs[\"ottavaBassaAlternate\"] = \"\\uD834\\uDD37\";\n    // U+E513  Ottava bassa (ba)\n    Glyphs[\"ottavaBassaBa\"] = \"\\uE513\";\n    // U+E51C  Ottava bassa (8vb)\n    Glyphs[\"ottavaBassaVb\"] = \"\\uE51C\";\n    // U+E22B  Penderecki unmeasured tremolo\n    Glyphs[\"pendereckiTremolo\"] = \"\\uE22B\";\n    // U+E717  Agogo\n    Glyphs[\"pictAgogo\"] = \"\\uE717\";\n    // U+E712  Almglocken\n    Glyphs[\"pictAlmglocken\"] = \"\\uE712\";\n    // U+E701  Anvil\n    Glyphs[\"pictAnvil\"] = \"\\uE701\";\n    // U+E6C3  Bamboo tube chimes\n    Glyphs[\"pictBambooChimes\"] = \"\\uE6C3\";\n    // U+E6FB  Bamboo scraper\n    Glyphs[\"pictBambooScraper\"] = \"\\uE6FB\";\n    // U+E6D4  Bass drum\n    Glyphs[\"pictBassDrum\"] = \"\\uE6D4\";\n    // U+E6D5  Bass drum on side\n    Glyphs[\"pictBassDrumOnSide\"] = \"\\uE6D5\";\n    // U+E7DE  Bow\n    Glyphs[\"pictBeaterBow\"] = \"\\uE7DE\";\n    // U+E7EB  Box for percussion beater\n    Glyphs[\"pictBeaterBox\"] = \"\\uE7EB\";\n    // U+E7DA  Brass mallets down\n    Glyphs[\"pictBeaterBrassMalletsDown\"] = \"\\uE7DA\";\n    // U+E7EE  Brass mallets left\n    Glyphs[\"pictBeaterBrassMalletsLeft\"] = \"\\uE7EE\";\n    // U+E7ED  Brass mallets right\n    Glyphs[\"pictBeaterBrassMalletsRight\"] = \"\\uE7ED\";\n    // U+E7D9  Brass mallets up\n    Glyphs[\"pictBeaterBrassMalletsUp\"] = \"\\uE7D9\";\n    // U+E7EA  Combining dashed circle for round beaters (plated)\n    Glyphs[\"pictBeaterCombiningDashedCircle\"] = \"\\uE7EA\";\n    // U+E7E9  Combining parentheses for round beaters (padded)\n    Glyphs[\"pictBeaterCombiningParentheses\"] = \"\\uE7E9\";\n    // U+E7A1  Double bass drum stick down\n    Glyphs[\"pictBeaterDoubleBassDrumDown\"] = \"\\uE7A1\";\n    // U+E7A0  Double bass drum stick up\n    Glyphs[\"pictBeaterDoubleBassDrumUp\"] = \"\\uE7A0\";\n    // U+E7E4  Finger\n    Glyphs[\"pictBeaterFinger\"] = \"\\uE7E4\";\n    // U+E7E6  Fingernails\n    Glyphs[\"pictBeaterFingernails\"] = \"\\uE7E6\";\n    // U+E7E5  Fist\n    Glyphs[\"pictBeaterFist\"] = \"\\uE7E5\";\n    // U+E7DD  Guiro scraper\n    Glyphs[\"pictBeaterGuiroScraper\"] = \"\\uE7DD\";\n    // U+E7E1  Hammer\n    Glyphs[\"pictBeaterHammer\"] = \"\\uE7E1\";\n    // U+E7D0  Metal hammer, down\n    Glyphs[\"pictBeaterHammerMetalDown\"] = \"\\uE7D0\";\n    // U+E7CF  Metal hammer, up\n    Glyphs[\"pictBeaterHammerMetalUp\"] = \"\\uE7CF\";\n    // U+E7CE  Plastic hammer, down\n    Glyphs[\"pictBeaterHammerPlasticDown\"] = \"\\uE7CE\";\n    // U+E7CD  Plastic hammer, up\n    Glyphs[\"pictBeaterHammerPlasticUp\"] = \"\\uE7CD\";\n    // U+E7CC  Wooden hammer, down\n    Glyphs[\"pictBeaterHammerWoodDown\"] = \"\\uE7CC\";\n    // U+E7CB  Wooden hammer, up\n    Glyphs[\"pictBeaterHammerWoodUp\"] = \"\\uE7CB\";\n    // U+E7E3  Hand\n    Glyphs[\"pictBeaterHand\"] = \"\\uE7E3\";\n    // U+E79D  Hard bass drum stick down\n    Glyphs[\"pictBeaterHardBassDrumDown\"] = \"\\uE79D\";\n    // U+E79C  Hard bass drum stick up\n    Glyphs[\"pictBeaterHardBassDrumUp\"] = \"\\uE79C\";\n    // U+E785  Hard glockenspiel stick down\n    Glyphs[\"pictBeaterHardGlockenspielDown\"] = \"\\uE785\";\n    // U+E787  Hard glockenspiel stick left\n    Glyphs[\"pictBeaterHardGlockenspielLeft\"] = \"\\uE787\";\n    // U+E786  Hard glockenspiel stick right\n    Glyphs[\"pictBeaterHardGlockenspielRight\"] = \"\\uE786\";\n    // U+E784  Hard glockenspiel stick up\n    Glyphs[\"pictBeaterHardGlockenspielUp\"] = \"\\uE784\";\n    // U+E791  Hard timpani stick down\n    Glyphs[\"pictBeaterHardTimpaniDown\"] = \"\\uE791\";\n    // U+E793  Hard timpani stick left\n    Glyphs[\"pictBeaterHardTimpaniLeft\"] = \"\\uE793\";\n    // U+E792  Hard timpani stick right\n    Glyphs[\"pictBeaterHardTimpaniRight\"] = \"\\uE792\";\n    // U+E790  Hard timpani stick up\n    Glyphs[\"pictBeaterHardTimpaniUp\"] = \"\\uE790\";\n    // U+E779  Hard xylophone stick down\n    Glyphs[\"pictBeaterHardXylophoneDown\"] = \"\\uE779\";\n    // U+E77B  Hard xylophone stick left\n    Glyphs[\"pictBeaterHardXylophoneLeft\"] = \"\\uE77B\";\n    // U+E77A  Hard xylophone stick right\n    Glyphs[\"pictBeaterHardXylophoneRight\"] = \"\\uE77A\";\n    // U+E778  Hard xylophone stick up\n    Glyphs[\"pictBeaterHardXylophoneUp\"] = \"\\uE778\";\n    // U+E7AB  Hard yarn beater down\n    Glyphs[\"pictBeaterHardYarnDown\"] = \"\\uE7AB\";\n    // U+E7AD  Hard yarn beater left\n    Glyphs[\"pictBeaterHardYarnLeft\"] = \"\\uE7AD\";\n    // U+E7AC  Hard yarn beater right\n    Glyphs[\"pictBeaterHardYarnRight\"] = \"\\uE7AC\";\n    // U+E7AA  Hard yarn beater up\n    Glyphs[\"pictBeaterHardYarnUp\"] = \"\\uE7AA\";\n    // U+E7D4  Jazz sticks down\n    Glyphs[\"pictBeaterJazzSticksDown\"] = \"\\uE7D4\";\n    // U+E7D3  Jazz sticks up\n    Glyphs[\"pictBeaterJazzSticksUp\"] = \"\\uE7D3\";\n    // U+E7E2  Knitting needle\n    Glyphs[\"pictBeaterKnittingNeedle\"] = \"\\uE7E2\";\n    // U+E7DF  Chime hammer up\n    Glyphs[\"pictBeaterMallet\"] = \"\\uE7DF\";\n    // U+E7EC  Chime hammer down\n    Glyphs[\"pictBeaterMalletDown\"] = \"\\uE7EC\";\n    // U+E79B  Medium bass drum stick down\n    Glyphs[\"pictBeaterMediumBassDrumDown\"] = \"\\uE79B\";\n    // U+E79A  Medium bass drum stick up\n    Glyphs[\"pictBeaterMediumBassDrumUp\"] = \"\\uE79A\";\n    // U+E78D  Medium timpani stick down\n    Glyphs[\"pictBeaterMediumTimpaniDown\"] = \"\\uE78D\";\n    // U+E78F  Medium timpani stick left\n    Glyphs[\"pictBeaterMediumTimpaniLeft\"] = \"\\uE78F\";\n    // U+E78E  Medium timpani stick right\n    Glyphs[\"pictBeaterMediumTimpaniRight\"] = \"\\uE78E\";\n    // U+E78C  Medium timpani stick up\n    Glyphs[\"pictBeaterMediumTimpaniUp\"] = \"\\uE78C\";\n    // U+E775  Medium xylophone stick down\n    Glyphs[\"pictBeaterMediumXylophoneDown\"] = \"\\uE775\";\n    // U+E777  Medium xylophone stick left\n    Glyphs[\"pictBeaterMediumXylophoneLeft\"] = \"\\uE777\";\n    // U+E776  Medium xylophone stick right\n    Glyphs[\"pictBeaterMediumXylophoneRight\"] = \"\\uE776\";\n    // U+E774  Medium xylophone stick up\n    Glyphs[\"pictBeaterMediumXylophoneUp\"] = \"\\uE774\";\n    // U+E7A7  Medium yarn beater down\n    Glyphs[\"pictBeaterMediumYarnDown\"] = \"\\uE7A7\";\n    // U+E7A9  Medium yarn beater left\n    Glyphs[\"pictBeaterMediumYarnLeft\"] = \"\\uE7A9\";\n    // U+E7A8  Medium yarn beater right\n    Glyphs[\"pictBeaterMediumYarnRight\"] = \"\\uE7A8\";\n    // U+E7A6  Medium yarn beater up\n    Glyphs[\"pictBeaterMediumYarnUp\"] = \"\\uE7A6\";\n    // U+E79F  Metal bass drum stick down\n    Glyphs[\"pictBeaterMetalBassDrumDown\"] = \"\\uE79F\";\n    // U+E79E  Metal bass drum stick up\n    Glyphs[\"pictBeaterMetalBassDrumUp\"] = \"\\uE79E\";\n    // U+E7C8  Metal beater down\n    Glyphs[\"pictBeaterMetalDown\"] = \"\\uE7C8\";\n    // U+E7E0  Metal hammer\n    Glyphs[\"pictBeaterMetalHammer\"] = \"\\uE7E0\";\n    // U+E7CA  Metal beater, left\n    Glyphs[\"pictBeaterMetalLeft\"] = \"\\uE7CA\";\n    // U+E7C9  Metal beater, right\n    Glyphs[\"pictBeaterMetalRight\"] = \"\\uE7C9\";\n    // U+E7C7  Metal beater, up\n    Glyphs[\"pictBeaterMetalUp\"] = \"\\uE7C7\";\n    // U+E7D2  Snare sticks down\n    Glyphs[\"pictBeaterSnareSticksDown\"] = \"\\uE7D2\";\n    // U+E7D1  Snare sticks up\n    Glyphs[\"pictBeaterSnareSticksUp\"] = \"\\uE7D1\";\n    // U+E799  Soft bass drum stick down\n    Glyphs[\"pictBeaterSoftBassDrumDown\"] = \"\\uE799\";\n    // U+E798  Soft bass drum stick up\n    Glyphs[\"pictBeaterSoftBassDrumUp\"] = \"\\uE798\";\n    // U+E781  Soft glockenspiel stick down\n    Glyphs[\"pictBeaterSoftGlockenspielDown\"] = \"\\uE781\";\n    // U+E783  Soft glockenspiel stick left\n    Glyphs[\"pictBeaterSoftGlockenspielLeft\"] = \"\\uE783\";\n    // U+E782  Soft glockenspiel stick right\n    Glyphs[\"pictBeaterSoftGlockenspielRight\"] = \"\\uE782\";\n    // U+E780  Soft glockenspiel stick up\n    Glyphs[\"pictBeaterSoftGlockenspielUp\"] = \"\\uE780\";\n    // U+E789  Soft timpani stick down\n    Glyphs[\"pictBeaterSoftTimpaniDown\"] = \"\\uE789\";\n    // U+E78B  Soft timpani stick left\n    Glyphs[\"pictBeaterSoftTimpaniLeft\"] = \"\\uE78B\";\n    // U+E78A  Soft timpani stick right\n    Glyphs[\"pictBeaterSoftTimpaniRight\"] = \"\\uE78A\";\n    // U+E788  Soft timpani stick up\n    Glyphs[\"pictBeaterSoftTimpaniUp\"] = \"\\uE788\";\n    // U+E7DB  Soft xylophone beaters\n    Glyphs[\"pictBeaterSoftXylophone\"] = \"\\uE7DB\";\n    // U+E771  Soft xylophone stick down\n    Glyphs[\"pictBeaterSoftXylophoneDown\"] = \"\\uE771\";\n    // U+E773  Soft xylophone stick left\n    Glyphs[\"pictBeaterSoftXylophoneLeft\"] = \"\\uE773\";\n    // U+E772  Soft xylophone stick right\n    Glyphs[\"pictBeaterSoftXylophoneRight\"] = \"\\uE772\";\n    // U+E770  Soft xylophone stick up\n    Glyphs[\"pictBeaterSoftXylophoneUp\"] = \"\\uE770\";\n    // U+E7A3  Soft yarn beater down\n    Glyphs[\"pictBeaterSoftYarnDown\"] = \"\\uE7A3\";\n    // U+E7A5  Soft yarn beater left\n    Glyphs[\"pictBeaterSoftYarnLeft\"] = \"\\uE7A5\";\n    // U+E7A4  Soft yarn beater right\n    Glyphs[\"pictBeaterSoftYarnRight\"] = \"\\uE7A4\";\n    // U+E7A2  Soft yarn beater up\n    Glyphs[\"pictBeaterSoftYarnUp\"] = \"\\uE7A2\";\n    // U+E7DC  Spoon-shaped wooden mallet\n    Glyphs[\"pictBeaterSpoonWoodenMallet\"] = \"\\uE7DC\";\n    // U+E7AF  Superball beater down\n    Glyphs[\"pictBeaterSuperballDown\"] = \"\\uE7AF\";\n    // U+E7B1  Superball beater left\n    Glyphs[\"pictBeaterSuperballLeft\"] = \"\\uE7B1\";\n    // U+E7B0  Superball beater right\n    Glyphs[\"pictBeaterSuperballRight\"] = \"\\uE7B0\";\n    // U+E7AE  Superball beater up\n    Glyphs[\"pictBeaterSuperballUp\"] = \"\\uE7AE\";\n    // U+E7D6  Triangle beater down\n    Glyphs[\"pictBeaterTriangleDown\"] = \"\\uE7D6\";\n    // U+E7EF  Triangle beater plain\n    Glyphs[\"pictBeaterTrianglePlain\"] = \"\\uE7EF\";\n    // U+E7D5  Triangle beater up\n    Glyphs[\"pictBeaterTriangleUp\"] = \"\\uE7D5\";\n    // U+E7D8  Wire brushes down\n    Glyphs[\"pictBeaterWireBrushesDown\"] = \"\\uE7D8\";\n    // U+E7D7  Wire brushes up\n    Glyphs[\"pictBeaterWireBrushesUp\"] = \"\\uE7D7\";\n    // U+E795  Wood timpani stick down\n    Glyphs[\"pictBeaterWoodTimpaniDown\"] = \"\\uE795\";\n    // U+E797  Wood timpani stick left\n    Glyphs[\"pictBeaterWoodTimpaniLeft\"] = \"\\uE797\";\n    // U+E796  Wood timpani stick right\n    Glyphs[\"pictBeaterWoodTimpaniRight\"] = \"\\uE796\";\n    // U+E794  Wood timpani stick up\n    Glyphs[\"pictBeaterWoodTimpaniUp\"] = \"\\uE794\";\n    // U+E77D  Wood xylophone stick down\n    Glyphs[\"pictBeaterWoodXylophoneDown\"] = \"\\uE77D\";\n    // U+E77F  Wood xylophone stick left\n    Glyphs[\"pictBeaterWoodXylophoneLeft\"] = \"\\uE77F\";\n    // U+E77E  Wood xylophone stick right\n    Glyphs[\"pictBeaterWoodXylophoneRight\"] = \"\\uE77E\";\n    // U+E77C  Wood xylophone stick up\n    Glyphs[\"pictBeaterWoodXylophoneUp\"] = \"\\uE77C\";\n    // U+E714  Bell\n    Glyphs[\"pictBell\"] = \"\\uE714\";\n    // U+E72A  Bell of cymbal\n    Glyphs[\"pictBellOfCymbal\"] = \"\\uE72A\";\n    // U+E713  Bell plate\n    Glyphs[\"pictBellPlate\"] = \"\\uE713\";\n    // U+E71A  Bell tree\n    Glyphs[\"pictBellTree\"] = \"\\uE71A\";\n    // U+E751  Bird whistle\n    Glyphs[\"pictBirdWhistle\"] = \"\\uE751\";\n    // U+E6F7  Board clapper\n    Glyphs[\"pictBoardClapper\"] = \"\\uE6F7\";\n    // U+E6DD  Bongos\n    Glyphs[\"pictBongos\"] = \"\\uE6DD\";\n    // U+E6E1  Brake drum\n    Glyphs[\"pictBrakeDrum\"] = \"\\uE6E1\";\n    // U+E743  Cabasa\n    Glyphs[\"pictCabasa\"] = \"\\uE743\";\n    // U+E761  Cannon\n    Glyphs[\"pictCannon\"] = \"\\uE761\";\n    // U+E755  Car horn\n    Glyphs[\"pictCarHorn\"] = \"\\uE755\";\n    // U+E6F8  Castanets\n    Glyphs[\"pictCastanets\"] = \"\\uE6F8\";\n    // U+E6F9  Castanets with handle\n    Glyphs[\"pictCastanetsWithHandle\"] = \"\\uE6F9\";\n    // U+E6B0  Celesta\n    Glyphs[\"pictCelesta\"] = \"\\uE6B0\";\n    // U+E716  Cencerro\n    Glyphs[\"pictCencerro\"] = \"\\uE716\";\n    // U+E7FE  Center (Weinberg)\n    Glyphs[\"pictCenter1\"] = \"\\uE7FE\";\n    // U+E7FF  Center (Ghent)\n    Glyphs[\"pictCenter2\"] = \"\\uE7FF\";\n    // U+E800  Center (Caltabiano)\n    Glyphs[\"pictCenter3\"] = \"\\uE800\";\n    // U+E748  Chain rattle\n    Glyphs[\"pictChainRattle\"] = \"\\uE748\";\n    // U+E6C2  Chimes\n    Glyphs[\"pictChimes\"] = \"\\uE6C2\";\n    // U+E726  Chinese cymbal\n    Glyphs[\"pictChineseCymbal\"] = \"\\uE726\";\n    // U+E805  Choke (Weinberg)\n    Glyphs[\"pictChokeCymbal\"] = \"\\uE805\";\n    // U+E6F2  Claves\n    Glyphs[\"pictClaves\"] = \"\\uE6F2\";\n    // U+E7E7  Coins\n    Glyphs[\"pictCoins\"] = \"\\uE7E7\";\n    // U+E6DE  Conga\n    Glyphs[\"pictConga\"] = \"\\uE6DE\";\n    // U+E711  Cow bell\n    Glyphs[\"pictCowBell\"] = \"\\uE711\";\n    // U+E720  Crash cymbals\n    Glyphs[\"pictCrashCymbals\"] = \"\\uE720\";\n    // U+E6AE  Crotales\n    Glyphs[\"pictCrotales\"] = \"\\uE6AE\";\n    // U+E80C  Combining crush for stem\n    Glyphs[\"pictCrushStem\"] = \"\\uE80C\";\n    // U+E6E4  Cuica\n    Glyphs[\"pictCuica\"] = \"\\uE6E4\";\n    // U+E728  Cymbal tongs\n    Glyphs[\"pictCymbalTongs\"] = \"\\uE728\";\n    // U+E7F9  Damp\n    Glyphs[\"pictDamp1\"] = \"\\uE7F9\";\n    // U+E7FA  Damp 2\n    Glyphs[\"pictDamp2\"] = \"\\uE7FA\";\n    // U+E7FB  Damp 3\n    Glyphs[\"pictDamp3\"] = \"\\uE7FB\";\n    // U+E7FC  Damp 4\n    Glyphs[\"pictDamp4\"] = \"\\uE7FC\";\n    // U+E80D  Combining X for stem (dead note)\n    Glyphs[\"pictDeadNoteStem\"] = \"\\uE80D\";\n    // U+E7E8  Drum stick\n    Glyphs[\"pictDrumStick\"] = \"\\uE7E8\";\n    // U+E757  Duck call\n    Glyphs[\"pictDuckCall\"] = \"\\uE757\";\n    // U+E729  Edge of cymbal\n    Glyphs[\"pictEdgeOfCymbal\"] = \"\\uE729\";\n    // U+E6A9  Empty trapezoid\n    Glyphs[\"pictEmptyTrap\"] = \"\\uE6A9\";\n    // U+E727  Finger cymbals\n    Glyphs[\"pictFingerCymbals\"] = \"\\uE727\";\n    // U+E740  Flexatone\n    Glyphs[\"pictFlexatone\"] = \"\\uE740\";\n    // U+E6F5  Football rattle\n    Glyphs[\"pictFootballRatchet\"] = \"\\uE6F5\";\n    // U+E765  Glass harmonica\n    Glyphs[\"pictGlassHarmonica\"] = \"\\uE765\";\n    // U+E764  Glass harp\n    Glyphs[\"pictGlassHarp\"] = \"\\uE764\";\n    // U+E6C6  Glass plate chimes\n    Glyphs[\"pictGlassPlateChimes\"] = \"\\uE6C6\";\n    // U+E6C5  Glass tube chimes\n    Glyphs[\"pictGlassTubeChimes\"] = \"\\uE6C5\";\n    // U+E6A0  Glockenspiel\n    Glyphs[\"pictGlsp\"] = \"\\uE6A0\";\n    // U+E6AA  Glockenspiel (Smith Brindle)\n    Glyphs[\"pictGlspSmithBrindle\"] = \"\\uE6AA\";\n    // U+E6E2  Goblet drum (djembe, dumbek)\n    Glyphs[\"pictGobletDrum\"] = \"\\uE6E2\";\n    // U+E732  Gong\n    Glyphs[\"pictGong\"] = \"\\uE732\";\n    // U+E733  Gong with button (nipple)\n    Glyphs[\"pictGongWithButton\"] = \"\\uE733\";\n    // U+E6F3  Guiro\n    Glyphs[\"pictGuiro\"] = \"\\uE6F3\";\n    // U+E7C4  Hard gum beater, down\n    Glyphs[\"pictGumHardDown\"] = \"\\uE7C4\";\n    // U+E7C6  Hard gum beater, left\n    Glyphs[\"pictGumHardLeft\"] = \"\\uE7C6\";\n    // U+E7C5  Hard gum beater, right\n    Glyphs[\"pictGumHardRight\"] = \"\\uE7C5\";\n    // U+E7C3  Hard gum beater, up\n    Glyphs[\"pictGumHardUp\"] = \"\\uE7C3\";\n    // U+E7C0  Medium gum beater, down\n    Glyphs[\"pictGumMediumDown\"] = \"\\uE7C0\";\n    // U+E7C2  Medium gum beater, left\n    Glyphs[\"pictGumMediumLeft\"] = \"\\uE7C2\";\n    // U+E7C1  Medium gum beater, right\n    Glyphs[\"pictGumMediumRight\"] = \"\\uE7C1\";\n    // U+E7BF  Medium gum beater, up\n    Glyphs[\"pictGumMediumUp\"] = \"\\uE7BF\";\n    // U+E7BC  Soft gum beater, down\n    Glyphs[\"pictGumSoftDown\"] = \"\\uE7BC\";\n    // U+E7BE  Soft gum beater, left\n    Glyphs[\"pictGumSoftLeft\"] = \"\\uE7BE\";\n    // U+E7BD  Soft gum beater, right\n    Glyphs[\"pictGumSoftRight\"] = \"\\uE7BD\";\n    // U+E7BB  Soft gum beater, up\n    Glyphs[\"pictGumSoftUp\"] = \"\\uE7BB\";\n    // U+E7F6  Half-open\n    Glyphs[\"pictHalfOpen1\"] = \"\\uE7F6\";\n    // U+E7F7  Half-open 2 (Weinberg)\n    Glyphs[\"pictHalfOpen2\"] = \"\\uE7F7\";\n    // U+E715  Handbell\n    Glyphs[\"pictHandbell\"] = \"\\uE715\";\n    // U+E722  Hi-hat\n    Glyphs[\"pictHiHat\"] = \"\\uE722\";\n    // U+E723  Hi-hat cymbals on stand\n    Glyphs[\"pictHiHatOnStand\"] = \"\\uE723\";\n    // U+E767  Jaw harp\n    Glyphs[\"pictJawHarp\"] = \"\\uE767\";\n    // U+E719  Jingle bells\n    Glyphs[\"pictJingleBells\"] = \"\\uE719\";\n    // U+E756  Klaxon horn\n    Glyphs[\"pictKlaxonHorn\"] = \"\\uE756\";\n    // U+E807  Right hand (Agostini)\n    Glyphs[\"pictLeftHandCircle\"] = \"\\uE807\";\n    // U+E763  Lion's roar\n    Glyphs[\"pictLionsRoar\"] = \"\\uE763\";\n    // U+E6B1  Lithophone\n    Glyphs[\"pictLithophone\"] = \"\\uE6B1\";\n    // U+E6DF  Log drum\n    Glyphs[\"pictLogDrum\"] = \"\\uE6DF\";\n    // U+E75A  Lotus flute\n    Glyphs[\"pictLotusFlute\"] = \"\\uE75A\";\n    // U+E6A6  Marimba\n    Glyphs[\"pictMar\"] = \"\\uE6A6\";\n    // U+E6AC  Marimba (Smith Brindle)\n    Glyphs[\"pictMarSmithBrindle\"] = \"\\uE6AC\";\n    // U+E741  Maraca\n    Glyphs[\"pictMaraca\"] = \"\\uE741\";\n    // U+E742  Maracas\n    Glyphs[\"pictMaracas\"] = \"\\uE742\";\n    // U+E759  Megaphone\n    Glyphs[\"pictMegaphone\"] = \"\\uE759\";\n    // U+E6C8  Metal plate chimes\n    Glyphs[\"pictMetalPlateChimes\"] = \"\\uE6C8\";\n    // U+E6C7  Metal tube chimes\n    Glyphs[\"pictMetalTubeChimes\"] = \"\\uE6C7\";\n    // U+E766  Musical saw\n    Glyphs[\"pictMusicalSaw\"] = \"\\uE766\";\n    // U+E804  Normal position (Caltabiano)\n    Glyphs[\"pictNormalPosition\"] = \"\\uE804\";\n    // U+E7F4  On rim\n    Glyphs[\"pictOnRim\"] = \"\\uE7F4\";\n    // U+E7F8  Open\n    Glyphs[\"pictOpen\"] = \"\\uE7F8\";\n    // U+E7F5  Closed / rim shot\n    Glyphs[\"pictOpenRimShot\"] = \"\\uE7F5\";\n    // U+E760  Pistol shot\n    Glyphs[\"pictPistolShot\"] = \"\\uE760\";\n    // U+E752  Police whistle\n    Glyphs[\"pictPoliceWhistle\"] = \"\\uE752\";\n    // U+E6FA  Quijada (jawbone)\n    Glyphs[\"pictQuijada\"] = \"\\uE6FA\";\n    // U+E747  Rainstick\n    Glyphs[\"pictRainstick\"] = \"\\uE747\";\n    // U+E6F4  Ratchet\n    Glyphs[\"pictRatchet\"] = \"\\uE6F4\";\n    // U+E6FC  Reco-reco\n    Glyphs[\"pictRecoReco\"] = \"\\uE6FC\";\n    // U+E806  Left hand (Agostini)\n    Glyphs[\"pictRightHandSquare\"] = \"\\uE806\";\n    // U+E801  Rim or edge (Weinberg)\n    Glyphs[\"pictRim1\"] = \"\\uE801\";\n    // U+E802  Rim (Ghent)\n    Glyphs[\"pictRim2\"] = \"\\uE802\";\n    // U+E803  Rim (Caltabiano)\n    Glyphs[\"pictRim3\"] = \"\\uE803\";\n    // U+E7FD  Rim shot for stem\n    Glyphs[\"pictRimShotOnStem\"] = \"\\uE7FD\";\n    // U+E762  Sandpaper blocks\n    Glyphs[\"pictSandpaperBlocks\"] = \"\\uE762\";\n    // U+E7F3  Scrape around rim (counter-clockwise)\n    Glyphs[\"pictScrapeAroundRim\"] = \"\\uE7F3\";\n    // U+E80E  Scrape around rim (clockwise)\n    Glyphs[\"pictScrapeAroundRimClockwise\"] = \"\\uE80E\";\n    // U+E7F1  Scrape from center to edge\n    Glyphs[\"pictScrapeCenterToEdge\"] = \"\\uE7F1\";\n    // U+E7F2  Scrape from edge to center\n    Glyphs[\"pictScrapeEdgeToCenter\"] = \"\\uE7F2\";\n    // U+E718  Shell bells\n    Glyphs[\"pictShellBells\"] = \"\\uE718\";\n    // U+E6C4  Shell chimes\n    Glyphs[\"pictShellChimes\"] = \"\\uE6C4\";\n    // U+E753  Siren\n    Glyphs[\"pictSiren\"] = \"\\uE753\";\n    // U+E746  Sistrum\n    Glyphs[\"pictSistrum\"] = \"\\uE746\";\n    // U+E724  Sizzle cymbal\n    Glyphs[\"pictSizzleCymbal\"] = \"\\uE724\";\n    // U+E710  Sleigh bell\n    Glyphs[\"pictSleighBell\"] = \"\\uE710\";\n    // U+E734  Slide brush on gong\n    Glyphs[\"pictSlideBrushOnGong\"] = \"\\uE734\";\n    // U+E750  Slide whistle\n    Glyphs[\"pictSlideWhistle\"] = \"\\uE750\";\n    // U+E6E0  Slit drum\n    Glyphs[\"pictSlitDrum\"] = \"\\uE6E0\";\n    // U+E6D1  Snare drum\n    Glyphs[\"pictSnareDrum\"] = \"\\uE6D1\";\n    // U+E6D3  Military snare drum\n    Glyphs[\"pictSnareDrumMilitary\"] = \"\\uE6D3\";\n    // U+E6D2  Snare drum, snares off\n    Glyphs[\"pictSnareDrumSnaresOff\"] = \"\\uE6D2\";\n    // U+E6AF  Steel drums\n    Glyphs[\"pictSteelDrums\"] = \"\\uE6AF\";\n    // U+E7F0  Stick shot\n    Glyphs[\"pictStickShot\"] = \"\\uE7F0\";\n    // U+E7B2  Superball\n    Glyphs[\"pictSuperball\"] = \"\\uE7B2\";\n    // U+E721  Suspended cymbal\n    Glyphs[\"pictSuspendedCymbal\"] = \"\\uE721\";\n    // U+E808  Combining swish for stem\n    Glyphs[\"pictSwishStem\"] = \"\\uE808\";\n    // U+E6E3  Indian tabla\n    Glyphs[\"pictTabla\"] = \"\\uE6E3\";\n    // U+E730  Tam-tam\n    Glyphs[\"pictTamTam\"] = \"\\uE730\";\n    // U+E731  Tam-tam with beater (Smith Brindle)\n    Glyphs[\"pictTamTamWithBeater\"] = \"\\uE731\";\n    // U+E6DB  Tambourine\n    Glyphs[\"pictTambourine\"] = \"\\uE6DB\";\n    // U+E6F1  Temple blocks\n    Glyphs[\"pictTempleBlocks\"] = \"\\uE6F1\";\n    // U+E6D6  Tenor drum\n    Glyphs[\"pictTenorDrum\"] = \"\\uE6D6\";\n    // U+E744  Thundersheet\n    Glyphs[\"pictThundersheet\"] = \"\\uE744\";\n    // U+E6DC  Timbales\n    Glyphs[\"pictTimbales\"] = \"\\uE6DC\";\n    // U+E6D0  Timpani\n    Glyphs[\"pictTimpani\"] = \"\\uE6D0\";\n    // U+E6D7  Tom-tom\n    Glyphs[\"pictTomTom\"] = \"\\uE6D7\";\n    // U+E6D8  Chinese tom-tom\n    Glyphs[\"pictTomTomChinese\"] = \"\\uE6D8\";\n    // U+E6DA  Indo-American tom tom\n    Glyphs[\"pictTomTomIndoAmerican\"] = \"\\uE6DA\";\n    // U+E6D9  Japanese tom-tom\n    Glyphs[\"pictTomTomJapanese\"] = \"\\uE6D9\";\n    // U+E700  Triangle\n    Glyphs[\"pictTriangle\"] = \"\\uE700\";\n    // U+E6B2  Tubaphone\n    Glyphs[\"pictTubaphone\"] = \"\\uE6B2\";\n    // U+E6C0  Tubular bells\n    Glyphs[\"pictTubularBells\"] = \"\\uE6C0\";\n    // U+E80A  Combining turn left for stem\n    Glyphs[\"pictTurnLeftStem\"] = \"\\uE80A\";\n    // U+E80B  Combining turn left or right for stem\n    Glyphs[\"pictTurnRightLeftStem\"] = \"\\uE80B\";\n    // U+E809  Combining turn right for stem\n    Glyphs[\"pictTurnRightStem\"] = \"\\uE809\";\n    // U+E6A7  Vibraphone\n    Glyphs[\"pictVib\"] = \"\\uE6A7\";\n    // U+E6A8  Metallophone (vibraphone motor off)\n    Glyphs[\"pictVibMotorOff\"] = \"\\uE6A8\";\n    // U+E6AD  Vibraphone (Smith Brindle)\n    Glyphs[\"pictVibSmithBrindle\"] = \"\\uE6AD\";\n    // U+E745  Vibraslap\n    Glyphs[\"pictVibraslap\"] = \"\\uE745\";\n    // U+E725  Vietnamese hat cymbal\n    Glyphs[\"pictVietnameseHat\"] = \"\\uE725\";\n    // U+E6F6  Whip\n    Glyphs[\"pictWhip\"] = \"\\uE6F6\";\n    // U+E6C1  Wind chimes (glass)\n    Glyphs[\"pictWindChimesGlass\"] = \"\\uE6C1\";\n    // U+E754  Wind machine\n    Glyphs[\"pictWindMachine\"] = \"\\uE754\";\n    // U+E758  Wind whistle (or mouth siren)\n    Glyphs[\"pictWindWhistle\"] = \"\\uE758\";\n    // U+E6F0  Wood block\n    Glyphs[\"pictWoodBlock\"] = \"\\uE6F0\";\n    // U+E7B4  Wound beater, hard core down\n    Glyphs[\"pictWoundHardDown\"] = \"\\uE7B4\";\n    // U+E7B6  Wound beater, hard core left\n    Glyphs[\"pictWoundHardLeft\"] = \"\\uE7B6\";\n    // U+E7B5  Wound beater, hard core right\n    Glyphs[\"pictWoundHardRight\"] = \"\\uE7B5\";\n    // U+E7B3  Wound beater, hard core up\n    Glyphs[\"pictWoundHardUp\"] = \"\\uE7B3\";\n    // U+E7B8  Wound beater, soft core down\n    Glyphs[\"pictWoundSoftDown\"] = \"\\uE7B8\";\n    // U+E7BA  Wound beater, soft core left\n    Glyphs[\"pictWoundSoftLeft\"] = \"\\uE7BA\";\n    // U+E7B9  Wound beater, soft core right\n    Glyphs[\"pictWoundSoftRight\"] = \"\\uE7B9\";\n    // U+E7B7  Wound beater, soft core up\n    Glyphs[\"pictWoundSoftUp\"] = \"\\uE7B7\";\n    // U+E6A1  Xylophone\n    Glyphs[\"pictXyl\"] = \"\\uE6A1\";\n    // U+E6A3  Bass xylophone\n    Glyphs[\"pictXylBass\"] = \"\\uE6A3\";\n    // U+E6AB  Xylophone (Smith Brindle)\n    Glyphs[\"pictXylSmithBrindle\"] = \"\\uE6AB\";\n    // U+E6A2  Tenor xylophone\n    Glyphs[\"pictXylTenor\"] = \"\\uE6A2\";\n    // U+E6A5  Trough tenor xylophone\n    Glyphs[\"pictXylTenorTrough\"] = \"\\uE6A5\";\n    // U+E6A4  Trough xylophone\n    Glyphs[\"pictXylTrough\"] = \"\\uE6A4\";\n    // U+E632  Buzz pizzicato\n    Glyphs[\"pluckedBuzzPizzicato\"] = \"\\uE632\";\n    // U+E638  Damp\n    Glyphs[\"pluckedDamp\"] = \"\\uE638\";\n    // U+1D1B4  Damp\n    Glyphs[\"pluckedDampAlternate\"] = \"\\uD834\\uDDB4\";\n    // U+E639  Damp all\n    Glyphs[\"pluckedDampAll\"] = \"\\uE639\";\n    // U+1D1B5  Damp all\n    Glyphs[\"pluckedDampAllAlternate\"] = \"\\uD834\\uDDB5\";\n    // U+E63B  Damp for stem\n    Glyphs[\"pluckedDampOnStem\"] = \"\\uE63B\";\n    // U+E637  Fingernail flick\n    Glyphs[\"pluckedFingernailFlick\"] = \"\\uE637\";\n    // U+E633  Left-hand pizzicato\n    Glyphs[\"pluckedLeftHandPizzicato\"] = \"\\uE633\";\n    // U+E63A  Plectrum\n    Glyphs[\"pluckedPlectrum\"] = \"\\uE63A\";\n    // U+E631  Snap pizzicato above\n    Glyphs[\"pluckedSnapPizzicatoAbove\"] = \"\\uE631\";\n    // U+E630  Snap pizzicato below\n    Glyphs[\"pluckedSnapPizzicatoBelow\"] = \"\\uE630\";\n    // U+1D1AD  Snap pizzicato below\n    Glyphs[\"pluckedSnapPizzicatoBelowAlternate\"] = \"\\uD834\\uDDAD\";\n    // U+E636  With fingernails\n    Glyphs[\"pluckedWithFingernails\"] = \"\\uE636\";\n    // U+1D1B3  With fingernails\n    Glyphs[\"pluckedWithFingernailsAlternate\"] = \"\\uD834\\uDDB3\";\n    // U+E514  Quindicesima\n    Glyphs[\"quindicesima\"] = \"\\uE514\";\n    // U+E515  Quindicesima alta\n    Glyphs[\"quindicesimaAlta\"] = \"\\uE515\";\n    // U+E516  Quindicesima bassa\n    Glyphs[\"quindicesimaBassa\"] = \"\\uE516\";\n    // U+1D139  Quindicesima bassa\n    Glyphs[\"quindicesimaBassaAlternate\"] = \"\\uD834\\uDD39\";\n    // U+E51D  Quindicesima bassa (mb)\n    Glyphs[\"quindicesimaBassaMb\"] = \"\\uE51D\";\n    // U+E500  Repeat last bar\n    Glyphs[\"repeat1Bar\"] = \"\\uE500\";\n    // U+1D10E  Repeat last bar\n    Glyphs[\"repeat1BarAlternate\"] = \"\\uD834\\uDD0E\";\n    // U+E501  Repeat last two bars\n    Glyphs[\"repeat2Bars\"] = \"\\uE501\";\n    // U+1D10F  Repeat last two bars\n    Glyphs[\"repeat2BarsAlternate\"] = \"\\uD834\\uDD0F\";\n    // U+E502  Repeat last four bars\n    Glyphs[\"repeat4Bars\"] = \"\\uE502\";\n    // U+E505  Repeat bar lower dot\n    Glyphs[\"repeatBarLowerDot\"] = \"\\uE505\";\n    // U+E504  Repeat bar slash\n    Glyphs[\"repeatBarSlash\"] = \"\\uE504\";\n    // U+E503  Repeat bar upper dot\n    Glyphs[\"repeatBarUpperDot\"] = \"\\uE503\";\n    // U+E044  Single repeat dot\n    Glyphs[\"repeatDot\"] = \"\\uE044\";\n    // U+E043  Repeat dots\n    Glyphs[\"repeatDots\"] = \"\\uE043\";\n    // U+1D108  Repeat dots\n    Glyphs[\"repeatDotsAlternate\"] = \"\\uD834\\uDD08\";\n    // U+E040  Left (start) repeat sign\n    Glyphs[\"repeatLeft\"] = \"\\uE040\";\n    // U+1D106  Left (start) repeat sign\n    Glyphs[\"repeatLeftAlternate\"] = \"\\uD834\\uDD06\";\n    // U+E041  Right (end) repeat sign\n    Glyphs[\"repeatRight\"] = \"\\uE041\";\n    // U+1D107  Right (end) repeat sign\n    Glyphs[\"repeatRightAlternate\"] = \"\\uD834\\uDD07\";\n    // U+E042  Right and left repeat sign\n    Glyphs[\"repeatRightLeft\"] = \"\\uE042\";\n    // U+E4ED  1024th rest\n    Glyphs[\"rest1024th\"] = \"\\uE4ED\";\n    // U+E4EA  128th (semihemidemisemiquaver) rest\n    Glyphs[\"rest128th\"] = \"\\uE4EA\";\n    // U+1D142  128th (semihemidemisemiquaver) rest\n    Glyphs[\"rest128thAlternate\"] = \"\\uD834\\uDD42\";\n    // U+E4E7  16th (semiquaver) rest\n    Glyphs[\"rest16th\"] = \"\\uE4E7\";\n    // U+1D13F  16th (semiquaver) rest\n    Glyphs[\"rest16thAlternate\"] = \"\\uD834\\uDD3F\";\n    // U+E4EB  256th rest\n    Glyphs[\"rest256th\"] = \"\\uE4EB\";\n    // U+E4E8  32nd (demisemiquaver) rest\n    Glyphs[\"rest32nd\"] = \"\\uE4E8\";\n    // U+1D140  32nd (demisemiquaver) rest\n    Glyphs[\"rest32ndAlternate\"] = \"\\uD834\\uDD40\";\n    // U+E4EC  512th rest\n    Glyphs[\"rest512th\"] = \"\\uE4EC\";\n    // U+E4E9  64th (hemidemisemiquaver) rest\n    Glyphs[\"rest64th\"] = \"\\uE4E9\";\n    // U+1D141  64th (hemidemisemiquaver) rest\n    Glyphs[\"rest64thAlternate\"] = \"\\uD834\\uDD41\";\n    // U+E4E6  Eighth (quaver) rest\n    Glyphs[\"rest8th\"] = \"\\uE4E6\";\n    // U+1D13E  Eighth (quaver) rest\n    Glyphs[\"rest8thAlternate\"] = \"\\uD834\\uDD3E\";\n    // U+E4E2  Double whole (breve) rest\n    Glyphs[\"restDoubleWhole\"] = \"\\uE4E2\";\n    // U+1D13A  Double whole (breve) rest\n    Glyphs[\"restDoubleWholeAlternate\"] = \"\\uD834\\uDD3A\";\n    // U+E4F3  Double whole rest on leger lines\n    Glyphs[\"restDoubleWholeLegerLine\"] = \"\\uE4F3\";\n    // U+E4EE  Multiple measure rest\n    Glyphs[\"restHBar\"] = \"\\uE4EE\";\n    // U+1D129  Multiple measure rest\n    Glyphs[\"restHBarAlternate\"] = \"\\uD834\\uDD29\";\n    // U+E4EF  H-bar, left half\n    Glyphs[\"restHBarLeft\"] = \"\\uE4EF\";\n    // U+E4F0  H-bar, middle\n    Glyphs[\"restHBarMiddle\"] = \"\\uE4F0\";\n    // U+E4F1  H-bar, right half\n    Glyphs[\"restHBarRight\"] = \"\\uE4F1\";\n    // U+E4E4  Half (minim) rest\n    Glyphs[\"restHalf\"] = \"\\uE4E4\";\n    // U+1D13C  Half (minim) rest\n    Glyphs[\"restHalfAlternate\"] = \"\\uD834\\uDD3C\";\n    // U+E4F5  Half rest on leger line\n    Glyphs[\"restHalfLegerLine\"] = \"\\uE4F5\";\n    // U+E4E1  Longa rest\n    Glyphs[\"restLonga\"] = \"\\uE4E1\";\n    // U+E4E0  Maxima rest\n    Glyphs[\"restMaxima\"] = \"\\uE4E0\";\n    // U+E4E5  Quarter (crotchet) rest\n    Glyphs[\"restQuarter\"] = \"\\uE4E5\";\n    // U+1D13D  Quarter (crotchet) rest\n    Glyphs[\"restQuarterAlternate\"] = \"\\uD834\\uDD3D\";\n    // U+E4F2  Old-style quarter (crotchet) rest\n    Glyphs[\"restQuarterOld\"] = \"\\uE4F2\";\n    // U+E4F6  Z-style quarter (crotchet) rest\n    Glyphs[\"restQuarterZ\"] = \"\\uE4F6\";\n    // U+E4E3  Whole (semibreve) rest\n    Glyphs[\"restWhole\"] = \"\\uE4E3\";\n    // U+1D13B  Whole (semibreve) rest\n    Glyphs[\"restWholeAlternate\"] = \"\\uD834\\uDD3B\";\n    // U+E4F4  Whole rest on leger line\n    Glyphs[\"restWholeLegerLine\"] = \"\\uE4F4\";\n    // U+E001  Reversed brace\n    Glyphs[\"reversedBrace\"] = \"\\uE001\";\n    // U+E006  Reversed bracket bottom\n    Glyphs[\"reversedBracketBottom\"] = \"\\uE006\";\n    // U+E005  Reversed bracket top\n    Glyphs[\"reversedBracketTop\"] = \"\\uE005\";\n    // U+E04D  Right repeat sign within bar\n    Glyphs[\"rightRepeatSmall\"] = \"\\uE04D\";\n    // U+EF00  Scale degree 1\n    Glyphs[\"scaleDegree1\"] = \"\\uEF00\";\n    // U+EF01  Scale degree 2\n    Glyphs[\"scaleDegree2\"] = \"\\uEF01\";\n    // U+EF02  Scale degree 3\n    Glyphs[\"scaleDegree3\"] = \"\\uEF02\";\n    // U+EF03  Scale degree 4\n    Glyphs[\"scaleDegree4\"] = \"\\uEF03\";\n    // U+EF04  Scale degree 5\n    Glyphs[\"scaleDegree5\"] = \"\\uEF04\";\n    // U+EF05  Scale degree 6\n    Glyphs[\"scaleDegree6\"] = \"\\uEF05\";\n    // U+EF06  Scale degree 7\n    Glyphs[\"scaleDegree7\"] = \"\\uEF06\";\n    // U+EF07  Scale degree 8\n    Glyphs[\"scaleDegree8\"] = \"\\uEF07\";\n    // U+EF08  Scale degree 9\n    Glyphs[\"scaleDegree9\"] = \"\\uEF08\";\n    // U+E06F  Schäffer clef\n    Glyphs[\"schaefferClef\"] = \"\\uE06F\";\n    // U+E072  Schäffer F clef to G clef change\n    Glyphs[\"schaefferFClefToGClef\"] = \"\\uE072\";\n    // U+E071  Schäffer G clef to F clef change\n    Glyphs[\"schaefferGClefToFClef\"] = \"\\uE071\";\n    // U+E070  Schäffer previous clef\n    Glyphs[\"schaefferPreviousClef\"] = \"\\uE070\";\n    // U+E047  Segno\n    Glyphs[\"segno\"] = \"\\uE047\";\n    // U+1D10B  Segno\n    Glyphs[\"segnoAlternate\"] = \"\\uD834\\uDD0B\";\n    // U+E04A  Segno (serpent)\n    Glyphs[\"segnoSerpent1\"] = \"\\uE04A\";\n    // U+E04B  Segno (serpent with vertical lines)\n    Glyphs[\"segnoSerpent2\"] = \"\\uE04B\";\n    // U+E06B  Semi-pitched percussion clef 1\n    Glyphs[\"semipitchedPercussionClef1\"] = \"\\uE06B\";\n    // U+E06C  Semi-pitched percussion clef 2\n    Glyphs[\"semipitchedPercussionClef2\"] = \"\\uE06C\";\n    // U+EC52  Flat\n    Glyphs[\"smnFlat\"] = \"\\uEC52\";\n    // U+EC53  Flat (white)\n    Glyphs[\"smnFlatWhite\"] = \"\\uEC53\";\n    // U+EC57  Double flat history sign\n    Glyphs[\"smnHistoryDoubleFlat\"] = \"\\uEC57\";\n    // U+EC55  Double sharp history sign\n    Glyphs[\"smnHistoryDoubleSharp\"] = \"\\uEC55\";\n    // U+EC56  Flat history sign\n    Glyphs[\"smnHistoryFlat\"] = \"\\uEC56\";\n    // U+EC54  Sharp history sign\n    Glyphs[\"smnHistorySharp\"] = \"\\uEC54\";\n    // U+EC58  Natural (N)\n    Glyphs[\"smnNatural\"] = \"\\uEC58\";\n    // U+EC50  Sharp stem up\n    Glyphs[\"smnSharp\"] = \"\\uEC50\";\n    // U+EC59  Sharp stem down\n    Glyphs[\"smnSharpDown\"] = \"\\uEC59\";\n    // U+EC51  Sharp (white) stem up\n    Glyphs[\"smnSharpWhite\"] = \"\\uEC51\";\n    // U+EC5A  Sharp (white) stem down\n    Glyphs[\"smnSharpWhiteDown\"] = \"\\uEC5A\";\n    // U+E00A  Split bar divider (bar spans a system break)\n    Glyphs[\"splitBarDivider\"] = \"\\uE00A\";\n    // U+E010  1-line staff\n    Glyphs[\"staff1Line\"] = \"\\uE010\";\n    // U+1D116  1-line staff\n    Glyphs[\"staff1LineAlternate\"] = \"\\uD834\\uDD16\";\n    // U+E01C  1-line staff (narrow)\n    Glyphs[\"staff1LineNarrow\"] = \"\\uE01C\";\n    // U+E016  1-line staff (wide)\n    Glyphs[\"staff1LineWide\"] = \"\\uE016\";\n    // U+E011  2-line staff\n    Glyphs[\"staff2Lines\"] = \"\\uE011\";\n    // U+1D117  2-line staff\n    Glyphs[\"staff2LinesAlternate\"] = \"\\uD834\\uDD17\";\n    // U+E01D  2-line staff (narrow)\n    Glyphs[\"staff2LinesNarrow\"] = \"\\uE01D\";\n    // U+E017  2-line staff (wide)\n    Glyphs[\"staff2LinesWide\"] = \"\\uE017\";\n    // U+E012  3-line staff\n    Glyphs[\"staff3Lines\"] = \"\\uE012\";\n    // U+1D118  3-line staff\n    Glyphs[\"staff3LinesAlternate\"] = \"\\uD834\\uDD18\";\n    // U+E01E  3-line staff (narrow)\n    Glyphs[\"staff3LinesNarrow\"] = \"\\uE01E\";\n    // U+E018  3-line staff (wide)\n    Glyphs[\"staff3LinesWide\"] = \"\\uE018\";\n    // U+E013  4-line staff\n    Glyphs[\"staff4Lines\"] = \"\\uE013\";\n    // U+1D119  4-line staff\n    Glyphs[\"staff4LinesAlternate\"] = \"\\uD834\\uDD19\";\n    // U+E01F  4-line staff (narrow)\n    Glyphs[\"staff4LinesNarrow\"] = \"\\uE01F\";\n    // U+E019  4-line staff (wide)\n    Glyphs[\"staff4LinesWide\"] = \"\\uE019\";\n    // U+E014  5-line staff\n    Glyphs[\"staff5Lines\"] = \"\\uE014\";\n    // U+1D11A  5-line staff\n    Glyphs[\"staff5LinesAlternate\"] = \"\\uD834\\uDD1A\";\n    // U+E020  5-line staff (narrow)\n    Glyphs[\"staff5LinesNarrow\"] = \"\\uE020\";\n    // U+E01A  5-line staff (wide)\n    Glyphs[\"staff5LinesWide\"] = \"\\uE01A\";\n    // U+E015  6-line staff\n    Glyphs[\"staff6Lines\"] = \"\\uE015\";\n    // U+1D11B  6-line staff\n    Glyphs[\"staff6LinesAlternate\"] = \"\\uD834\\uDD1B\";\n    // U+E021  6-line staff (narrow)\n    Glyphs[\"staff6LinesNarrow\"] = \"\\uE021\";\n    // U+E01B  6-line staff (wide)\n    Glyphs[\"staff6LinesWide\"] = \"\\uE01B\";\n    // U+E00B  Staff divide arrow down\n    Glyphs[\"staffDivideArrowDown\"] = \"\\uE00B\";\n    // U+E00C  Staff divide arrow up\n    Glyphs[\"staffDivideArrowUp\"] = \"\\uE00C\";\n    // U+E00D  Staff divide arrows\n    Glyphs[\"staffDivideArrowUpDown\"] = \"\\uE00D\";\n    // U+EB98  Lower 1 staff position\n    Glyphs[\"staffPosLower1\"] = \"\\uEB98\";\n    // U+EB99  Lower 2 staff positions\n    Glyphs[\"staffPosLower2\"] = \"\\uEB99\";\n    // U+EB9A  Lower 3 staff positions\n    Glyphs[\"staffPosLower3\"] = \"\\uEB9A\";\n    // U+EB9B  Lower 4 staff positions\n    Glyphs[\"staffPosLower4\"] = \"\\uEB9B\";\n    // U+EB9C  Lower 5 staff positions\n    Glyphs[\"staffPosLower5\"] = \"\\uEB9C\";\n    // U+EB9D  Lower 6 staff positions\n    Glyphs[\"staffPosLower6\"] = \"\\uEB9D\";\n    // U+EB9E  Lower 7 staff positions\n    Glyphs[\"staffPosLower7\"] = \"\\uEB9E\";\n    // U+EB9F  Lower 8 staff positions\n    Glyphs[\"staffPosLower8\"] = \"\\uEB9F\";\n    // U+EB90  Raise 1 staff position\n    Glyphs[\"staffPosRaise1\"] = \"\\uEB90\";\n    // U+EB91  Raise 2 staff positions\n    Glyphs[\"staffPosRaise2\"] = \"\\uEB91\";\n    // U+EB92  Raise 3 staff positions\n    Glyphs[\"staffPosRaise3\"] = \"\\uEB92\";\n    // U+EB93  Raise 4 staff positions\n    Glyphs[\"staffPosRaise4\"] = \"\\uEB93\";\n    // U+EB94  Raise 5 staff positions\n    Glyphs[\"staffPosRaise5\"] = \"\\uEB94\";\n    // U+EB95  Raise 6 staff positions\n    Glyphs[\"staffPosRaise6\"] = \"\\uEB95\";\n    // U+EB96  Raise 7 staff positions\n    Glyphs[\"staffPosRaise7\"] = \"\\uEB96\";\n    // U+EB97  Raise 8 staff positions\n    Glyphs[\"staffPosRaise8\"] = \"\\uEB97\";\n    // U+E210  Combining stem\n    Glyphs[\"stem\"] = \"\\uE210\";\n    // U+1D165  Combining stem\n    Glyphs[\"stemAlternate\"] = \"\\uD834\\uDD65\";\n    // U+E215  Combining bow on bridge stem\n    Glyphs[\"stemBowOnBridge\"] = \"\\uE215\";\n    // U+E216  Combining bow on tailpiece stem\n    Glyphs[\"stemBowOnTailpiece\"] = \"\\uE216\";\n    // U+E217  Combining buzz roll stem\n    Glyphs[\"stemBuzzRoll\"] = \"\\uE217\";\n    // U+E218  Combining damp stem\n    Glyphs[\"stemDamp\"] = \"\\uE218\";\n    // U+E21F  Combining harp string noise stem\n    Glyphs[\"stemHarpStringNoise\"] = \"\\uE21F\";\n    // U+E21A  Combining multiphonics (black) stem\n    Glyphs[\"stemMultiphonicsBlack\"] = \"\\uE21A\";\n    // U+E21C  Combining multiphonics (black and white) stem\n    Glyphs[\"stemMultiphonicsBlackWhite\"] = \"\\uE21C\";\n    // U+E21B  Combining multiphonics (white) stem\n    Glyphs[\"stemMultiphonicsWhite\"] = \"\\uE21B\";\n    // U+E213  Combining Penderecki unmeasured tremolo stem\n    Glyphs[\"stemPendereckiTremolo\"] = \"\\uE213\";\n    // U+E21E  Combining rim shot stem\n    Glyphs[\"stemRimShot\"] = \"\\uE21E\";\n    // U+E211  Combining sprechgesang stem\n    Glyphs[\"stemSprechgesang\"] = \"\\uE211\";\n    // U+1D166  Combining sprechgesang stem\n    Glyphs[\"stemSprechgesangAlternate\"] = \"\\uD834\\uDD66\";\n    // U+E214  Combining sul ponticello (bow behind bridge) stem\n    Glyphs[\"stemSulPonticello\"] = \"\\uE214\";\n    // U+E21D  Combining sussurando stem\n    Glyphs[\"stemSussurando\"] = \"\\uE21D\";\n    // U+E212  Combining swished stem\n    Glyphs[\"stemSwished\"] = \"\\uE212\";\n    // U+E219  Combining vibrato pulse accent (Saunders) stem\n    Glyphs[\"stemVibratoPulse\"] = \"\\uE219\";\n    // U+E232  Stockhausen irregular tremolo (\"Morsen\", like Morse code)\n    Glyphs[\"stockhausenTremolo\"] = \"\\uE232\";\n    // U+E618  Bow behind bridge (sul ponticello)\n    Glyphs[\"stringsBowBehindBridge\"] = \"\\uE618\";\n    // U+E62A  Bow behind bridge on four strings\n    Glyphs[\"stringsBowBehindBridgeFourStrings\"] = \"\\uE62A\";\n    // U+E627  Bow behind bridge on one string\n    Glyphs[\"stringsBowBehindBridgeOneString\"] = \"\\uE627\";\n    // U+E629  Bow behind bridge on three strings\n    Glyphs[\"stringsBowBehindBridgeThreeStrings\"] = \"\\uE629\";\n    // U+E628  Bow behind bridge on two strings\n    Glyphs[\"stringsBowBehindBridgeTwoStrings\"] = \"\\uE628\";\n    // U+E619  Bow on top of bridge\n    Glyphs[\"stringsBowOnBridge\"] = \"\\uE619\";\n    // U+E61A  Bow on tailpiece\n    Glyphs[\"stringsBowOnTailpiece\"] = \"\\uE61A\";\n    // U+E626  Change bow direction, indeterminate\n    Glyphs[\"stringsChangeBowDirection\"] = \"\\uE626\";\n    // U+E610  Down bow\n    Glyphs[\"stringsDownBow\"] = \"\\uE610\";\n    // U+1D1AA  Down bow\n    Glyphs[\"stringsDownBowAlternate\"] = \"\\uD834\\uDDAA\";\n    // U+EE82  Down bow, away from body\n    Glyphs[\"stringsDownBowAwayFromBody\"] = \"\\uEE82\";\n    // U+EE84  Down bow, beyond bridge\n    Glyphs[\"stringsDownBowBeyondBridge\"] = \"\\uEE84\";\n    // U+EE80  Down bow, towards body\n    Glyphs[\"stringsDownBowTowardsBody\"] = \"\\uEE80\";\n    // U+E611  Turned down bow\n    Glyphs[\"stringsDownBowTurned\"] = \"\\uE611\";\n    // U+E622  Fouetté\n    Glyphs[\"stringsFouette\"] = \"\\uE622\";\n    // U+E615  Half-harmonic\n    Glyphs[\"stringsHalfHarmonic\"] = \"\\uE615\";\n    // U+E614  Harmonic\n    Glyphs[\"stringsHarmonic\"] = \"\\uE614\";\n    // U+1D1AC  Harmonic\n    Glyphs[\"stringsHarmonicAlternate\"] = \"\\uD834\\uDDAC\";\n    // U+E620  Jeté (gettato) above\n    Glyphs[\"stringsJeteAbove\"] = \"\\uE620\";\n    // U+E621  Jeté (gettato) below\n    Glyphs[\"stringsJeteBelow\"] = \"\\uE621\";\n    // U+E617  Mute off\n    Glyphs[\"stringsMuteOff\"] = \"\\uE617\";\n    // U+E616  Mute on\n    Glyphs[\"stringsMuteOn\"] = \"\\uE616\";\n    // U+E61B  Overpressure, down bow\n    Glyphs[\"stringsOverpressureDownBow\"] = \"\\uE61B\";\n    // U+E61F  Overpressure, no bow direction\n    Glyphs[\"stringsOverpressureNoDirection\"] = \"\\uE61F\";\n    // U+E61D  Overpressure possibile, down bow\n    Glyphs[\"stringsOverpressurePossibileDownBow\"] = \"\\uE61D\";\n    // U+E61E  Overpressure possibile, up bow\n    Glyphs[\"stringsOverpressurePossibileUpBow\"] = \"\\uE61E\";\n    // U+E61C  Overpressure, up bow\n    Glyphs[\"stringsOverpressureUpBow\"] = \"\\uE61C\";\n    // U+EE88  Scrape, circular clockwise\n    Glyphs[\"stringsScrapeCircularClockwise\"] = \"\\uEE88\";\n    // U+EE89  Scrape, circular counter-clockwise\n    Glyphs[\"stringsScrapeCircularCounterclockwise\"] = \"\\uEE89\";\n    // U+EE86  Scrape, parallel inward\n    Glyphs[\"stringsScrapeParallelInward\"] = \"\\uEE86\";\n    // U+EE87  Scrape, parallel outward\n    Glyphs[\"stringsScrapeParallelOutward\"] = \"\\uEE87\";\n    // U+E624  Thumb position\n    Glyphs[\"stringsThumbPosition\"] = \"\\uE624\";\n    // U+E625  Turned thumb position\n    Glyphs[\"stringsThumbPositionTurned\"] = \"\\uE625\";\n    // U+EE8A  Triple chop, inward\n    Glyphs[\"stringsTripleChopInward\"] = \"\\uEE8A\";\n    // U+EE8B  Triple chop, outward\n    Glyphs[\"stringsTripleChopOutward\"] = \"\\uEE8B\";\n    // U+E612  Up bow\n    Glyphs[\"stringsUpBow\"] = \"\\uE612\";\n    // U+1D1AB  Up bow\n    Glyphs[\"stringsUpBowAlternate\"] = \"\\uD834\\uDDAB\";\n    // U+EE83  Up bow, away from body\n    Glyphs[\"stringsUpBowAwayFromBody\"] = \"\\uEE83\";\n    // U+EE85  Up bow, beyond bridge\n    Glyphs[\"stringsUpBowBeyondBridge\"] = \"\\uEE85\";\n    // U+EE81  Up bow, towards body\n    Glyphs[\"stringsUpBowTowardsBody\"] = \"\\uEE81\";\n    // U+E613  Turned up bow\n    Glyphs[\"stringsUpBowTurned\"] = \"\\uE613\";\n    // U+E623  Vibrato pulse accent (Saunders) for stem\n    Glyphs[\"stringsVibratoPulse\"] = \"\\uE623\";\n    // U+EE72  Swiss rudiments doublé black notehead\n    Glyphs[\"swissRudimentsNoteheadBlackDouble\"] = \"\\uEE72\";\n    // U+EE70  Swiss rudiments flam black notehead\n    Glyphs[\"swissRudimentsNoteheadBlackFlam\"] = \"\\uEE70\";\n    // U+EE73  Swiss rudiments doublé half (minim) notehead\n    Glyphs[\"swissRudimentsNoteheadHalfDouble\"] = \"\\uEE73\";\n    // U+EE71  Swiss rudiments flam half (minim) notehead\n    Glyphs[\"swissRudimentsNoteheadHalfFlam\"] = \"\\uEE71\";\n    // U+E007  System divider\n    Glyphs[\"systemDivider\"] = \"\\uE007\";\n    // U+E009  Extra long system divider\n    Glyphs[\"systemDividerExtraLong\"] = \"\\uE009\";\n    // U+E008  Long system divider\n    Glyphs[\"systemDividerLong\"] = \"\\uE008\";\n    // U+E1FC  Augmentation dot\n    Glyphs[\"textAugmentationDot\"] = \"\\uE1FC\";\n    // U+E1F5  Black note, fractional 16th beam, long stem\n    Glyphs[\"textBlackNoteFrac16thLongStem\"] = \"\\uE1F5\";\n    // U+E1F4  Black note, fractional 16th beam, short stem\n    Glyphs[\"textBlackNoteFrac16thShortStem\"] = \"\\uE1F4\";\n    // U+E1F6  Black note, fractional 32nd beam, long stem\n    Glyphs[\"textBlackNoteFrac32ndLongStem\"] = \"\\uE1F6\";\n    // U+E1F3  Black note, fractional 8th beam, long stem\n    Glyphs[\"textBlackNoteFrac8thLongStem\"] = \"\\uE1F3\";\n    // U+E1F2  Black note, fractional 8th beam, short stem\n    Glyphs[\"textBlackNoteFrac8thShortStem\"] = \"\\uE1F2\";\n    // U+E1F1  Black note, long stem\n    Glyphs[\"textBlackNoteLongStem\"] = \"\\uE1F1\";\n    // U+E1F0  Black note, short stem\n    Glyphs[\"textBlackNoteShortStem\"] = \"\\uE1F0\";\n    // U+E1FA  Continuing 16th beam for long stem\n    Glyphs[\"textCont16thBeamLongStem\"] = \"\\uE1FA\";\n    // U+E1F9  Continuing 16th beam for short stem\n    Glyphs[\"textCont16thBeamShortStem\"] = \"\\uE1F9\";\n    // U+E1FB  Continuing 32nd beam for long stem\n    Glyphs[\"textCont32ndBeamLongStem\"] = \"\\uE1FB\";\n    // U+E1F8  Continuing 8th beam for long stem\n    Glyphs[\"textCont8thBeamLongStem\"] = \"\\uE1F8\";\n    // U+E1F7  Continuing 8th beam for short stem\n    Glyphs[\"textCont8thBeamShortStem\"] = \"\\uE1F7\";\n    // U+E209  Headless black note, fractional 16th beam, long stem\n    Glyphs[\"textHeadlessBlackNoteFrac16thLongStem\"] = \"\\uE209\";\n    // U+E208  Headless black note, fractional 16th beam, short stem\n    Glyphs[\"textHeadlessBlackNoteFrac16thShortStem\"] = \"\\uE208\";\n    // U+E20A  Headless black note, fractional 32nd beam, long stem\n    Glyphs[\"textHeadlessBlackNoteFrac32ndLongStem\"] = \"\\uE20A\";\n    // U+E207  Headless black note, fractional 8th beam, long stem\n    Glyphs[\"textHeadlessBlackNoteFrac8thLongStem\"] = \"\\uE207\";\n    // U+E206  Headless black note, fractional 8th beam, short stem\n    Glyphs[\"textHeadlessBlackNoteFrac8thShortStem\"] = \"\\uE206\";\n    // U+E205  Headless black note, long stem\n    Glyphs[\"textHeadlessBlackNoteLongStem\"] = \"\\uE205\";\n    // U+E204  Headless black note, short stem\n    Glyphs[\"textHeadlessBlackNoteShortStem\"] = \"\\uE204\";\n    // U+E1FD  Tie\n    Glyphs[\"textTie\"] = \"\\uE1FD\";\n    // U+E202  Tuplet number 3 for long stem\n    Glyphs[\"textTuplet3LongStem\"] = \"\\uE202\";\n    // U+E1FF  Tuplet number 3 for short stem\n    Glyphs[\"textTuplet3ShortStem\"] = \"\\uE1FF\";\n    // U+E203  Tuplet bracket end for long stem\n    Glyphs[\"textTupletBracketEndLongStem\"] = \"\\uE203\";\n    // U+E200  Tuplet bracket end for short stem\n    Glyphs[\"textTupletBracketEndShortStem\"] = \"\\uE200\";\n    // U+E201  Tuplet bracket start for long stem\n    Glyphs[\"textTupletBracketStartLongStem\"] = \"\\uE201\";\n    // U+E1FE  Tuplet bracket start for short stem\n    Glyphs[\"textTupletBracketStartShortStem\"] = \"\\uE1FE\";\n    // U+E080  Time signature 0\n    Glyphs[\"timeSig0\"] = \"\\uE080\";\n    // U+ECF0  Reversed time signature 0\n    Glyphs[\"timeSig0Reversed\"] = \"\\uECF0\";\n    // U+ECE0  Turned time signature 0\n    Glyphs[\"timeSig0Turned\"] = \"\\uECE0\";\n    // U+E081  Time signature 1\n    Glyphs[\"timeSig1\"] = \"\\uE081\";\n    // U+ECF1  Reversed time signature 1\n    Glyphs[\"timeSig1Reversed\"] = \"\\uECF1\";\n    // U+ECE1  Turned time signature 1\n    Glyphs[\"timeSig1Turned\"] = \"\\uECE1\";\n    // U+E082  Time signature 2\n    Glyphs[\"timeSig2\"] = \"\\uE082\";\n    // U+ECF2  Reversed time signature 2\n    Glyphs[\"timeSig2Reversed\"] = \"\\uECF2\";\n    // U+ECE2  Turned time signature 2\n    Glyphs[\"timeSig2Turned\"] = \"\\uECE2\";\n    // U+E083  Time signature 3\n    Glyphs[\"timeSig3\"] = \"\\uE083\";\n    // U+ECF3  Reversed time signature 3\n    Glyphs[\"timeSig3Reversed\"] = \"\\uECF3\";\n    // U+ECE3  Turned time signature 3\n    Glyphs[\"timeSig3Turned\"] = \"\\uECE3\";\n    // U+E084  Time signature 4\n    Glyphs[\"timeSig4\"] = \"\\uE084\";\n    // U+ECF4  Reversed time signature 4\n    Glyphs[\"timeSig4Reversed\"] = \"\\uECF4\";\n    // U+ECE4  Turned time signature 4\n    Glyphs[\"timeSig4Turned\"] = \"\\uECE4\";\n    // U+E085  Time signature 5\n    Glyphs[\"timeSig5\"] = \"\\uE085\";\n    // U+ECF5  Reversed time signature 5\n    Glyphs[\"timeSig5Reversed\"] = \"\\uECF5\";\n    // U+ECE5  Turned time signature 5\n    Glyphs[\"timeSig5Turned\"] = \"\\uECE5\";\n    // U+E086  Time signature 6\n    Glyphs[\"timeSig6\"] = \"\\uE086\";\n    // U+ECF6  Reversed time signature 6\n    Glyphs[\"timeSig6Reversed\"] = \"\\uECF6\";\n    // U+ECE6  Turned time signature 6\n    Glyphs[\"timeSig6Turned\"] = \"\\uECE6\";\n    // U+E087  Time signature 7\n    Glyphs[\"timeSig7\"] = \"\\uE087\";\n    // U+ECF7  Reversed time signature 7\n    Glyphs[\"timeSig7Reversed\"] = \"\\uECF7\";\n    // U+ECE7  Turned time signature 7\n    Glyphs[\"timeSig7Turned\"] = \"\\uECE7\";\n    // U+E088  Time signature 8\n    Glyphs[\"timeSig8\"] = \"\\uE088\";\n    // U+ECF8  Reversed time signature 8\n    Glyphs[\"timeSig8Reversed\"] = \"\\uECF8\";\n    // U+ECE8  Turned time signature 8\n    Glyphs[\"timeSig8Turned\"] = \"\\uECE8\";\n    // U+E089  Time signature 9\n    Glyphs[\"timeSig9\"] = \"\\uE089\";\n    // U+ECF9  Reversed time signature 9\n    Glyphs[\"timeSig9Reversed\"] = \"\\uECF9\";\n    // U+ECE9  Turned time signature 9\n    Glyphs[\"timeSig9Turned\"] = \"\\uECE9\";\n    // U+EC80  Left bracket for whole time signature\n    Glyphs[\"timeSigBracketLeft\"] = \"\\uEC80\";\n    // U+EC82  Left bracket for numerator only\n    Glyphs[\"timeSigBracketLeftSmall\"] = \"\\uEC82\";\n    // U+EC81  Right bracket for whole time signature\n    Glyphs[\"timeSigBracketRight\"] = \"\\uEC81\";\n    // U+EC83  Right bracket for numerator only\n    Glyphs[\"timeSigBracketRightSmall\"] = \"\\uEC83\";\n    // U+E09F  Control character for denominator digit\n    Glyphs[\"timeSigCombDenominator\"] = \"\\uE09F\";\n    // U+E09E  Control character for numerator digit\n    Glyphs[\"timeSigCombNumerator\"] = \"\\uE09E\";\n    // U+E096  Time signature comma\n    Glyphs[\"timeSigComma\"] = \"\\uE096\";\n    // U+E08A  Common time\n    Glyphs[\"timeSigCommon\"] = \"\\uE08A\";\n    // U+1D134  Common time\n    Glyphs[\"timeSigCommonAlternate\"] = \"\\uD834\\uDD34\";\n    // U+ECFA  Reversed common time\n    Glyphs[\"timeSigCommonReversed\"] = \"\\uECFA\";\n    // U+ECEA  Turned common time\n    Glyphs[\"timeSigCommonTurned\"] = \"\\uECEA\";\n    // U+EC85  Cut time (Bach)\n    Glyphs[\"timeSigCut2\"] = \"\\uEC85\";\n    // U+EC86  Cut triple time (9/8)\n    Glyphs[\"timeSigCut3\"] = \"\\uEC86\";\n    // U+E08B  Cut time\n    Glyphs[\"timeSigCutCommon\"] = \"\\uE08B\";\n    // U+1D135  Cut time\n    Glyphs[\"timeSigCutCommonAlternate\"] = \"\\uD834\\uDD35\";\n    // U+ECFB  Reversed cut time\n    Glyphs[\"timeSigCutCommonReversed\"] = \"\\uECFB\";\n    // U+ECEB  Turned cut time\n    Glyphs[\"timeSigCutCommonTurned\"] = \"\\uECEB\";\n    // U+E08F  Time signature equals\n    Glyphs[\"timeSigEquals\"] = \"\\uE08F\";\n    // U+E098  Time signature fraction ½\n    Glyphs[\"timeSigFractionHalf\"] = \"\\uE098\";\n    // U+E09A  Time signature fraction ⅓\n    Glyphs[\"timeSigFractionOneThird\"] = \"\\uE09A\";\n    // U+E097  Time signature fraction ¼\n    Glyphs[\"timeSigFractionQuarter\"] = \"\\uE097\";\n    // U+E099  Time signature fraction ¾\n    Glyphs[\"timeSigFractionThreeQuarters\"] = \"\\uE099\";\n    // U+E09B  Time signature fraction ⅔\n    Glyphs[\"timeSigFractionTwoThirds\"] = \"\\uE09B\";\n    // U+E08E  Time signature fraction slash\n    Glyphs[\"timeSigFractionalSlash\"] = \"\\uE08E\";\n    // U+E090  Time signature minus\n    Glyphs[\"timeSigMinus\"] = \"\\uE090\";\n    // U+E091  Time signature multiply\n    Glyphs[\"timeSigMultiply\"] = \"\\uE091\";\n    // U+E09D  Open time signature (Penderecki)\n    Glyphs[\"timeSigOpenPenderecki\"] = \"\\uE09D\";\n    // U+E094  Left parenthesis for whole time signature\n    Glyphs[\"timeSigParensLeft\"] = \"\\uE094\";\n    // U+E092  Left parenthesis for numerator only\n    Glyphs[\"timeSigParensLeftSmall\"] = \"\\uE092\";\n    // U+E095  Right parenthesis for whole time signature\n    Glyphs[\"timeSigParensRight\"] = \"\\uE095\";\n    // U+E093  Right parenthesis for numerator only\n    Glyphs[\"timeSigParensRightSmall\"] = \"\\uE093\";\n    // U+E08C  Time signature +\n    Glyphs[\"timeSigPlus\"] = \"\\uE08C\";\n    // U+E08D  Time signature + (for numerators)\n    Glyphs[\"timeSigPlusSmall\"] = \"\\uE08D\";\n    // U+EC84  Time signature slash separator\n    Glyphs[\"timeSigSlash\"] = \"\\uEC84\";\n    // U+E09C  Open time signature\n    Glyphs[\"timeSigX\"] = \"\\uE09C\";\n    // U+E220  Combining tremolo 1\n    Glyphs[\"tremolo1\"] = \"\\uE220\";\n    // U+1D167  Combining tremolo 1\n    Glyphs[\"tremolo1Alternate\"] = \"\\uD834\\uDD67\";\n    // U+E221  Combining tremolo 2\n    Glyphs[\"tremolo2\"] = \"\\uE221\";\n    // U+1D168  Combining tremolo 2\n    Glyphs[\"tremolo2Alternate\"] = \"\\uD834\\uDD68\";\n    // U+E222  Combining tremolo 3\n    Glyphs[\"tremolo3\"] = \"\\uE222\";\n    // U+1D169  Combining tremolo 3\n    Glyphs[\"tremolo3Alternate\"] = \"\\uD834\\uDD69\";\n    // U+E223  Combining tremolo 4\n    Glyphs[\"tremolo4\"] = \"\\uE223\";\n    // U+E224  Combining tremolo 5\n    Glyphs[\"tremolo5\"] = \"\\uE224\";\n    // U+E22E  Divide measured tremolo by 2\n    Glyphs[\"tremoloDivisiDots2\"] = \"\\uE22E\";\n    // U+E22F  Divide measured tremolo by 3\n    Glyphs[\"tremoloDivisiDots3\"] = \"\\uE22F\";\n    // U+E230  Divide measured tremolo by 4\n    Glyphs[\"tremoloDivisiDots4\"] = \"\\uE230\";\n    // U+E231  Divide measured tremolo by 6\n    Glyphs[\"tremoloDivisiDots6\"] = \"\\uE231\";\n    // U+E225  Fingered tremolo 1\n    Glyphs[\"tremoloFingered1\"] = \"\\uE225\";\n    // U+1D16A  Fingered tremolo 1\n    Glyphs[\"tremoloFingered1Alternate\"] = \"\\uD834\\uDD6A\";\n    // U+E226  Fingered tremolo 2\n    Glyphs[\"tremoloFingered2\"] = \"\\uE226\";\n    // U+1D16B  Fingered tremolo 2\n    Glyphs[\"tremoloFingered2Alternate\"] = \"\\uD834\\uDD6B\";\n    // U+E227  Fingered tremolo 3\n    Glyphs[\"tremoloFingered3\"] = \"\\uE227\";\n    // U+1D16C  Fingered tremolo 3\n    Glyphs[\"tremoloFingered3Alternate\"] = \"\\uD834\\uDD6C\";\n    // U+E228  Fingered tremolo 4\n    Glyphs[\"tremoloFingered4\"] = \"\\uE228\";\n    // U+E229  Fingered tremolo 5\n    Glyphs[\"tremoloFingered5\"] = \"\\uE229\";\n    // U+E5F2  Triple-tongue above\n    Glyphs[\"tripleTongueAbove\"] = \"\\uE5F2\";\n    // U+1D18B  Triple-tongue above\n    Glyphs[\"tripleTongueAboveAlternate\"] = \"\\uD834\\uDD8B\";\n    // U+E5F3  Triple-tongue below\n    Glyphs[\"tripleTongueBelow\"] = \"\\uE5F3\";\n    // U+E880  Tuplet 0\n    Glyphs[\"tuplet0\"] = \"\\uE880\";\n    // U+E881  Tuplet 1\n    Glyphs[\"tuplet1\"] = \"\\uE881\";\n    // U+E882  Tuplet 2\n    Glyphs[\"tuplet2\"] = \"\\uE882\";\n    // U+E883  Tuplet 3\n    Glyphs[\"tuplet3\"] = \"\\uE883\";\n    // U+E884  Tuplet 4\n    Glyphs[\"tuplet4\"] = \"\\uE884\";\n    // U+E885  Tuplet 5\n    Glyphs[\"tuplet5\"] = \"\\uE885\";\n    // U+E886  Tuplet 6\n    Glyphs[\"tuplet6\"] = \"\\uE886\";\n    // U+E887  Tuplet 7\n    Glyphs[\"tuplet7\"] = \"\\uE887\";\n    // U+E888  Tuplet 8\n    Glyphs[\"tuplet8\"] = \"\\uE888\";\n    // U+E889  Tuplet 9\n    Glyphs[\"tuplet9\"] = \"\\uE889\";\n    // U+E88A  Tuplet colon\n    Glyphs[\"tupletColon\"] = \"\\uE88A\";\n    // U+E22C  Wieniawski unmeasured tremolo\n    Glyphs[\"unmeasuredTremolo\"] = \"\\uE22C\";\n    // U+E22D  Wieniawski unmeasured tremolo (simpler)\n    Glyphs[\"unmeasuredTremoloSimple\"] = \"\\uE22D\";\n    // U+E069  Unpitched percussion clef 1\n    Glyphs[\"unpitchedPercussionClef1\"] = \"\\uE069\";\n    // U+1D125  Unpitched percussion clef 1\n    Glyphs[\"unpitchedPercussionClef1Alternate\"] = \"\\uD834\\uDD25\";\n    // U+E06A  Unpitched percussion clef 2\n    Glyphs[\"unpitchedPercussionClef2\"] = \"\\uE06A\";\n    // U+1D126  Unpitched percussion clef 2\n    Glyphs[\"unpitchedPercussionClef2Alternate\"] = \"\\uD834\\uDD26\";\n    // U+E517  Ventiduesima\n    Glyphs[\"ventiduesima\"] = \"\\uE517\";\n    // U+E518  Ventiduesima alta\n    Glyphs[\"ventiduesimaAlta\"] = \"\\uE518\";\n    // U+E519  Ventiduesima bassa\n    Glyphs[\"ventiduesimaBassa\"] = \"\\uE519\";\n    // U+E51E  Ventiduesima bassa (mb)\n    Glyphs[\"ventiduesimaBassaMb\"] = \"\\uE51E\";\n    // U+E649  Finger click (Stockhausen)\n    Glyphs[\"vocalFingerClickStockhausen\"] = \"\\uE649\";\n    // U+E64B  Halb gesungen (semi-sprechgesang)\n    Glyphs[\"vocalHalbGesungen\"] = \"\\uE64B\";\n    // U+E640  Mouth closed\n    Glyphs[\"vocalMouthClosed\"] = \"\\uE640\";\n    // U+E642  Mouth open\n    Glyphs[\"vocalMouthOpen\"] = \"\\uE642\";\n    // U+E644  Mouth pursed\n    Glyphs[\"vocalMouthPursed\"] = \"\\uE644\";\n    // U+E641  Mouth slightly open\n    Glyphs[\"vocalMouthSlightlyOpen\"] = \"\\uE641\";\n    // U+E643  Mouth wide open\n    Glyphs[\"vocalMouthWideOpen\"] = \"\\uE643\";\n    // U+E647  Nasal voice\n    Glyphs[\"vocalNasalVoice\"] = \"\\uE647\";\n    // U+E645  Sprechgesang\n    Glyphs[\"vocalSprechgesang\"] = \"\\uE645\";\n    // U+E648  Tongue click (Stockhausen)\n    Glyphs[\"vocalTongueClickStockhausen\"] = \"\\uE648\";\n    // U+E64A  Tongue and finger click (Stockhausen)\n    Glyphs[\"vocalTongueFingerClickStockhausen\"] = \"\\uE64A\";\n    // U+E646  Combining sussurando for stem\n    Glyphs[\"vocalsSussurando\"] = \"\\uE646\";\n    // U+EAAA  Arpeggiato wiggle segment, downwards\n    Glyphs[\"wiggleArpeggiatoDown\"] = \"\\uEAAA\";\n    // U+EAAE  Arpeggiato arrowhead down\n    Glyphs[\"wiggleArpeggiatoDownArrow\"] = \"\\uEAAE\";\n    // U+EAAC  Arpeggiato downward swash\n    Glyphs[\"wiggleArpeggiatoDownSwash\"] = \"\\uEAAC\";\n    // U+EAA9  Arpeggiato wiggle segment, upwards\n    Glyphs[\"wiggleArpeggiatoUp\"] = \"\\uEAA9\";\n    // U+EAAD  Arpeggiato arrowhead up\n    Glyphs[\"wiggleArpeggiatoUpArrow\"] = \"\\uEAAD\";\n    // U+EAAB  Arpeggiato upward swash\n    Glyphs[\"wiggleArpeggiatoUpSwash\"] = \"\\uEAAB\";\n    // U+EAC9  Circular motion segment\n    Glyphs[\"wiggleCircular\"] = \"\\uEAC9\";\n    // U+EAC0  Constant circular motion segment\n    Glyphs[\"wiggleCircularConstant\"] = \"\\uEAC0\";\n    // U+EAC1  Constant circular motion segment (flipped)\n    Glyphs[\"wiggleCircularConstantFlipped\"] = \"\\uEAC1\";\n    // U+EAC3  Constant circular motion segment (flipped, large)\n    Glyphs[\"wiggleCircularConstantFlippedLarge\"] = \"\\uEAC3\";\n    // U+EAC2  Constant circular motion segment (large)\n    Glyphs[\"wiggleCircularConstantLarge\"] = \"\\uEAC2\";\n    // U+EACB  Circular motion end\n    Glyphs[\"wiggleCircularEnd\"] = \"\\uEACB\";\n    // U+EAC8  Circular motion segment, large\n    Glyphs[\"wiggleCircularLarge\"] = \"\\uEAC8\";\n    // U+EAC7  Circular motion segment, larger\n    Glyphs[\"wiggleCircularLarger\"] = \"\\uEAC7\";\n    // U+EAC6  Circular motion segment, larger still\n    Glyphs[\"wiggleCircularLargerStill\"] = \"\\uEAC6\";\n    // U+EAC5  Circular motion segment, largest\n    Glyphs[\"wiggleCircularLargest\"] = \"\\uEAC5\";\n    // U+EACA  Circular motion segment, small\n    Glyphs[\"wiggleCircularSmall\"] = \"\\uEACA\";\n    // U+EAC4  Circular motion start\n    Glyphs[\"wiggleCircularStart\"] = \"\\uEAC4\";\n    // U+EAAF  Glissando wiggle segment\n    Glyphs[\"wiggleGlissando\"] = \"\\uEAAF\";\n    // U+EABD  Group glissando 1\n    Glyphs[\"wiggleGlissandoGroup1\"] = \"\\uEABD\";\n    // U+EABE  Group glissando 2\n    Glyphs[\"wiggleGlissandoGroup2\"] = \"\\uEABE\";\n    // U+EABF  Group glissando 3\n    Glyphs[\"wiggleGlissandoGroup3\"] = \"\\uEABF\";\n    // U+EAF0  Quasi-random squiggle 1\n    Glyphs[\"wiggleRandom1\"] = \"\\uEAF0\";\n    // U+EAF1  Quasi-random squiggle 2\n    Glyphs[\"wiggleRandom2\"] = \"\\uEAF1\";\n    // U+EAF2  Quasi-random squiggle 3\n    Glyphs[\"wiggleRandom3\"] = \"\\uEAF2\";\n    // U+EAF3  Quasi-random squiggle 4\n    Glyphs[\"wiggleRandom4\"] = \"\\uEAF3\";\n    // U+EABB  Sawtooth line segment\n    Glyphs[\"wiggleSawtooth\"] = \"\\uEABB\";\n    // U+EABA  Narrow sawtooth line segment\n    Glyphs[\"wiggleSawtoothNarrow\"] = \"\\uEABA\";\n    // U+EABC  Wide sawtooth line segment\n    Glyphs[\"wiggleSawtoothWide\"] = \"\\uEABC\";\n    // U+EAB8  Square wave line segment\n    Glyphs[\"wiggleSquareWave\"] = \"\\uEAB8\";\n    // U+EAB7  Narrow square wave line segment\n    Glyphs[\"wiggleSquareWaveNarrow\"] = \"\\uEAB7\";\n    // U+EAB9  Wide square wave line segment\n    Glyphs[\"wiggleSquareWaveWide\"] = \"\\uEAB9\";\n    // U+EAA4  Trill wiggle segment\n    Glyphs[\"wiggleTrill\"] = \"\\uEAA4\";\n    // U+EAA3  Trill wiggle segment, fast\n    Glyphs[\"wiggleTrillFast\"] = \"\\uEAA3\";\n    // U+EAA2  Trill wiggle segment, faster\n    Glyphs[\"wiggleTrillFaster\"] = \"\\uEAA2\";\n    // U+EAA1  Trill wiggle segment, faster still\n    Glyphs[\"wiggleTrillFasterStill\"] = \"\\uEAA1\";\n    // U+EAA0  Trill wiggle segment, fastest\n    Glyphs[\"wiggleTrillFastest\"] = \"\\uEAA0\";\n    // U+EAA5  Trill wiggle segment, slow\n    Glyphs[\"wiggleTrillSlow\"] = \"\\uEAA5\";\n    // U+EAA6  Trill wiggle segment, slower\n    Glyphs[\"wiggleTrillSlower\"] = \"\\uEAA6\";\n    // U+EAA7  Trill wiggle segment, slower still\n    Glyphs[\"wiggleTrillSlowerStill\"] = \"\\uEAA7\";\n    // U+EAA8  Trill wiggle segment, slowest\n    Glyphs[\"wiggleTrillSlowest\"] = \"\\uEAA8\";\n    // U+EAEE  Vibrato largest, slower\n    Glyphs[\"wiggleVIbratoLargestSlower\"] = \"\\uEAEE\";\n    // U+EAE0  Vibrato medium, slower\n    Glyphs[\"wiggleVIbratoMediumSlower\"] = \"\\uEAE0\";\n    // U+EAB0  Vibrato / shake wiggle segment\n    Glyphs[\"wiggleVibrato\"] = \"\\uEAB0\";\n    // U+EAE5  Vibrato large, fast\n    Glyphs[\"wiggleVibratoLargeFast\"] = \"\\uEAE5\";\n    // U+EAE4  Vibrato large, faster\n    Glyphs[\"wiggleVibratoLargeFaster\"] = \"\\uEAE4\";\n    // U+EAE3  Vibrato large, faster still\n    Glyphs[\"wiggleVibratoLargeFasterStill\"] = \"\\uEAE3\";\n    // U+EAE2  Vibrato large, fastest\n    Glyphs[\"wiggleVibratoLargeFastest\"] = \"\\uEAE2\";\n    // U+EAE6  Vibrato large, slow\n    Glyphs[\"wiggleVibratoLargeSlow\"] = \"\\uEAE6\";\n    // U+EAE7  Vibrato large, slower\n    Glyphs[\"wiggleVibratoLargeSlower\"] = \"\\uEAE7\";\n    // U+EAE8  Vibrato large, slowest\n    Glyphs[\"wiggleVibratoLargeSlowest\"] = \"\\uEAE8\";\n    // U+EAEC  Vibrato largest, fast\n    Glyphs[\"wiggleVibratoLargestFast\"] = \"\\uEAEC\";\n    // U+EAEB  Vibrato largest, faster\n    Glyphs[\"wiggleVibratoLargestFaster\"] = \"\\uEAEB\";\n    // U+EAEA  Vibrato largest, faster still\n    Glyphs[\"wiggleVibratoLargestFasterStill\"] = \"\\uEAEA\";\n    // U+EAE9  Vibrato largest, fastest\n    Glyphs[\"wiggleVibratoLargestFastest\"] = \"\\uEAE9\";\n    // U+EAED  Vibrato largest, slow\n    Glyphs[\"wiggleVibratoLargestSlow\"] = \"\\uEAED\";\n    // U+EAEF  Vibrato largest, slowest\n    Glyphs[\"wiggleVibratoLargestSlowest\"] = \"\\uEAEF\";\n    // U+EADE  Vibrato medium, fast\n    Glyphs[\"wiggleVibratoMediumFast\"] = \"\\uEADE\";\n    // U+EADD  Vibrato medium, faster\n    Glyphs[\"wiggleVibratoMediumFaster\"] = \"\\uEADD\";\n    // U+EADC  Vibrato medium, faster still\n    Glyphs[\"wiggleVibratoMediumFasterStill\"] = \"\\uEADC\";\n    // U+EADB  Vibrato medium, fastest\n    Glyphs[\"wiggleVibratoMediumFastest\"] = \"\\uEADB\";\n    // U+EADF  Vibrato medium, slow\n    Glyphs[\"wiggleVibratoMediumSlow\"] = \"\\uEADF\";\n    // U+EAE1  Vibrato medium, slowest\n    Glyphs[\"wiggleVibratoMediumSlowest\"] = \"\\uEAE1\";\n    // U+EAD7  Vibrato small, fast\n    Glyphs[\"wiggleVibratoSmallFast\"] = \"\\uEAD7\";\n    // U+EAD6  Vibrato small, faster\n    Glyphs[\"wiggleVibratoSmallFaster\"] = \"\\uEAD6\";\n    // U+EAD5  Vibrato small, faster still\n    Glyphs[\"wiggleVibratoSmallFasterStill\"] = \"\\uEAD5\";\n    // U+EAD4  Vibrato small, fastest\n    Glyphs[\"wiggleVibratoSmallFastest\"] = \"\\uEAD4\";\n    // U+EAD8  Vibrato small, slow\n    Glyphs[\"wiggleVibratoSmallSlow\"] = \"\\uEAD8\";\n    // U+EAD9  Vibrato small, slower\n    Glyphs[\"wiggleVibratoSmallSlower\"] = \"\\uEAD9\";\n    // U+EADA  Vibrato small, slowest\n    Glyphs[\"wiggleVibratoSmallSlowest\"] = \"\\uEADA\";\n    // U+EAD0  Vibrato smallest, fast\n    Glyphs[\"wiggleVibratoSmallestFast\"] = \"\\uEAD0\";\n    // U+EACF  Vibrato smallest, faster\n    Glyphs[\"wiggleVibratoSmallestFaster\"] = \"\\uEACF\";\n    // U+EACE  Vibrato smallest, faster still\n    Glyphs[\"wiggleVibratoSmallestFasterStill\"] = \"\\uEACE\";\n    // U+EACD  Vibrato smallest, fastest\n    Glyphs[\"wiggleVibratoSmallestFastest\"] = \"\\uEACD\";\n    // U+EAD1  Vibrato smallest, slow\n    Glyphs[\"wiggleVibratoSmallestSlow\"] = \"\\uEAD1\";\n    // U+EAD2  Vibrato smallest, slower\n    Glyphs[\"wiggleVibratoSmallestSlower\"] = \"\\uEAD2\";\n    // U+EAD3  Vibrato smallest, slowest\n    Glyphs[\"wiggleVibratoSmallestSlowest\"] = \"\\uEAD3\";\n    // U+EACC  Vibrato start\n    Glyphs[\"wiggleVibratoStart\"] = \"\\uEACC\";\n    // U+EAB1  Wide vibrato / shake wiggle segment\n    Glyphs[\"wiggleVibratoWide\"] = \"\\uEAB1\";\n    // U+EAB5  Wavy line segment\n    Glyphs[\"wiggleWavy\"] = \"\\uEAB5\";\n    // U+EAB4  Narrow wavy line segment\n    Glyphs[\"wiggleWavyNarrow\"] = \"\\uEAB4\";\n    // U+EAB6  Wide wavy line segment\n    Glyphs[\"wiggleWavyWide\"] = \"\\uEAB6\";\n    // U+E5F4  Closed hole\n    Glyphs[\"windClosedHole\"] = \"\\uE5F4\";\n    // U+E5FB  Flatter embouchure\n    Glyphs[\"windFlatEmbouchure\"] = \"\\uE5FB\";\n    // U+E5F6  Half-closed hole\n    Glyphs[\"windHalfClosedHole1\"] = \"\\uE5F6\";\n    // U+E5F7  Half-closed hole 2\n    Glyphs[\"windHalfClosedHole2\"] = \"\\uE5F7\";\n    // U+E5F8  Half-open hole\n    Glyphs[\"windHalfClosedHole3\"] = \"\\uE5F8\";\n    // U+E5FE  Somewhat relaxed embouchure\n    Glyphs[\"windLessRelaxedEmbouchure\"] = \"\\uE5FE\";\n    // U+E600  Somewhat tight embouchure\n    Glyphs[\"windLessTightEmbouchure\"] = \"\\uE600\";\n    // U+E60A  Mouthpiece or hand pop\n    Glyphs[\"windMouthpiecePop\"] = \"\\uE60A\";\n    // U+E607  Combining multiphonics (black) for stem\n    Glyphs[\"windMultiphonicsBlackStem\"] = \"\\uE607\";\n    // U+E609  Combining multiphonics (black and white) for stem\n    Glyphs[\"windMultiphonicsBlackWhiteStem\"] = \"\\uE609\";\n    // U+E608  Combining multiphonics (white) for stem\n    Glyphs[\"windMultiphonicsWhiteStem\"] = \"\\uE608\";\n    // U+E5F9  Open hole\n    Glyphs[\"windOpenHole\"] = \"\\uE5F9\";\n    // U+E606  Much more reed (push inwards)\n    Glyphs[\"windReedPositionIn\"] = \"\\uE606\";\n    // U+E604  Normal reed position\n    Glyphs[\"windReedPositionNormal\"] = \"\\uE604\";\n    // U+E605  Very little reed (pull outwards)\n    Glyphs[\"windReedPositionOut\"] = \"\\uE605\";\n    // U+E5FD  Relaxed embouchure\n    Glyphs[\"windRelaxedEmbouchure\"] = \"\\uE5FD\";\n    // U+E60B  Rim only\n    Glyphs[\"windRimOnly\"] = \"\\uE60B\";\n    // U+E5FC  Sharper embouchure\n    Glyphs[\"windSharpEmbouchure\"] = \"\\uE5FC\";\n    // U+E603  Very tight embouchure / strong air pressure\n    Glyphs[\"windStrongAirPressure\"] = \"\\uE603\";\n    // U+E5F5  Three-quarters closed hole\n    Glyphs[\"windThreeQuartersClosedHole\"] = \"\\uE5F5\";\n    // U+E5FF  Tight embouchure\n    Glyphs[\"windTightEmbouchure\"] = \"\\uE5FF\";\n    // U+E5FA  Trill key\n    Glyphs[\"windTrillKey\"] = \"\\uE5FA\";\n    // U+E601  Very tight embouchure\n    Glyphs[\"windVeryTightEmbouchure\"] = \"\\uE601\";\n    // U+E602  Very relaxed embouchure / weak air-pressure\n    Glyphs[\"windWeakAirPressure\"] = \"\\uE602\";\n})(Glyphs || (Glyphs = {}));\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { Fraction } from './fraction';\nimport { Glyphs } from './glyphs';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n// eslint-disable-next-line\nexport const CommonMetrics = {\n    fontFamily: 'Bravura',\n    fontSize: 30,\n    fontWeight: 'normal',\n    fontStyle: 'normal',\n    Accidental: {\n        cautionary: {\n            fontSize: 20,\n        },\n        grace: {\n            fontSize: 25,\n        },\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    Annotation: {\n        fontSize: 10,\n    },\n    Bend: {\n        fontSize: 10,\n    },\n    ChordSymbol: {\n        fontSize: 12,\n        spacing: 0.05,\n        subscriptOffset: 0.2,\n        superscriptOffset: -0.4,\n        superSubRatio: 0.6,\n    },\n    FretHandFinger: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n    NoteHead: {\n        minPadding: 2,\n    },\n    PedalMarking: {\n        text: {\n            fontSize: 12,\n            fontStyle: 'italic',\n        },\n    },\n    Repetition: {\n        text: {\n            fontSize: 12,\n            fontWeight: 'bold',\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    Stave: {\n        fontFamily: 'Arial, sans-serif',\n        fontSize: 8,\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    StaveConnector: {\n        text: {\n            fontSize: 16,\n        },\n    },\n    StaveLine: {\n        fontFamily: 'Arial, sans-serif',\n        fontSize: 10,\n    },\n    StaveSection: {\n        fontFamily: 'Arial, sans-serif',\n        fontSize: 10,\n        fontWeight: 'bold',\n    },\n    StaveTempo: {\n        fontSize: 14,\n        glyph: {\n            fontSize: 25,\n        },\n        name: {\n            fontWeight: 'bold',\n        },\n    },\n    StaveText: {\n        fontSize: 16,\n    },\n    StaveTie: {\n        fontFamily: 'Arial, sans-serif',\n        fontSize: 10,\n    },\n    StringNumber: {\n        fontFamily: 'Arial, sans-serif',\n        fontSize: 10,\n        fontWeight: 'bold',\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    Stroke: {\n        text: {\n            fontSize: 10,\n            fontStyle: 'italic',\n            fontWeight: 'bold',\n        },\n    },\n    TabNote: {\n        text: {\n            fontSize: 9,\n        },\n    },\n    TabSlide: {\n        fontFamily: 'Times New Roman, serif',\n        fontSize: 10,\n        fontStyle: 'italic',\n        fontWeight: 'bold',\n    },\n    TabTie: {\n        fontFamily: 'Arial, sans-serif',\n        fontSize: 10,\n    },\n    TextBracket: {\n        fontFamily: 'Times New Roman, serif',\n        fontSize: 15,\n        fontStyle: 'italic',\n    },\n    TextNote: {\n        text: {\n            fontSize: 12,\n        },\n    },\n    Tremolo: {\n        spacing: 7,\n    },\n    Volta: {\n        fontSize: 9,\n        fontWeight: 'bold',\n    },\n};\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst keySignatures = {\n    C: { num: 0 },\n    Am: { num: 0 },\n    F: { accidental: 'b', num: 1 },\n    Dm: { accidental: 'b', num: 1 },\n    Bb: { accidental: 'b', num: 2 },\n    Gm: { accidental: 'b', num: 2 },\n    Eb: { accidental: 'b', num: 3 },\n    Cm: { accidental: 'b', num: 3 },\n    Ab: { accidental: 'b', num: 4 },\n    Fm: { accidental: 'b', num: 4 },\n    Db: { accidental: 'b', num: 5 },\n    Bbm: { accidental: 'b', num: 5 },\n    Gb: { accidental: 'b', num: 6 },\n    Ebm: { accidental: 'b', num: 6 },\n    Cb: { accidental: 'b', num: 7 },\n    Abm: { accidental: 'b', num: 7 },\n    G: { accidental: '#', num: 1 },\n    Em: { accidental: '#', num: 1 },\n    D: { accidental: '#', num: 2 },\n    Bm: { accidental: '#', num: 2 },\n    A: { accidental: '#', num: 3 },\n    'F#m': { accidental: '#', num: 3 },\n    E: { accidental: '#', num: 4 },\n    'C#m': { accidental: '#', num: 4 },\n    B: { accidental: '#', num: 5 },\n    'G#m': { accidental: '#', num: 5 },\n    'F#': { accidental: '#', num: 6 },\n    'D#m': { accidental: '#', num: 6 },\n    'C#': { accidental: '#', num: 7 },\n    'A#m': { accidental: '#', num: 7 },\n};\nconst clefs = {\n    treble: { lineShift: 0 },\n    bass: { lineShift: 6 },\n    tenor: { lineShift: 4 },\n    alto: { lineShift: 3 },\n    soprano: { lineShift: 1 },\n    percussion: { lineShift: 0 },\n    'mezzo-soprano': { lineShift: 2 },\n    'baritone-c': { lineShift: 5 },\n    'baritone-f': { lineShift: 5 },\n    subbass: { lineShift: 7 },\n    french: { lineShift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, intVal: 0 },\n    CN: { index: 0, intVal: 0, accidental: 0xe261 /*accidentalNatural*/ },\n    'C#': { index: 0, intVal: 1, accidental: 0xe262 /*accidentalSharp*/ },\n    'C##': { index: 0, intVal: 2, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    CB: { index: 0, intVal: 11, accidental: 0xe260 /*accidentalFlat*/ },\n    CBB: { index: 0, intVal: 10, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    D: { index: 1, intVal: 2 },\n    DN: { index: 1, intVal: 2, accidental: 0xe261 /*accidentalNatural*/ },\n    'D#': { index: 1, intVal: 3, accidental: 0xe262 /*accidentalSharp*/ },\n    'D##': { index: 1, intVal: 4, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    DB: { index: 1, intVal: 1, accidental: 0xe260 /*accidentalFlat*/ },\n    DBB: { index: 1, intVal: 0, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    E: { index: 2, intVal: 4 },\n    EN: { index: 2, intVal: 4, accidental: 0xe261 /*accidentalNatural*/ },\n    'E#': { index: 2, intVal: 5, accidental: 0xe262 /*accidentalSharp*/ },\n    'E##': { index: 2, intVal: 6, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    EB: { index: 2, intVal: 3, accidental: 0xe260 /*accidentalFlat*/ },\n    EBB: { index: 2, intVal: 2, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    F: { index: 3, intVal: 5 },\n    FN: { index: 3, intVal: 5, accidental: 0xe261 /*accidentalNatural*/ },\n    'F#': { index: 3, intVal: 6, accidental: 0xe262 /*accidentalSharp*/ },\n    'F##': { index: 3, intVal: 7, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    FB: { index: 3, intVal: 4, accidental: 0xe260 /*accidentalFlat*/ },\n    FBB: { index: 3, intVal: 3, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    G: { index: 4, intVal: 7 },\n    GN: { index: 4, intVal: 7, accidental: 0xe261 /*accidentalNatural*/ },\n    'G#': { index: 4, intVal: 8, accidental: 0xe262 /*accidentalSharp*/ },\n    'G##': { index: 4, intVal: 9, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    GB: { index: 4, intVal: 6, accidental: 0xe260 /*accidentalFlat*/ },\n    GBB: { index: 4, intVal: 5, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    A: { index: 5, intVal: 9 },\n    AN: { index: 5, intVal: 9, accidental: 0xe261 /*accidentalNatural*/ },\n    'A#': { index: 5, intVal: 10, accidental: 0xe262 /*accidentalSharp*/ },\n    'A##': { index: 5, intVal: 11, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    AB: { index: 5, intVal: 8, accidental: 0xe260 /*accidentalFlat*/ },\n    ABB: { index: 5, intVal: 7, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    B: { index: 6, intVal: 11 },\n    BN: { index: 6, intVal: 11, accidental: 0xe261 /*accidentalNatural*/ },\n    'B#': { index: 6, intVal: 12, accidental: 0xe262 /*accidentalSharp*/ },\n    'B##': { index: 6, intVal: 13, accidental: 0xe263 /*accidentalDoubleSharp*/ },\n    BB: { index: 6, intVal: 10, accidental: 0xe260 /*accidentalFlat*/ },\n    BBB: { index: 6, intVal: 9, accidental: 0xe264 /*accidentalDoubleFlat*/ },\n    R: { index: 6 },\n    X: { index: 6 },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': '\\ue262' /*accidentalSharp*/,\n    '##': '\\ue263' /*accidentalDoubleSharp*/,\n    b: '\\ue260' /*accidentalFlat*/,\n    bb: '\\ue264' /*accidentalDoubleFlat*/,\n    n: '\\ue261' /*accidentalNatural*/,\n    '{': '\\ue26a' /*accidentalParensLeft*/,\n    '}': '\\ue26b' /*accidentalParensRight*/,\n    db: '\\ue281' /*accidentalThreeQuarterTonesFlatZimmermann*/,\n    d: '\\ue280' /*accidentalQuarterToneFlatStein*/,\n    '++': '\\ue283' /*accidentalThreeQuarterTonesSharpStein*/,\n    '+': '\\ue282' /*accidentalQuarterToneSharpStein*/,\n    '+-': '\\ue446' /*accidentalKucukMucennebSharp*/,\n    bs: '\\ue442' /*accidentalBakiyeFlat*/,\n    bss: '\\ue440' /*accidentalBuyukMucennebFlat*/,\n    o: '\\ue461' /*accidentalSori*/,\n    k: '\\ue460' /*accidentalKoron*/,\n    bbs: '\\ue447' /*accidentalBuyukMucennebSharp*/,\n    '++-': '\\ue447' /*accidentalBuyukMucennebSharp*/,\n    ashs: '\\ue447' /*accidentalBuyukMucennebSharp*/,\n    afhf: '\\ue447' /*accidentalBuyukMucennebSharp*/,\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        secondOnBottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spacedOutTetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spacedOutPentachord: [1, 2, 3, 2, 1],\n        verySpacedOutPentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spacedOutHexachord: [1, 3, 2, 1, 3, 2],\n        verySpacedOutHexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: '\\ue1e7' /*augmentationDot*/, betweenLines: true },\n    av: {\n        aboveCode: '\\ue4a6' /*articStaccatissimoAbove*/,\n        belowCode: '\\ue4a7' /*articStaccatissimoBelow*/,\n        betweenLines: true,\n    },\n    'a>': {\n        aboveCode: '\\ue4a0' /*articAccentAbove*/,\n        belowCode: '\\ue4a1' /*articAccentBelow*/,\n        betweenLines: true,\n    },\n    'a-': {\n        aboveCode: '\\ue4a4' /*articTenutoAbove*/,\n        belowCode: '\\ue4a5' /*articTenutoBelow*/,\n        betweenLines: true,\n    },\n    'a^': {\n        aboveCode: '\\ue4ac' /*articMarcatoAbove*/,\n        belowCode: '\\ue4ad' /*articMarcatoBelow*/,\n        betweenLines: false,\n    },\n    'a+': { code: '\\ue633' /*pluckedLeftHandPizzicato*/, betweenLines: false },\n    ao: {\n        aboveCode: '\\ue631' /*pluckedSnapPizzicatoAbove*/,\n        belowCode: '\\ue630' /*pluckedSnapPizzicatoBelow*/,\n        betweenLines: false,\n    },\n    ah: { code: '\\ue614' /*stringsHarmonic*/, betweenLines: false },\n    'a@': { aboveCode: '\\ue4c0' /*fermataAbove*/, belowCode: '\\ue4c1' /*fermataBelow*/, betweenLines: false },\n    'a@a': { code: '\\ue4c0' /*fermataAbove*/, betweenLines: false },\n    'a@u': { code: '\\ue4c1' /*fermataBelow*/, betweenLines: false },\n    'a@s': { aboveCode: '\\ue4c4' /*fermataShortAbove*/, belowCode: '\\ue4c5' /*fermataShortBelow*/, betweenLines: false },\n    'a@as': { code: '\\ue4c4' /*fermataShortAbove*/, betweenLines: false },\n    'a@us': { code: '\\ue4c5' /*fermataShortBelow*/, betweenLines: false },\n    'a@l': { aboveCode: '\\ue4c6' /*fermataLongAbove*/, belowCode: '\\ue4c7' /*fermataLongBelow*/, betweenLines: false },\n    'a@al': { code: '\\ue4c6' /*fermataLongAbove*/, betweenLines: false },\n    'a@ul': { code: '\\ue4c7' /*fermataLongBelow*/, betweenLines: false },\n    'a@vl': {\n        aboveCode: '\\ue4c8' /*fermataVeryLongAbove*/,\n        belowCode: '\\ue4c9' /*fermataVeryLongBelow*/,\n        betweenLines: false,\n    },\n    'a@avl': { code: '\\ue4c8' /*fermataVeryLongAbove*/, betweenLines: false },\n    'a@uvl': { code: '\\ue4c9' /*fermataVeryLongBelow*/, betweenLines: false },\n    'a|': { code: '\\ue612' /*stringsUpBow*/, betweenLines: false },\n    am: { code: '\\ue610' /*stringsDownBow*/, betweenLines: false },\n    'a,': { code: '\\ue805' /*pictChokeCymbal*/, betweenLines: false }, // Choked\n};\nconst ornaments = {\n    mordent: '\\ue56c' /*ornamentShortTrill*/,\n    mordentInverted: '\\ue56d' /*ornamentMordent*/,\n    turn: '\\ue567' /*ornamentTurn*/,\n    turnInverted: '\\ue569' /*ornamentTurnSlash*/,\n    tr: '\\ue566' /*ornamentTrill*/,\n    upprall: '\\ue5b5' /*ornamentPrecompSlideTrillDAnglebert*/,\n    downprall: '\\ue5c3' /*ornamentPrecompDoubleCadenceUpperPrefix*/,\n    prallup: '\\ue5bb' /*ornamentPrecompTrillSuffixDandrieu*/,\n    pralldown: '\\ue5c8' /*ornamentPrecompTrillLowerSuffix*/,\n    upmordent: '\\ue5b8' /*ornamentPrecompSlideTrillBach*/,\n    downmordent: '\\ue5c4' /*ornamentPrecompDoubleCadenceUpperPrefixTurn*/,\n    lineprall: '\\ue5b2' /*ornamentPrecompAppoggTrill*/,\n    prallprall: '\\ue56e' /*ornamentTremblement*/,\n    scoop: '\\ue5d0' /*brassScoop*/,\n    doit: '\\ue5d5' /*brassDoitMedium*/,\n    fall: '\\ue5d7' /*brassFallLipShort*/,\n    doitLong: '\\ue5d2' /*brassLiftMedium*/,\n    fallLong: '\\ue5de' /*brassFallRoughMedium*/,\n    bend: '\\ue5e3' /*brassBend*/,\n    plungerClosed: '\\ue5e5' /*brassMuteClosed*/,\n    plungerOpen: '\\ue5e7' /*brassMuteOpen*/,\n    flip: '\\ue5e1' /*brassFlip*/,\n    jazzTurn: '\\ue5e4' /*brassJazzTurn*/,\n    smear: '\\ue5e2' /*brassSmear*/,\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /** Use the provided key to look up a FontInfo in CommonMetrics. **/\n    static lookupMetricFontInfo(key) {\n        return {\n            family: Tables.lookupMetric(`${key}.fontFamily`),\n            size: Tables.lookupMetric(`${key}.fontSize`),\n            weight: Tables.lookupMetric(`${key}.fontWeight`),\n            style: Tables.lookupMetric(`${key}.fontStyle`),\n        };\n    }\n    /**\n     * Use the provided key to look up a value in CommonMetrics.\n     *\n     * @param key is a string separated by periods (e.g., `Stroke.text.fontFamily`).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     *\n     * For the key `Stroke.text.fontFamily`, check all of the following in order:\n     *   1) CommonMetrics.fontFamily\n     *   2) CommonMetrics.Stroke.fontFamily\n     *   3) CommonMetrics.Stroke.text.fontFamily\n     * Retrieve the value from the most specific key (i.e., prefer #3 over #2 over #1 in the above example).\n     */\n    // eslint-disable-next-line\n    static lookupMetric(key, defaultValue) {\n        var _a;\n        const keyParts = key.split('.');\n        const lastKeyPart = keyParts.pop(); // Use ! because keyParts is not empty, since ''.split('.') still returns [''].\n        // Start from root of CommonMetrics and go down as far as possible.\n        let curr = CommonMetrics;\n        let retVal = defaultValue;\n        while (curr) {\n            // Update retVal whenever we find a value assigned to a more specific key.\n            retVal = (_a = curr[lastKeyPart]) !== null && _a !== void 0 ? _a : retVal;\n            const keyPart = keyParts.shift();\n            if (keyPart) {\n                curr = curr[keyPart]; // Go down one level.\n            }\n            else {\n                break;\n            }\n        }\n        return retVal;\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octaveShift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    static keyProperties(keyOctaveGlyph, clef = 'treble', type = 'N', params) {\n        let options = { octaveShift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        type = type.toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        let octave = parseInt(pieces[1], 10);\n        // .octaveShift is the shift to compensate for clef 8va/8vb.\n        octave += -1 * options.octaveShift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).lineShift;\n        // Integer value for note arithmetic.\n        const intValue = typeof value.intVal !== 'undefined' ? octave * 12 + value.intVal : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        let code = '';\n        let glyphName = 'N';\n        if (pieces.length > 2 && pieces[2]) {\n            glyphName = pieces[2].toUpperCase();\n        }\n        else if (type !== 'N') {\n            glyphName = type;\n        }\n        else\n            glyphName = key;\n        code = this.codeNoteHead(glyphName, duration);\n        return {\n            key,\n            octave,\n            line,\n            intValue,\n            accidental: value.accidental,\n            code,\n            displaced: false,\n        };\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(accidental) {\n        var _a;\n        return (_a = accidentals[accidental]) !== null && _a !== void 0 ? _a : accidental;\n    }\n    static ornamentCodes(ornament) {\n        var _a;\n        return (_a = ornaments[ornament]) !== null && _a !== void 0 ? _a : ornament;\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.accidental) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        const notes = accidentalList[keySpec.accidental];\n        const accList = [];\n        for (let i = 0; i < keySpec.num; ++i) {\n            const line = notes[i];\n            accList.push({ type: keySpec.accidental, line });\n        }\n        return accList;\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                return '\\ue0d8' /*noteheadDiamondWhole*/;\n            case 'D1':\n                return '\\ue0d9' /*noteheadDiamondHalf*/;\n            case 'D2':\n                return '\\ue0db' /*noteheadDiamondBlack*/;\n            case 'D3':\n                return '\\ue0db' /*noteheadDiamondBlack*/;\n            /* Triangle */\n            case 'T0':\n                return '\\ue0bb' /*noteheadTriangleUpWhole*/;\n            case 'T1':\n                return '\\ue0bc' /*noteheadTriangleUpHalf*/;\n            case 'T2':\n                return '\\ue0be' /*noteheadTriangleUpBlack*/;\n            case 'T3':\n                return '\\ue0be' /*noteheadTriangleUpBlack*/;\n            /* Cross */\n            case 'X0':\n                return '\\ue0a7' /*noteheadXWhole*/;\n            case 'X1':\n                return '\\ue0a8' /*noteheadXHalf*/;\n            case 'X2':\n                return '\\ue0a9' /*noteheadXBlack*/;\n            case 'X3':\n                return '\\ue0b3' /*noteheadCircleX*/;\n            /* Square */\n            case 'S1':\n                return '\\ue0b8' /*noteheadSquareWhite*/;\n            case 'S2':\n                return '\\ue0b9' /*noteheadSquareBlack*/;\n            /* Rectangle */\n            case 'R1':\n                return '\\ue0b8' /*noteheadSquareWhite*/; // no smufl code\n            case 'R2':\n                return '\\ue0b8' /*noteheadSquareWhite*/; // no smufl code\n            case 'DO':\n                return '\\ue0be' /*noteheadTriangleUpBlack*/;\n            case 'RE':\n                return '\\ue0cb' /*noteheadMoonBlack*/;\n            case 'MI':\n                return '\\ue0db' /*noteheadDiamondBlack*/;\n            case 'FA':\n                return '\\ue0c0' /*noteheadTriangleLeftBlack*/;\n            case 'FAUP':\n                return '\\ue0c2' /*noteheadTriangleRightBlack*/;\n            case 'SO':\n                return '\\ue0a4' /*noteheadBlack*/;\n            case 'LA':\n                return '\\ue0b9' /*noteheadSquareBlack*/;\n            case 'TI':\n                return '\\ue0cd' /*noteheadTriangleRoundDownBlack*/;\n            case 'DI': // Diamond\n            case 'H': // Harmonics\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0d7' /*noteheadDiamondDoubleWhole*/;\n                    case '1':\n                        return '\\ue0d8' /*noteheadDiamondWhole*/;\n                    case '2':\n                        return '\\ue0d9' /*noteheadDiamondHalf*/;\n                    default:\n                        return '\\ue0db' /*noteheadDiamondBlack*/;\n                }\n            case 'X':\n            case 'M': // Muted\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0a6' /*noteheadXDoubleWhole*/;\n                    case '1':\n                        return '\\ue0a7' /*noteheadXWhole*/;\n                    case '2':\n                        return '\\ue0a8' /*noteheadXHalf*/;\n                    default:\n                        return '\\ue0a9' /*noteheadXBlack*/;\n                }\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0b0' /*noteheadCircleXDoubleWhole*/;\n                    case '1':\n                        return '\\ue0b1' /*noteheadCircleXWhole*/;\n                    case '2':\n                        return '\\ue0b2' /*noteheadCircleXHalf*/;\n                    default:\n                        return '\\ue0b3' /*noteheadCircleX*/;\n                }\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0e7' /*noteheadCircledDoubleWhole*/;\n                    case '1':\n                        return '\\ue0e6' /*noteheadCircledWhole*/;\n                    case '2':\n                        return '\\ue0e5' /*noteheadCircledHalf*/;\n                    default:\n                        return '\\ue0e4' /*noteheadCircledBlack*/;\n                }\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0a1' /*noteheadDoubleWholeSquare*/;\n                    case '1':\n                        return '\\ue0b8' /*noteheadSquareWhite*/;\n                    case '2':\n                        return '\\ue0b8' /*noteheadSquareWhite*/;\n                    default:\n                        return '\\ue0b9' /*noteheadSquareBlack*/;\n                }\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0ba' /*noteheadTriangleUpDoubleWhole*/;\n                    case '1':\n                        return '\\ue0bb' /*noteheadTriangleUpWhole*/;\n                    case '2':\n                        return '\\ue0bc' /*noteheadTriangleUpHalf*/;\n                    default:\n                        return '\\ue0be' /*noteheadTriangleUpBlack*/;\n                }\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0c3' /*noteheadTriangleDownDoubleWhole*/;\n                    case '1':\n                        return '\\ue0c4' /*noteheadTriangleDownWhole*/;\n                    case '2':\n                        return '\\ue0c5' /*noteheadTriangleDownHalf*/;\n                    default:\n                        return '\\ue0c7' /*noteheadTriangleDownBlack*/;\n                }\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0d5' /*noteheadSlashedDoubleWhole1*/;\n                    case '1':\n                        return '\\ue0d3' /*noteheadSlashedWhole1*/;\n                    case '2':\n                        return '\\ue0d1' /*noteheadSlashedHalf1*/;\n                    default:\n                        return '\\ue0cf' /*noteheadSlashedBlack1*/;\n                }\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0d6' /*noteheadSlashedDoubleWhole2*/;\n                    case '1':\n                        return '\\ue0d4' /*noteheadSlashedWhole2*/;\n                    case '2':\n                        return '\\ue0d2' /*noteheadSlashedHalf2*/;\n                    default:\n                        return '\\ue0d0' /*noteheadSlashedBlack2*/;\n                }\n            case 'R':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue4e2' /*restDoubleWhole*/;\n                    case '1':\n                        return '\\ue4e3' /*restWhole*/;\n                    case '2':\n                        return '\\ue4e4' /*restHalf*/;\n                    case '4':\n                        return '\\ue4e5' /*restQuarter*/;\n                    case '8':\n                        return '\\ue4e6' /*rest8th*/;\n                    case '16':\n                        return '\\ue4e7' /*rest16th*/;\n                    case '32':\n                        return '\\ue4e8' /*rest32nd*/;\n                    case '64':\n                        return '\\ue4e9' /*rest64th*/;\n                    case '128':\n                        return '\\ue4ea' /*rest128th*/;\n                }\n                break;\n            case 'S':\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue10a' /*noteheadSlashWhiteDoubleWhole*/;\n                    case '1':\n                        return '\\ue102' /*noteheadSlashWhiteWhole*/;\n                    case '2':\n                        return '\\ue103' /*noteheadSlashWhiteHalf*/;\n                    default:\n                        return '\\ue100' /*noteheadSlashVerticalEnds*/;\n                }\n            default:\n                switch (duration) {\n                    case '1/2':\n                        return '\\ue0a0' /*noteheadDoubleWhole*/;\n                    case '1':\n                        return '\\ue0a2' /*noteheadWhole*/;\n                    case '2':\n                        return '\\ue0a3' /*noteheadHalf*/;\n                    default:\n                        return '\\ue0a4' /*noteheadBlack*/;\n                }\n        }\n        return Glyphs.null;\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nTables.durationCodes = {\n    '1/2': {\n        stem: false,\n    },\n    1: {\n        stem: false,\n    },\n    2: {\n        stem: true,\n    },\n    4: {\n        stem: true,\n    },\n    8: {\n        stem: true,\n        beamCount: 1,\n        stemBeamExtension: 0,\n        codeFlagUp: '\\ue240' /*flag8thUp*/,\n    },\n    16: {\n        beamCount: 2,\n        stemBeamExtension: 0,\n        stem: true,\n        codeFlagUp: '\\ue242' /*flag16thUp*/,\n    },\n    32: {\n        beamCount: 3,\n        stemBeamExtension: 7.5,\n        stem: true,\n        codeFlagUp: '\\ue244' /*flag32ndUp*/,\n    },\n    64: {\n        beamCount: 4,\n        stemBeamExtension: 15,\n        stem: true,\n        codeFlagUp: '\\ue246' /*flag64thUp*/,\n    },\n    128: {\n        beamCount: 5,\n        stemBeamExtension: 22.5,\n        stem: true,\n        codeFlagUp: '\\ue248' /*flag128thUp*/,\n    },\n};\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: '\\u266f',\n    // ♭ accidental flat\n    flat: '\\u266d',\n    // ♮ accidental natural\n    natural: '\\u266e',\n    // △ major seventh\n    triangle: '\\u25b3',\n    // ø half-diminished\n    'o-with-slash': '\\u00f8',\n    // ° diminished\n    degrees: '\\u00b0',\n    // ○ diminished\n    circle: '\\u25cb',\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    numBeats: 4,\n    beatValue: 4,\n    resolution: RESOLUTION,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _Element_context, _Element_attrs, _Element_txtCanvas;\nimport { BoundingBox } from './boundingbox';\nimport { Font } from './font';\nimport { Registry } from './registry';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, prefix, RuntimeError } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n *\n * The Element handles style and font properties for the Element and any child\n * elements, along with working with the Registry to create unique ids.\n *\n * The `text` is a series of unicode characters (including SMuFL codes).\n * The `textFont` property contains information required to style the text (i.e., font family, size, weight, and style).\n * This font family is a comma separated list of fonts.\n * The method `measureText` calculates the `textMetrics`, `boundingBox`, `height` and `width` of the `text`.\n * The method `renderText(...)` will render the text using the provided context and coordinates,\n * taking `xShift` and `yShift` into account.\n */\nexport class Element {\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor(category) {\n        var _b;\n        // Element objects keep a list of children that they are responsible for.\n        // Children inherit the style from their parents (see: setGroupStyle(s)).\n        this.children = [];\n        _Element_context.set(this, void 0);\n        _Element_attrs.set(this, void 0);\n        this.text = '';\n        this.textMetrics = {\n            fontBoundingBoxAscent: 0,\n            fontBoundingBoxDescent: 0,\n            actualBoundingBoxAscent: 0,\n            actualBoundingBoxDescent: 0,\n            actualBoundingBoxLeft: 0,\n            actualBoundingBoxRight: 0,\n            width: 0,\n        };\n        this.height = 0;\n        this.width = 0;\n        this.xShift = 0;\n        this.yShift = 0;\n        this.x = 0;\n        this.y = 0;\n        __classPrivateFieldSet(this, _Element_attrs, {\n            id: Element.newID(),\n            type: category !== null && category !== void 0 ? category : this.constructor.CATEGORY,\n            class: '',\n        }, \"f\");\n        this.rendered = false;\n        this.textFont = Tables.lookupMetricFontInfo(__classPrivateFieldGet(this, _Element_attrs, \"f\").type);\n        // If a default registry exist, then register with it right away.\n        (_b = Registry.getDefaultRegistry()) === null || _b === void 0 ? void 0 : _b.register(this);\n    }\n    /**\n     * Adds a child Element to the Element, which lets it inherit the\n     * same style as the parent when setGroupStyle() is called.\n     *\n     * Examples of children are noteheads and stems.  Modifiers such\n     * as Accidentals are generally not set as children.\n     *\n     * Note that StaveNote calls setGroupStyle() when setStyle() is called.\n     */\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return __classPrivateFieldGet(this, _Element_attrs, \"f\").type;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = __classPrivateFieldGet(this, _Element_context, \"f\"), style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = __classPrivateFieldGet(this, _Element_context, \"f\"), style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element's style (see `getStyle()` and `setStyle()`)\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Draw an element. */\n    draw() {\n        throw new RuntimeError('Element', 'Draw not defined');\n    }\n    /** Check if it has a class label (An element can have multiple class labels). */\n    hasClass(className) {\n        var _b;\n        if (!__classPrivateFieldGet(this, _Element_attrs, \"f\").class)\n            return false;\n        return ((_b = __classPrivateFieldGet(this, _Element_attrs, \"f\").class) === null || _b === void 0 ? void 0 : _b.split(' ').indexOf(className)) !== -1;\n    }\n    /** Add a class label (An element can have multiple class labels). */\n    addClass(className) {\n        var _b;\n        if (this.hasClass(className))\n            return this;\n        if (!__classPrivateFieldGet(this, _Element_attrs, \"f\").class)\n            __classPrivateFieldGet(this, _Element_attrs, \"f\").class = `${className}`;\n        else\n            __classPrivateFieldGet(this, _Element_attrs, \"f\").class = `${__classPrivateFieldGet(this, _Element_attrs, \"f\").class} ${className}`;\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: __classPrivateFieldGet(this, _Element_attrs, \"f\").id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels). */\n    removeClass(className) {\n        var _b, _c;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_b = __classPrivateFieldGet(this, _Element_attrs, \"f\").class) === null || _b === void 0 ? void 0 : _b.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            __classPrivateFieldGet(this, _Element_attrs, \"f\").class = arr.join(' ');\n        }\n        (_c = this.registry) === null || _c === void 0 ? void 0 : _c.onUpdate({\n            id: __classPrivateFieldGet(this, _Element_attrs, \"f\").id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return __classPrivateFieldGet(this, _Element_attrs, \"f\");\n    }\n    /** Return an attribute, such as 'id', 'type' or 'class'. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return __classPrivateFieldGet(this, _Element_attrs, \"f\")[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(__classPrivateFieldGet(this, _Element_attrs, \"f\").id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute such as 'id', 'class', or 'type'. */\n    setAttribute(name, value) {\n        var _b;\n        const oldID = __classPrivateFieldGet(this, _Element_attrs, \"f\").id;\n        const oldValue = __classPrivateFieldGet(this, _Element_attrs, \"f\")[name];\n        __classPrivateFieldGet(this, _Element_attrs, \"f\")[name] = value;\n        // Register with old id to support id changes.\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context, such as an SVGContext or CanvasContext object. */\n    getContext() {\n        return __classPrivateFieldGet(this, _Element_context, \"f\");\n    }\n    /** Set the context to an SVGContext or CanvasContext object */\n    setContext(context) {\n        __classPrivateFieldSet(this, _Element_context, context, \"f\");\n        return this;\n    }\n    /** Validate and return the rendering context. */\n    checkContext() {\n        return defined(__classPrivateFieldGet(this, _Element_context, \"f\"), 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial') that will be applied\n     * to text (not glyphs).\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string for the text font. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's text font family, size, weight, style\n     * (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * This attribute does not determine the font used for musical Glyphs like treble clefs.\n     *\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        const defaultTextFont = Tables.lookupMetricFontInfo(__classPrivateFieldGet(this, _Element_attrs, \"f\").type);\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        this.measureText();\n        return this;\n    }\n    /**\n     * Get the css string describing this Element's text font. e.g.,\n     * 'bold 10pt Arial'.\n     */\n    getFont() {\n        return Font.toCSSString(this.textFont);\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return this.textFont;\n    }\n    /** Set the current FontInfo object. */\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /** @returns a CSS font-size string (e.g., '18pt', '12px', '1em'). */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /** @returns the font size in `pt`. */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /** @returns the font size in `px`. */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /** @returns a CSS font-style string (e.g., 'italic'). */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    /** Set the font style. */\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    /** Set the font weight. */\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n    /** Get element width. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set element width. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the X coordinate. */\n    getX() {\n        return this.x;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Shift element down `yShift` pixels. Negative values shift up. */\n    setYShift(yShift) {\n        this.yShift = yShift;\n        return this;\n    }\n    /** Get shift element `yShift`. */\n    getYShift() {\n        return this.yShift;\n    }\n    /** Set shift element right `xShift` pixels. Negative values shift left. */\n    setXShift(xShift) {\n        this.xShift = xShift;\n        return this;\n    }\n    /** Get shift element `xShift`. */\n    getXShift() {\n        return this.xShift;\n    }\n    /** Set element text. */\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    /** Get element text. */\n    getText() {\n        return this.text;\n    }\n    /** Render the element text. */\n    renderText(ctx, xPos, yPos) {\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText(this.text, xPos + this.x + this.xShift, yPos + this.y + this.yShift);\n        this.children.forEach((child) => {\n            ctx.setFont(child.textFont);\n            ctx.fillText(child.text, xPos + child.x + child.xShift, yPos + child.y + child.yShift);\n        });\n        ctx.restore();\n    }\n    /** Measure the text using the textFont. */\n    measureText() {\n        let txtCanvas = __classPrivateFieldGet(Element, _a, \"f\", _Element_txtCanvas);\n        if (!txtCanvas) {\n            // Create the canvas element that will be used to measure text in the event\n            // of a cache miss.\n            txtCanvas = document.createElement('canvas');\n            __classPrivateFieldSet(Element, _a, txtCanvas, \"f\", _Element_txtCanvas);\n        }\n        const context = txtCanvas.getContext('2d');\n        if (!context)\n            throw new RuntimeError('Font', 'No txt context');\n        context.font = Font.toCSSString(Font.validate(this.textFont));\n        this.textMetrics = context.measureText(this.text);\n        const ascent = this.textMetrics.actualBoundingBoxAscent;\n        this.boundingBox = new BoundingBox(0, -ascent, this.textMetrics.width, this.textMetrics.actualBoundingBoxDescent + ascent);\n        this.height = this.boundingBox.getH();\n        this.width = this.textMetrics.width;\n        return this.textMetrics;\n    }\n    /** Get the text metrics. */\n    getTextMetrics() {\n        return this.textMetrics;\n    }\n    /** Get the text height. */\n    getHeight() {\n        return this.height;\n    }\n    setOriginX(x) {\n        const bbox = defined(this.boundingBox);\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.xShift = -xShift;\n    }\n    setOriginY(y) {\n        const bbox = defined(this.boundingBox);\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.yShift = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n}\n_a = Element, _Element_context = new WeakMap(), _Element_attrs = new WeakMap();\nElement.ID = 1000;\n/** Canvas used to measure text. */\n_Element_txtCanvas = { value: void 0 };\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Modifier_spacingFromNextModifier, _Modifier_modifierContext;\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        _Modifier_spacingFromNextModifier.set(this, void 0);\n        _Modifier_modifierContext.set(this, void 0);\n        this.width = 0;\n        // The `textLine` is reserved space above or below a stave.\n        this.textLine = 0;\n        this.position = Modifier.Position.LEFT;\n        __classPrivateFieldSet(this, _Modifier_spacingFromNextModifier, 0, \"f\");\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return __classPrivateFieldGet(this, _Modifier_modifierContext, \"f\");\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(__classPrivateFieldGet(this, _Modifier_modifierContext, \"f\"), 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        __classPrivateFieldSet(this, _Modifier_modifierContext, c, \"f\");\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `textLine` for the modifier. */\n    setTextLine(line) {\n        this.textLine = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.yShift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        __classPrivateFieldSet(this, _Modifier_spacingFromNextModifier, x, \"f\");\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return __classPrivateFieldGet(this, _Modifier_spacingFromNextModifier, \"f\");\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.xShift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.xShift -= x;\n        }\n        else {\n            this.xShift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.xShift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n_Modifier_spacingFromNextModifier = new WeakMap(), _Modifier_modifierContext = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonicalNotes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get rootValues() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indexes of the root notes.*/\n    static get rootIndexes() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonicalNotes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonicIntervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonicAccidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { rootIndex: 0, intVal: 0 },\n            cn: { rootIndex: 0, intVal: 0 },\n            'c#': { rootIndex: 0, intVal: 1 },\n            'c##': { rootIndex: 0, intVal: 2 },\n            cb: { rootIndex: 0, intVal: 11 },\n            cbb: { rootIndex: 0, intVal: 10 },\n            d: { rootIndex: 1, intVal: 2 },\n            dn: { rootIndex: 1, intVal: 2 },\n            'd#': { rootIndex: 1, intVal: 3 },\n            'd##': { rootIndex: 1, intVal: 4 },\n            db: { rootIndex: 1, intVal: 1 },\n            dbb: { rootIndex: 1, intVal: 0 },\n            e: { rootIndex: 2, intVal: 4 },\n            en: { rootIndex: 2, intVal: 4 },\n            'e#': { rootIndex: 2, intVal: 5 },\n            'e##': { rootIndex: 2, intVal: 6 },\n            eb: { rootIndex: 2, intVal: 3 },\n            ebb: { rootIndex: 2, intVal: 2 },\n            f: { rootIndex: 3, intVal: 5 },\n            fn: { rootIndex: 3, intVal: 5 },\n            'f#': { rootIndex: 3, intVal: 6 },\n            'f##': { rootIndex: 3, intVal: 7 },\n            fb: { rootIndex: 3, intVal: 4 },\n            fbb: { rootIndex: 3, intVal: 3 },\n            g: { rootIndex: 4, intVal: 7 },\n            gn: { rootIndex: 4, intVal: 7 },\n            'g#': { rootIndex: 4, intVal: 8 },\n            'g##': { rootIndex: 4, intVal: 9 },\n            gb: { rootIndex: 4, intVal: 6 },\n            gbb: { rootIndex: 4, intVal: 5 },\n            a: { rootIndex: 5, intVal: 9 },\n            an: { rootIndex: 5, intVal: 9 },\n            'a#': { rootIndex: 5, intVal: 10 },\n            'a##': { rootIndex: 5, intVal: 11 },\n            ab: { rootIndex: 5, intVal: 8 },\n            abb: { rootIndex: 5, intVal: 7 },\n            b: { rootIndex: 6, intVal: 11 },\n            bn: { rootIndex: 6, intVal: 11 },\n            'b#': { rootIndex: 6, intVal: 0 },\n            'b##': { rootIndex: 6, intVal: 1 },\n            bb: { rootIndex: 6, intVal: 10 },\n            bbb: { rootIndex: 6, intVal: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonicalNotes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonicIntervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.intVal;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonicalNotes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonicIntervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverseInterval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverseInterval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverseInterval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.rootIndexes[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _a, _Accidental_checkCollision;\nimport { Fraction } from './fraction';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const noteheadAccidentalPadding = Tables.lookupMetric('Accidental.noteheadAccidentalPadding');\n        const leftShift = state.leftShift + noteheadAccidentalPadding;\n        const accidentalSpacing = Tables.lookupMetric('Accidental.accidentalSpacing');\n        const additionalPadding = Tables.lookupMetric('Accidental.leftPadding'); // padding to the left of all accidentals\n        const accidentalLinePositionsAndSpaceNeeds = [];\n        let prevNote = undefined;\n        let extraXSpaceNeededForLeftDisplacedNotehead = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const accidental = accidentals[i];\n            const note = accidental.getNote();\n            const stave = note.getStave();\n            const index = accidental.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    // If the current extra left-space needed isn't as big as this note's,\n                    // then we need to use this note's.\n                    extraXSpaceNeededForLeftDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), extraXSpaceNeededForLeftDisplacedNotehead);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    y,\n                    line: accLine,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                    spacingBetweenStaveLines: lineSpace,\n                });\n            }\n            else {\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    line: props.line,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    accidental: accidental,\n                });\n            }\n        }\n        // Sort accidentals by line number.\n        accidentalLinePositionsAndSpaceNeeds.sort((a, b) => b.line - a.line);\n        const staveLineAccidentalLayoutMetrics = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let maxExtraXSpaceNeeded = 0;\n        // Create an array of unique line numbers (staveLineAccidentalLayoutMetrics)\n        // from accidentalLinePositionsAndSpaceNeeds\n        for (let i = 0; i < accidentalLinePositionsAndSpaceNeeds.length; i++) {\n            const accidentalLinePositionAndSpaceNeeds = accidentalLinePositionsAndSpaceNeeds[i];\n            const accidentalType = accidentalLinePositionAndSpaceNeeds.accidental.type;\n            const priorLineMetric = staveLineAccidentalLayoutMetrics[staveLineAccidentalLayoutMetrics.length - 1];\n            let currentLineMetric;\n            // if this is the first line, or a new line, add a staveLineAccidentalLayoutMetric\n            if (!priorLineMetric || (priorLineMetric === null || priorLineMetric === void 0 ? void 0 : priorLineMetric.line) !== accidentalLinePositionAndSpaceNeeds.line) {\n                currentLineMetric = {\n                    line: accidentalLinePositionAndSpaceNeeds.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                };\n                staveLineAccidentalLayoutMetrics.push(currentLineMetric);\n            }\n            else {\n                currentLineMetric = priorLineMetric;\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            if (accidentalType !== 'b' && accidentalType !== 'bb') {\n                currentLineMetric.flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (accidentalType !== '##') {\n                currentLineMetric.dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            currentLineMetric.numAcc++;\n            // Track the total xOffset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            currentLineMetric.width += accidentalLinePositionAndSpaceNeeds.accidental.getWidth() + accidentalSpacing;\n            // if this extraXSpaceNeeded is the largest so far, use it as the starting point for\n            // all accidental columns.\n            maxExtraXSpaceNeeded = Math.max(accidentalLinePositionAndSpaceNeeds.extraXSpaceNeeded, maxExtraXSpaceNeeded);\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < staveLineAccidentalLayoutMetrics.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < staveLineAccidentalLayoutMetrics.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (__classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, staveLineAccidentalLayoutMetrics[groupEnd], staveLineAccidentalLayoutMetrics[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => staveLineAccidentalLayoutMetrics[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !__classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = __classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, staveLineAccidentalLayoutMetrics[groupStart], staveLineAccidentalLayoutMetrics[groupEnd])\n                ? 'a'\n                : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'secondOnBottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spacedOutTetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spacedOutPentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'verySpacedOutPentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spacedOutHexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'verySpacedOutHexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < staveLineAccidentalLayoutMetrics.length; line++) {\n                        if (__classPrivateFieldGet(this, _a, \"m\", _Accidental_checkCollision).call(this, staveLineAccidentalLayoutMetrics[line], staveLineAccidentalLayoutMetrics[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to xOffsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger xOffset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = leftShift + maxExtraXSpaceNeeded;\n        columnXOffsets[0] = leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth + maxExtraXSpaceNeeded;\n                accidentalLinePositionsAndSpaceNeeds[accCount].accidental.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accidentalLinePositionsAndSpaceNeeds[accCount].accidental.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.leftShift = totalShift + additionalPadding;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        this.text = '';\n        if (!this.cautionary) {\n            this.text += Tables.accidentalCodes(this.type);\n            this.textFont.size = Tables.lookupMetric('Accidental.fontSize');\n        }\n        else {\n            this.text += Tables.accidentalCodes('{');\n            this.text += Tables.accidentalCodes(this.type);\n            this.text += Tables.accidentalCodes('}');\n            this.textFont.size = Tables.lookupMetric('Accidental.cautionary.fontSize');\n        }\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(this.note)) {\n            this.textFont.size = Tables.lookupMetric('Accidental.grace.fontSize');\n        }\n        this.measureText();\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        this.reset();\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        const accX = start.x;\n        const accY = start.y;\n        L('Rendering: ', type, accX, accY);\n        this.renderText(ctx, accX - this.width, accY);\n    }\n}\n_a = Accidental, _Accidental_checkCollision = function _Accidental_checkCollision(line1, line2) {\n    let clearance = line2.line - line1.line;\n    let clearanceRequired = 3;\n    // But less clearance is required for certain accidentals: b, bb and ##.\n    if (clearance > 0) {\n        // then line 2 is on top\n        clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n        if (line1.dblSharpLine)\n            clearance -= 0.5;\n    }\n    else {\n        // line 1 is on top\n        clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n        if (line2.dblSharpLine)\n            clearance -= 0.5;\n    }\n    const collision = Math.abs(clearance) < clearanceRequired;\n    L('Line1, Line2, Collision: ', line1.line, line2.line, collision);\n    return collision;\n};\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (2 + Font.convertSizeToPixelValue(annotation.textFont.size)) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphWidth();\n            // Get the text width from the font metrics.\n            const textWidth = annotation.getWidth();\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.renderOptions.drawStem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.topTextLine + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.topTextLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.topTextLine);\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.textLine + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.textLine = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.textLine);\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.textLine);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.measureText();\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        const textWidth = this.getWidth();\n        const textHeight = Font.convertSizeToPixelValue(this.textFont.size);\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - textWidth;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - textWidth / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - textWidth / 2;\n        }\n        let stemExt = {};\n        let spacing = 0;\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (hasStem) {\n            stemExt = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE + textHeight;\n            if (hasStem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stemExt.topY + textHeight + spacing * this.textLine);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.textLine) - 1;\n            const yb = stave.getYForBottomText(this.textLine);\n            y = yt + (yb - yt) / 2 + textHeight / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.textLine + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (hasStem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stemExt.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stemExt.topY - spacing * (this.textLine + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + textHeight / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        this.renderText(ctx, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        super();\n        this.stemUpYOffset = 0;\n        this.stemDownYOffset = 0;\n        this.stemUpYBaseOffset = 0;\n        this.stemDownYBaseOffset = 0;\n        // Default notehead x bounds\n        this.xBegin = (_a = options === null || options === void 0 ? void 0 : options.xBegin) !== null && _a !== void 0 ? _a : 0;\n        this.xEnd = (_b = options === null || options === void 0 ? void 0 : options.xEnd) !== null && _b !== void 0 ? _b : 0;\n        // Y bounds for top/bottom most notehead\n        this.yTop = (_c = options === null || options === void 0 ? void 0 : options.yTop) !== null && _c !== void 0 ? _c : 0;\n        this.yBottom = (_d = options === null || options === void 0 ? void 0 : options.yBottom) !== null && _d !== void 0 ? _d : 0;\n        // Stem top extension\n        this.stemExtension = (_e = options === null || options === void 0 ? void 0 : options.stemExtension) !== null && _e !== void 0 ? _e : 0;\n        // Direction of the stem\n        this.stemDirection = (_f = options === null || options === void 0 ? void 0 : options.stemDirection) !== null && _f !== void 0 ? _f : 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (_g = options === null || options === void 0 ? void 0 : options.stemletHeight) !== null && _g !== void 0 ? _g : 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        var _a, _b, _c, _d;\n        // Changing where the stem meets the head\n        this.stemUpYOffset = (_a = options === null || options === void 0 ? void 0 : options.stemUpYOffset) !== null && _a !== void 0 ? _a : 0;\n        this.stemDownYOffset = (_b = options === null || options === void 0 ? void 0 : options.stemDownYOffset) !== null && _b !== void 0 ? _b : 0;\n        this.stemUpYBaseOffset = (_c = options === null || options === void 0 ? void 0 : options.stemUpYBaseOffset) !== null && _c !== void 0 ? _c : 0;\n        this.stemDownYBaseOffset = (_d = options === null || options === void 0 ? void 0 : options.stemDownYBaseOffset) !== null && _d !== void 0 ? _d : 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(xBegin, xEnd) {\n        this.xBegin = xBegin;\n        this.xEnd = xEnd;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stemDirection = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stemExtension = ext;\n    }\n    getExtension() {\n        return this.stemExtension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(yTop, yBottom) {\n        this.yTop = yTop;\n        this.yBottom = yBottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const yOffset = this.stemDirection === Stem.UP ? this.stemUpYOffset : this.stemDownYOffset;\n        const unsignedHeight = this.yBottom - this.yTop + (Stem.HEIGHT - yOffset + this.stemExtension); // parentheses just for grouping.\n        return unsignedHeight * this.stemDirection;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stemDirection === Stem.UP;\n        const ys = [this.yTop, this.yBottom];\n        const stemHeight = Stem.HEIGHT + this.stemExtension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stemDirection;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.lookupMetric('Stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stemX;\n        let stemY;\n        const stemDirection = this.stemDirection;\n        let yBaseOffset = 0;\n        if (stemDirection === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stemX = this.xBegin;\n            stemY = this.yTop + this.stemDownYOffset;\n            yBaseOffset = this.stemDownYBaseOffset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stemX = this.xEnd;\n            stemY = this.yBottom - this.stemUpYOffset;\n            yBaseOffset = this.stemUpYBaseOffset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.yTop, 'Bottom Y: ', this.yBottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stemDirection : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stemX, stemY - stemletYOffset + yBaseOffset);\n        ctx.lineTo(stemX, stemY - stemHeight - this.renderHeightAdjustment * stemDirection);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns.\n// MIT License\nimport { Glyphs } from './glyphs';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nexport function getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nexport function getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nexport function getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), articulation.height / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.topTextLine, ABOVE);\n                const curTop = noteLine + state.topTextLine + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.betweenLines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.textLine, BELOW);\n                const curBottom = noteLine + state.textLine + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.betweenLines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.textLine);\n                state.textLine += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.leftShift + state.rightShift), 0));\n        state.leftShift += overlap / 2;\n        state.rightShift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts` or Glyph code.\n     *\n     * Notes default positions (see https://w3c.github.io/smufl/latest/tables/articulation.html):\n     * - Even codes will be positioned ABOVE\n     * - Odd codes will be positioned BELOW\n     */\n    constructor(type) {\n        var _a;\n        super();\n        this.heightShift = 0;\n        this.height = 0;\n        this.type = type;\n        this.position = ABOVE;\n        if (!Tables.articulationCodes(this.type)) {\n            if (((_a = this.type.codePointAt(0)) !== null && _a !== void 0 ? _a : 0) % 2 === 0)\n                this.position = ABOVE;\n            else\n                this.position = BELOW;\n        }\n        this.articulation = { betweenLines: false };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        // Use type as glyph code, if not defined as articulation code\n        if (!this.articulation) {\n            this.articulation = { code: this.type, betweenLines: false };\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) ||\n            this.articulation.code ||\n            Glyphs.null;\n        this.text = code;\n        this.measureText();\n    }\n    /** Set if articulation should be rendered between lines. */\n    setBetweenLines(betweenLines = true) {\n        this.articulation.betweenLines = betweenLines;\n        return this;\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, textLine } = this;\n        const canSitBetweenLines = this.articulation.betweenLines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        let y = {\n            [ABOVE]: () => {\n                this.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                this.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                this.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        this.renderText(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Tickable_preFormatted, _Tickable_postFormatted;\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    constructor() {\n        super();\n        _Tickable_preFormatted.set(this, false);\n        _Tickable_postFormatted.set(this, false);\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.alignCenter = false;\n        this.centerXShift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignoreTicks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignoreTicks = flag;\n        return this;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!__classPrivateFieldGet(this, _Tickable_preFormatted, \"f\")) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.xShift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.centerXShift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.centerXShift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.alignCenter;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(alignCenter) {\n        this.alignCenter = alignCenter;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return a list of Tuplets. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet (if this is not provided, all tuplets are reset).\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        __classPrivateFieldSet(this, _Tickable_preFormatted, false, \"f\");\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        __classPrivateFieldSet(this, _Tickable_preFormatted, false, \"f\");\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        __classPrivateFieldSet(this, _Tickable_preFormatted, false, \"f\");\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (__classPrivateFieldGet(this, _Tickable_preFormatted, \"f\"))\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        __classPrivateFieldSet(this, _Tickable_preFormatted, value, \"f\");\n    }\n    get preFormatted() {\n        return __classPrivateFieldGet(this, _Tickable_preFormatted, \"f\");\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (__classPrivateFieldGet(this, _Tickable_postFormatted, \"f\"))\n            return this;\n        __classPrivateFieldSet(this, _Tickable_postFormatted, true, \"f\");\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        __classPrivateFieldSet(this, _Tickable_postFormatted, value, \"f\");\n    }\n    get postFormatted() {\n        return __classPrivateFieldGet(this, _Tickable_postFormatted, \"f\");\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n_Tickable_preFormatted = new WeakMap(), _Tickable_postFormatted = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// @author: Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n    drawVerticalBar(stave, x, doubleBar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (doubleBar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let xShift = 3;\n        if (!begin) {\n            xShift = -5;\n        }\n        staveCtx.fillRect(x + xShift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dotRadius = 2;\n        // Shift dots left or right\n        if (begin) {\n            xShift += 4;\n        }\n        else {\n            xShift -= 4;\n        }\n        const dotX = x + xShift + dotRadius / 2;\n        // calculate the y offset based on number of stave lines\n        let yOffset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        yOffset = yOffset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dotY = topY + yOffset + dotRadius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dotY += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dotX, dotY, dotRadius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// @author Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Element } from './element';\nimport { Font } from './font';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport class ChordSymbolBlock extends Element {\n    constructor(text, symbolModifier, xShift, yShift, vAlign) {\n        super();\n        this.text = text;\n        this.symbolModifier = symbolModifier;\n        this.xShift = xShift;\n        this.yShift = yShift;\n        this.vAlign = vAlign;\n    }\n    isSuperscript() {\n        return this.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    isSubscript() {\n        return this.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return Tables.lookupMetric('ChordSymbol.superSubRatio');\n    }\n    static get spacingBetweenBlocks() {\n        return Tables.lookupMetric('ChordSymbol.spacing');\n    }\n    static get superscriptOffset() {\n        return Tables.lookupMetric('ChordSymbol.superscriptOffset');\n    }\n    static get subscriptOffset() {\n        return Tables.lookupMetric('ChordSymbol.subscriptOffset');\n    }\n    static get minPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const note = symbol.checkAttachedNote();\n            let lineSpaces = 1;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = block.isSuperscript();\n                const sub = block.isSubscript();\n                block.setXShift(width);\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If a subscript immediately follows a superscript block, try to\n                // overlay them.\n                if (sub && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (prev.isSuperscript()) {\n                        // slide the symbol over so it lines up with superscript\n                        block.setXShift(width - prev.getWidth() - ChordSymbol.minPadding);\n                        block.vAlign = true;\n                        width +=\n                            -prev.getWidth() -\n                                ChordSymbol.minPadding +\n                                (prev.getWidth() > block.getWidth() ? prev.getWidth() - block.getWidth() : 0);\n                    }\n                }\n                width += block.getWidth() + ChordSymbol.minPadding;\n            }\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.topTextLine);\n                state.topTextLine += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.textLine + 1);\n                state.textLine += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth()) {\n                if (isStemmableNote(note)) {\n                    const glyphWidth = note.getGlyphWidth();\n                    if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                        maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                        leftWidth = Math.max(leftWidth, width) + ChordSymbol.minPadding;\n                    }\n                    else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                        maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                        rightWidth = Math.max(rightWidth, width);\n                    }\n                    else {\n                        leftWidth = Math.max(leftWidth, width / 2) + ChordSymbol.minPadding;\n                        rightWidth = Math.max(rightWidth, width / 2);\n                        maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                        maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                    }\n                }\n                symbol.width = width;\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.rightShift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.leftShift, 0));\n        state.leftShift += leftOverlap;\n        state.rightShift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.reportWidth = true;\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * Font.convertSizeToPixelValue(this.textFont.size);\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * Font.convertSizeToPixelValue(this.textFont.size);\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    getSymbolBlock(params = {}) {\n        var _a, _b;\n        const symbolBlock = new ChordSymbolBlock((_a = params.text) !== null && _a !== void 0 ? _a : '', (_b = params.symbolModifier) !== null && _b !== void 0 ? _b : SymbolModifiers.NONE, 0, 0, false);\n        if (symbolBlock.isSubscript()) {\n            symbolBlock.setYShift(this.subscriptOffset);\n        }\n        if (symbolBlock.isSuperscript()) {\n            symbolBlock.setYShift(this.superscriptOffset);\n        }\n        if (symbolBlock.isSubscript() || symbolBlock.isSuperscript()) {\n            const { family, size, weight, style } = this.textFont;\n            const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n            symbolBlock.setFont(family, smallerFontSize, weight, style);\n        }\n        else {\n            symbolBlock.setFont(this.fontInfo);\n        }\n        symbolBlock.measureText();\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    addText(text, parameters = {}) {\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        return this.addTextSuperscript(ChordSymbol.glyphs[glyph]);\n    }\n    /** Add a glyph block. */\n    addGlyph(glyph, params = {}) {\n        return this.addText(ChordSymbol.glyphs[glyph], params);\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            const glyph = ChordSymbol.glyphs[char];\n            if (glyph) {\n                str += glyph;\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    addLine(params = {}) {\n        // Two csymMinor glyphs next to each other.\n        return this.addText('\\ue874\\ue874' /*{csymMinor}{csymMinor}*/, params);\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.textLine + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stemBase = note.getStemDirection() === 1 ? stemExt.baseY : stemExt.topY;\n                y = Math.max(y, stemBase + spacing * (this.textLine + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.textLine), topY - 10);\n            if (hasStem) {\n                const stemExt = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stemExt.topY - 5 - spacing * this.textLine);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            L('Rendering Text: ', symbol.getText(), x + symbol.getXShift(), y + symbol.getYShift());\n            symbol.renderText(ctx, x, y);\n        });\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: '\\ue870' /*csymDiminished*/,\n    dim: '\\ue870' /*csymDiminished*/,\n    halfDiminished: '\\ue871' /*csymHalfDiminished*/,\n    '+': '\\ue872' /*csymAugmented*/,\n    augmented: '\\ue872' /*csymAugmented*/,\n    majorSeventh: '\\ue873' /*csymMajorSeventh*/,\n    minor: '\\ue874' /*csymMinor*/,\n    '-': '\\ue874' /*csymMinor*/,\n    '(': '\\u0028' /*csymParensLeftTall*/,\n    leftParen: '\\u0028' /*csymParensLeftTall*/,\n    ')': '\\u0029' /*csymParensRightTall*/,\n    rightParen: '\\u0029' /*csymParensRightTall*/,\n    leftBracket: '\\ue877' /*csymBracketLeftTall*/,\n    rightBracket: '\\ue878' /*csymBracketRightTall*/,\n    leftParenTall: '\\u0028' /*csymParensLeftVeryTall*/,\n    rightParenTall: '\\u0029' /*csymParensRightVeryTall*/,\n    '/': '\\ue87c' /*csymDiagonalArrangementSlash*/,\n    over: '\\ue87c' /*csymDiagonalArrangementSlash*/,\n    '#': '\\ued62' /*csymAccidentalSharp*/,\n    b: '\\ued60' /*csymAccidentalFlat*/,\n};\nChordSymbol.symbolModifiers = SymbolModifiers;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Glyphs } from './glyphs';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        let code = Tables.durationCodes[duration];\n        if (code === undefined) {\n            code = Tables.durationCodes['4'];\n        }\n        // Try and get the note head\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        // Merge duration props for 'duration' with the note head properties.\n        if (codeNoteHead !== Glyphs.null) {\n            code = Object.assign(Object.assign({}, code), { codeHead: codeNoteHead });\n        }\n        return code;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        var _a;\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + ((_a = note.getFormatterMetrics().freedom.right) !== null && _a !== void 0 ? _a : 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Tables.lookupMetric('fontFamily'), 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.durationOverride) {\n            // Custom duration\n            this.setDuration(noteStruct.durationOverride);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Note.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignoreTicks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.xShift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.alignCenter) {\n            this.setCenterAlignment(noteStruct.alignCenter);\n        }\n        // The render surface.\n        this.renderOptions = {\n            annotationSpacing: 5,\n            glyphFontScale: 1,\n            strokePx: 1,\n            scale: 1,\n            font: '',\n            yShift: 0,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignoreTicks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /** Get the glyph associated with this note. */\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return 0;\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(textLine) {\n        return this.checkStave().getYForTopText(textLine);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType(Category.Dot).length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam !== undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.xShift : -this.xShift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        const parentheses = this.checkModifierContext().getMembers('Parenthesis');\n        // consider parentheses on noteheads, dots should be to the right of them\n        if (parentheses.length !== 0) {\n            px += parentheses[0].getWidth() + 1;\n        }\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().leftShift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().rightShift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes xShift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.lookupMetric('Stave.padding', 0);\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieStartX += noteGlyphWidth / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const noteGlyphWidth = this.getGlyphWidth();\n        tieEndX += noteGlyphWidth / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignoreTicks = true;\n        this.setType(type);\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        const barline = new Barline(this.type);\n        barline.setX(this.getAbsoluteX());\n        barline.draw(this.checkStave());\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let lastWidth = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.topTextLine < stringPos) {\n                    state.topTextLine = stringPos;\n                }\n            }\n            bend.setXShift(lastWidth);\n            lastWidth = bend.getWidth();\n            bend.setTextLine(state.topTextLine);\n        }\n        state.rightShift += lastWidth;\n        state.topTextLine += 1;\n        return true;\n    }\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     */\n    constructor(phrase) {\n        super();\n        this.xShift = 0;\n        this.tap = '';\n        this.renderOptions = {\n            lineWidth: 1.5,\n            lineStyle: '#777777',\n            bendWidth: 8,\n            releaseWidth: 8,\n        };\n        this.phrase = phrase;\n        this.updateWidth();\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.xShift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    getTextHeight() {\n        const element = new Element(Category.Bend);\n        element.setText(this.phrase[0].text);\n        element.measureText();\n        return element.getHeight();\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const measureText = (text) => {\n            const element = new Element(Category.Bend);\n            element.setText(text);\n            element.measureText();\n            return element.getWidth();\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additionalWidth = bend.type === Bend.UP ? this.renderOptions.bendWidth : this.renderOptions.releaseWidth;\n                bend.width = Math.max(additionalWidth, measureText(bend.text)) + 3;\n                bend.drawWidth = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.xShift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const xShift = this.xShift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.textLine is relative to top string in the group.\n        const bendHeight = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) + 3;\n        const annotationY = start.y - ((this.textLine + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cpX = x + width;\n            const cpY = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.renderOptions.lineWidth);\n            ctx.setStrokeStyle(this.renderOptions.lineStyle);\n            ctx.setFillStyle(this.renderOptions.lineStyle);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cpX, cpY, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.renderOptions.lineWidth);\n            ctx.setStrokeStyle(this.renderOptions.lineStyle);\n            ctx.setFillStyle(this.renderOptions.lineStyle);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const renderX = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, renderX, annotationY);\n            ctx.restore();\n        };\n        let lastBend = undefined;\n        let lastBendDrawWidth = 0;\n        let lastDrawnWidth = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.drawWidth)\n                bend.drawWidth = 0;\n            if (i === 0)\n                bend.drawWidth += xShift;\n            lastDrawnWidth = bend.drawWidth + lastBendDrawWidth - (i === 1 ? xShift : 0);\n            if (bend.type === Bend.UP) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderArrowHead(start.x, bendHeight, +1);\n                }\n                renderBend(start.x, start.y, lastDrawnWidth, bendHeight);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (lastBend && lastBend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (lastBend && lastBend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n                if (!lastBend) {\n                    lastDrawnWidth = bend.drawWidth;\n                    renderRelease(start.x, start.y, lastDrawnWidth, bendHeight);\n                }\n            }\n            renderText(start.x + lastDrawnWidth, bend.text);\n            lastBend = bend;\n            lastBendDrawWidth = bend.drawWidth;\n            lastBend.x = start.x;\n            start.x += lastDrawnWidth;\n        }\n        if (!lastBend || lastBend.x === undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (lastBend.type === Bend.UP) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, bendHeight, +1);\n        }\n        else if (lastBend.type === Bend.DOWN) {\n            renderArrowHead(lastBend.x + lastDrawnWidth, start.y, -1);\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) !== undefined) {\n                const dot = new Dot();\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const rightShift = state.rightShift;\n        const dotSpacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dotList = [];\n        const maxShiftMap = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = rightShift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const noteId = note.getAttribute('id');\n            dotList.push({ line: props.line, note, noteId, dot });\n            maxShiftMap[noteId] = Math.max(maxShiftMap[noteId] || shift, shift);\n        }\n        // Sort dots by line number.\n        dotList.sort((a, b) => b.line - a.line);\n        let dotShift = rightShift;\n        let xWidth = 0;\n        let lastLine = null;\n        let lastNote = null;\n        let prevDottedSpace = null;\n        let halfShiftY = 0;\n        for (let i = 0; i < dotList.length; ++i) {\n            const { dot, note, noteId, line } = dotList[i];\n            // Reset the position of the dot every line.\n            if (line !== lastLine || note !== lastNote) {\n                dotShift = maxShiftMap[noteId];\n            }\n            if (!note.isRest() && line !== lastLine) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    halfShiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    halfShiftY = 0.5;\n                    if (lastNote !== null && !lastNote.isRest() && lastLine !== null && lastLine - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        halfShiftY = -0.5;\n                    }\n                    else if (line + halfShiftY === prevDottedSpace) {\n                        // previous space is dotted, so shift dot to space below the line\n                        halfShiftY = -0.5;\n                    }\n                }\n            }\n            // Convert halfShiftY to a multiplier for dots.draw().\n            if (note.isRest()) {\n                dot.dotShiftY += -halfShiftY;\n            }\n            else {\n                dot.dotShiftY = -halfShiftY;\n            }\n            prevDottedSpace = line + halfShiftY;\n            dot.setXShift(dotShift);\n            dotShift += dot.getWidth() + dotSpacing; // spacing\n            xWidth = dotShift > xWidth ? dotShift : xWidth;\n            lastLine = line;\n            lastNote = note;\n        }\n        // Update state.\n        state.rightShift += xWidth;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dotShiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dotShiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.xShift + this.width - this.radius;\n        const y = start.y + this.yShift + this.dotShiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { leftShift, rightShift } = state;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textHeight = Tables.lookupMetric('FretHandFinger.fontSize');\n            if (num.position === ModifierPosition.ABOVE) {\n                state.topTextLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.textLine += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (leftShift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            numsList.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            let numShift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = numsList[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = leftShift + shiftL;\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + numShiftL);\n                numShift = leftShift + numWidth; // spacing\n                xWidthL = numShift > xWidthL ? numShift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numShift = shiftRight + numWidth; // spacing\n                xWidthR = numShift > xWidthR ? numShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.setFretHandFinger(finger);\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.xOffset = 0; // Horizontal offset from default\n        this.yOffset = 0; // Vertical offset from default\n    }\n    setFretHandFinger(finger) {\n        this.text = finger;\n        this.measureText();\n        return this;\n    }\n    getFretHandFinger() {\n        return this.text;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dotX = start.x + this.xOffset;\n        let dotY = start.y + this.yOffset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dotX -= 4;\n                dotY -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dotX -= 2;\n                dotY += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        this.renderText(ctx, dotX, dotY);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.customGlyph = false;\n        // map notehead SMuFL codes to the corresponding SMuFL code with ledger line\n        this.ledger = {\n            '\\ue4e3' /*restWhole*/: '\\ue4f4' /*restWholeLegerLine*/,\n            '\\ue4e4' /*restHalf*/: '\\ue4f5' /*restHalfLegerLine*/,\n        };\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.noteType)\n            this.noteType = noteStruct.noteType;\n        this.displaced = noteStruct.displaced || false;\n        this.stemDirection = noteStruct.stemDirection || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with ledger lines\n        if ((this.line > 5 || this.line < 0) && this.ledger[this.glyphProps.codeHead]) {\n            this.glyphProps.codeHead = this.ledger[this.glyphProps.codeHead];\n        }\n        this.text = this.glyphProps.codeHead;\n        if (noteStruct.customGlyphCode) {\n            this.customGlyph = true;\n            this.text = noteStruct.customGlyphCode;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // font size for note heads\n            glyphFontScale: noteStruct.glyphFontScale || Tables.lookupMetric('fontSize') });\n        this.textFont.size = this.renderOptions.glyphFontScale;\n        this.measureText();\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        return x + (this.displaced ? (this.width - displacementStemAdjustment) * this.stemDirection : 0);\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        return new BoundingBox(this.getAbsoluteX() - this.textMetrics.actualBoundingBoxLeft, this.y - this.textMetrics.actualBoundingBoxAscent, this.width, this.height);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        this.measureText();\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", this.x, this.y);\n        this.renderText(ctx, this.getAbsoluteX() - this.x, 0);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Element } from './element';\nimport { Glyphs } from './glyphs';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.flag = new Element();\n        this.flagStyle = {};\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag() {\n        var _a, _b, _c;\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = \n            // codeFlagDown = codeFlagUp + 1\n            // if codeFlagUp is undefined, codePoint will be 0\n            this.getStemDirection() === Stem.DOWN\n                ? String.fromCodePoint(((_b = (_a = glyphProps.codeFlagUp) === null || _a === void 0 ? void 0 : _a.codePointAt(0)) !== null && _b !== void 0 ? _b : -1) + 1)\n                : (_c = glyphProps.codeFlagUp) !== null && _c !== void 0 ? _c : Glyphs.null;\n            this.flag.setText(flagCode);\n            this.flag.fontSize = this.renderOptions.glyphFontScale;\n            this.flag.measureText();\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beamCount;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        const beamIsUndefined = this.beam === undefined;\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n            case '16':\n                length = beamIsUndefined ? 35 : 25;\n                break;\n            case '32':\n                length = beamIsUndefined ? 45 : 35;\n                break;\n            case '64':\n                length = beamIsUndefined ? 50 : 40;\n                break;\n            case '128':\n                length = beamIsUndefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stemDirection)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stemDirection;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stemDirection = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const xBegin = this.getAbsoluteX() + this.xShift;\n        const xEnd = this.getAbsoluteX() + this.xShift + this.getGlyphWidth();\n        const stemX = this.stemDirection === Stem.DOWN ? xBegin : xEnd;\n        return stemX;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.xShift + this.getGlyphWidth() / 2;\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        const flagHeight = this.flag.getHeight();\n        const scale = this.getStaveNoteScale();\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        // Use stemBeamExtension with beams\n        if (this.beam) {\n            return glyphProps.stemBeamExtension * scale;\n        }\n        // If the flag is longer than the stem, extend the stem by the difference.\n        return flagHeight > Stem.HEIGHT * scale ? flagHeight - Stem.HEIGHT * scale : 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stemExtensionOverride = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return this.glyphProps.codeFlagUp !== undefined && !this.beam && !this.isRest();\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _StaveNote_noteHeads, _StaveNote_sortedKeyProps;\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = __classPrivateFieldGet(notes[i], _StaveNote_sortedKeyProps, \"f\");\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL =\n                    line +\n                        Math.ceil(__classPrivateFieldGet(notes[i], _StaveNote_noteHeads, \"f\")[0].getTextMetrics().actualBoundingBoxAscent / Tables.STAVE_LINE_DISTANCE);\n                minL =\n                    line -\n                        Math.ceil(__classPrivateFieldGet(notes[i], _StaveNote_noteHeads, \"f\")[0].getTextMetrics().actualBoundingBoxDescent / Tables.STAVE_LINE_DISTANCE);\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection,\n                stemMax,\n                stemMin,\n                voiceShift: notes[i].getVoiceShiftWidth(),\n                isDisplaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            // If .draw is true or undefined, we set draw[i] = true\n            draw[i] = notesList[i].note.renderOptions.draw !== false;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voiceShift, noteL.voiceShift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.renderOptions.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = __classPrivateFieldGet(noteU.note, _StaveNote_sortedKeyProps, \"f\")[0].keyProps.code;\n                        const noteLHead = __classPrivateFieldGet(noteL.note, _StaveNote_sortedKeyProps, \"f\")[__classPrivateFieldGet(noteL.note, _StaveNote_sortedKeyProps, \"f\").length - 1].keyProps.code;\n                        if (\n                        // If unison is not configured, shift\n                        !Tables.UNISON ||\n                            // If we have different noteheads, shift\n                            noteUHead !== noteLHead ||\n                            // If we have different dot values, shift\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                    .length ||\n                            // If the notes are quite close but not on the same line, shift\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            // If styles are different, shift\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line !== noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            // upper voice is shorter, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.rightShift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.rightShift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.renderOptions.draw = false;\n            // Hide lower voice rest\n            noteL.note.renderOptions.draw = false;\n            // format complete\n            state.rightShift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.renderOptions.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.rightShift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        _StaveNote_noteHeads.set(this, void 0);\n        // Sorted variant of keyProps used internally.\n        _StaveNote_sortedKeyProps.set(this, []);\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octaveShift = (_b = noteStruct.octaveShift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dotShiftY = 0;\n        // for displaced ledger lines\n        this.useDefaultHeadX = false;\n        // Drawing\n        __classPrivateFieldSet(this, _StaveNote_noteHeads, [], \"f\");\n        this.modifiers = [];\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // font size for note heads and rests\n            glyphFontScale: noteStruct.glyphFontScale || Tables.lookupMetric('fontSize'), \n            // number of stroke px to the left and right of head\n            strokePx: noteStruct.strokePx || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.autoStem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stemDirection) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        __classPrivateFieldSet(this, _StaveNote_noteHeads, [], \"f\");\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.useDefaultHeadX = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                noteType: this.noteType,\n                displaced,\n                stemDirection,\n                customGlyphCode: noteProps.code,\n                glyphFontScale: this.renderOptions.glyphFontScale,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[__classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[i].index] = notehead;\n        }\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[0].keyProps.line;\n        this.maxLine = __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\")[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        var _a;\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            const options = { octaveShift: (_a = this.octaveShift) !== null && _a !== void 0 ? _a : 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, this.noteType, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\").push({ keyProps, index });\n        });\n        __classPrivateFieldGet(this, _StaveNote_sortedKeyProps, \"f\").sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        this.boundingBox = new BoundingBox(this.getAbsoluteX(), this.ys[0], 0, 0);\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => {\n            var _a;\n            (_a = this.boundingBox) === null || _a === void 0 ? void 0 : _a.mergeWith(notehead.getBoundingBox());\n        });\n        const { yTop, yBottom } = this.getNoteHeadBounds();\n        // eslint-disable-next-line\n        const noteStemHeight = this.stem.getHeight();\n        const flagX = this.getStemX() - Tables.STEM_WIDTH / 2;\n        const flagY = this.getStemDirection() === Stem.DOWN\n            ? yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n            : yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n        if (!this.isRest() && this.hasStem()) {\n            (_a = this.boundingBox) === null || _a === void 0 ? void 0 : _a.mergeWith(new BoundingBox(this.getAbsoluteX(), flagY, 0, 0));\n        }\n        const bbFlag = this.flag.getBoundingBox();\n        if (!this.isRest() && bbFlag) {\n            (_b = this.boundingBox) === null || _b === void 0 ? void 0 : _b.mergeWith(bbFlag.move(flagX, flagY));\n        }\n        return this.boundingBox;\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        const val = this.glyphProps.codeHead;\n        return val >= '\\ue4e0' && val <= '\\ue4ff';\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stemDirection ? Stem.WIDTH / (2 * -this.stemDirection) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `textLine`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.renderOptions.annotationSpacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.renderOptions.annotationSpacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(yTop, yBottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.xShift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.xShift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.xShift + 2;\n            if (this.stemDirection === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += this.flag.getWidth();\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        // addtional y shifts for rests\n        let restShift = 0;\n        switch (__classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[index].getText()) {\n            case '\\ue4e2' /*restDoubleWhole*/:\n            case '\\ue4e3' /*restWhole*/:\n                restShift += 0.5;\n                break;\n            case '\\ue4e4' /*restHalf*/:\n            case '\\ue4e5' /*restQuarter*/:\n            case '\\ue4e6' /*rest8th*/:\n            case '\\ue4e7' /*rest16th*/:\n                restShift -= 0.5;\n                break;\n            case '\\ue4e8' /*rest32nd*/:\n            case '\\ue4e9' /*rest64th*/:\n                restShift -= 1.5;\n                break;\n            case '\\ue4ea' /*rest128th*/:\n                restShift -= 2.5;\n                break;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index] + restShift * this.checkStave().getSpacingBetweenLines(),\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        this.flagStyle = style;\n    }\n    getFlagStyle() {\n        return this.flagStyle;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.noteHeads[0].getWidth();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stemDirection === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stemDirection === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stemDirection === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} yTop the highest notehead bound\n     * @property {number} yBottom the lowest notehead bound\n     * @property {number|Null} displacedX the starting x for displaced noteheads\n     * @property {number|Null} nonDisplacedX the starting x for non-displaced noteheads\n     * @property {number} highestLine the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowestLine the lowest notehead line\n     * @property {number|false} highestDisplacedLine the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowestDisplacedLine\n     * @property {number} highestNonDisplacedLine\n     * @property {number} lowestNonDisplacedLine\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            yTop,\n            yBottom,\n            displacedX,\n            nonDisplacedX,\n            highestLine,\n            lowestLine,\n            highestDisplacedLine,\n            lowestDisplacedLine,\n            highestNonDisplacedLine,\n            lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.xShift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").slice();\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { renderOptions: { strokePx }, } = this;\n        const ctx = this.checkContext();\n        const width = this.getGlyphWidth() + strokePx * 2;\n        const doubleWidth = 2 * (this.getGlyphWidth() + strokePx) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highestLine, lowestLine, highestDisplacedLine, highestNonDisplacedLine, lowestDisplacedLine, lowestNonDisplacedLine, displacedX, nonDisplacedX, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highestLine < 6 && lowestLine > 0)\n            return;\n        const minX = Math.min(displacedX !== null && displacedX !== void 0 ? displacedX : 0, nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = minX - strokePx;\n            else if (normal)\n                x = (nonDisplacedX !== null && nonDisplacedX !== void 0 ? nonDisplacedX : 0) - strokePx;\n            else\n                x = (displacedX !== null && displacedX !== void 0 ? displacedX : 0) - strokePx;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highestLine; ++line) {\n            const normal = nonDisplacedX !== undefined && line <= highestNonDisplacedLine;\n            const displaced = highestDisplacedLine !== undefined && line <= highestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowestLine; --line) {\n            const normal = nonDisplacedX !== undefined && line >= lowestNonDisplacedLine;\n            const displaced = lowestDisplacedLine !== undefined && line >= lowestDisplacedLine;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\")[index];\n            if (notehead === noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.codeFlagUp !== undefined;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam && !this.isRest();\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { yTop, yBottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX() - Tables.STEM_WIDTH / 2;\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    yTop - noteStemHeight - this.flag.getTextMetrics().actualBoundingBoxDescent\n                : // Up stems are above the note head and have flags on the right.\n                    yBottom - noteStemHeight + this.flag.getTextMetrics().actualBoundingBoxAscent;\n            // Draw the Flag\n            this.applyStyle(ctx, this.flagStyle);\n            this.flag.renderText(ctx, flagX, flagY);\n            this.restoreStyle(ctx, this.flagStyle);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => {\n            notehead.applyStyle(ctx);\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n            notehead.restoreStyle(ctx);\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const superStemExtension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return superStemExtension;\n        }\n        const stemDirection = this.getStemDirection();\n        if (stemDirection !== this.calculateOptimalStemDirection()) {\n            return superStemExtension; // no adjustment for manually set stem direction.\n        }\n        let midLineDistance;\n        const MIDDLE_LINE = 3;\n        if (stemDirection === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            midLineDistance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            midLineDistance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const linesOverOctaveFromMidLine = midLineDistance - 3.5;\n        if (linesOverOctaveFromMidLine <= 0) {\n            return superStemExtension;\n        }\n        const stave = this.getStave();\n        let spacingBetweenLines = 10;\n        if (stave !== undefined) {\n            spacingBetweenLines = stave.getSpacingBetweenLines();\n        }\n        return superStemExtension + linesOverOctaveFromMidLine * spacingBetweenLines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.renderOptions.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        __classPrivateFieldGet(this, _StaveNote_noteHeads, \"f\").forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\n_StaveNote_noteHeads = new WeakMap(), _StaveNote_sortedKeyProps = new WeakMap();\nStaveNote.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *    firstIndexes: [n1, n2, n3],\n     *    lastIndexes: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text = '') {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.renderOptions = {\n            cp1: 8,\n            cp2: 12,\n            textShiftX: 0,\n            firstXShift: 0,\n            lastXShift: 0,\n            yShift: 7,\n            tieSpacing: 0,\n        };\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes) {\n            notes.firstIndexes = [0];\n        }\n        if (!notes.lastIndexes) {\n            notes.lastIndexes = [0];\n        }\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.firstNote || !this.notes.lastNote;\n    }\n    /**\n     * @param params.firstX is specified in pixels.\n     * @param params.lastX is specified in pixels.\n     */\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.renderOptions.cp1;\n        let cp2 = this.renderOptions.cp2;\n        if (Math.abs(params.lastX - params.firstX) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const firstXShift = this.renderOptions.firstXShift;\n        const lastXShift = this.renderOptions.lastXShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        // setNotes(...) verified that firstIndexes and lastIndexes are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const firstIndexes = this.notes.firstIndexes;\n        // eslint-disable-next-line\n        const lastIndexes = this.notes.lastIndexes;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const cpX = (params.lastX + lastXShift + (params.firstX + firstXShift)) / 2;\n            // firstY and lastY are specified in pixels.\n            const firstY = params.firstYs[firstIndexes[i]] + yShift;\n            const lastY = params.lastYs[lastIndexes[i]] + yShift;\n            if (isNaN(firstY) || isNaN(lastY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for tie rendering.');\n            }\n            const topControlPointY = (firstY + lastY) / 2 + cp1 * params.direction;\n            const bottomControlPointY = (firstY + lastY) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.firstX + firstXShift, firstY);\n            ctx.quadraticCurveTo(cpX, topControlPointY, params.lastX + lastXShift, lastY);\n            ctx.quadraticCurveTo(cpX, bottomControlPointY, params.firstX + firstXShift, firstY);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    /**\n     * @param firstX specified in pixels\n     * @param lastX specified in pixels\n     */\n    renderTieText(firstX, lastX) {\n        var _a, _b, _c;\n        const ctx = this.checkContext();\n        let centerX = (firstX + lastX) / 2;\n        centerX -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.firstNote) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.lastNote) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, centerX + this.renderOptions.textShiftX, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.notes.firstNote;\n        const lastNote = this.notes.lastNote;\n        // Provide some default values so the compiler doesn't complain.\n        // firstX and lastX are in pixels.\n        let firstX = 0;\n        let lastX = 0;\n        let firstYs = [0];\n        let lastYs = [0];\n        let stemDirection = 0;\n        if (firstNote) {\n            firstX = firstNote.getTieRightX() + this.renderOptions.tieSpacing;\n            stemDirection = firstNote.getStemDirection();\n            firstYs = firstNote.getYs();\n        }\n        else if (lastNote) {\n            const stave = lastNote.checkStave();\n            firstX = stave.getTieStartX();\n            firstYs = lastNote.getYs();\n            this.notes.firstIndexes = this.notes.lastIndexes;\n        }\n        if (lastNote) {\n            lastX = lastNote.getTieLeftX() + this.renderOptions.tieSpacing;\n            stemDirection = lastNote.getStemDirection();\n            lastYs = lastNote.getYs();\n        }\n        else if (firstNote) {\n            const stave = firstNote.checkStave();\n            lastX = stave.getTieEndX();\n            lastYs = firstNote.getYs();\n            this.notes.lastIndexes = this.notes.firstIndexes;\n        }\n        if (this.direction) {\n            stemDirection = this.direction;\n        }\n        this.renderTie({\n            firstX,\n            lastX,\n            firstYs,\n            lastYs,\n            direction: stemDirection,\n        });\n        this.renderTieText(firstX, lastX);\n        return true;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *    firstIndexes: [n1, n2, n3],\n     *    lastIndexes: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.renderOptions.cp1 = 9;\n        this.renderOptions.cp2 = 11;\n        this.renderOptions.yShift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError, sumArray } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    numBeats: parseInt(match[1]),\n                    beatValue: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ numBeats: 4, beatValue: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.numBeats * (this.time.resolution / this.time.beatValue), 1);\n        // until tickables are added, the smallestTickCount is the same as the stated totalTicks duration.\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode (Voice.Mode.SOFT, STRICT, or FULL) */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode` or Voice.Mode\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            if (!tickable.getStave() && this.stave)\n                tickable.setStave(this.stave);\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n        }\n        this.boundingBox = boundingBox;\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0; // reset\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.  (It is not the sum of the softmax(t) over all tickables)\n     *\n     * Note that the \"exp\" of \"expTicksUsed\" stands for \"expontential\" ticks used,\n     * not \"expected\" ticks used.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenoteGroups, state) {\n        const groupSpacingStave = 4;\n        const groupSpacingTab = 0;\n        if (!gracenoteGroups || gracenoteGroups.length === 0)\n            return false;\n        const groupList = [];\n        let prevNote = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenoteGroups.length; ++i) {\n            const gracenoteGroup = gracenoteGroups[i];\n            const note = gracenoteGroup.getNote();\n            const isStavenote = isStaveNote(note);\n            const spacing = isStavenote ? groupSpacingStave : groupSpacingTab;\n            if (isStavenote && note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prevNote = note;\n            }\n            groupList.push({ shift: shiftL, gracenoteGroup, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let groupShift = groupList[0].shift;\n        let formatWidth;\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            gracenoteGroup.preFormat();\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            groupShift = Math.max(formatWidth, groupShift);\n        }\n        for (let i = 0; i < groupList.length; ++i) {\n            const gracenoteGroup = groupList[i].gracenoteGroup;\n            formatWidth = gracenoteGroup.getWidth() + groupList[i].spacing;\n            gracenoteGroup.setSpacingFromNextModifier(groupShift - Math.min(formatWidth, groupShift) + StaveNote.minNoteheadPadding);\n        }\n        state.leftShift += groupShift;\n        return true;\n    }\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(graceNotes, showSlur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.graceNotes = graceNotes;\n        this.width = 0;\n        this.showSlur = showSlur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.renderOptions = {\n            slurYShift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.graceNotes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(graceNotes) {\n        graceNotes = graceNotes || this.graceNotes;\n        if (graceNotes.length > 1) {\n            const beam = new Beam(graceNotes);\n            beam.renderOptions.beamWidth = 3;\n            beam.renderOptions.partialBeamLength = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.graceNotes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.graceNotes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.showSlur) {\n            // Create and draw slur.\n            const isStavenote = isStaveNote(note);\n            const TieClass = isStavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                lastNote: this.graceNotes[0],\n                firstNote: note,\n                firstIndexes: [0],\n                lastIndexes: [0],\n            });\n            this.slur.renderOptions.cp2 = 12;\n            this.slur.renderOptions.yShift = (isStavenote ? 7 : 5) + this.renderOptions.slurYShift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.leftShift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            numBeats: 4,\n            beatValue: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignoreTicks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks === undefined) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex !== null && voiceIndex !== void 0 ? voiceIndex : 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        var _a;\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, (_a = metrics.glyphWidth) !== null && _a !== void 0 ? _a : 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Cyril Silverman\n// MIT License\nimport { getBottomY, getInitialOffset, getTopY } from './articulation';\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        return Tables.lookupMetric('NoteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let rightShift = state.rightShift; // jazz ornaments calculate r/l shift separately\n        let leftShift = state.leftShift;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (ornament.position === ModifierPosition.RIGHT) {\n                ornament.xShift += rightShift + 2;\n                rightShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.LEFT) {\n                ornament.xShift -= leftShift + ornament.width + 2;\n                leftShift += ornament.width + Ornament.minPadding;\n            }\n            else if (ornament.position === ModifierPosition.ABOVE) {\n                width = Math.max(ornament.getWidth(), width);\n                ornament.setTextLine(state.topTextLine);\n                state.topTextLine += increment;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n                ornament.setTextLine(state.textLine);\n                state.textLine += increment;\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.leftShift = leftShift + width / 2;\n        state.rightShift = rightShift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    static get ornamentLeft() {\n        return ['scoop'];\n    }\n    static get ornamentRight() {\n        return ['doit', 'fall', 'fallLong', 'doitLong'];\n    }\n    static get ornamentYShift() {\n        return ['fallLong'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        // Default position ABOVE\n        this.position = ModifierPosition.ABOVE;\n        if (Ornament.ornamentRight.indexOf(type) >= 0) {\n            this.position = ModifierPosition.RIGHT;\n        }\n        if (Ornament.ornamentLeft.indexOf(type) >= 0) {\n            this.position = ModifierPosition.LEFT;\n        }\n        this.type = type;\n        this.delayed = false;\n        this.renderOptions = {\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        this.text = Tables.ornamentCodes(this.type);\n        this.measureText();\n    }\n    /** Set note attached to ornament. */\n    setNote(note) {\n        super.setNote(note);\n        // articulations above/below the line can be stacked.\n        if (Ornament.ornamentArticulation.indexOf(this.type) >= 0) {\n            // Unfortunately we don't know the stem direction.  So we base it\n            // on the line number, but also allow it to be overridden.\n            if (note.getLineNumber() >= 3) {\n                this.position = Modifier.Position.ABOVE;\n            }\n            else {\n                this.position = Modifier.Position.BELOW;\n            }\n        }\n        return this;\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        this.accidentalUpper = new Element();\n        this.accidentalUpper.setText(Tables.accidentalCodes(accid));\n        this.accidentalUpper.measureText();\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        this.accidentalLower = new Element();\n        this.accidentalLower.setText(Tables.accidentalCodes(accid));\n        this.accidentalLower.measureText();\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        this.applyStyle();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        const staffSpace = stave.getSpacingBetweenLines();\n        const initialOffset = getInitialOffset(note, this.position);\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead ? start.y : 0;\n        if (this.position === ModifierPosition.ABOVE) {\n            glyphY = getTopY(note, this.textLine) - (this.textLine + initialOffset) * staffSpace;\n        }\n        if (this.position === ModifierPosition.BELOW) {\n            glyphY = getBottomY(note, this.textLine) + (this.textLine + initialOffset + 1.5) * staffSpace;\n        }\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = note.getTickContext().getX();\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                const nextContext = TickContext.getNextContext(note.getTickContext());\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - startX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.text.charCodeAt(0), glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.renderText(ctx, glyphX + this.xShift - this.accidentalLower.getWidth() * 0.5, glyphY + this.yShift - this.accidentalLower.getTextMetrics().actualBoundingBoxDescent);\n            glyphY -= this.accidentalLower.getHeight() + this.renderOptions.accidentalLowerPadding;\n        }\n        // ornament requires yShift\n        if (Ornament.ornamentYShift.indexOf(this.type) >= 0) {\n            this.yShift += this.getHeight();\n        }\n        this.renderText(ctx, glyphX -\n            (this.position === ModifierPosition.ABOVE || this.position === ModifierPosition.BELOW ? this.width * 0.5 : 0), glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.getHeight() + this.renderOptions.accidentalUpperPadding;\n            this.accidentalUpper.renderText(ctx, glyphX + this.xShift - this.accidentalUpper.getWidth() * 0.5, glyphY + this.yShift - this.accidentalUpper.getTextMetrics().actualBoundingBoxDescent);\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Rodrigo Vilar\n// MIT License\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Category } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                xWidthR = xWidthR > shift + parenthesis.width ? xWidthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index) + parenthesis.width;\n                xWidthL = xWidthL > shift + parenthesis.width ? xWidthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        if (this.position === Modifier.Position.RIGHT) {\n            this.text = '\\uE0F6'; /*noteheadParenthesisRight*/\n        }\n        else if (this.position === Modifier.Position.LEFT) {\n            this.text = '\\uE0F5'; /*noteheadParenthesisLeft*/\n        }\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        this.note = note;\n        this.setFont(note.getFont());\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        this.renderText(ctx, start.x, start.y);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        this.curTransfrom = context.getTransform();\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    openRotation(angleDegrees, x, y) {\n        this.curTransfrom = this.context2D.getTransform();\n        this.context2D.translate(x, y);\n        this.context2D.rotate((angleDegrees * Math.PI) / 180);\n        this.context2D.translate(-x, -y);\n    }\n    closeRotation() {\n        this.context2D.setTransform(this.curTransfrom);\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Gregory Ristow (2015)\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SVGContext_instances, _SVGContext_getShadowStyle;\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        if (attributes['font-family'])\n            txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        if (attributes['font-size'])\n            txt.setAttributeNS(null, 'font-size', `${attributes['font-size']}`);\n        if (attributes['font-style'])\n            txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        if (attributes['font-weight'])\n            txt.setAttributeNS(null, 'font-weight', `${attributes['font-weight']}`);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        _SVGContext_instances.add(this);\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.shadowAttributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.stateStack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    openRotation(angleDegrees, x, y) {\n        this.openGroup().setAttribute('transform', `translate(${x},${y}) rotate(${angleDegrees}) translate(-${x},-${y})`);\n    }\n    closeRotation() {\n        this.closeGroup();\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadowAttributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadowAttributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBoxOrMinX, minY, width, height) {\n        if (typeof viewBoxOrMinX === 'string') {\n            this.svg.setAttribute('viewBox', viewBoxOrMinX);\n        }\n        else {\n            const viewBoxString = viewBoxOrMinX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length === 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scaleX, this.state.scaleY);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadowAttributes.width > 0) {\n            attributes.style = __classPrivateFieldGet(this, _SVGContext_instances, \"m\", _SVGContext_getShadowStyle).call(this);\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadowAttributes.width > 0) {\n            attributes.style = __classPrivateFieldGet(this, _SVGContext_instances, \"m\", _SVGContext_getShadowStyle).call(this);\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.stateStack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadowAttributes: {\n                width: this.shadowAttributes.width,\n                color: this.shadowAttributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.stateStack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadowAttributes.width = state.shadowAttributes.width;\n            this.shadowAttributes.color = state.shadowAttributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\n_SVGContext_instances = new WeakSet(), _SVGContext_getShadowStyle = function _SVGContext_getShadowStyle() {\n    const sa = this.shadowAttributes;\n    // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n    // of the same radius, so we scale the drop-shadow radius here to make it\n    // look close to the canvas shadow.\n    return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n};\nSVGContext.measureTextCache = new MeasureTextCache();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 === 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        /**\n         * The modifier context's leftShift state.\n         */\n        const leftShift = state.leftShift;\n        /**\n         * The modifier context's rightShift state.\n         */\n        const rightShift = state.rightShift;\n        const numSpacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const numsList = [];\n        let prevNote = null;\n        let extraXSpaceForDisplacedNotehead = 0;\n        let shiftRight = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.textLine = mc.getState().topTextLine;\n                    state.topTextLine += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.textLine = mc.getState().textLine;\n                    state.textLine += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prevNote) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (pos === Modifier.Position.LEFT) {\n                        extraXSpaceForDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx(), extraXSpaceForDisplacedNotehead);\n                    }\n                    if (rightShift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prevNote = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            numsList.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: extraXSpaceForDisplacedNotehead,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort string numbers by line number.\n        numsList.sort((a, b) => b.line - a.line);\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < numsList.length; ++i) {\n            const note = numsList[i].note;\n            const pos = numsList[i].pos;\n            const num = numsList[i].num;\n            const line = numsList[i].line;\n            const shiftR = numsList[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftR = rightShift + shiftR;\n            }\n            const numWidth = num.getWidth() + numSpacing;\n            let numXShift = 0;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(leftShift + extraXSpaceForDisplacedNotehead);\n                numXShift = numWidth; // spacing\n                xWidthL = Math.max(numXShift, xWidthL);\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                numXShift += numWidth; // spacing\n                xWidthR = numXShift > xWidthR ? numXShift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.leftShift += xWidthL;\n        state.rightShift += xWidthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.stringNumber = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.xShift = 0;\n        this.yShift = 0;\n        this.textLine = 0;\n        this.stemOffset = 0;\n        this.xOffset = 0; // Horizontal offset from default\n        this.yOffset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.stringNumber = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.xOffset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.yOffset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.lastNote = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dotX = start.x + this.xShift + this.xOffset;\n        let stemExt = {};\n        if (note.hasStem()) {\n            stemExt = note.checkStem().getExtents();\n        }\n        let dotY = start.y + this.yShift + this.yOffset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.UP) {\n                        dotY = stemExt.topY + Tables.lookupMetric('StringNumber.stemPadding');\n                    }\n                    dotY -=\n                        this.radius +\n                            Tables.lookupMetric('StringNumber.verticalPadding') +\n                            this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dotY = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection === Stem.DOWN) {\n                        dotY = stemExt.topY - Tables.lookupMetric('StringNumber.stemPadding');\n                    }\n                    dotY +=\n                        this.radius +\n                            Tables.lookupMetric('StringNumber.verticalPadding') +\n                            this.textLine * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dotX -= this.radius / 2 + Tables.lookupMetric('StringNumber.leftPadding');\n                break;\n            case Modifier.Position.RIGHT:\n                dotX += this.radius / 2 + Tables.lookupMetric('StringNumber.rightPadding');\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dotX - ctx.measureText(this.stringNumber).width / 2;\n        ctx.fillText('' + this.stringNumber, x, dotY + 4.5);\n        const lastNote = this.lastNote;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dotX + 10, dotY, dotX + end, dotY, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dotX + end, dotY, dotX + end, dotY + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const leftShift = state.leftShift;\n        const strokeSpacing = 5;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = leftShift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + strokeSpacing, xShift);\n        }, 0);\n        state.leftShift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ allVoices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.allVoices = this.options.allVoices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.renderOptions = {\n            fontScale: Tables.lookupMetric('Stroke.fontSize'),\n        };\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.noteEnd = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let yPositions = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const lineSpace = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                yPositions = note.getYs();\n                for (let n = 0; n < yPositions.length; n++) {\n                    if (this.note === notes[i] || this.allVoices) {\n                        topY = Math.min(topY, yPositions[n]);\n                        botY = Math.max(botY, yPositions[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrowY = 0;\n        let textY = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = '\\ueb78' /*arrowheadBlackUp*/;\n                arrowY = topY;\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = '\\ueb7c' /*arrowheadBlackDown*/;\n                arrowY = botY + lineSpace;\n                topY -= lineSpace / 2;\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY -= lineSpace / 2;\n                botY += lineSpace / 2;\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.xShift, topY, 1, botY - topY);\n        }\n        else {\n            // Select the wiggle glyph depending on the arrow direction\n            const lineGlyph = arrow === '\\ueb7c' /*arrowheadBlackDown*/ ? '\\ueaaa' /*wiggleArpeggiatoDown*/ : '\\ueaa9'; /*wiggleArpeggiatoUp*/\n            let txt = '';\n            const el = new Element();\n            // add glyphs until the required length is achieved\n            while (el.getWidth() < botY - topY) {\n                txt += lineGlyph;\n                el.setText(txt);\n                el.measureText();\n            }\n            if (this.type === Stroke.Type.RASQUEDO_DOWN ||\n                this.type === Stroke.Type.ROLL_DOWN ||\n                this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n                ctx.openRotation(90, x + this.xShift, topY);\n                el.renderText(ctx, x + this.xShift, topY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = topY + el.getWidth() + 5;\n            }\n            else {\n                ctx.openRotation(-90, x + this.xShift, botY);\n                el.renderText(ctx, x + this.xShift, botY - el.getTextMetrics().actualBoundingBoxDescent + el.getHeight() / 2);\n                ctx.closeRotation();\n                textY = botY - el.getWidth() - 5;\n            }\n        }\n        // Draw the arrow head\n        if (arrowY !== 0) {\n            const el = new Element();\n            el.setText(arrow);\n            el.measureText();\n            el.renderText(ctx, \n            // Center the arrow head substracting its width / 2\n            x + this.xShift - el.getWidth() / 2, arrowY);\n        }\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            const el = new Element('Stroke.text');\n            el.setText('R');\n            el.measureText();\n            el.renderText(ctx, x + this.xShift - el.getWidth() / 2, textY + (this.type === Stroke.Type.RASQUEDO_DOWN ? el.getHeight() : 0));\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let textLine = state.topTextLine;\n        let width = 0;\n        let shift = state.rightShift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            textLine = textLine - (bendHeight + 1);\n        }\n        else {\n            state.topTextLine += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(textLine);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.rightShift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.renderOptions = {\n            code: 0xeab0,\n            width: 20,\n        };\n        this.setVibratoWidth(this.renderOptions.width);\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.renderOptions.width = width;\n        this.text = String.fromCodePoint(this.renderOptions.code);\n        this.measureText();\n        const items = Math.round(this.renderOptions.width / this.getWidth());\n        for (let i = 1; i < items; i++) {\n            this.text += String.fromCodePoint(this.renderOptions.code);\n        }\n        this.measureText();\n        return this;\n    }\n    /** Set vibrato code. */\n    setVibratoCode(code) {\n        this.renderOptions.code = code;\n        return this.setVibratoWidth(this.renderOptions.width);\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x;\n        const vy = note.getYForTopText(this.textLine) + 5;\n        this.renderText(ctx, vx, vy);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.).  The ModifierContext works with tickables\n// that are at the same tick to ensure that they and their modifiers\n// all have proper alignment.  (Note that the ModifierContext also\n// runs the spacing of the tickable).\n//\n// see https://github.com/0xfe/vexflow/wiki/How-Formatting-Works\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            leftShift: 0,\n            rightShift: 0,\n            textLine: 0,\n            topTextLine: 0,\n        };\n        // Current members -- a mapping of Category (string) to a list of Tickables, Modifiers,\n        // StaveNotes, TabNotes, etc.\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get the width of the entire\n     */\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.leftShift;\n    }\n    getRightShift() {\n        return this.state.rightShift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.leftShift + this.state.rightShift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.leftShift + state.rightShift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// Co-author: Benjamin W. Bohl\nimport { Glyphs } from './glyphs';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        const { gClef, fClef, cClef, unpitchedPercussionClef1, sixStringTabClef } = Glyphs;\n        return {\n            treble: {\n                code: gClef,\n                line: 3,\n            },\n            bass: {\n                code: fClef,\n                line: 1,\n            },\n            alto: {\n                code: cClef,\n                line: 2,\n            },\n            tenor: {\n                code: cClef,\n                line: 1,\n            },\n            percussion: {\n                code: unpitchedPercussionClef1,\n                line: 2,\n            },\n            soprano: {\n                code: cClef,\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: cClef,\n                line: 3,\n            },\n            'baritone-c': {\n                code: cClef,\n                line: 0,\n            },\n            'baritone-f': {\n                code: fClef,\n                line: 2,\n            },\n            subbass: {\n                code: fClef,\n                line: 0,\n            },\n            french: {\n                code: gClef,\n                line: 4,\n            },\n            tab: {\n                code: sixStringTabClef,\n                line: 2.5,\n            },\n        };\n    }\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.code = Clef.types['treble'].code;\n        this.line = Clef.types['treble'].line;\n        this.size = 'default';\n        this.type = 'treble';\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        L('Creating clef:', type);\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size = 'default', annotation) {\n        this.type = type;\n        this.code = Clef.types[type].code;\n        this.line = Clef.types[type].line;\n        this.size = size !== null && size !== void 0 ? size : 'default';\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation === '8va') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8va;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8va;\n            }\n        }\n        if (annotation === '8vb') {\n            if (this.code === Glyphs.gClef) {\n                this.code = Glyphs.gClef8vb;\n            }\n            if (this.code === Glyphs.fClef) {\n                this.code = Glyphs.fClef8vb;\n            }\n        }\n        this.text = this.code;\n        this.textFont.size = Math.floor(Clef.getPoint(this.size));\n        this.measureText();\n        return this;\n    }\n    /** Get point for clefs. */\n    static getPoint(size) {\n        // for sizes other than 'default', clef is 2/3 of the default value\n        return size === 'default' ? Tables.lookupMetric('fontSize') : (Tables.lookupMetric('fontSize') * 2) / 3;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('clef', this.getAttribute('id'));\n        this.renderText(ctx, 0, stave.getYForLine(this.line));\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Element } from './element';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Create a new Key Signature based on a `keySpec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = Tables.lookupMetric('fontSize');\n        this.glyphs = [];\n        this.paddingForced = false;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc, stave) {\n        const code = Tables.accidentalCodes(acc.type);\n        const glyph = new Element(Category.KeySignature);\n        glyph.setText(code);\n        glyph.measureText();\n        // Determine spacing between current accidental and the next accidental\n        const extraWidth = 1;\n        // Place the glyph on the stave\n        glyph.setYShift(stave.getYForLine(acc.line));\n        if (this.glyphs.length > 0) {\n            const prevGlyph = this.glyphs[this.glyphs.length - 1];\n            glyph.setXShift(prevGlyph.getXShift() + prevGlyph.getWidth() + extraWidth);\n        }\n        this.glyphs.push(glyph);\n        // Expand size of key signature\n        this.width += glyph.getWidth() + extraWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancelAccList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const differentTypes = this.accList.length > 0 && cancelAccList.length > 0 && cancelAccList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = differentTypes ? cancelAccList.length : cancelAccList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!differentTypes) {\n                index = cancelAccList.length - naturals + i;\n            }\n            const acc = cancelAccList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancelAccList[0].type,\n        };\n    }\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1], stave);\n            }\n        }\n        this.formatted = true;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            glyph.renderText(ctx, this.x, 0);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    constructor(type, x, yShift) {\n        super();\n        this.symbolType = type;\n        this.x = x;\n        this.xShift = 0;\n        this.yShift = yShift;\n    }\n    setShiftX(x) {\n        this.xShift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.yShift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbolType) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSegnoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSegnoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = '\\ue048' /*coda*/;\n        this.renderText(stave.checkContext(), x, y + Tables.lookupMetric('Repetition.coda.offsetY'));\n        return this;\n    }\n    drawSegnoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines());\n        this.text = '\\ue047' /*segno*/;\n        this.renderText(stave.checkContext(), x, y + Tables.lookupMetric('Repetition.segno.offsetY'));\n        return this;\n    }\n    drawSymbolText(stave, x, text, drawCoda) {\n        const ctx = stave.checkContext();\n        let textX = 0;\n        this.text = text;\n        if (drawCoda) {\n            this.text += ' \\ue048' /*coda*/;\n        }\n        this.setFont(Tables.lookupMetricFontInfo('Repetition.text'));\n        switch (this.symbolType) {\n            // To the left\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                textX = stave.getVerticalBarWidth();\n                break;\n            // To the right\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n            default:\n                textX =\n                    x -\n                        (stave.getNoteStartX() - this.x) +\n                        stave.getWidth() -\n                        this.width -\n                        Tables.lookupMetric('Repetition.text.offsetX');\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) + Tables.lookupMetric('Repetition.text.offsetY');\n        this.renderText(ctx, textX, y);\n        return this;\n    }\n}\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    constructor(section, x, yShift, drawRect = true) {\n        super();\n        this.setStaveSection(section);\n        this.x = x;\n        this.yShift = yShift;\n        this.drawRect = drawRect;\n    }\n    setStaveSection(section) {\n        this.text = section;\n        this.measureText();\n        return this;\n    }\n    draw(stave, xShift) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        const headroom = -1 * this.textMetrics.actualBoundingBoxDescent;\n        const width = this.width + 2 * padding; // add left & right padding\n        const height = this.height + 2 * padding; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.yShift;\n        const x = this.x + xShift;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        this.renderText(ctx, xShift + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Radosaw Eichler 2012\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _StaveTempo_durationToCode;\nimport { Element } from './element';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    constructor(tempo, x, shiftY) {\n        super();\n        _StaveTempo_durationToCode.set(this, {\n            '1/2': '\\ue1d0' /*metNoteDoubleWhole*/,\n            1: '\\ueca2' /*metNoteWhole*/,\n            2: '\\ueca3' /*metNoteHalfUp*/,\n            4: '\\ueca5' /*metNoteQuarterUp*/,\n            8: '\\ueca7' /*metNote8thUp*/,\n            16: '\\ueca9' /*metNote16thUp*/,\n            32: '\\uecab' /*metNote32ndUp*/,\n            64: '\\uecad' /*metNote64thUp*/,\n            128: '\\uecaf' /*metNote128thUp*/,\n            256: '\\uecb1' /*metNote256thUp*/,\n            512: '\\uecb3' /*metNote512thUp*/,\n            1024: '\\uecb5' /*metNote1024thUp*/,\n        });\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.setXShift(10);\n        this.setYShift(shiftY);\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    draw(stave, shiftX) {\n        var _a;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = (_a = this.tempo.dots) !== null && _a !== void 0 ? _a : 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + shiftX;\n        const y = stave.getYForTopText(1);\n        ctx.save();\n        if (name) {\n            this.text = name;\n            this.textFont = Tables.lookupMetricFontInfo('StaveTempo.name');\n            this.measureText();\n            this.renderText(ctx, shiftX, y);\n            x += this.getWidth();\n        }\n        if (duration && bpm) {\n            if (name) {\n                x += 2;\n                ctx.setFont(Tables.lookupMetricFontInfo('StaveTempo'));\n                ctx.fillText('(', x + this.xShift, y + this.yShift);\n                x += 5;\n            }\n            x += 3;\n            const el = new Element('StaveTempo.glyph');\n            el.setText(__classPrivateFieldGet(this, _StaveTempo_durationToCode, \"f\")[Tables.sanitizeDuration(duration)]);\n            el.measureText();\n            el.renderText(ctx, x + this.xShift, y + this.yShift);\n            x += el.getWidth();\n            // Draw dot\n            ctx.setFont(Tables.lookupMetricFontInfo('StaveTempo.glyph'));\n            for (let i = 0; i < dots; i++) {\n                x += 6;\n                ctx.fillText('\\uecb7' /*metAugmentationDot*/, x + this.xShift, y + 2 + this.yShift);\n            }\n            ctx.setFont(Tables.lookupMetricFontInfo('StaveTempo'));\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 + this.xShift, y + this.yShift);\n        }\n        ctx.restore();\n        return this;\n    }\n}\n_StaveTempo_durationToCode = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Font } from './font';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: '\\uE047' /*segno*/,\n            tr: '\\uE566' /*ornamentTrill*/,\n            mordent: '\\uE56D' /*ornamentMordent*/,\n            mordentUpper: '\\uE56C' /*ornamentShortTrill*/,\n            mordentLower: '\\uE56D' /*ornamentMordent*/,\n            f: '\\uE522' /*dynamicForte*/,\n            p: '\\uE520' /*dynamicPiano*/,\n            m: '\\uE521' /*dynamicMezzo*/,\n            s: '\\uE524' /*dynamicSforzando*/,\n            z: '\\uE525' /*dynamicZ*/,\n            coda: '\\uE048' /*coda*/,\n            pedalOpen: '\\uE650' /*keyboardPedalPed*/,\n            pedalClose: '\\uE655' /*keyboardPedalUp*/,\n            caesuraStraight: '\\uE4D1' /*caesura*/,\n            caesuraCurved: '\\uE4D4' /*caesuraCurved*/,\n            breath: '\\uE4CE' /*breathMarkComma*/,\n            tick: '\\uE4CF' /*breathMarkTick*/,\n            turn: '\\uE567' /*ornamentTurn*/,\n            turnInverted: '\\uE569' /*ornamentTurnSlash*/,\n        };\n    }\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.text = (_a = noteStruct.text) !== null && _a !== void 0 ? _a : '';\n        if (noteStruct.glyph) {\n            this.text += TextNote.GLYPHS[noteStruct.glyph] || noteStruct.glyph;\n        }\n        if (noteStruct.font) {\n            this.setFont(noteStruct.font);\n        }\n        else if (noteStruct.glyph === undefined) {\n            this.setFont(Tables.lookupMetricFontInfo('TextNote.text.fontSize'));\n        }\n        else {\n            this.measureText();\n        }\n        // Scale the font size by 1/1.3.\n        const smallerFontSize = Font.convertSizeToPointValue(this.textFont.size) * 0.769231;\n        if (noteStruct.superscript) {\n            this.superscript = new Element('TexNote.subSuper');\n            this.superscript.setText(noteStruct.superscript);\n            this.superscript.setFontSize(smallerFontSize);\n        }\n        if (noteStruct.subscript) {\n            this.subscript = new Element('TexNote.subSuper');\n            this.subscript.setText(noteStruct.subscript);\n            this.subscript.setFontSize(smallerFontSize);\n        }\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignoreTicks = noteStruct.ignoreTicks || false;\n        this.justification = TextJustification.LEFT;\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        const y = stave.getYForLine(this.line + -3);\n        this.applyStyle(ctx);\n        this.renderText(ctx, x, y);\n        const height = this.getHeight();\n        if (this.superscript) {\n            this.superscript.renderText(ctx, x + this.width + 2, y - height / 2.2);\n        }\n        if (this.subscript) {\n            this.subscript.renderText(ctx, x + this.width + 2, y + height / 2.2 - 1);\n        }\n        this.restoreStyle(ctx);\n    }\n}\nTextNote.Justification = TextJustification;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Larry Kuhns 2011\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, label, x, yShift) {\n        super();\n        this.type = type;\n        this.x = x;\n        this.yShift = yShift;\n        this.text = label;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const topY = stave.getYForTopText(stave.getNumLines()) + this.yShift;\n        const vertHeight = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.type) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, topY, 1, vertHeight);\n                ctx.fillRect(this.x + x + width, topY, 1, vertHeight);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.type === VoltaType.BEGIN || this.type === VoltaType.BEGIN_END) {\n            this.renderText(ctx, x + 5, topY - this.yShift + 15);\n        }\n        ctx.fillRect(this.x + x, topY, width, 1);\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2014\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    constructor(text, position, options = {}) {\n        var _a, _b, _c;\n        super();\n        this.setText(text);\n        this.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        this.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        this.position = position;\n        this.justification = (_c = options.justification) !== null && _c !== void 0 ? _c : TextNote.Justification.CENTER;\n        this.measureText();\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - this.width - 24;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX();\n                if (this.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - this.width / 2;\n                }\n                else if (this.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - this.width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2);\n                }\n                else {\n                    y = stave.getYForBottomText(2);\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        this.renderText(ctx, x, y + 4);\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Element } from './element';\nimport { Glyphs } from './glyphs';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) === false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\n/**\n * A TimeSignature is a StaveModifier that can make its appropriate Glyphs directly from\n * a provided \"timeSpec\" such as \"4/4\", \"C|\" (cut time), or even something more advanced\n * such as \"3/4(6/8)\" or \"2/4+5/8\".\n */\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validateArgs = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.isNumeric = true;\n        this.topStartX = 0;\n        this.botStartX = 0;\n        this.lineShift = 0;\n        this.topText = new Element();\n        this.botText = new Element();\n        this.validateArgs = validateArgs;\n        const padding = customPadding;\n        this.topLine = 1;\n        this.bottomLine = 3;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    static getTimeSigCode(key, smallSig = false) {\n        let code = Glyphs.null;\n        switch (key) {\n            case 'C':\n                code = Glyphs.timeSigCommon;\n                break;\n            case 'C|':\n                code = Glyphs.timeSigCutCommon;\n                break;\n            case '+':\n                code = smallSig ? Glyphs.timeSigPlusSmall : Glyphs.timeSigPlus;\n                break;\n            case '-':\n                code = Glyphs.timeSigMinus;\n                break;\n            case '(':\n                code = smallSig ? Glyphs.timeSigParensLeftSmall : Glyphs.timeSigParensLeft;\n                break;\n            case ')':\n                code = smallSig ? Glyphs.timeSigParensRightSmall : Glyphs.timeSigParensRight;\n                break;\n            default:\n                code = String.fromCodePoint(0xe080 + Number(key[0])) /* timeSigN = Glyphs.timeSig0 + N */;\n                break;\n        }\n        return code;\n    }\n    /**\n     * Returns a new TimeSignatureGlyph (a Glyph subclass that knows how to draw both\n     * top and bottom digits along with plus signs etc.)\n     */\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        // note that 'code' is ignored by TimeSignatureGlyph when rendering.\n        let txt = '';\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(topDigits[i], botDigits.length > 0);\n            txt += code;\n        }\n        this.topText.setText(txt);\n        this.topText.measureText();\n        topWidth = this.topText.getWidth();\n        height = this.topText.getHeight();\n        let botWidth = 0;\n        txt = '';\n        for (let i = 0; i < botDigits.length; ++i) {\n            const code = TimeSignature.getTimeSigCode(botDigits[i], true);\n            txt += code;\n        }\n        this.botText.setText(txt);\n        this.botText.measureText();\n        botWidth = this.botText.getWidth();\n        height = Math.max(height, this.botText.getHeight());\n        // If the height of the digits is more than two staff spaces (20), shift to the next line\n        // in order to center the digits on lines 1 and 5 rather than 2 and 4.\n        this.lineShift = height > 22 ? 1 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n    }\n    /**\n     * Set a new time signature specification without changing customPadding, etc.\n     *\n     * The getter for this is `getTimeSpec` not `getTimeSig`.\n     */\n    setTimeSig(timeSpec) {\n        var _a, _b;\n        this.timeSpec = timeSpec;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const code = TimeSignature.getTimeSigCode(timeSpec);\n            this.line = 2;\n            this.text = code;\n            this.measureText();\n            this.isNumeric = false;\n        }\n        else {\n            if (this.validateArgs) {\n                assertIsValidTimeSig(timeSpec);\n            }\n            const parts = timeSpec.split('/');\n            this.line = 0;\n            this.isNumeric = true;\n            this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : '');\n        }\n        return this;\n    }\n    /**\n     * Return the timeSpec (such as '4/4' or 'C|' or even '2/4+3/8') of the TimeSignature\n     */\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    /**\n     * Return the staff line that the TimeSignature sits on.  Generally 0 for numerator/\n     * denominator time signatures such as 3/4 and 2 for cut/common.\n     */\n    getLine() {\n        return this.line;\n    }\n    /**\n     * Set the line number that the TimeSignature sits on.  Half-values are acceptable\n     * for spaces, etc. Can be altered, for instance, for signatures that sit above the\n     * staff in large orchestral scores.\n     */\n    setLine(line) {\n        this.line = line;\n    }\n    /**\n     * Return a boolean on whether this TimeSignature is drawn with one or more numbers\n     * (such as 4/4) or not (as in cut time).\n     */\n    getIsNumeric() {\n        return this.isNumeric;\n    }\n    /**\n     * Set whether this TimeSignature is drawn with one or more numbers.\n     */\n    setIsNumeric(isNumeric) {\n        this.isNumeric = isNumeric;\n    }\n    /**\n     * Draw the time signature on a Stave using its RenderContext.  Both setStave\n     * and setContext must already be run.\n     */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.drawAt(ctx, stave, this.x);\n    }\n    drawAt(ctx, stave, x) {\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        if (this.isNumeric) {\n            let startX = x + this.topStartX;\n            let y = 0;\n            if (this.botText.getText().length > 0)\n                y = stave.getYForLine(this.topLine - this.lineShift);\n            else\n                y = (stave.getYForLine(this.topLine) + stave.getYForLine(this.bottomLine)) / 2;\n            this.topText.renderText(ctx, startX, y);\n            startX = x + this.botStartX;\n            y = stave.getYForLine(this.bottomLine + this.lineShift);\n            this.botText.renderText(ctx, startX, y);\n        }\n        else {\n            this.renderText(ctx, x - this.x, stave.getYForLine(this.line));\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        return Tables.lookupMetric('Stave.padding') + Tables.lookupMetric('Stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        return Tables.lookupMetric('Stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.startX = x + 5;\n        this.endX = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.options = Object.assign({ verticalBarWidth: 10, numLines: 5, fillStyle: '#999999', leftBar: true, rightBar: true, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, spaceAboveStaffLn: 4, spaceBelowStaffLn: 4, topTextPosition: 1, bottomTextPosition: 4, lineConfig: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.leftBar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.rightBar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacingBetweenLinesPx * spacing;\n    }\n    resetLines() {\n        this.options.lineConfig = [];\n        for (let i = 0; i < this.options.numLines; i++) {\n            this.options.lineConfig.push({ visible: true });\n        }\n        this.height = (this.options.numLines + this.options.spaceAboveStaffLn) * this.options.spacingBetweenLinesPx;\n        this.options.bottomTextPosition = this.options.numLines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.startX = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.startX;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.endX;\n    }\n    getTieStartX() {\n        return this.startX;\n    }\n    getTieEndX() {\n        return this.endX;\n    }\n    getNumLines() {\n        return this.options.numLines;\n    }\n    setNumLines(n) {\n        this.options.numLines = n;\n        this.resetLines();\n        return this;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.startX += shift;\n        this.endX += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.endX = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.endX);\n        return this;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fillStyle, strokeStyle: this.options.fillStyle, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let startX = this.startX - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && startX > begBarline.getWidth()) {\n            startX -= begBarline.getWidth();\n        }\n        return startX;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, label, y) {\n        this.modifiers.push(new Volta(type, label, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setStaveText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacingBetweenLinesPx;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const scoreBottom = this.getYForLine(options.numLines) + options.spaceBelowStaffLn * spacing;\n        return scoreBottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.numLines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.topTextPosition);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottomTextPosition + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacingBetweenLinesPx;\n        const headroom = options.spaceAboveStaffLn;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        var _a, _b, _c, _d;\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.startX = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = (_a = layoutMetrics.xMax) !== null && _a !== void 0 ? _a : 0;\n                    widths.paddingRight = (_b = layoutMetrics.paddingRight) !== null && _b !== void 0 ? _b : 0;\n                }\n                widths.left = (_c = -layoutMetrics.xMin) !== null && _c !== void 0 ? _c : 0;\n                widths.paddingLeft = (_d = layoutMetrics.paddingLeft) !== null && _d !== void 0 ? _d : 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.endX = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.applyStyle();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const numLines = this.options.numLines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < numLines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.lineConfig[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.verticalBarWidth;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.lineConfig;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param lineNumber The index of the line to configure.\n     * @param lineConfig An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(lineNumber, lineConfig) {\n        if (lineNumber >= this.options.numLines || lineNumber < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (lineConfig.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof lineConfig.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.lineConfig[lineNumber] = lineConfig;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param linesConfiguration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the numLines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(linesConfiguration) {\n        if (linesConfiguration.length !== this.options.numLines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const lineConfig in linesConfiguration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (linesConfiguration[lineConfig].visible === undefined) {\n                linesConfiguration[lineConfig] = this.options.lineConfig[lineConfig];\n            }\n            this.options.lineConfig[lineConfig] = Object.assign(Object.assign({}, this.options.lineConfig[lineConfig]), linesConfiguration[lineConfig]);\n        }\n        this.options.lineConfig = linesConfiguration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            // Calculate min start X for the category\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Consider only the first instance\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Calculate adjustement required for the stave\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                // Apply adjustment to all the modifiers in and beyond the category\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                // Apply adjustment also to note start.\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        // Make sure that staves are formatted\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        // Align Clefs\n        adjustCategoryStartX(Category.Clef);\n        // Align key signatures\n        adjustCategoryStartX(Category.KeySignature);\n        // Align time signatures\n        adjustCategoryStartX(Category.TimeSignature);\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() === BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let xShift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        xShift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + xShift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    constructor(topStave, bottomStave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.topStave = topStave;\n        this.bottomStave = bottomStave;\n        this.type = StaveConnector.type.DOUBLE;\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.xShift = 0;\n        this.texts = [];\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        var _a, _b;\n        const textElement = new Element('StaveConnector.text');\n        textElement.setText(text);\n        textElement.setXShift((_a = options.shiftX) !== null && _a !== void 0 ? _a : 0);\n        textElement.setYShift((_b = options.shiftY) !== null && _b !== void 0 ? _b : 0);\n        textElement.measureText();\n        this.texts.push(textElement);\n        return this;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.topStave.getYForLine(0);\n        let botY = this.bottomStave.getYForLine(this.bottomStave.getNumLines() - 1) + this.thickness;\n        let width = 3;\n        let topX = this.topStave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.topStave.getX() + this.topStave.getWidth();\n        }\n        let attachmentHeight = botY - topY;\n        const element = new Element();\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= 5;\n                topY -= this.thickness;\n                attachmentHeight += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.topStave.getX() - 2 + this.xShift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachmentHeight / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachmentHeight;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachmentHeight;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachmentHeight;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachmentHeight;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachmentHeight;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachmentHeight;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachmentHeight = botY - topY;\n                element.setText('\\ue003' /* bracketTop */);\n                element.renderText(ctx, topX - 5, topY);\n                element.setText('\\ue004' /* bracketBottom */);\n                element.renderText(ctx, topX - 5, botY);\n                topX -= 5;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.xShift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachmentHeight -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachmentHeight);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachmentHeight);\n        }\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const textElement = this.texts[i];\n            const x = this.topStave.getX() - textElement.getWidth() - 24;\n            const y = (this.topStave.getYForLine(0) + this.bottomStave.getBottomLineY()) / 2;\n            textElement.renderText(ctx, x, y + 4);\n        }\n    }\n}\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util';\nimport { Voice } from './voice';\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length === 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        var _a, _b;\n        options = Object.assign({ stavePadding: Tables.lookupMetric('Stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${((_a = formatter.totalCost) !== null && _a !== void 0 ? _a : 0).toFixed(2)} Shift: ${((_b = formatter.totalShift) !== null && _b !== void 0 ? _b : 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autoBeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autoBeam: true})`\n     *    * Setting `alignRests` a struct is needed `(context, stave, notes, {alignRests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autoBeam: true, alignRests: true})`\n     *    * `autoBeam` automatically generates beams for the notes.\n     *    * `alignRests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            autoBeam: false,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.autoBeam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.autoBeam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { alignRests: options.alignRests })\n            .formatToStave([voice], stave, { alignRests: options.alignRests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autoBeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autoBeam` automatically generates beams for the notes.\n     *    * `alignRests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autoBeam, params) {\n        let opts = {\n            autoBeam,\n            alignRests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.autoBeam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.autoBeam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { alignRests: opts.alignRests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { alignRests: opts.alignRests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const line = currTickable.getLineForRest();\n                if (line !== 3) {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.lookupMetric('Stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length === 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const configMinPadding = Tables.lookupMetric('Stave.endPaddingMin');\n        const configMaxPadding = Tables.lookupMetric('Stave.endPaddingMax');\n        const leftPadding = Tables.lookupMetric('Stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.alignRests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ alignRests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.alignRests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.numNotes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   numNotes: fit this many notes into...\n *   notesOccupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of numNotes : notesOccupied.\n *       numNotes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notesOccupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between numNotes and\n *     notesOccupied is greater than 1.\n *\n *   yOffset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    constructor(notes, options = {}) {\n        super();\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.numNotes = this.options.numNotes !== undefined ? this.options.numNotes : notes.length;\n        this.notesOccupied = this.options.notesOccupied || 2;\n        if (this.options.bracketed !== undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed !== undefined ? this.options.ratioed : Math.abs(this.notesOccupied - this.numNotes) > 1;\n        this.textElement = new Element('Tuplet');\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.numNotes;\n    }\n    getNotesOccupied() {\n        return this.notesOccupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notesOccupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        let numerator = '';\n        let denominator = '';\n        let n = this.numNotes;\n        while (n >= 1) {\n            numerator = String.fromCharCode(0xe880 /* tuplet0 */ + (n % 10)) + numerator;\n            n = Math.floor(n / 10);\n        }\n        if (this.ratioed) {\n            n = this.notesOccupied;\n            while (n >= 1) {\n                denominator = String.fromCharCode(0xe880 /* tuplet0 */ + (n % 10)) + denominator;\n                n = Math.floor(n / 10);\n            }\n            denominator = '\\uE88A' /* tupletColon */ + denominator;\n        }\n        this.textElement.setText(numerator + denominator);\n        this.textElement.measureText();\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const firstNote = this.notes[0];\n        let maxTupletCount = countTuplets(firstNote, location);\n        let minTupletCount = countTuplets(firstNote, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        var _a;\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nestedTupletYOffset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual yOffset:\n        const yOffset = (_a = this.options.yOffset) !== null && _a !== void 0 ? _a : 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base yPosition\n        const firstNote = this.notes[0];\n        let yPosition;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            yPosition = firstNote.checkStave().getYForLine(0) - 1.5 * Tables.STAVE_LINE_DISTANCE;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().topTextLine);\n                }\n                const modY = note.getYForTopText(modLines) - 2 * Tables.STAVE_LINE_DISTANCE;\n                if (note.hasStem() || note.isRest()) {\n                    const topY = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tables.STAVE_LINE_DISTANCE\n                        : note.getStemExtents().baseY - 2 * Tables.STAVE_LINE_DISTANCE;\n                    yPosition = Math.min(topY, yPosition);\n                    if (modLines > 0) {\n                        yPosition = Math.min(modY, yPosition);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = 4; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().textLine + 1);\n                }\n            });\n            yPosition = firstNote.checkStave().getYForLine(lineCheck) + 2 * Tables.STAVE_LINE_DISTANCE;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottomY = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + 2 * Tables.STAVE_LINE_DISTANCE\n                        : this.notes[i].getStemExtents().topY + Tables.STAVE_LINE_DISTANCE;\n                    if (bottomY > yPosition) {\n                        yPosition = bottomY;\n                    }\n                }\n            }\n        }\n        return yPosition + nestedTupletYOffset + yOffset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        let xPos = 0;\n        let yPos = 0;\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const firstNote = this.notes[0];\n        const lastNote = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            xPos = firstNote.getStemX();\n            this.width = lastNote.getStemX() - xPos;\n        }\n        else {\n            xPos = firstNote.getTieLeftX() - 5;\n            this.width = lastNote.getTieRightX() - xPos + 5;\n        }\n        // determine y value for tuplet\n        yPos = this.getYPosition();\n        const notationCenterX = xPos + this.width / 2;\n        const notationStartX = notationCenterX - this.textElement.getWidth() / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const lineWidth = this.width / 2 - this.textElement.getWidth() / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (lineWidth > 0) {\n                ctx.fillRect(xPos, yPos, lineWidth, 1);\n                ctx.fillRect(xPos + this.width / 2 + this.textElement.getWidth() / 2 + 5, yPos, lineWidth, 1);\n                ctx.fillRect(xPos, yPos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(xPos + this.width, yPos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw text\n        this.textElement.renderText(ctx, notationStartX, yPos + this.textElement.getHeight() / 2);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Beam_stemDirection, _Beam_ticks, _Beam_yShift, _Beam_breakOnIndexes, _Beam_beamCount, _Beam_unbeamable, _Beam_forcedPartialDirections;\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(timeSig) {\n        if (!timeSig || timeSig === 'c') {\n            timeSig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[timeSig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(timeSig.split('/')[0], 10);\n            const beatValue = parseInt(timeSig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stemDirection a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stemDirection, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stemDirection });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stemDirection: -1,\n     *   beamRests: true,\n     *   beamMiddleOnly: true,\n     *   showStemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stemDirection set to apply the same direction to all notes\n     * @param config.beamRests set to `true` to include rests in the beams\n     * @param config.beamMiddleOnly set to `true` to only beam rests in the middle of the beat\n     * @param config.showStemlets set to `true` to draw stemlets for rests\n     * @param config.maintainStemDirections set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(notes) {\n            return notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beamRests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beamRests && config.beamMiddleOnly && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintainStemDirections && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintainStemDirections) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stemDirection) {\n                        stemDirection = config.stemDirection;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.showStemlets) {\n                beam.renderOptions.showStemlets = true;\n            }\n            if (config.secondaryBreaks) {\n                beam.renderOptions.secondaryBreakTicks = Tables.durationToTicks(config.secondaryBreaks);\n            }\n            if (config.flatBeams === true) {\n                beam.renderOptions.flatBeams = true;\n                beam.renderOptions.flatBeamOffset = config.flatBeamOffset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stemDirection === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, autoStem = false) {\n        super();\n        this.slope = 0;\n        _Beam_stemDirection.set(this, void 0);\n        _Beam_ticks.set(this, void 0);\n        _Beam_yShift.set(this, 0);\n        _Beam_breakOnIndexes.set(this, void 0);\n        _Beam_beamCount.set(this, void 0);\n        _Beam_unbeamable.set(this, void 0);\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        _Beam_forcedPartialDirections.set(this, {});\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        __classPrivateFieldSet(this, _Beam_ticks, notes[0].getIntrinsicTicks(), \"f\");\n        if (__classPrivateFieldGet(this, _Beam_ticks, \"f\") >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        __classPrivateFieldSet(this, _Beam_stemDirection, notes[0].getStemDirection(), \"f\");\n        let stemDirection = __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        // Figure out optimal stem direction based on given notes\n        if (autoStem && isStaveNote(notes[0])) {\n            stemDirection = calculateStemDirection(notes);\n        }\n        else if (autoStem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stemWeight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stemDirection = stemWeight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (autoStem) {\n                note.setStemDirection(stemDirection);\n                __classPrivateFieldSet(this, _Beam_stemDirection, stemDirection, \"f\");\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        __classPrivateFieldSet(this, _Beam_beamCount, this.getBeamCount(), \"f\");\n        __classPrivateFieldSet(this, _Beam_breakOnIndexes, [], \"f\");\n        this.renderOptions = {\n            beamWidth: 5,\n            maxSlope: 0.25,\n            minSlope: -0.25,\n            slopeIterations: 20,\n            slopeCost: 100,\n            showStemlets: false,\n            stemletExtension: 7,\n            partialBeamLength: 10,\n            flatBeams: false,\n            minFlatBeamOffset: 15,\n        };\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beamCount);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indexes` to break the secondary beam at. */\n    breakSecondaryAt(indexes) {\n        __classPrivateFieldSet(this, _Beam_breakOnIndexes, indexes, \"f\");\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        __classPrivateFieldGet(this, _Beam_forcedPartialDirections, \"f\")[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete __classPrivateFieldGet(this, _Beam_forcedPartialDirections, \"f\")[noteIndex];\n        return this;\n    }\n    /**\n     * @param firstX specified in pixels.\n     * @param firstY specified in pixels.\n     *\n     * @return the y coordinate for linear function.\n     */\n    getSlopeY(x, firstX, firstY, slope) {\n        return firstY + (x - firstX) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, renderOptions: { maxSlope, minSlope, slopeIterations, slopeCost }, } = this;\n        const stemDirection = __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (maxSlope - minSlope) / slopeIterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = minSlope; slope <= maxSlope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.renderOptions.slopeCost = 0\n            const cost = slopeCost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        __classPrivateFieldSet(this, _Beam_yShift, yShift, \"f\");\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, renderOptions: { beamWidth, minFlatBeamOffset, flatBeamOffset }, } = this;\n        const stemDirection = __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stemDirection === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stemDirection === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        // works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        // based on the highest or lowest note (again, based on the stem\n        // direction). This also takes into account the added height due to\n        // the width of the beams.\n        const extremeTest = minFlatBeamOffset + extremeBeamCount * beamWidth * 1.5;\n        const newOffset = extremeY + extremeTest * -stemDirection;\n        if (stemDirection === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stemDirection === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flatBeamOffset) {\n            // Set the offset for the group based on the calculations above.\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.DOWN && offset > flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        else if (stemDirection === Stem.UP && offset < flatBeamOffset) {\n            this.renderOptions.flatBeamOffset = offset;\n        }\n        // For flat beams, the slope and yShift are 0.\n        this.slope = 0;\n        __classPrivateFieldSet(this, _Beam_yShift, 0, \"f\");\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.renderOptions.flatBeams && this.renderOptions.flatBeamOffset) {\n            beamY = this.renderOptions.flatBeamOffset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, renderOptions: { showStemlets, stemletExtension, beamWidth }, } = this;\n        const yShift = __classPrivateFieldGet(this, _Beam_yShift, \"f\");\n        const beamCount = __classPrivateFieldGet(this, _Beam_beamCount, \"f\");\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + yShift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                // Determine necessary extension for cross-stave notes in the beam group\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== __classPrivateFieldGet(this, _Beam_stemDirection, \"f\")) {\n                    const beamCount = note.getGlyphProps().beamCount;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.renderOptions.beamWidth;\n                    /* This will be required if the partial beams are moved to the note side.\n                    if (i > 0 && note.getGlyph().beamCount > 1) {\n                      const prevBeamCount = this.notes[i - 1].getGlyph().beamCount;\n                      const beamDiff = Math.abs(prevBeamCount - beamCount);\n                      if (beamDiff > 0) crossStemExtension -= beamDiff * (this.renderOptions.beamWidth * 1.5);\n                    }\n                    */\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && showStemlets) {\n                    const totalBeamWidth = (beamCount - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemletExtension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prevTick, tick, nextTick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = __classPrivateFieldGet(this, _Beam_forcedPartialDirections, \"f\")[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookupDuration = `${Tables.durationToNumber(duration) / 2}`;\n        const prevNoteGetsBeam = prevTick < Tables.durationToTicks(lookupDuration);\n        const nextNoteGetsBeam = nextTick < Tables.durationToTicks(lookupDuration);\n        const noteGetsBeam = tick < Tables.durationToTicks(lookupDuration);\n        if (prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_BOTH;\n        }\n        else if (prevNoteGetsBeam && !nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_LEFT;\n        }\n        else if (!prevNoteGetsBeam && nextNoteGetsBeam && noteGetsBeam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookupDuration, prevTick, tick, nextTick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tickOfDuration = Tables.durationToTicks(duration);\n        let beamStarted = false;\n        const beamLines = [];\n        let currentBeam = undefined;\n        const partialBeamLength = this.renderOptions.partialBeamLength;\n        let previousShouldBreak = false;\n        let tickTally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tickTally += ticks;\n            let shouldBreak = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indexes were set up through breakSecondaryAt()\n                shouldBreak = __classPrivateFieldGet(this, _Beam_breakOnIndexes, \"f\").indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.renderOptions.secondaryBreakTicks && tickTally >= this.renderOptions.secondaryBreakTicks) {\n                    tickTally = 0;\n                    shouldBreak = true;\n                }\n            }\n            const noteGetsBeam = note.getIntrinsicTicks() < tickOfDuration;\n            const stemX = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prevNote = this.notes[i - 1];\n            const nextNote = this.notes[i + 1];\n            const nextNoteGetsBeam = nextNote && nextNote.getIntrinsicTicks() < tickOfDuration;\n            const prevNoteGetsBeam = prevNote && prevNote.getIntrinsicTicks() < tickOfDuration;\n            const beamAlone = prevNote && nextNote && noteGetsBeam && !prevNoteGetsBeam && !nextNoteGetsBeam;\n            // const beamAlone = noteGetsBeam && !prevNoteGetsBeam && !nextNoteGetsBeam;\n            if (noteGetsBeam) {\n                // This note gets a beam at the current level\n                if (beamStarted) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    currentBeam = beamLines[beamLines.length - 1];\n                    currentBeam.end = stemX;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (shouldBreak) {\n                        beamStarted = false;\n                        if (nextNote && !nextNoteGetsBeam && currentBeam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    currentBeam = { start: stemX, end: undefined };\n                    beamStarted = true;\n                    if (beamAlone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prevTick = prevNote.getIntrinsicTicks();\n                        const nextTick = nextNote.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beamDirection = this.lookupBeamDirection(duration, prevTick, tick, nextTick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beamDirection)) {\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                        else {\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                    }\n                    else if (!nextNoteGetsBeam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previousShouldBreak || i === 0) && nextNote) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            currentBeam.end = currentBeam.start + partialBeamLength;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            currentBeam.end = currentBeam.start - partialBeamLength;\n                        }\n                    }\n                    else if (shouldBreak) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        currentBeam.end = currentBeam.start - partialBeamLength;\n                        beamStarted = false;\n                    }\n                    beamLines.push(currentBeam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beamStarted = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previousShouldBreak = shouldBreak;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const lastBeam = beamLines[beamLines.length - 1];\n        if (lastBeam && lastBeam.end === undefined) {\n            lastBeam.end = lastBeam.start - partialBeamLength;\n        }\n        return beamLines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                stem.setNoteHeadXBounds(stemX, stemX);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const validBeamDurations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.renderOptions.beamWidth * __classPrivateFieldGet(this, _Beam_stemDirection, \"f\");\n        // Draw the beams.\n        for (let i = 0; i < validBeamDurations.length; ++i) {\n            const duration = validBeamDurations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beamLine = beamLines[j];\n                const startBeamX = beamLine.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beamLine.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.renderOptions.flatBeams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (__classPrivateFieldGet(this, _Beam_unbeamable, \"f\"))\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n_Beam_stemDirection = new WeakMap(), _Beam_ticks = new WeakMap(), _Beam_yShift = new WeakMap(), _Beam_breakOnIndexes = new WeakMap(), _Beam_beamCount = new WeakMap(), _Beam_unbeamable = new WeakMap(), _Beam_forcedPartialDirections = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom !== 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom !== 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    constructor(type, size = 'default', annotation) {\n        super({ duration: 'b' });\n        this.setType(type, size, annotation);\n        this.ignoreTicks = true;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.clef = new Clef(type, size, annotation);\n        this.setWidth(this.clef.getWidth());\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.clef.renderText(ctx, this.getAbsoluteX() - this.x, stave.getYForLine(this.clef.line));\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Helper to draw the hairpin.\nfunction renderHairpin(ctx, params) {\n    const beginX = params.beginX;\n    const endX = params.endX;\n    const y = params.y;\n    const halfHeight = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(beginX, y - halfHeight);\n        ctx.lineTo(endX, y);\n        ctx.lineTo(beginX, y + halfHeight);\n    }\n    else {\n        ctx.moveTo(endX, y - halfHeight);\n        ctx.lineTo(beginX, y);\n        ctx.lineTo(endX, y + halfHeight);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        var _a;\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extendLeft: 0,\n            extendRight: 0,\n            // Vertical shift\n            yShift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = (_a = noteStruct.line) !== null && _a !== void 0 ? _a : 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tickContext = this.getTickContext();\n        const nextContext = TickContext.getNextContext(tickContext);\n        const beginX = this.getAbsoluteX();\n        const endX = nextContext ? nextContext.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', beginX - endX);\n        renderHairpin(ctx, {\n            beginX: beginX - this.options.extendLeft,\n            endX: endX + this.options.extendRight,\n            y: y + this.options.yShift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    xShift: pixels to shift\n    //    yShift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.renderOptions = Object.assign({ thickness: 2, xShift: 0, yShift: 10, position: CurvePosition.NEAR_HEAD, positionEnd: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const xShift = this.renderOptions.xShift;\n        const yShift = this.renderOptions.yShift * params.direction;\n        const firstX = params.firstX + xShift;\n        const firstY = params.firstY + yShift;\n        const lastX = params.lastX - xShift;\n        const lastY = params.lastY + yShift;\n        const thickness = this.renderOptions.thickness;\n        const cps = this.renderOptions.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const controlPointSpacing = (lastX - firstX) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(firstX, firstY);\n        ctx.bezierCurveTo(firstX + controlPointSpacing + cp0x, firstY + cp0y * params.direction, lastX - controlPointSpacing + cp1x, lastY + cp1y * params.direction, lastX, lastY);\n        ctx.bezierCurveTo(lastX - controlPointSpacing + cp1x, lastY + (cp1y + thickness) * params.direction, firstX + controlPointSpacing + cp0x, firstY + (cp0y + thickness) * params.direction, firstX, firstY);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.from;\n        const lastNote = this.to;\n        let firstX;\n        let lastX;\n        let firstY;\n        let lastY;\n        let stemDirection = 0;\n        let metric = 'baseY';\n        let endMetric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.renderOptions.position);\n        const positionEnd = getPosition(this.renderOptions.positionEnd);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            endMetric = 'topY';\n        }\n        if (positionEnd === CurvePosition.NEAR_HEAD) {\n            endMetric = 'baseY';\n        }\n        else if (positionEnd === CurvePosition.NEAR_TOP) {\n            endMetric = 'topY';\n        }\n        if (firstNote) {\n            firstX = firstNote.getTieRightX();\n            stemDirection = firstNote.getStemDirection();\n            firstY = firstNote.getStemExtents()[metric];\n        }\n        else {\n            const stave = lastNote.checkStave();\n            firstX = stave.getTieStartX();\n            firstY = lastNote.getStemExtents()[metric];\n        }\n        if (lastNote) {\n            lastX = lastNote.getTieLeftX();\n            stemDirection = lastNote.getStemDirection();\n            lastY = lastNote.getStemExtents()[endMetric];\n        }\n        else {\n            const stave = firstNote.checkStave();\n            lastX = stave.getTieEndX();\n            lastY = firstNote.getStemExtents()[endMetric];\n        }\n        this.renderCurve({\n            firstX,\n            lastX,\n            firstY,\n            lastY,\n            direction: stemDirection * (this.renderOptions.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const autoStem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) === 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, autoStem });\n        if (!autoStem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// Any glyph that is set to appear on a Stave and take up musical time and graphical space.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignoreTicks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.text = glyph;\n        this.measureText();\n        return this;\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        this.renderText(ctx, x, stave.getYForLine(this.options.line));\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ glyphFontScale: Tables.lookupMetric('fontSize') * GraceNote.SCALE, strokePx: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stemExtensionOverride) {\n            return this.stemExtensionOverride;\n        }\n        let ret = super.getStemExtension();\n        ret = Stem.HEIGHT * this.getStaveNoteScale() - Stem.HEIGHT + ret;\n        return ret;\n    }\n    getStaveNoteScale() {\n        return 2 / 3;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const scale = this.getStaveNoteScale();\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * scale, 8 * scale, {\n                    stem: 6 * scale,\n                    beam: 5 * scale,\n                });\n            }\n            else {\n                const stemDirection = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteHeadWidth = this.noteHeads[0].getWidth();\n                const x = stemDirection === Stem.DOWN ? this.getAbsoluteX() : this.getAbsoluteX() + noteHeadWidth;\n                const defaultOffsetY = (Tables.STEM_HEIGHT * scale) / 2;\n                const y = stemDirection === Stem.DOWN ? noteHeadBounds.yBottom + defaultOffsetY : noteHeadBounds.yTop - defaultOffsetY;\n                if (stemDirection === Stem.DOWN) {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y - noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y + noteHeadWidth,\n                    };\n                }\n                else {\n                    slashBBox = {\n                        x1: x - noteHeadWidth,\n                        y1: y + noteHeadWidth,\n                        x2: x + noteHeadWidth,\n                        y2: y - noteHeadWidth,\n                    };\n                }\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * scale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beamSlope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beamAngle = Math.atan(beamSlope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beamAngle) * slashBeamOffset,\n            dy: Math.sin(beamAngle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slashAngle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusionStemDeltaX = Math.cos(slashAngle) * protrusions.stem * scaleX;\n        const protrusionStemDeltaY = Math.sin(slashAngle) * protrusions.stem;\n        const protrusionBeamDeltaX = Math.cos(slashAngle) * protrusions.beam * scaleX;\n        const protrusionBeamDeltaY = Math.sin(slashAngle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beamSlope;\n        const ret = {\n            x1: stemX - protrusionStemDeltaX,\n            y1: stemY + slashStemOffset - protrusionStemDeltaY,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusionBeamDeltaX,\n            y2: stemY + iPointOnBeam.dy + protrusionBeamDeltaY,\n        };\n        return ret;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignoreTicks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// This class implements multiple measure rests.\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _MultiMeasureRest_hasPaddingLeft, _MultiMeasureRest_hasPaddingRight, _MultiMeasureRest_hasLineThickness, _MultiMeasureRest_hasSymbolSpacing;\nimport { Element } from './element';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    /**\n     *\n     * @param numberOfMeasures Number of measures.\n     * @param options The options object.\n     */\n    constructor(numberOfMeasures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        _MultiMeasureRest_hasPaddingLeft.set(this, false);\n        _MultiMeasureRest_hasPaddingRight.set(this, false);\n        _MultiMeasureRest_hasLineThickness.set(this, false);\n        _MultiMeasureRest_hasSymbolSpacing.set(this, false);\n        const fontSize = (_a = options.numberGlyphPoint) !== null && _a !== void 0 ? _a : Tables.lookupMetric('MultiMeasureRest.fontSize'); // same as TimeSignature.\n        this.textFont.size = fontSize;\n        this.numberOfMeasures = numberOfMeasures;\n        this.text = '';\n        const t = `${this.numberOfMeasures}`;\n        for (const digit of t) {\n            // 0xe080 is timeSig0. We calculate the code point for timeSigN to assemble the digits via SMuFL glyphs.\n            this.text += String.fromCodePoint(0xe080 + Number(digit));\n        }\n        this.measureText();\n        // Keep track of whether these four options were provided.\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasPaddingLeft, typeof options.paddingLeft === 'number', \"f\");\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasPaddingRight, typeof options.paddingRight === 'number', \"f\");\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasLineThickness, typeof options.lineThickness === 'number', \"f\");\n        __classPrivateFieldSet(this, _MultiMeasureRest_hasSymbolSpacing, typeof options.symbolSpacing === 'number', \"f\");\n        this.renderOptions = Object.assign({ useSymbols: false, showNumber: true, numberLine: -0.5, numberGlyphPoint: fontSize, line: 2, spacingBetweenLinesPx: Tables.STAVE_LINE_DISTANCE, serifThickness: 2, semibreveRestGlyphScale: Tables.lookupMetric('fontSize'), paddingLeft: 0, paddingRight: 0, lineThickness: 5, symbolSpacing: 0 }, options);\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.renderOptions;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let txt = '\\ue4ef'; /*restHBarLeft*/\n        const el = new Element();\n        el.setText(txt);\n        el.measureText();\n        // Add middle bars until the right padding is reached\n        for (let i = 1; (i + 2) * el.getWidth() + left <= right; i++) {\n            txt += '\\ue4f0'; /*restHBarMiddle*/\n        }\n        txt += '\\ue4f1'; /*restHBarRight*/\n        el.setText(txt);\n        el.measureText();\n        el.renderText(ctx, left + (right - left) * 0.5 - el.getWidth() * 0.5, y);\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.numberOfMeasures / 4);\n        const n = this.numberOfMeasures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.renderOptions;\n        const elMiddle = new Element();\n        let txt = '';\n        for (let i = 0; i < n4; ++i) {\n            txt += '\\ue4e1' /*restLonga*/ + ' ';\n        }\n        for (let i = 0; i < n2; ++i) {\n            txt += '\\ue4e2' /*restDoubleWhole*/ + ' ';\n        }\n        elMiddle.setText(txt);\n        elMiddle.measureText();\n        const elTop = new Element();\n        txt = '';\n        for (let i = 0; i < n1; ++i) {\n            txt += '\\ue4e3' /*restWhole*/ + ' ';\n        }\n        elTop.setText(txt);\n        elTop.measureText();\n        const width = elMiddle.getWidth() + elTop.getWidth();\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        elMiddle.renderText(ctx, x, yMiddle);\n        x += elMiddle.getWidth();\n        elTop.renderText(ctx, x, yTop);\n        x += elTop.getWidth();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.renderOptions;\n        if (__classPrivateFieldGet(this, _MultiMeasureRest_hasPaddingLeft, \"f\")) {\n            left = stave.getX() + options.paddingLeft;\n        }\n        if (__classPrivateFieldGet(this, _MultiMeasureRest_hasPaddingRight, \"f\")) {\n            right = stave.getX() + stave.getWidth() - options.paddingRight;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacingBetweenLinesPx;\n        if (options.useSymbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.showNumber) {\n            this.renderText(ctx, left + (right - left) * 0.5 - this.width * 0.5, stave.getYForLine(options.numberLine) - this.height * 0.5);\n        }\n    }\n}\n_MultiMeasureRest_hasPaddingLeft = new WeakMap(), _MultiMeasureRest_hasPaddingRight = new WeakMap(), _MultiMeasureRest_hasLineThickness = new WeakMap(), _MultiMeasureRest_hasSymbolSpacing = new WeakMap();\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, ctx, x, y) {\n    var _a;\n    const glyph = new Element(PedalMarking.CATEGORY);\n    glyph.setText((_a = PedalMarking.GLYPHS[name]) !== null && _a !== void 0 ? _a : name);\n    glyph.measureText();\n    glyph.renderText(ctx, x - (glyph.getWidth() - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.customDepressText = '';\n        this.customReleaseText = '';\n        this.renderOptions = {\n            bracketHeight: 10,\n            textMarginRight: 6,\n            bracketLineWidth: 1,\n            color: 'black',\n        };\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.customDepressText = depress || '';\n        this.customReleaseText = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        let prevX;\n        let prevY;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            // Each note triggers the opposite pedal action\n            isPedalDepressed = !isPedalDepressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prevX) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const nextNoteIsSame = notes[index + 1] === note;\n            const prevNoteIsSame = notes[index - 1] === note;\n            let xShift = 0;\n            if (isPedalDepressed) {\n                // Adjustment for release+depress\n                xShift = prevNoteIsSame ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prevNoteIsSame) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.customDepressText) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const textWidth = ctx.measureText(this.customDepressText).width;\n                        ctx.fillText(this.customDepressText, x - textWidth / 2, y);\n                        xShift = textWidth / 2 + this.renderOptions.textMarginRight;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedalDepress', ctx, x, y);\n                        xShift = 20 + this.renderOptions.textMarginRight;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.renderOptions.bracketHeight);\n                    ctx.lineTo(x + xShift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                xShift = nextNoteIsSame ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prevX, prevY);\n                ctx.lineTo(x + xShift, y);\n                ctx.lineTo(x, y - this.renderOptions.bracketHeight);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prevX = x + xShift;\n            prevY = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let isPedalDepressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            isPedalDepressed = !isPedalDepressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            let textWidth = 0;\n            if (isPedalDepressed) {\n                if (this.customDepressText) {\n                    textWidth = ctx.measureText(this.customDepressText).width;\n                    ctx.fillText(this.customDepressText, x - textWidth / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedalDepress', ctx, x, y);\n                }\n            }\n            else {\n                if (this.customReleaseText) {\n                    textWidth = ctx.measureText(this.customReleaseText).width;\n                    ctx.fillText(this.customReleaseText, x - textWidth / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedalRelease', ctx, x, y);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.renderOptions.color);\n        ctx.setFillStyle(this.renderOptions.color);\n        ctx.setFont(Tables.lookupMetricFontInfo('PedalMarking.text'));\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.renderOptions.bracketLineWidth);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedalDepress: '\\uE650' /*keyboardPedalPed*/,\n    pedalRelease: '\\uE655' /*keyboardPedalUp*/,\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { GlyphNote } from './glyphnote';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': '\\uE500' /*repeat1Bar*/,\n    '2': '\\uE501' /*repeat2Bars*/,\n    '4': '\\uE502' /*repeat4Bars*/,\n    slash: '\\uE504' /*repeatBarSlash*/,\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || '\\uE500'; /*repeat1Bar*/\n        super(glyphCode, Object.assign({ duration: 'q', alignCenter: type !== 'slash' }, noteStruct), options);\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `renderOptions`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    firstNote: Note,\n    //    lastNote: Note,\n    //    firstIndexes: [n1, n2, n3],\n    //    lastIndexes: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.renderOptions = {\n            // Space to add to the left or the right\n            paddingLeft: 4,\n            paddingRight: 3,\n            // The width of the line in pixels\n            lineWidth: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            lineDash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            roundedEnd: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            drawStartArrow: false,\n            drawEndArrow: false,\n            // The length of the arrowhead sides\n            arrowheadLength: 10,\n            // The angle of the arrowhead\n            arrowheadAngle: Math.PI / 8,\n            // The position of the text\n            textPositionVertical: StaveLine.TextVerticalPosition.TOP,\n            textJustification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either firstNote or lastNote set.');\n        }\n        if (!notes.firstIndexes)\n            notes.firstIndexes = [0];\n        if (!notes.lastIndexes)\n            notes.lastIndexes = [0];\n        if (notes.firstIndexes.length !== notes.lastIndexes.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indexes.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.firstIndexes = notes.firstIndexes;\n        this.lastNote = notes.lastNote;\n        this.lastIndexes = notes.lastIndexes;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const renderOptions = this.renderOptions;\n        if (renderOptions.lineDash) {\n            ctx.setLineDash(renderOptions.lineDash);\n        }\n        if (renderOptions.lineWidth) {\n            ctx.setLineWidth(renderOptions.lineWidth);\n        }\n        if (renderOptions.roundedEnd) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const renderOptions = this.renderOptions;\n        const color = renderOptions.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const bothArrows = this.renderOptions.drawStartArrow && this.renderOptions.drawEndArrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.renderOptions.arrowheadLength / 3) / distance;\n        let endX;\n        let endY;\n        let startX;\n        let startY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            endX = Math.round(x1 + (x2 - x1) * ratio);\n            endY = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            endX = x2;\n            endY = y2;\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            startX = x1 + (x2 - x1) * (1 - ratio);\n            startY = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            startX = x1;\n            startY = y1;\n        }\n        if (this.renderOptions.color) {\n            ctx.setStrokeStyle(this.renderOptions.color);\n            ctx.setFillStyle(this.renderOptions.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(startX, startY);\n        ctx.lineTo(endX, endY);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const lineAngle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.renderOptions.arrowheadLength / Math.cos(this.renderOptions.arrowheadAngle));\n        let angle1;\n        let angle2;\n        let topX;\n        let topY;\n        let bottomX;\n        let bottomY;\n        if (this.renderOptions.drawEndArrow || bothArrows) {\n            angle1 = lineAngle + Math.PI + this.renderOptions.arrowheadAngle;\n            topX = x2 + Math.cos(angle1) * h;\n            topY = y2 + Math.sin(angle1) * h;\n            angle2 = lineAngle + Math.PI - this.renderOptions.arrowheadAngle;\n            bottomX = x2 + Math.cos(angle2) * h;\n            bottomY = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x2, y2, bottomX, bottomY);\n        }\n        if (this.renderOptions.drawStartArrow || bothArrows) {\n            angle1 = lineAngle + this.renderOptions.arrowheadAngle;\n            topX = x1 + Math.cos(angle1) * h;\n            topY = y1 + Math.sin(angle1) * h;\n            angle2 = lineAngle - this.renderOptions.arrowheadAngle;\n            bottomX = x1 + Math.cos(angle2) * h;\n            bottomY = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, topX, topY, x1, y1, bottomX, bottomY);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        const renderOptions = this.renderOptions;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indexes and draw lines\n        let startPosition = { x: 0, y: 0 };\n        let endPosition = { x: 0, y: 0 };\n        this.firstIndexes.forEach((firstIndex, i) => {\n            const lastIndex = this.lastIndexes[i];\n            // Get initial coordinates for the start/end of the line\n            startPosition = firstNote.getModifierStartXY(2, firstIndex);\n            endPosition = lastNote.getModifierStartXY(1, lastIndex);\n            const upwardsSlope = startPosition.y > endPosition.y;\n            // Adjust `x` coordinates for modifiers\n            startPosition.x += firstNote.getMetrics().modRightPx + renderOptions.paddingLeft;\n            endPosition.x -= lastNote.getMetrics().modLeftPx + renderOptions.paddingRight;\n            // Adjust first `x` coordinates for displacements\n            const noteheadWidth = firstNote.getGlyphWidth();\n            const firstDisplaced = firstNote.getKeyProps()[firstIndex].displaced;\n            if (firstDisplaced && firstNote.getStemDirection() === 1) {\n                startPosition.x += noteheadWidth + renderOptions.paddingLeft;\n            }\n            // Adjust last `x` coordinates for displacements\n            const lastDisplaced = lastNote.getKeyProps()[lastIndex].displaced;\n            if (lastDisplaced && lastNote.getStemDirection() === -1) {\n                endPosition.x -= noteheadWidth + renderOptions.paddingRight;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            startPosition.y += upwardsSlope ? -3 : 1;\n            endPosition.y += upwardsSlope ? 2 : 0;\n            this.drawArrowLine(ctx, startPosition, endPosition);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const textWidth = ctx.measureText(this.text).width;\n        const justification = renderOptions.textJustification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = startPosition.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const deltaX = endPosition.x - startPosition.x;\n            const centerX = deltaX / 2 + startPosition.x;\n            x = centerX - textWidth / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = endPosition.x - textWidth;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const verticalPosition = renderOptions.textPositionVertical;\n        if (verticalPosition === StaveLine.TextVerticalPosition.TOP) {\n            y = firstNote.checkStave().getYForTopText();\n        }\n        else if (verticalPosition === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = firstNote.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    static get CATEGORY() {\n        return Category.System;\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Get origin X. */\n    getX() {\n        return this.options.x;\n    }\n    /** Set origin X. */\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n        return this;\n    }\n    /** Get origin y. */\n    getY() {\n        return this.options.y;\n    }\n    /** Set origin y. */\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n        return this;\n    }\n    /** Get associated staves. */\n    getStaves() {\n        return this.partStaves;\n    }\n    /** Get associated voices. */\n    getVoices() {\n        return this.partVoices;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            topStave: this.partStaves[0],\n            bottomStave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ leftBar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    /**\n     * Add voices to the system with stave already assigned.\n     */\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    /** Format the system. */\n    format() {\n        const optionsDetails = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(optionsDetails);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        // Re-assign Stave to update y position\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        // Join the voices\n        formatter.joinVoices(this.partVoices);\n        // Update the start position of all staves.\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(optionsDetails);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Gets the unused strings grouped together if consecutive.\n * @param numLines The number of lines.\n * @param stringsUsed An array of numbers representing which strings have fret positions.\n * @returns\n */\nfunction getUnusedStringGroups(numLines, stringsUsed) {\n    const stemThrough = [];\n    let group = [];\n    for (let string = 1; string <= numLines; string++) {\n        const isUsed = stringsUsed.indexOf(string) > -1;\n        if (!isUsed) {\n            group.push(string);\n        }\n        else {\n            stemThrough.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stemThrough.push(group);\n    return stemThrough;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stemY - The `y` coordinate the stem is located on\n// * unusedStrings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stemDirection - The direction of the stem\nfunction getPartialStemLines(stemY, unusedStrings, stave, stemDirection) {\n    const upStem = stemDirection !== 1;\n    const downStem = stemDirection !== -1;\n    const lineSpacing = stave.getSpacingBetweenLines();\n    const totalLines = stave.getNumLines();\n    const stemLines = [];\n    unusedStrings.forEach((strings) => {\n        const containsLastString = strings.indexOf(totalLines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((upStem && containsFirstString) || (downStem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const lineYs = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === totalLines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= lineSpacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += lineSpacing / 2 - 1;\n            }\n            // Store the y value\n            lineYs.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stemDirection === 1 && isTopBound) {\n                lineYs.push(stemY - 2);\n            }\n            else if (stemDirection === -1 && isBottomBound) {\n                lineYs.push(stemY + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stemLines.push(lineYs.sort((a, b) => a - b));\n    });\n    return stemLines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `drawStem` when rendering the note\n    constructor(noteStruct, drawStem = false) {\n        super(noteStruct);\n        this.fretElement = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // font size for note heads and rests\n            glyphFontScale: Tables.lookupMetric('TabNote.fontSize'), \n            // Flag to draw a stem\n            drawStem, \n            // Flag to draw dot modifiers\n            drawDots: drawStem, \n            // Flag to extend the main stem through the stave and fret positions\n            drawStemThroughStave: false, \n            // vertical shift from stave line\n            yShift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: Tables.lookupMetric('fontFamily') });\n        this.glyphProps = Note.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stemDirection) {\n            this.setStemDirection(noteStruct.stemDirection);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.renderOptions.drawStem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        if (this.stemExtensionOverride !== undefined) {\n            return this.stemExtensionOverride;\n        }\n        return this.flag.getHeight() > Stem.HEIGHT ? this.flag.getHeight() - Stem.HEIGHT : 0;\n    }\n    static tabToElement(fret, scale = 1.0) {\n        let el;\n        if (fret.toUpperCase() === 'X') {\n            el = new Element('TabNote');\n            el.setText('\\ue263' /*accidentalDoubleSharp*/);\n            el.measureText();\n        }\n        else {\n            el = new Element('TabNote.text');\n            el.setText(fret);\n            el.measureText();\n            el.setYShift(el.getHeight() / 2);\n        }\n        return el;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.fretElement = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const el = TabNote.tabToElement(fret.toString(), this.renderOptions.scale);\n            this.fretElement.push(el);\n            this.width = Math.max(el.getWidth(), this.width);\n        }\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const noteGlyphWidth = this.width;\n            x = noteGlyphWidth / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const numLines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = numLines - 0.5;\n        const stemStartLine = Stem.UP === this.stemDirection ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        const { beam, glyphProps, renderOptions: { drawStem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam === undefined && drawStem;\n        // Now it's the flag's turn.\n        if (glyphProps.codeFlagUp && shouldDrawFlag) {\n            const flagX = this.getStemX();\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - this.getStemExtension()\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + this.getStemExtension();\n            // Draw the Flag\n            this.applyStyle(context, this.flagStyle);\n            this.flag.renderText(context, flagX, flagY);\n            this.restoreStyle(context, this.flagStyle);\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.renderOptions.drawDots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.renderOptions.drawStem;\n        const stemThrough = this.renderOptions.drawStemThroughStave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.renderOptions.yShift;\n            const el = this.fretElement[i];\n            // Center the fret text beneath the stem\n            const tabX = x - el.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tabX - 2, y - 3, el.getWidth() + 4, 6);\n            el.renderText(ctx, tabX, y);\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const renderStem = this.beam === undefined && this.renderOptions.drawStem;\n        this.applyStyle();\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && renderStem) {\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tabOptions = Object.assign({ spacingBetweenLinesPx: 13, numLines: 6, topTextPosition: 1 }, options);\n        super(x, y, width, tabOptions);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.renderOptions = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            lineWidth: 1,\n            showBracket: true,\n            bracketHeight: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underlineSuperscript: true,\n        };\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.renderOptions;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.lineWidth);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.renderOptions.dashed = dashed;\n        if (dash)\n            this.renderOptions.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracketHeight = this.renderOptions.bracketHeight * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const mainMeasure = ctx.measureText(this.text);\n        const mainWidth = mainMeasure.width;\n        const mainHeight = mainMeasure.height;\n        // Calculate the y position for the super script\n        const superY = start.y - mainHeight / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + mainWidth + 1, superY);\n        // Determine width and height of the superscript\n        const superMeasure = ctx.measureText(this.superscript);\n        const superWidth = superMeasure.width;\n        const superHeight = superMeasure.height;\n        // Setup initial coordinates for the bracket line\n        let startX = start.x;\n        let lineY = superY;\n        const endX = stop.x + this.stop.getGlyphWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            startX += mainWidth + superWidth + 5;\n            lineY -= superHeight / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            lineY += superHeight / 2.7;\n            startX += mainWidth + 2;\n            if (!this.renderOptions.underlineSuperscript) {\n                startX += superWidth;\n            }\n        }\n        if (this.renderOptions.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, startX, lineY, endX, lineY, this.renderOptions.dash);\n            // Ending Bracket\n            if (this.renderOptions.showBracket) {\n                Renderer.drawDashedLine(ctx, endX, lineY + 1 * this.position, endX, lineY + bracketHeight, this.renderOptions.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(startX, lineY);\n            // Main line\n            ctx.lineTo(endX, lineY);\n            if (this.renderOptions.showBracket) {\n                // Ending bracket\n                ctx.lineTo(endX, lineY + bracketHeight);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: '\\uE522' /*dynamicForte*/,\n            p: '\\uE520' /*dynamicPiano*/,\n            m: '\\uE521' /*dynamicMezzo*/,\n            s: '\\uE524' /*dynamicSforzando*/,\n            z: '\\uE525' /*dynamicZ*/,\n            r: '\\uE523' /*dynamicRinforzando*/,\n        };\n    }\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        var _a, _b;\n        super(noteStruct);\n        this.sequence = ((_a = noteStruct.text) !== null && _a !== void 0 ? _a : '').toLowerCase();\n        this.line = (_b = noteStruct.line) !== null && _b !== void 0 ? _b : 0;\n        this.text = '';\n        this.renderOptions = Object.assign({ glyphFontSize: Tables.lookupMetric('fontSize') }, this.renderOptions);\n        this.textFont.size = defined(this.renderOptions.glyphFontSize) * this.renderOptions.glyphFontScale;\n        L('New Dynamics Text: ', this.sequence);\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.text = '';\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph = TextDynamics.GLYPHS[letter];\n            if (!glyph)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            // Add the glyph\n            this.text += glyph;\n        });\n        // Store the width of the text\n        this.measureText();\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        this.renderText(this.checkContext(), x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author: Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getWidth());\n        // Note properties\n        this.ignoreTicks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.timeSig.drawAt(ctx, stave, this.getAbsoluteX());\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracketData) {\n        super();\n        this.vibrato = new Vibrato();\n        if (bracketData.start)\n            this.start = bracketData.start;\n        if (bracketData.stop)\n            this.stop = bracketData.stop;\n        this.line = 1;\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set vibrato code. */\n    setVibratoCode(code) {\n        this.vibrato.setVibratoCode(code);\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const startX = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stopX = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.vibrato.setVibratoWidth(stopX - startX);\n        L('Rendering VibratoBracket: startX:', startX, 'stopX:', stopX, 'y:', y);\n        this.vibrato.renderText(ctx, startX, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId === null) {\n            return;\n        }\n        if (elementId === '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacingBetweenLinesPx: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center' }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) !== undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        if ((params === null || params === void 0 ? void 0 : params.position) !== undefined) {\n            ornament.setPosition(params.position);\n        }\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.numberOfMeasures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.topStave, params.bottomStave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            firstNote: params.from,\n            lastNote: params.to,\n            firstIndexes: params.firstIndexes,\n            lastIndexes: params.lastIndexes,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.code)\n            vibratoBracket.setVibratoCode(params.options.code);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _GlyphOutline_i, _GlyphOutline_outline, _GlyphOutline_originX, _GlyphOutline_originY, _GlyphOutline_scale, _GlyphOutline_precision;\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.xShift, this.metrics.yShift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        _GlyphOutline_i.set(this, 0);\n        _GlyphOutline_outline.set(this, void 0);\n        _GlyphOutline_originX.set(this, void 0);\n        _GlyphOutline_originY.set(this, void 0);\n        _GlyphOutline_scale.set(this, void 0);\n        _GlyphOutline_precision.set(this, 1);\n        __classPrivateFieldSet(this, _GlyphOutline_outline, outline, \"f\");\n        __classPrivateFieldSet(this, _GlyphOutline_originX, originX, \"f\");\n        __classPrivateFieldSet(this, _GlyphOutline_originY, originY, \"f\");\n        __classPrivateFieldSet(this, _GlyphOutline_scale, scale, \"f\");\n        __classPrivateFieldSet(this, _GlyphOutline_precision, Math.pow(10, Tables.RENDER_PRECISION_PLACES), \"f\");\n    }\n    done() {\n        return __classPrivateFieldGet(this, _GlyphOutline_i, \"f\") >= __classPrivateFieldGet(this, _GlyphOutline_outline, \"f\").length;\n    }\n    next() {\n        var _a, _b;\n        return Math.round((__classPrivateFieldGet(this, _GlyphOutline_outline, \"f\")[__classPrivateFieldSet(this, _GlyphOutline_i, (_b = __classPrivateFieldGet(this, _GlyphOutline_i, \"f\"), _a = _b++, _b), \"f\"), _a] * __classPrivateFieldGet(this, _GlyphOutline_precision, \"f\")) / __classPrivateFieldGet(this, _GlyphOutline_precision, \"f\"));\n    }\n    nextX() {\n        var _a, _b;\n        return Math.round((__classPrivateFieldGet(this, _GlyphOutline_originX, \"f\") + __classPrivateFieldGet(this, _GlyphOutline_outline, \"f\")[__classPrivateFieldSet(this, _GlyphOutline_i, (_b = __classPrivateFieldGet(this, _GlyphOutline_i, \"f\"), _a = _b++, _b), \"f\"), _a] * __classPrivateFieldGet(this, _GlyphOutline_scale, \"f\")) * __classPrivateFieldGet(this, _GlyphOutline_precision, \"f\")) / __classPrivateFieldGet(this, _GlyphOutline_precision, \"f\");\n    }\n    nextY() {\n        var _a, _b;\n        return Math.round((__classPrivateFieldGet(this, _GlyphOutline_originY, \"f\") - __classPrivateFieldGet(this, _GlyphOutline_outline, \"f\")[__classPrivateFieldSet(this, _GlyphOutline_i, (_b = __classPrivateFieldGet(this, _GlyphOutline_i, \"f\"), _a = _b++, _b), \"f\"), _a] * __classPrivateFieldGet(this, _GlyphOutline_scale, \"f\")) * __classPrivateFieldGet(this, _GlyphOutline_precision, \"f\")) / __classPrivateFieldGet(this, _GlyphOutline_precision, \"f\");\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\n_GlyphOutline_i = new WeakMap(), _GlyphOutline_outline = new WeakMap(), _GlyphOutline_originX = new WeakMap(), _GlyphOutline_originY = new WeakMap(), _GlyphOutline_scale = new WeakMap(), _GlyphOutline_precision = new WeakMap();\nexport class Glyph extends Element {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        // HACK to see porting progress\n        if (fontStack[0].getName() === 'MuseJazz' ||\n            fontStack[0].getName() === 'Gootville' ||\n            fontStack[0].getName() === 'Finale Ash' ||\n            fontStack[0].getName() === 'Finale Broadway' ||\n            fontStack[0].getName() === 'Finale Maestro') {\n            code = 'timeSigMinus';\n        }\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let xShift = 0;\n        let yShift = 0;\n        let scale = 1;\n        if (category && font) {\n            xShift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            yShift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const xMin = glyph.xMin;\n        const xMax = glyph.xMax;\n        const ha = glyph.ha;\n        if (!glyph.cachedOutline) {\n            glyph.cachedOutline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            xMin,\n            xMax,\n            xShift,\n            yShift,\n            scale,\n            ha,\n            outline: glyph.cachedOutline,\n            font,\n            width: xMax - xMin,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param xPos x coordinate\n     * @param yPos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, xPos, yPos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point !== -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, xPos + metrics.xShift * customScale, yPos + metrics.yShift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, xPos, yPos) {\n        const go = new GlyphOutline(outline, xPos, yPos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, xPos, yPos) {\n        const go = new GlyphOutline(outline, xPos, yPos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = xPos;\n        let penY = yPos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point !== -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.xShift = 0;\n        this.yShift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.xShift;\n    }\n    setXShift(xShift) {\n        this.xShift = xShift;\n        return this;\n    }\n    getYshift() {\n        return this.yShift;\n    }\n    setYShift(yShift) {\n        this.yShift = yShift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point !== -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            xMin: metrics.xMin * this.scale * metricsScale,\n            xMax: metrics.xMax * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            xShift: metrics.xShift,\n            yShift: metrics.yShift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.xShift;\n        const yPos = y + this.originShift.y + metrics.yShift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.xShift + metrics.xShift;\n        const yPos = stave.getYForGlyphs() + this.yShift + metrics.yShift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.renderOptions = Object.assign(Object.assign({}, this.renderOptions), { \n            // vertical shift from stave line\n            yShift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const isSupportedType = Music.scaleTypes[this.keyParts.type];\n        if (!isSupportedType) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.rootIndexes[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote !== undefined) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote !== undefined) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// ## Description\n// @author Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   yShift: px,         // vertical offset\n     *   leftShiftTicks: 0, // left horizontal offset expressed in ticks\n     *   rightShiftTicks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt === null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const leftShiftPx = ppt * ((_a = options.leftShiftTicks) !== null && _a !== void 0 ? _a : 0);\n        const rightShiftPx = ppt * ((_b = options.rightShiftTicks) !== null && _b !== void 0 ? _b : 0);\n        const hairpinOptions = {\n            height: options.height,\n            yShift: options.yShift,\n            leftShiftPx,\n            rightShiftPx,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n        new StaveHairpin({\n            firstNote: notes.firstNote,\n            lastNote: notes.lastNote,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpinOptions)\n            .setPosition(position)\n            .draw();\n    }\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.renderOptions = {\n            height: 10,\n            yShift: 0,\n            leftShiftPx: 0,\n            rightShiftPx: 0,\n            rightShiftTicks: 0,\n            leftShiftTicks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        this.renderOptions = options;\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.firstNote && !notes.lastNote) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either firstNote or lastNote set.');\n        }\n        this.notes = notes;\n        this.firstNote = notes.firstNote;\n        this.lastNote = notes.lastNote;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.renderOptions.yShift + 20;\n        let yShift = params.firstY;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            yShift = params.firstY - params.staffHeight;\n        }\n        const leftShiftPx = this.renderOptions.leftShiftPx;\n        const rightShiftPx = this.renderOptions.rightShiftPx;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.lastX + rightShiftPx, yShift + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.firstX + leftShiftPx, yShift + dis);\n                ctx.lineTo(params.lastX + rightShiftPx, yShift + this.renderOptions.height / 2 + dis);\n                ctx.lineTo(params.firstX + leftShiftPx, yShift + this.renderOptions.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.firstNote;\n        const lastNote = this.lastNote;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            firstX: start.x,\n            lastX: end.x,\n            firstY: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            lastY: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staffHeight: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    firstNote: Note,\n     *    lastNote: Note,\n     *    firstIndexes: [n1, n2, n3],\n     *    lastIndexes: [n1, n2, n3]\n     *  }\n     * @param notes.firstNote the starting note of the slide\n     * @param notes.lastNote the ending note of the slide\n     * @param notes.firstIndexes specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.lastIndexes currently unused. we assume it's the same as firstIndexes.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let firstFret = notes.firstNote.getPositions()[0].fret;\n            if (typeof firstFret === 'string') {\n                firstFret = parseInt(firstFret, 10);\n            }\n            let lastFret = notes.lastNote.getPositions()[0].fret;\n            if (typeof lastFret === 'string') {\n                lastFret = parseInt(lastFret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(firstFret) || isNaN(lastFret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = firstFret > lastFret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.renderOptions.cp1 = 11;\n        this.renderOptions.cp2 = 14;\n        this.renderOptions.yShift = 0.5;\n    }\n    /**\n     * @param params.firstX is specified in pixels.\n     * @param params.lastX is specified in pixels.\n     */\n    renderTie(params) {\n        if (params.firstYs.length === 0 || params.lastYs.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const firstX = params.firstX; // pixel units\n        const firstYs = params.firstYs;\n        const lastX = params.lastX; // pixel units\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const firstIndexes = this.notes.firstIndexes;\n        for (let i = 0; i < firstIndexes.length; ++i) {\n            const slideY = firstYs[firstIndexes[i]] + this.renderOptions.yShift;\n            if (isNaN(slideY)) {\n                throw new RuntimeError('BadArguments', 'Bad indexes for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(firstX, slideY + 3 * direction);\n            ctx.lineTo(lastX, slideY - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// @author Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.text = '\\uE220' /*tremolo1*/;\n        this.measureText();\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const scale = isGraceNote(note) ? GraceNote.SCALE : 1;\n        const ySpacing = Tables.lookupMetric(`Tremolo.spacing`) * stemDirection * scale;\n        const x = note.getAbsoluteX() + (stemDirection === Stem.UP ? note.getGlyphWidth() - Stem.WIDTH / 2 : Stem.WIDTH / 2);\n        let y = note.getStemExtents().topY + (this.num <= 3 ? ySpacing : 0);\n        this.textFont.size = Tables.lookupMetric(`Tremolo.fontSize`) * scale;\n        for (let i = 0; i < this.num; ++i) {\n            this.renderText(ctx, x, y);\n            y += ySpacing;\n        }\n    }\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n        };\n    }\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).intValue) !== null && _a !== void 0 ? _a : -1;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Glyphs } from './glyphs';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { CommonMetrics, Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // #FIXME: HACK to facilitate the VexFlow 5 migration.\n        // HACK-BEGIN\n        // Introduce the correct font stacks step by step.\n        switch (fontNames[0]) {\n            case 'Bravura':\n                CommonMetrics.fontFamily = 'Bravura,Roboto Slab';\n                break;\n            case 'Gonville':\n                CommonMetrics.fontFamily = 'GonvilleSmufl,Bravura,Roboto Slab';\n                break;\n            case 'Leland':\n                CommonMetrics.fontFamily = 'Leland,Bravura,Roboto Slab';\n                break;\n            case 'Petaluma':\n                CommonMetrics.fontFamily = 'Petaluma,Bravura,Petaluma Script';\n                break;\n            case 'MuseJazz':\n                CommonMetrics.fontFamily = 'MuseJazz,Bravura,Academico';\n                break;\n            case 'Gootville':\n                CommonMetrics.fontFamily = 'Gootville,Bravura,Academico';\n                break;\n            case 'Finale Ash':\n                CommonMetrics.fontFamily = 'Finale Ash,Bravura,Academico';\n                break;\n            case 'Finale Maestro':\n                CommonMetrics.fontFamily = 'Finale Maestro,Bravura,Academico';\n                break;\n            case 'Finale Broadway':\n                CommonMetrics.fontFamily = 'Finale Broadway,Bravura,Academico';\n                break;\n            default:\n                CommonMetrics.fontFamily = fontNames.join(',');\n        }\n        // HACK-END\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static getMusicFontStack() {\n        return Tables.MUSIC_FONT_STACK;\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.Glyphs = Glyphs;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '5.0.4';\nexport const ID = '8044273449c7bef913f261a47f85cd8cbdc3b72e';\nexport const DATE = '2023-09-10T17:34:27.186Z';\n","export const BravuraFont = {\n    glyphs: {\n        bracketTop: {\n            xMin: 0,\n            xMax: 469,\n            yMin: 0,\n            yMax: 295,\n            ha: 295,\n            o: 'm 0 0 l 180 0 b 674 390 410 43 616 150 b 675 405 675 396 675 400 b 664 425 675 416 671 422 b 628 405 651 425 635 415 b 157 179 613 389 432 199 l 12 179 b 0 168 3 179 0 177 z',\n        },\n        bracketBottom: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -295,\n            yMax: 0,\n            ha: 295,\n            o: 'm 0 -168 b 12 -179 0 -177 3 -179 l 157 -179 b 628 -405 432 -199 613 -389 b 664 -425 635 -415 651 -425 b 675 -405 671 -422 675 -416 b 674 -390 675 -400 675 -396 b 180 0 616 -150 410 -43 l 0 0 z',\n        },\n        barlineTick: {\n            xMin: 0,\n            xMax: 36,\n            yMin: 868,\n            yMax: 1120,\n            ha: 252,\n            o: 'm 52 1250 l 52 1613 l 0 1613 l 0 1250 z',\n        },\n        breathMarkTick: {\n            xMin: 0,\n            xMax: 500,\n            yMin: 0,\n            yMax: 502,\n            ha: 502,\n            o: 'm 9 367 b 0 374 6 372 3 374 b 9 334 0 367 0 343 b 179 19 40 312 164 121 b 192 0 179 3 186 0 b 210 19 197 0 207 6 b 698 701 245 197 507 658 b 720 714 714 704 720 711 b 698 723 720 720 711 723 b 197 186 455 714 210 202 b 186 176 194 179 189 176 b 176 186 179 176 176 186 b 9 367 143 266 27 359 z',\n        },\n        segno: {\n            xMin: 4,\n            xMax: 550,\n            yMin: -27,\n            yMax: 759,\n            ha: 786,\n            o: 'm 194 958 b 217 939 203 958 213 955 l 220 929 b 325 805 230 890 252 805 b 425 901 384 805 425 840 b 413 969 425 923 420 946 b 220 1060 390 1035 294 1060 b 6 793 120 1060 6 936 b 29 687 6 759 13 723 b 295 449 75 582 284 454 b 304 438 301 446 304 444 b 295 415 304 432 301 425 b 78 22 285 395 78 22 b 73 3 75 16 73 9 b 114 -39 73 -20 91 -39 b 150 -17 128 -39 143 -30 b 377 395 150 -17 373 386 b 395 402 377 393 389 402 b 704 176 416 397 704 312 b 621 75 704 120 670 82 l 616 73 b 562 138 586 73 562 94 l 562 154 b 485 249 562 209 526 249 b 468 246 480 249 474 248 b 366 153 415 233 366 210 b 540 -12 366 65 455 -12 b 600 -1 559 -12 579 -9 b 792 251 716 37 792 131 b 789 292 792 264 791 278 b 523 588 768 451 540 579 b 498 611 505 598 498 603 b 501 619 498 613 500 616 b 732 1032 508 631 732 1032 b 737 1053 736 1040 737 1045 b 697 1093 737 1076 719 1093 b 661 1073 683 1093 668 1086 b 423 647 661 1073 432 660 b 410 635 419 639 416 635 b 396 639 406 635 402 636 b 128 792 383 644 166 727 b 108 868 120 808 108 838 b 186 958 108 907 125 948 z m 598 671 b 680 589 598 626 635 589 b 762 671 726 589 762 626 b 680 753 762 717 726 753 b 598 671 635 753 598 717 z m 202 380 b 120 462 202 425 166 462 b 37 380 75 462 37 425 b 120 298 37 334 75 298 b 202 380 166 298 202 334 z',\n        },\n        coda: {\n            xMin: -4,\n            xMax: 955,\n            yMin: -158,\n            yMax: 898,\n            ha: 1056,\n            o: 'm 1349 576 l 1178 576 b 729 1083 1164 847 962 1064 l 729 1269 b 694 1293 729 1287 713 1293 b 660 1269 675 1293 660 1287 l 660 1083 b 210 576 426 1064 226 848 l 20 576 b -6 541 0 576 -6 560 b 20 507 -6 523 0 507 l 210 507 b 660 0 226 238 426 19 l 660 -202 b 694 -228 660 -222 675 -228 b 729 -202 713 -228 729 -222 l 729 0 b 1178 507 962 19 1164 238 l 1349 507 b 1375 541 1369 507 1375 523 b 1349 576 1375 560 1369 576 z m 940 576 l 729 576 l 729 1002 b 940 576 930 985 940 809 z m 660 1002 l 660 576 l 455 576 b 660 1002 455 809 455 985 z m 455 507 l 660 507 l 660 69 b 455 507 474 91 456 285 z m 729 69 l 729 507 l 940 507 b 729 69 936 287 909 91 z',\n        },\n        gClef: {\n            xMin: 0,\n            xMax: 671,\n            yMin: -658,\n            yMax: 1098,\n            ha: 1756,\n            o: 'm 541 598 b 550 625 539 615 541 616 b 824 1174 706 770 824 953 b 730 1509 824 1299 789 1423 b 655 1581 708 1541 671 1581 b 562 1512 635 1581 590 1544 b 420 1064 455 1394 420 1214 b 441 828 420 981 431 887 b 428 793 444 811 445 808 b 0 125 220 622 0 416 b 524 -363 0 -125 171 -363 b 624 -354 557 -363 595 -360 b 645 -367 639 -351 642 -350 b 684 -657 662 -464 684 -589 b 455 -896 684 -870 540 -896 b 340 -854 377 -896 340 -873 b 386 -829 340 -844 353 -840 b 482 -694 431 -816 482 -778 b 344 -547 482 -615 432 -547 b 190 -713 248 -547 190 -624 b 464 -948 190 -806 246 -948 b 747 -660 560 -948 747 -904 b 706 -351 747 -577 721 -441 b 724 -327 703 -334 704 -336 b 966 16 870 -269 966 -147 b 619 363 966 200 831 363 b 577 389 582 363 582 363 z m 677 1358 b 763 1240 724 1358 763 1319 b 513 851 763 1080 626 950 b 494 863 503 842 497 844 b 485 995 488 900 485 949 b 677 1358 485 1220 589 1358 z m 520 377 b 498 343 524 350 524 351 b 289 63 372 300 289 186 b 455 -192 289 -66 357 -158 b 494 -200 467 -196 484 -200 b 511 -184 505 -200 511 -193 b 490 -166 511 -174 500 -170 b 386 -12 429 -140 386 -78 b 530 157 386 71 442 132 b 559 145 553 163 556 161 l 631 -284 b 611 -304 634 -300 632 -300 b 530 -311 588 -308 559 -311 b 115 29 278 -311 115 -171 b 249 363 115 114 130 228 b 469 567 336 459 402 513 b 490 562 484 579 487 577 z m 619 148 b 635 168 616 166 618 170 b 848 -66 752 158 848 60 b 713 -271 848 -157 793 -230 b 690 -262 696 -279 693 -279 z',\n        },\n        cClef: {\n            xMin: 0,\n            xMax: 699,\n            yMin: -506,\n            yMax: 506,\n            ha: 1012,\n            o: 'm 331 694 b 301 724 331 714 321 724 l 300 724 b 269 694 279 724 269 714 l 269 -694 b 300 -724 269 -714 279 -724 l 301 -724 b 331 -694 321 -724 331 -714 l 331 -63 b 344 -55 331 -52 338 -53 b 472 -265 382 -65 442 -102 b 500 -301 477 -288 485 -301 b 530 -262 516 -301 523 -287 b 684 -128 549 -199 582 -128 b 804 -409 778 -128 804 -220 b 651 -683 804 -598 770 -683 b 528 -644 631 -683 528 -674 b 567 -622 528 -636 552 -628 b 625 -528 596 -612 625 -583 b 527 -429 625 -465 583 -429 b 416 -547 465 -429 416 -471 b 667 -729 416 -638 495 -729 b 1007 -413 903 -729 1007 -563 b 706 -76 1007 -215 897 -76 b 618 -89 664 -76 636 -84 b 576 -88 603 -94 589 -96 b 524 0 556 -75 524 -29 b 576 88 524 29 556 75 b 618 89 589 96 603 94 b 706 76 636 84 664 76 b 1007 413 897 76 1007 215 b 667 729 1007 563 903 729 b 416 547 495 729 416 638 b 527 429 416 471 465 429 b 625 528 583 429 625 465 b 567 622 625 583 596 612 b 528 644 552 628 528 636 b 651 683 528 674 631 683 b 804 409 770 683 804 598 b 684 128 804 220 778 128 b 530 262 582 128 549 199 b 500 301 523 287 516 301 b 472 265 485 301 477 288 b 344 55 442 102 382 65 b 331 63 338 53 331 52 z m 30 724 b 0 694 10 724 0 714 l 0 -694 b 30 -724 0 -714 10 -724 l 154 -724 b 184 -694 174 -724 184 -714 l 184 694 b 154 724 184 714 174 724 z',\n        },\n        fClef: {\n            xMin: -5,\n            xMax: 684,\n            yMin: -635,\n            yMax: 262,\n            ha: 897,\n            o: 'm 363 377 b 0 56 112 377 0 194 b 177 -158 0 -59 60 -158 b 330 -6 268 -158 330 -95 b 192 144 330 86 262 144 b 120 134 153 144 138 134 b 96 160 101 134 96 145 b 330 323 96 217 183 323 b 549 -53 482 323 549 173 b 14 -871 549 -455 350 -680 b -7 -897 1 -878 -7 -886 b 12 -914 -7 -906 -1 -914 b 36 -907 19 -914 27 -912 b 765 -40 390 -734 765 -478 b 363 377 765 210 612 377 z m 906 259 b 827 180 861 259 827 225 b 906 101 827 135 861 101 b 985 180 950 101 985 135 b 906 259 985 225 950 259 z m 907 -102 b 829 -180 863 -102 829 -135 b 907 -258 829 -225 863 -258 b 985 -180 952 -258 985 -225 b 907 -102 985 -135 952 -102 z',\n        },\n        unpitchedPercussionClef1: {\n            xMin: 0,\n            xMax: 382,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 230 -338 l 230 338 b 210 360 230 350 222 360 l 20 360 b 0 338 9 360 0 350 l 0 -338 b 20 -360 0 -350 9 -360 l 210 -360 b 230 -338 222 -360 230 -350 z m 550 338 b 530 360 550 350 541 360 l 340 360 b 320 338 328 360 320 350 l 320 -338 b 340 -360 320 -350 328 -360 l 530 -360 b 550 -338 541 -360 550 -350 z',\n        },\n        '6stringTabClef': {\n            xMin: -3,\n            xMax: 408,\n            yMin: -748,\n            yMax: 764,\n            ha: 1512,\n            o: 'm 557 1024 l 557 1100 l 26 1100 l 26 1024 l 249 1024 l 249 422 l 336 422 l 336 1024 z m 588 -328 l 350 348 l 238 348 l -4 -328 l 88 -328 l 160 -125 l 420 -125 l 491 -328 z m 397 -52 l 181 -52 l 292 256 z m 544 -883 b 420 -719 544 -802 507 -752 b 514 -572 482 -690 514 -639 b 314 -399 514 -472 442 -399 l 39 -399 l 39 -1077 l 344 -1077 b 544 -883 467 -1077 544 -995 z m 428 -583 b 292 -691 428 -652 389 -691 l 125 -691 l 125 -475 l 292 -475 b 428 -583 389 -475 428 -514 z m 458 -884 b 337 -1001 458 -949 418 -1001 l 125 -1001 l 125 -768 l 337 -768 b 458 -884 418 -768 458 -818 z',\n        },\n        timeSig0: {\n            xMin: 20,\n            xMax: 450,\n            yMin: -250,\n            yMax: 251,\n            ha: 501,\n            o: 'm 648 0 b 338 361 648 200 510 361 b 29 0 167 361 29 200 b 338 -360 29 -199 167 -360 b 648 0 510 -360 648 -199 z m 338 317 b 446 10 397 317 446 180 b 338 -295 446 -158 397 -295 b 230 10 278 -295 230 -158 b 338 317 230 180 278 317 z',\n        },\n        timeSig1: {\n            xMin: 20,\n            xMax: 314,\n            yMin: -250,\n            yMax: 251,\n            ha: 501,\n            o: 'm 35 19 b 29 0 35 19 29 10 b 45 -20 29 -7 33 -16 b 58 -23 50 -22 56 -23 b 78 -10 72 -23 78 -10 b 156 117 78 -10 140 89 b 170 131 161 127 167 131 b 179 111 176 131 179 120 l 179 -261 b 115 -315 179 -294 145 -315 b 91 -337 105 -315 91 -320 b 122 -360 91 -353 104 -360 l 429 -360 b 452 -337 452 -360 452 -337 b 431 -315 452 -337 452 -315 b 384 -265 410 -315 384 -289 l 384 328 b 356 361 384 351 376 360 b 281 356 336 361 300 356 b 206 360 253 356 228 357 b 199 361 203 360 200 361 b 173 334 184 361 179 347 z',\n        },\n        timeSig2: {\n            xMin: 20,\n            xMax: 426,\n            yMin: -257,\n            yMax: 254,\n            ha: 511,\n            o: 'm 606 -131 b 589 -111 606 -114 599 -111 b 570 -127 577 -111 573 -117 l 569 -128 b 513 -192 554 -164 543 -192 b 488 -187 505 -192 498 -190 b 445 -171 469 -180 459 -179 b 289 -137 416 -160 348 -137 b 236 -145 271 -137 252 -140 b 422 -42 268 -94 390 -50 b 613 147 523 -14 613 27 b 330 366 613 300 464 366 b 69 275 229 366 140 357 b 29 170 45 245 29 209 b 42 108 29 150 33 130 b 160 29 63 63 108 29 b 261 156 248 29 261 120 b 161 275 261 242 161 246 b 275 330 164 295 190 330 b 405 192 403 330 405 233 b 193 -102 405 60 297 -39 b 33 -317 114 -153 58 -223 l 32 -321 b 69 -370 32 -340 48 -370 b 203 -282 101 -370 118 -282 b 410 -360 261 -282 282 -360 b 606 -131 472 -360 583 -354 z',\n        },\n        timeSig3: {\n            xMin: 20,\n            xMax: 401,\n            yMin: -251,\n            yMax: 249,\n            ha: 500,\n            o: 'm 307 357 b 301 357 305 357 304 357 l 291 359 b 285 359 289 359 287 359 b 37 200 161 359 37 276 b 154 84 37 153 65 89 l 161 84 b 256 177 225 84 256 130 l 256 189 b 209 248 252 242 216 245 b 180 268 202 251 180 248 l 180 274 b 240 310 183 298 228 310 b 374 199 363 310 374 233 l 374 189 b 199 36 374 82 289 40 b 164 12 184 35 164 27 b 200 -6 164 -6 189 -6 b 379 -137 366 -6 379 -118 b 269 -307 379 -289 301 -307 b 256 -305 264 -307 258 -305 b 216 -282 245 -304 217 -304 l 216 -275 b 249 -180 216 -243 248 -222 b 145 -76 249 -120 207 -76 b 130 -78 140 -76 135 -76 b 60 -115 105 -82 78 -96 b 29 -203 36 -137 29 -171 b 275 -361 32 -315 134 -359 l 288 -361 b 577 -161 431 -361 577 -288 l 577 -151 b 537 -50 575 -109 564 -82 b 503 -20 528 -39 517 -29 l 472 -3 l 425 10 b 410 17 418 12 413 12 b 409 24 409 20 409 22 b 415 37 409 30 410 36 b 459 50 431 42 446 43 b 547 181 517 78 547 115 b 307 357 547 314 367 353 z',\n        },\n        timeSig4: {\n            xMin: 20,\n            xMax: 450,\n            yMin: -250,\n            yMax: 251,\n            ha: 501,\n            o: 'm 521 -107 l 521 202 b 504 226 521 213 520 226 b 475 213 491 226 484 223 l 338 48 b 325 14 333 40 325 32 l 325 -107 l 131 -107 b 481 336 246 -9 477 318 l 482 340 b 461 361 482 353 472 361 b 363 359 448 361 389 359 b 261 361 337 359 272 361 b 228 334 248 361 228 357 b 43 -105 228 156 86 -45 l 35 -117 b 35 -118 35 -117 35 -118 l 33 -120 b 29 -137 30 -127 29 -132 b 58 -161 29 -151 40 -161 l 325 -161 l 325 -252 b 268 -302 325 -291 294 -302 b 235 -330 245 -302 235 -315 b 262 -360 235 -344 240 -360 l 569 -360 b 598 -330 583 -360 598 -350 b 566 -301 598 -310 580 -301 b 521 -246 552 -301 521 -292 l 521 -161 l 626 -161 b 648 -134 641 -161 648 -151 b 626 -107 648 -117 642 -107 z',\n        },\n        timeSig5: {\n            xMin: 20,\n            xMax: 383,\n            yMin: -251,\n            yMax: 246,\n            ha: 497,\n            o: 'm 109 85 b 117 179 109 85 115 166 b 138 197 118 190 125 197 l 144 197 b 285 184 158 194 226 184 b 492 323 485 184 492 300 b 472 353 492 341 488 353 b 295 340 454 353 341 340 b 101 354 249 340 125 351 b 66 330 75 354 68 341 l 50 10 l 50 7 b 79 -14 50 -12 65 -14 b 111 14 94 -14 95 -1 b 209 62 125 29 160 62 b 357 -125 258 62 357 35 b 235 -304 357 -284 272 -304 b 202 -300 223 -304 212 -304 b 184 -279 194 -295 186 -289 b 202 -259 184 -269 194 -264 b 256 -163 235 -239 256 -203 b 144 -50 256 -99 206 -50 b 30 -157 66 -50 35 -107 b 29 -183 29 -166 29 -174 b 284 -361 29 -302 107 -361 b 552 -125 456 -361 552 -255 b 314 112 552 6 445 112 b 122 71 230 112 168 98 b 115 69 120 69 117 69 b 109 79 109 69 109 75 z',\n        },\n        timeSig6: {\n            xMin: 20,\n            xMax: 414,\n            yMin: -249,\n            yMax: 251,\n            ha: 500,\n            o: 'm 439 120 b 554 229 500 120 554 167 b 553 245 554 235 554 239 b 348 361 539 337 426 361 b 85 209 239 360 137 307 b 29 4 53 148 29 72 l 29 -1 b 73 -200 30 -68 42 -143 b 324 -359 132 -307 203 -359 b 513 -307 389 -359 461 -348 b 596 -137 563 -266 596 -202 b 379 72 596 -24 490 72 b 248 22 333 72 285 55 b 239 19 245 19 242 19 b 226 53 230 19 226 30 b 346 327 230 320 315 327 b 393 305 374 327 393 320 b 357 251 393 285 366 268 b 347 209 350 238 347 223 b 369 150 347 187 354 166 b 439 120 379 131 420 120 z m 320 3 b 405 -158 366 3 405 -69 b 320 -320 405 -248 366 -320 b 236 -158 274 -320 236 -248 b 320 3 236 -69 274 3 z',\n        },\n        timeSig7: {\n            xMin: 20,\n            xMax: 421,\n            yMin: -250,\n            yMax: 249,\n            ha: 499,\n            o: 'm 606 294 b 582 351 606 333 606 351 b 552 336 580 351 557 346 b 485 236 541 318 521 236 b 262 359 449 236 382 359 b 137 307 179 359 157 325 b 98 281 117 288 108 282 b 60 315 86 281 68 301 b 43 325 58 321 50 325 b 29 308 36 325 29 321 l 29 71 b 45 48 29 71 30 48 b 66 76 56 48 60 60 b 164 196 81 112 99 196 b 374 88 222 196 291 88 b 446 118 415 88 435 109 b 459 124 451 121 456 124 b 469 111 465 124 468 120 b 272 -112 469 71 359 -10 b 173 -315 217 -176 173 -259 b 200 -360 173 -346 173 -360 b 294 -347 226 -360 258 -347 b 412 -360 330 -347 397 -360 b 435 -307 426 -360 435 -348 b 606 288 435 -66 606 140 z',\n        },\n        timeSig8: {\n            xMin: 20,\n            xMax: 416,\n            yMin: -259,\n            yMax: 259,\n            ha: 518,\n            o: 'm 481 52 b 567 204 533 85 567 132 b 317 373 567 351 356 373 b 36 176 150 373 36 297 b 161 -16 36 76 92 23 b 29 -190 86 -52 29 -99 b 301 -373 29 -315 158 -373 b 599 -117 445 -373 599 -311 b 481 52 599 -30 549 17 z m 406 85 b 168 240 291 125 168 150 b 314 331 168 301 251 331 b 482 207 360 331 482 308 b 406 85 482 150 454 112 z m 295 -325 b 111 -183 199 -325 111 -276 b 225 -48 111 -125 161 -72 b 436 -219 330 -94 436 -124 b 295 -325 436 -276 392 -325 z',\n        },\n        timeSig9: {\n            xMin: 20,\n            xMax: 414,\n            yMin: -249,\n            yMax: 251,\n            ha: 500,\n            o: 'm 186 -117 b 71 -226 125 -117 71 -164 b 72 -242 71 -232 71 -236 b 276 -359 86 -334 199 -359 b 540 -206 386 -357 488 -304 b 596 -1 572 -145 596 -69 l 596 4 b 552 203 595 71 583 145 b 301 361 492 310 422 361 b 112 310 236 361 164 351 b 29 140 62 269 29 204 b 246 -69 29 27 135 -69 b 377 -19 292 -69 340 -52 b 386 -16 380 -16 383 -16 b 399 -50 395 -16 399 -27 b 279 -324 395 -317 310 -324 b 232 -302 251 -324 232 -317 b 268 -248 232 -282 259 -265 b 278 -206 275 -235 278 -220 b 256 -147 278 -184 271 -163 b 186 -117 246 -128 204 -117 z m 305 0 b 220 161 259 0 220 72 b 305 323 220 251 259 323 b 389 161 351 323 389 251 b 305 0 389 72 351 0 z',\n        },\n        timeSigCommon: {\n            xMin: 5,\n            xMax: 424,\n            yMin: -249,\n            yMax: 251,\n            ha: 500,\n            o: 'm 336 361 b 7 -14 131 361 7 180 b 101 -262 7 -108 42 -190 b 321 -359 156 -328 235 -359 b 611 -88 573 -359 611 -130 b 589 -56 611 -56 595 -56 b 567 -82 577 -56 567 -58 b 363 -311 567 -268 409 -311 b 184 40 246 -311 184 -197 b 372 327 184 278 294 327 b 477 278 446 327 477 292 b 451 246 477 265 472 246 b 360 140 393 246 360 184 b 471 32 360 58 431 32 b 580 156 471 32 580 36 b 336 361 580 344 363 361 z',\n        },\n        timeSigCutCommon: {\n            xMin: 0,\n            xMax: 418,\n            yMin: -359,\n            yMax: 361,\n            ha: 720,\n            o: 'm 573 -58 b 559 -82 567 -58 559 -60 b 354 -310 559 -266 400 -310 b 317 -305 340 -310 328 -308 b 302 -284 311 -304 302 -295 l 302 287 b 338 323 302 297 328 321 b 363 324 347 324 356 324 b 468 275 436 324 468 289 b 442 243 468 264 464 243 b 351 137 384 243 351 181 b 462 30 351 56 422 30 b 572 154 462 30 572 35 b 318 357 572 295 441 357 b 302 390 310 359 302 383 l 302 495 b 276 520 302 507 292 520 b 252 495 265 520 252 507 l 252 369 b 235 346 252 359 238 346 l 196 331 b 0 -14 66 275 0 122 b 225 -346 0 -150 86 -310 b 252 -382 235 -350 252 -369 l 252 -492 b 276 -517 252 -505 265 -517 b 302 -492 292 -517 302 -505 l 302 -379 b 318 -359 302 -370 308 -363 b 602 -85 563 -354 602 -130 b 579 -58 600 -58 586 -58 z m 252 -235 b 243 -252 252 -248 248 -252 b 236 -248 240 -252 238 -251 b 177 37 197 -193 177 -96 b 232 259 177 147 200 215 b 236 262 233 262 235 262 b 252 239 243 262 252 251 z',\n        },\n        timeSigPlus: {\n            xMin: -1,\n            xMax: 499,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 432 53 b 413 79 420 53 413 65 l 413 340 b 392 360 413 350 405 360 l 325 360 b 305 340 312 360 305 350 l 305 79 b 284 53 305 66 292 53 l 19 53 b -1 33 9 53 -1 46 l -1 -33 b 19 -55 -1 -46 9 -55 l 284 -55 b 305 -75 298 -55 305 -68 l 305 -340 b 325 -360 305 -350 312 -360 l 392 -360 b 413 -340 405 -360 413 -350 l 413 -78 b 433 -55 413 -63 423 -55 l 698 -55 b 719 -33 708 -55 719 -46 l 719 33 b 698 53 719 46 708 53 z',\n        },\n        timeSigPlusSmall: {\n            xMin: -1,\n            xMax: 255,\n            yMin: -133,\n            yMax: 123,\n            ha: 256,\n            o: 'm 220 20 b 210 33 215 20 210 26 l 210 166 b 200 177 210 171 206 177 l 166 177 b 156 166 160 177 156 171 l 156 33 b 145 20 156 27 150 20 l 10 20 b -1 10 4 20 -1 16 l -1 -24 b 10 -35 -1 -30 4 -35 l 145 -35 b 156 -46 153 -35 156 -42 l 156 -180 b 166 -192 156 -186 160 -192 l 200 -192 b 210 -180 206 -192 210 -186 l 210 -48 b 222 -35 210 -39 216 -35 l 356 -35 b 367 -24 361 -35 367 -30 l 367 10 b 356 20 367 16 361 20 z',\n        },\n        timeSigMinus: {\n            xMin: 0,\n            xMax: 448,\n            yMin: -35,\n            yMax: 40,\n            ha: 75,\n            o: 'm 645 39 b 619 58 645 49 634 58 l 27 58 b 0 39 12 58 0 49 l 0 -32 b 27 -50 0 -42 12 -50 l 619 -50 b 645 -32 634 -50 645 -42 z',\n        },\n        timeSigParensRight: {\n            xMin: 0,\n            xMax: 184,\n            yMin: -489,\n            yMax: 491,\n            ha: 980,\n            o: 'm 0 -696 b 3 -704 0 -698 1 -704 b 7 -703 4 -704 6 -704 b 265 1 187 -530 265 -282 b 12 701 265 289 187 531 b 4 707 12 701 6 707 b 0 696 1 707 0 703 l 0 665 b 4 644 0 665 0 651 b 167 1 112 503 167 315 b 6 -641 167 -311 109 -497 b 0 -658 3 -644 0 -651 z',\n        },\n        timeSigParensRightSmall: {\n            xMin: 0,\n            xMax: 110,\n            yMin: -251,\n            yMax: 249,\n            ha: 500,\n            o: 'm 0 -356 b 3 -361 0 -357 1 -361 b 158 0 112 -272 158 -145 b 4 359 158 147 109 272 b 0 353 3 359 0 357 l 0 338 b 3 327 0 338 0 330 b 91 0 60 246 91 160 b 4 -328 91 -160 62 -249 b 0 -337 3 -330 0 -333 z',\n        },\n        timeSigParensLeft: {\n            xMin: 0,\n            xMax: 184,\n            yMin: -489,\n            yMax: 491,\n            ha: 980,\n            o: 'm 265 -658 b 259 -641 265 -651 262 -644 b 98 1 156 -497 98 -311 b 261 644 98 315 153 503 b 265 665 265 651 265 665 l 265 696 b 261 707 265 703 264 707 b 253 701 259 707 253 701 b 0 1 78 531 0 289 b 258 -703 0 -282 78 -530 b 262 -704 259 -704 261 -704 b 265 -696 264 -704 265 -698 z',\n        },\n        timeSigParensLeftSmall: {\n            xMin: 0,\n            xMax: 110,\n            yMin: -251,\n            yMax: 249,\n            ha: 500,\n            o: 'm 158 -337 b 154 -328 158 -333 156 -330 b 68 0 96 -249 68 -160 b 156 327 68 160 98 246 b 158 338 158 330 158 338 l 158 353 b 154 359 158 357 156 359 b 0 0 49 272 0 147 b 156 -361 0 -145 46 -272 b 158 -356 157 -361 158 -357 z',\n        },\n        noteheadDoubleWhole: {\n            xMin: 0,\n            xMax: 599,\n            yMin: -155,\n            yMax: 155,\n            ha: 310,\n            o: 'm 13 223 b 0 212 4 223 0 217 l 0 -213 b 13 -223 0 -219 4 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 96 223 b 82 212 88 223 82 217 l 82 -213 b 96 -223 82 -219 88 -223 l 114 -223 b 128 -213 121 -223 128 -219 l 128 212 b 114 223 128 217 121 223 z m 747 223 b 733 212 740 223 733 217 l 733 -213 b 747 -223 733 -219 740 -223 l 766 -223 b 780 -213 773 -223 780 -219 l 780 212 b 766 223 780 217 773 223 z m 829 223 b 815 212 824 223 815 217 l 815 -213 b 829 -223 815 -219 824 -223 l 848 -223 b 863 -213 857 -223 863 -219 l 863 212 b 848 223 863 217 857 223 z m 438 180 b 130 1 248 180 130 101 b 423 -180 130 -92 210 -180 b 733 1 657 -180 733 -98 b 438 180 733 104 572 180 z m 469 -145 b 331 -71 409 -145 369 -112 b 284 58 305 -37 284 12 b 400 147 284 131 333 147 b 577 -45 498 147 577 42 b 469 -145 577 -115 533 -145 z',\n        },\n        noteheadWhole: {\n            xMin: 0,\n            xMax: 422,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 311 180 b 0 3 120 180 0 101 b 297 -180 0 -94 82 -180 b 608 3 533 -180 608 -98 b 311 180 608 105 445 180 z m 160 91 b 274 148 176 141 229 148 b 452 -45 373 148 452 42 b 386 -141 452 -89 433 -130 b 341 -147 372 -145 356 -147 b 206 -72 289 -147 236 -112 b 156 56 177 -39 156 10 b 160 91 156 68 157 79 z',\n        },\n        noteheadHalf: {\n            xMin: 0,\n            xMax: 295,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 140 -180 b 425 60 377 -180 425 13 b 282 180 425 134 366 180 b 0 -60 68 180 0 14 b 140 -180 0 -137 60 -180 z m 108 -125 b 50 -92 78 -125 60 -109 b 42 -63 46 -84 42 -73 b 318 121 42 7 251 121 b 372 91 346 121 361 108 b 380 63 376 82 380 73 b 108 -125 380 1 177 -125 z',\n        },\n        noteheadBlack: {\n            xMin: 0,\n            xMax: 295,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 140 -180 b 425 60 268 -180 425 -62 b 285 180 425 134 367 180 b 0 -60 127 180 0 63 b 140 -180 0 -135 62 -180 z',\n        },\n        noteheadXDoubleWhole: {\n            xMin: 0,\n            xMax: 546,\n            yMin: -155,\n            yMax: 155,\n            ha: 310,\n            o: 'm 43 213 b 30 223 43 217 39 223 l 13 223 b 0 213 6 223 0 217 l 0 -215 b 13 -223 0 -219 6 -223 l 30 -223 b 43 -215 39 -223 43 -219 z m 704 213 b 693 223 704 217 698 223 l 672 223 b 660 213 667 223 660 217 l 660 163 b 634 180 655 173 645 180 l 505 180 b 484 173 498 180 490 177 l 393 95 l 300 173 b 279 180 294 177 287 180 l 151 180 b 125 163 141 180 130 173 l 125 213 b 112 223 125 217 118 223 l 94 223 b 82 213 86 223 82 217 l 82 -215 b 94 -223 82 -219 86 -223 l 112 -223 b 125 -215 118 -223 125 -219 l 125 -163 b 151 -180 130 -173 140 -180 l 279 -180 b 300 -171 287 -180 294 -177 l 393 -95 l 485 -171 b 505 -180 491 -177 498 -180 l 632 -180 b 660 -163 645 -180 655 -173 l 660 -215 b 672 -223 660 -219 667 -223 l 693 -223 b 704 -215 698 -223 704 -219 z m 786 213 b 772 223 786 217 780 223 l 755 223 b 740 213 747 223 740 217 l 740 -215 b 755 -223 740 -219 747 -223 l 772 -223 b 786 -215 780 -223 786 -219 z m 507 -141 l 393 -45 l 276 -141 l 207 -141 l 364 0 l 207 141 l 276 141 l 393 45 l 507 141 l 577 141 l 420 0 l 577 -141 z m 660 -132 l 518 0 l 660 132 z m 125 131 l 266 0 l 125 -131 z',\n        },\n        noteheadXWhole: {\n            xMin: 0,\n            xMax: 377,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 272 -95 l 364 -171 b 384 -180 370 -177 377 -180 l 511 -180 b 543 -148 528 -180 543 -164 b 531 -124 543 -140 539 -131 l 412 0 l 531 124 b 541 148 539 131 541 140 b 513 180 541 164 528 180 l 384 180 b 364 171 377 180 370 177 l 272 94 l 179 171 b 158 180 173 177 166 180 l 30 180 b 0 148 16 180 0 164 b 12 124 0 140 4 131 l 132 0 l 12 -124 b 1 -148 4 -131 1 -140 b 32 -180 1 -164 14 -180 l 158 -180 b 179 -171 166 -180 173 -177 z m 386 -141 l 272 -45 l 157 -141 l 88 -141 l 245 0 l 88 141 l 157 141 l 272 45 l 386 141 l 456 141 l 300 0 l 456 -141 z',\n        },\n        noteheadXHalf: {\n            xMin: 0,\n            xMax: 334,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 295 180 b 271 170 287 180 278 177 l 209 98 l 115 171 b 95 180 109 177 104 180 l 36 180 b 4 148 19 180 4 164 b 14 124 4 140 7 132 l 140 22 l 7 -127 b 0 -148 3 -131 0 -138 b 32 -180 0 -166 14 -180 l 184 -180 b 209 -170 193 -180 203 -177 l 271 -99 l 363 -171 b 384 -180 370 -176 377 -180 l 445 -180 b 478 -147 461 -180 478 -163 b 465 -125 478 -138 474 -131 l 341 -22 l 474 127 b 481 148 480 131 481 138 b 448 180 481 166 468 180 z m 36 148 l 95 148 l 233 33 l 334 148 l 410 148 l 274 -6 l 445 -148 l 384 -148 l 248 -35 l 147 -148 l 71 -148 l 206 4 z',\n        },\n        noteheadXBlack: {\n            xMin: 0,\n            xMax: 290,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 410 -143 l 239 0 l 410 144 b 418 160 415 147 418 154 b 399 180 418 171 408 180 b 389 177 396 180 392 179 l 207 26 l 29 177 b 17 180 26 179 22 180 b 0 161 7 180 0 170 b 7 144 0 156 3 148 l 179 0 l 7 -143 b 0 -158 1 -147 0 -153 b 19 -180 0 -170 7 -180 b 29 -176 23 -180 26 -179 l 207 -24 l 389 -176 b 399 -180 392 -179 396 -180 b 418 -160 410 -180 418 -168 b 410 -143 418 -153 415 -147 z',\n        },\n        noteheadCircleXDoubleWhole: {\n            xMin: 0,\n            xMax: 422,\n            yMin: -155,\n            yMax: 155,\n            ha: 310,\n            o: 'm 576 223 b 563 213 570 223 563 219 l 563 -215 b 576 -223 563 -219 570 -223 l 595 -223 b 608 -215 602 -223 608 -219 l 608 213 b 595 223 608 219 602 223 z m 497 223 b 484 213 491 223 484 219 l 484 -215 b 497 -223 484 -219 491 -223 l 516 -223 b 528 -215 523 -223 528 -219 l 528 213 b 516 223 528 219 523 223 z m 94 223 b 81 213 86 223 81 219 l 81 -215 b 94 -223 81 -219 86 -223 l 111 -223 b 124 -215 118 -223 124 -219 l 124 213 b 111 223 124 219 118 223 z m 13 223 b 0 213 6 223 0 219 l 0 -215 b 13 -223 0 -219 6 -223 l 30 -223 b 45 -215 37 -223 45 -219 l 45 213 b 30 223 45 219 37 223 z m 304 180 b 127 0 206 180 127 101 b 304 -180 127 -99 206 -180 b 482 0 405 -180 482 -99 b 304 180 482 101 405 180 z m 305 32 l 225 112 b 304 140 248 130 275 140 b 387 112 336 140 364 130 z m 278 1 l 193 -82 b 216 0 199 -59 216 -30 b 194 85 216 33 203 50 z m 334 1 l 418 84 b 389 0 402 50 389 23 b 418 -81 389 -30 409 -60 z m 305 -27 l 389 -109 b 304 -138 364 -128 336 -138 b 222 -109 274 -138 246 -128 z',\n        },\n        noteheadCircleXWhole: {\n            xMin: 0,\n            xMax: 249,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 101 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 101 278 180 z m 180 32 l 99 112 b 179 140 121 130 150 140 b 262 112 210 140 238 130 z m 151 1 l 68 -82 b 86 0 73 -59 86 -30 b 68 85 86 33 78 50 z m 209 1 l 291 84 b 269 0 276 50 269 32 b 291 -79 269 -26 282 -58 z m 180 -27 l 264 -111 b 179 -138 239 -128 210 -138 b 96 -111 148 -138 120 -128 z',\n        },\n        noteheadCircleXHalf: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 101 b 179 -180 0 -99 81 -180 b 360 0 278 -180 360 -99 b 179 180 360 101 278 180 z m 186 37 l 131 92 b 220 124 153 109 189 124 b 262 112 236 124 249 121 z m 215 7 l 291 84 b 304 42 300 71 304 58 b 271 -49 304 10 288 -26 z m 145 -6 l 68 -82 b 56 -42 59 -71 56 -58 b 89 52 56 -9 72 27 z m 174 -33 l 230 -89 b 140 -124 206 -108 171 -124 b 96 -111 122 -124 109 -121 z',\n        },\n        noteheadCircleX: {\n            xMin: 0,\n            xMax: 249,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 179 180 b 0 0 81 180 0 99 b 179 -180 0 -99 81 -180 b 359 0 278 -180 359 -99 b 179 180 359 99 278 180 z m 261 112 l 180 30 l 98 112 b 179 138 121 128 148 138 b 261 112 210 138 238 128 z m 317 0 b 292 -82 317 -30 308 -59 l 209 1 l 291 84 b 317 0 307 60 317 30 z m 40 0 b 69 84 40 32 50 60 l 151 1 l 68 -84 b 40 0 49 -60 40 -30 z m 95 -111 l 180 -27 l 262 -111 b 179 -138 239 -128 210 -138 b 95 -111 148 -138 120 -128 z',\n        },\n        noteheadCircledDoubleWhole: {\n            xMin: 0,\n            xMax: 603,\n            yMin: -218,\n            yMax: 213,\n            ha: 431,\n            o: 'm 770 223 l 752 223 b 737 213 744 223 737 219 l 737 59 b 435 307 710 203 582 307 b 128 48 281 307 156 197 l 128 213 b 115 223 128 219 122 223 l 96 223 b 84 213 89 223 84 219 l 84 -215 b 96 -223 84 -220 89 -223 l 115 -223 b 128 -215 122 -223 128 -220 l 128 -56 b 435 -314 156 -206 282 -314 b 654 -223 517 -314 595 -282 b 737 -66 697 -180 726 -125 l 737 -215 b 752 -223 737 -220 744 -223 l 770 -223 b 785 -215 778 -223 785 -220 l 785 213 b 770 223 785 219 778 223 z m 435 274 b 698 85 556 274 661 194 b 439 180 641 143 534 180 b 176 99 320 180 228 148 b 435 274 217 203 318 274 z m 32 223 l 13 223 b 0 213 6 223 0 219 l 0 -215 b 13 -223 0 -220 6 -223 l 32 -223 b 45 -215 40 -223 45 -220 l 45 213 b 32 223 45 219 40 223 z m 852 223 l 835 223 b 819 213 828 223 819 219 l 819 -215 b 835 -223 819 -220 828 -223 l 852 -223 b 868 -215 861 -223 868 -220 l 868 213 b 852 223 868 219 861 223 z m 580 -46 b 514 -143 580 -91 562 -131 b 472 -148 501 -147 487 -148 b 364 -105 433 -148 395 -131 l 334 -73 b 285 58 307 -39 285 10 b 289 91 285 69 287 79 b 403 145 305 140 357 145 b 580 -46 501 145 580 42 z m 435 -282 b 176 -108 318 -282 217 -209 b 425 -180 222 -151 301 -180 b 691 -109 563 -180 647 -153 b 435 -282 651 -210 550 -282 z',\n        },\n        noteheadCircledWhole: {\n            xMin: 0,\n            xMax: 437,\n            yMin: -225,\n            yMax: 211,\n            ha: 436,\n            o: 'm 314 304 b 0 -10 140 304 0 164 b 314 -324 0 -183 141 -324 b 629 -10 487 -324 629 -183 b 314 304 629 164 488 304 z m 314 275 b 588 73 441 275 549 193 b 321 180 536 137 420 180 b 48 88 190 180 95 143 b 314 275 85 199 199 275 z m 393 -141 b 350 -147 379 -145 364 -147 b 314 -141 337 -147 325 -145 b 167 55 235 -120 167 -26 b 173 91 167 66 168 79 b 284 145 187 138 239 145 b 459 -48 382 145 459 39 b 393 -141 459 -91 438 -131 z m 314 -294 b 40 -86 187 -294 75 -207 b 305 -180 81 -141 164 -180 b 588 -86 464 -180 550 -143 b 314 -294 554 -209 442 -294 z',\n        },\n        noteheadCircledHalf: {\n            xMin: -18,\n            xMax: 311,\n            yMin: -162,\n            yMax: 167,\n            ha: 329,\n            o: 'm 212 240 b -26 3 81 240 -26 134 b 212 -233 -26 -127 81 -233 b 448 3 341 -233 448 -127 b 212 240 448 134 341 240 z m 212 220 b 363 160 271 220 324 197 b 281 180 341 173 312 180 b 0 -52 76 180 6 26 b -6 3 -4 -35 -6 -16 b 212 220 -6 122 92 220 z m 50 -92 b 42 -63 46 -84 42 -73 b 173 63 42 -33 73 7 b 317 120 243 105 288 120 b 369 89 344 120 359 107 b 377 62 374 81 377 72 b 248 -66 377 33 348 -1 b 108 -125 183 -109 138 -125 b 50 -92 78 -125 60 -109 z m 212 -215 b 84 -171 164 -215 120 -199 b 138 -180 101 -179 120 -180 b 422 56 372 -180 420 7 b 429 3 426 40 429 22 b 212 -215 429 -117 333 -215 z',\n        },\n        noteheadCircledBlack: {\n            xMin: -21,\n            xMax: 321,\n            yMin: -171,\n            yMax: 167,\n            ha: 338,\n            o: 'm 216 240 b -30 -3 82 240 -30 131 b 216 -246 -30 -137 82 -246 b 462 -3 351 -246 462 -137 b 216 240 462 131 351 240 z m 216 220 b 372 160 276 220 331 197 b 284 180 348 174 317 180 b 0 -59 127 180 0 65 l 0 -66 b -10 -3 -6 -45 -10 -24 b 216 220 -10 120 92 220 z m 216 -226 b 56 -158 153 -226 96 -200 b 140 -180 79 -171 107 -180 b 425 60 268 -180 425 -60 b 422 88 425 71 425 79 b 442 -3 435 60 442 29 b 216 -226 442 -125 341 -226 z',\n        },\n        noteheadDoubleWholeSquare: {\n            xMin: 0,\n            xMax: 416,\n            yMin: -190,\n            yMax: 198,\n            ha: 388,\n            o: 'm 563 217 b 528 180 563 192 544 180 l 62 180 b 36 215 52 180 36 192 l 36 268 b 17 285 36 278 27 285 b 0 268 7 285 0 278 l 0 -255 b 17 -274 0 -264 7 -274 b 36 -255 27 -274 36 -264 l 36 -213 b 66 -180 36 -197 53 -180 l 528 -180 b 563 -209 549 -180 563 -196 l 563 -255 b 580 -274 563 -264 570 -274 b 599 -255 590 -274 599 -264 l 599 268 b 580 285 599 278 590 285 b 563 268 570 285 563 278 z m 36 23 b 111 71 36 55 58 71 l 487 71 b 563 30 533 71 563 53 l 563 -22 b 487 -68 563 -53 533 -68 l 117 -68 b 36 -22 66 -68 36 -49 z',\n        },\n        noteheadSquareWhite: {\n            xMin: 0,\n            xMax: 313,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z m 40 -138 l 40 140 l 410 140 l 410 -138 z',\n        },\n        noteheadSquareBlack: {\n            xMin: 0,\n            xMax: 313,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 451 -180 l 451 180 l 0 180 l 0 -180 z',\n        },\n        noteheadTriangleDownDoubleWhole: {\n            xMin: 0,\n            xMax: 483,\n            yMin: -155,\n            yMax: 155,\n            ha: 310,\n            o: 'm 696 213 b 681 223 696 219 690 223 l 662 223 b 648 213 655 223 648 219 l 648 -213 b 662 -223 648 -217 655 -223 l 681 -223 b 696 -213 690 -223 696 -217 z m 619 213 b 605 223 619 219 613 223 l 588 223 b 573 213 580 223 573 219 l 573 174 b 562 180 570 177 566 180 l 134 180 b 122 174 130 180 125 177 l 122 213 b 108 223 122 219 117 223 l 91 223 b 76 213 84 223 76 219 l 76 -213 b 91 -223 76 -217 84 -223 l 108 -223 b 122 -213 117 -223 122 -217 l 122 154 l 334 -173 b 346 -180 337 -177 341 -180 b 357 -173 351 -180 354 -177 l 573 154 l 573 -213 b 588 -223 573 -217 580 -223 l 605 -223 b 619 -213 613 -223 619 -217 z m 32 -223 b 46 -213 40 -223 46 -217 l 46 213 b 32 223 46 219 40 223 l 14 223 b 0 213 7 223 0 219 l 0 -213 b 14 -223 0 -217 7 -223 z m 428 98 b 346 -107 428 17 377 -53 b 265 96 315 -55 265 17 b 289 137 265 109 275 137 l 406 137 b 428 98 419 137 428 111 z',\n        },\n        noteheadTriangleDownWhole: {\n            xMin: 0,\n            xMax: 319,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 14 180 b 0 166 6 180 0 173 b 1 158 0 163 1 160 l 216 -173 b 228 -180 219 -177 225 -180 b 239 -173 233 -180 238 -177 l 458 158 b 459 166 458 160 459 163 b 445 180 459 173 454 180 z m 288 137 b 310 98 301 137 310 111 b 228 -108 310 17 259 -55 b 145 96 197 -56 145 17 b 170 137 145 109 157 137 z',\n        },\n        noteheadTriangleDownHalf: {\n            xMin: 0,\n            xMax: 285,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 196 -180 b 209 -173 200 -180 206 -177 l 408 157 b 410 166 409 160 410 163 b 396 180 410 173 403 180 l 14 180 b 0 166 4 180 0 173 b 1 158 0 163 0 161 l 183 -173 b 196 -180 184 -174 190 -180 z m 164 138 l 295 138 l 179 -76 l 114 37 z',\n        },\n        noteheadTriangleDownBlack: {\n            xMin: 0,\n            xMax: 292,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 207 -180 l 420 180 l 0 180 z',\n        },\n        noteheadTriangleUpDoubleWhole: {\n            xMin: 0,\n            xMax: 483,\n            yMin: -155,\n            yMax: 155,\n            ha: 310,\n            o: 'm 696 213 b 681 223 696 217 690 223 l 662 223 b 648 213 655 223 648 217 l 648 -213 b 662 -223 648 -219 655 -223 l 681 -223 b 696 -213 690 -223 696 -219 z m 619 213 b 605 223 619 217 613 223 l 588 223 b 573 213 580 223 573 217 l 573 -154 l 357 173 b 346 180 354 177 351 180 b 334 173 341 180 337 177 l 122 -154 l 122 213 b 108 223 122 217 117 223 l 91 223 b 76 213 84 223 76 217 l 76 -213 b 91 -223 76 -219 84 -223 l 108 -223 b 122 -213 117 -223 122 -219 l 122 -174 b 134 -180 125 -177 130 -180 l 562 -180 b 573 -174 566 -180 570 -177 l 573 -213 b 588 -223 573 -219 580 -223 l 605 -223 b 619 -213 613 -223 619 -219 z m 32 223 l 14 223 b 0 213 7 223 0 217 l 0 -213 b 14 -223 0 -219 7 -223 l 32 -223 b 46 -213 40 -223 46 -219 l 46 213 b 32 223 46 217 40 223 z m 428 -98 b 406 -137 428 -111 419 -137 l 289 -137 b 265 -96 275 -137 265 -109 b 346 107 265 -17 315 55 b 428 -98 377 53 428 -17 z',\n        },\n        noteheadTriangleUpWhole: {\n            xMin: 0,\n            xMax: 319,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 445 -180 b 459 -166 454 -180 459 -173 b 458 -158 459 -163 458 -160 l 239 173 b 228 180 238 177 233 180 b 216 173 225 180 219 177 l 1 -158 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 6 -180 z m 170 -137 b 145 -96 157 -137 145 -109 b 228 108 145 -17 197 56 b 310 -98 259 55 310 -17 b 288 -137 310 -111 301 -137 z',\n        },\n        noteheadTriangleUpHalf: {\n            xMin: 0,\n            xMax: 285,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 215 180 b 202 173 210 180 204 177 l 3 -157 b 0 -166 1 -160 0 -163 b 14 -180 0 -173 7 -180 l 396 -180 b 410 -166 406 -180 410 -173 b 409 -158 410 -163 410 -161 l 228 173 b 215 180 226 174 220 180 z m 246 -138 l 115 -138 l 232 76 l 297 -37 z',\n        },\n        noteheadTriangleUpBlack: {\n            xMin: 0,\n            xMax: 293,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 422 -180 l 207 180 l 0 -180 z',\n        },\n        noteheadSlashedDoubleWhole1: {\n            xMin: 0,\n            xMax: 596,\n            yMin: -179,\n            yMax: 168,\n            ha: 347,\n            o: 'm 618 135 l 697 206 b 704 222 703 210 704 216 b 698 236 704 226 703 232 b 683 242 694 239 688 242 b 670 238 677 242 674 240 l 575 153 b 435 180 531 168 481 180 b 128 0 246 180 128 98 b 236 -148 128 -58 160 -114 l 153 -222 b 145 -238 148 -226 145 -232 b 151 -252 145 -242 148 -248 b 167 -258 156 -256 161 -258 b 181 -253 171 -258 177 -256 l 282 -164 b 420 -180 320 -173 366 -180 b 729 0 654 -180 729 -98 b 618 135 729 55 681 104 z m 114 223 l 95 223 b 82 212 88 223 82 217 l 82 -215 b 95 -223 82 -219 88 -223 l 114 -223 b 127 -215 121 -223 127 -219 l 127 212 b 114 223 127 217 121 223 z m 32 223 l 13 223 b 0 212 6 223 0 217 l 0 -215 b 13 -223 0 -219 6 -223 l 32 -223 b 45 -215 39 -223 45 -219 l 45 212 b 32 223 45 217 39 223 z m 844 223 l 825 223 b 811 212 819 223 811 217 l 811 -215 b 825 -223 811 -219 819 -223 l 844 -223 b 858 -215 851 -223 858 -219 l 858 212 b 844 223 858 217 851 223 z m 763 223 l 743 223 b 730 212 736 223 730 217 l 730 -215 b 743 -223 730 -219 736 -223 l 763 -223 b 776 -215 769 -223 776 -219 l 776 212 b 763 223 776 217 769 223 z m 282 56 b 285 89 282 68 284 79 b 399 144 301 137 354 144 b 510 95 441 144 480 124 l 327 -68 b 282 56 301 -35 282 13 z m 572 -72 b 508 -141 564 -108 544 -132 b 467 -147 495 -145 481 -147 b 360 -104 428 -147 389 -128 l 356 -98 l 537 63 b 575 -46 560 30 575 -9 b 572 -72 575 -55 573 -65 z',\n        },\n        noteheadSlashedWhole1: {\n            xMin: -22,\n            xMax: 433,\n            yMin: -157,\n            yMax: 148,\n            ha: 305,\n            o: 'm 484 140 b 308 180 431 166 367 180 b 0 1 118 180 0 99 b 73 -128 0 -48 22 -95 l -22 -190 b -32 -206 -27 -194 -32 -200 b -27 -217 -32 -210 -30 -215 b -12 -226 -23 -223 -17 -226 b 0 -223 -7 -226 -4 -225 l 112 -150 b 294 -180 157 -168 217 -180 b 602 1 526 -180 602 -98 b 523 118 602 48 570 86 l 613 177 b 624 193 619 181 624 187 b 619 204 624 197 622 200 b 603 213 615 209 609 213 b 592 209 599 213 596 212 z m 190 -52 b 154 56 170 -20 154 19 b 160 91 154 68 156 79 b 271 147 174 138 226 147 b 396 82 321 147 364 121 z m 419 50 b 446 -48 436 19 446 -14 b 337 -147 446 -120 402 -147 b 301 -141 327 -147 314 -144 b 235 -104 276 -134 253 -120 b 215 -84 226 -98 220 -91 z',\n        },\n        noteheadSlashedHalf1: {\n            xMin: -67,\n            xMax: 386,\n            yMin: -142,\n            yMax: 160,\n            ha: 302,\n            o: 'm 552 222 b 536 230 549 228 543 230 b 524 228 533 230 528 230 l 389 140 b 281 180 364 164 327 180 b 0 -60 65 180 0 13 b 7 -105 0 -78 3 -92 l -88 -167 b -96 -184 -94 -171 -96 -177 b -94 -194 -96 -187 -95 -192 b -76 -204 -89 -202 -84 -204 b -66 -202 -73 -204 -69 -203 l 29 -140 b 137 -180 55 -167 92 -180 b 420 59 374 -180 420 13 b 412 107 420 76 419 92 l 546 194 b 556 210 552 197 556 204 b 552 222 556 213 554 217 z m 315 120 b 347 112 328 120 338 117 l 46 -82 b 42 -63 43 -76 42 -69 b 315 120 42 6 248 120 z m 108 -124 b 69 -114 91 -124 79 -120 l 372 81 b 376 63 374 75 376 69 b 108 -124 376 0 174 -124 z',\n        },\n        noteheadSlashedBlack1: {\n            xMin: -80,\n            xMax: 375,\n            yMin: -165,\n            yMax: 167,\n            ha: 332,\n            o: 'm 518 240 b 507 236 514 240 510 239 l 384 148 b 284 180 359 168 324 180 b 0 -62 127 180 0 63 b 13 -115 0 -82 4 -99 l -107 -202 b -115 -217 -111 -204 -115 -212 b -111 -229 -115 -222 -114 -225 b -95 -238 -108 -235 -101 -238 b -84 -235 -91 -238 -86 -236 l 39 -148 b 140 -180 63 -170 99 -180 b 425 59 268 -180 425 -62 b 410 117 425 81 420 101 l 530 203 b 540 219 536 207 540 213 b 518 240 540 229 528 240 z',\n        },\n        noteheadSlashedDoubleWhole2: {\n            xMin: 0,\n            xMax: 596,\n            yMin: -178,\n            yMax: 169,\n            ha: 347,\n            o: 'm 729 0 b 435 180 729 102 569 180 b 278 156 374 180 321 170 l 184 239 b 170 243 181 242 176 243 b 154 238 166 243 158 240 b 150 223 151 233 150 228 b 156 207 150 217 153 212 l 233 138 b 128 0 167 107 128 56 b 420 -180 128 -94 210 -180 b 575 -164 482 -180 533 -174 l 672 -252 b 687 -256 677 -255 681 -256 b 703 -251 691 -256 698 -255 b 707 -236 706 -246 707 -240 b 701 -220 707 -230 706 -225 l 619 -150 b 729 0 700 -117 729 -62 z m 114 223 l 95 223 b 82 213 88 223 82 217 l 82 -213 b 95 -223 82 -219 88 -223 l 114 -223 b 127 -213 121 -223 127 -219 l 127 213 b 114 223 127 217 121 223 z m 32 223 l 13 223 b 0 213 6 223 0 217 l 0 -213 b 13 -223 0 -219 6 -223 l 32 -223 b 45 -213 39 -223 45 -219 l 45 213 b 32 223 45 217 39 223 z m 844 223 l 825 223 b 811 213 819 223 811 217 l 811 -213 b 825 -223 811 -219 819 -223 l 844 -223 b 858 -213 851 -223 858 -219 l 858 213 b 844 223 858 217 851 223 z m 763 223 l 743 223 b 730 213 736 223 730 217 l 730 -213 b 743 -223 730 -219 736 -223 l 763 -223 b 776 -213 769 -223 776 -219 l 776 213 b 763 223 776 217 769 223 z m 312 124 b 399 144 336 141 369 144 b 575 -46 495 144 575 40 b 563 -98 575 -65 570 -81 z m 508 -141 b 467 -147 495 -145 481 -147 b 360 -104 428 -147 389 -128 b 330 -72 350 -95 340 -82 b 282 56 304 -37 282 10 b 285 89 282 68 284 79 b 536 -130 287 89 304 75 z',\n        },\n        noteheadSlashedWhole2: {\n            xMin: -18,\n            xMax: 436,\n            yMin: -154,\n            yMax: 151,\n            ha: 305,\n            o: 'm 531 -128 b 602 1 582 -96 602 -49 b 308 180 602 104 441 180 b 114 144 230 180 164 166 l 4 215 b -6 217 1 217 -3 217 b -22 209 -13 217 -19 215 b -26 197 -24 204 -26 200 b -16 181 -26 192 -22 184 l 75 121 b 0 1 27 91 0 49 b 294 -180 0 -94 82 -180 b 491 -150 379 -180 444 -168 l 598 -219 b 608 -222 600 -222 605 -222 b 624 -213 615 -222 621 -219 b 628 -202 626 -209 628 -206 b 618 -186 628 -196 624 -189 z m 168 108 b 271 147 190 141 233 147 b 446 -48 369 147 446 40 b 445 -72 446 -56 446 -63 z m 154 69 l 429 -109 b 382 -141 419 -125 402 -135 b 337 -147 367 -144 351 -147 b 301 -141 327 -147 314 -144 b 235 -104 276 -134 253 -120 b 203 -72 223 -94 213 -82 b 154 58 177 -39 154 12 z',\n        },\n        noteheadSlashedHalf2: {\n            xMin: -73,\n            xMax: 380,\n            yMin: -134,\n            yMax: 168,\n            ha: 302,\n            o: 'm 537 -156 l 383 -58 b 422 60 413 -9 422 39 b 281 180 422 134 364 180 b 101 127 203 180 144 157 l -75 239 b -85 242 -78 242 -82 242 b -102 233 -92 242 -98 239 b -105 222 -104 229 -105 225 b -95 206 -105 216 -102 209 l 69 99 b 0 -59 19 46 0 -20 b 138 -180 0 -135 60 -180 b 359 -88 248 -180 317 -138 l 516 -190 b 527 -193 520 -192 524 -193 b 543 -183 534 -193 540 -190 b 547 -173 546 -180 547 -176 b 537 -156 547 -166 543 -160 z m 367 92 b 377 63 374 82 377 73 b 318 -14 377 43 361 20 l 184 72 b 317 121 248 108 289 121 b 367 92 344 121 357 109 z m 248 -66 b 108 -124 181 -108 138 -124 b 50 -92 78 -124 60 -109 b 42 -63 46 -84 42 -73 b 145 49 42 -35 68 0 l 285 -40 b 248 -66 274 -49 261 -56 z',\n        },\n        noteheadSlashedBlack2: {\n            xMin: -79,\n            xMax: 376,\n            yMin: -164,\n            yMax: 168,\n            ha: 332,\n            o: 'm 531 -200 l 363 -78 b 425 59 402 -37 425 10 b 285 180 425 132 367 180 b 92 114 210 180 144 154 l -81 238 b -94 242 -85 240 -89 242 b -111 232 -99 242 -107 238 b -114 220 -112 229 -114 225 b -105 204 -114 215 -111 207 l 62 85 b 0 -62 23 43 0 -9 b 140 -180 0 -137 62 -180 b 331 -108 204 -180 275 -153 l 507 -233 b 520 -236 511 -236 517 -236 b 537 -228 527 -236 533 -233 b 541 -216 540 -225 541 -220 b 531 -200 541 -210 537 -203 z',\n        },\n        noteheadDiamondDoubleWhole: {\n            xMin: 0,\n            xMax: 432,\n            yMin: -155,\n            yMax: 155,\n            ha: 310,\n            o: 'm 592 223 b 580 215 585 223 580 219 l 580 -215 b 592 -223 580 -219 585 -223 l 608 -223 b 622 -215 615 -223 622 -219 l 622 215 b 608 223 622 219 615 223 z m 517 223 b 504 215 510 223 504 219 l 504 -215 b 517 -223 504 -219 510 -223 l 533 -223 b 544 -215 540 -223 544 -219 l 544 215 b 533 223 544 219 540 223 z m 246 179 b 240 180 243 179 242 180 b 232 176 236 180 233 179 l 118 22 b 117 17 117 20 117 19 l 117 215 b 104 223 117 219 111 223 l 88 223 b 75 215 81 223 75 219 l 75 -215 b 88 -223 75 -219 81 -223 l 104 -223 b 117 -215 111 -223 117 -219 l 117 14 l 118 14 b 122 7 118 12 120 10 l 374 -179 b 382 -180 376 -180 379 -180 b 390 -177 384 -180 387 -180 l 503 -23 l 503 -17 b 500 -9 503 -13 503 -10 z m 12 223 b 0 215 4 223 0 219 l 0 -215 b 12 -223 0 -219 4 -223 l 29 -223 b 40 -215 36 -223 40 -219 l 40 215 b 29 223 40 219 36 223 z m 183 39 b 179 46 181 39 179 43 b 229 112 226 112 228 112 b 236 109 229 112 233 111 l 436 -39 b 439 -46 438 -39 439 -42 b 390 -112 393 -111 392 -112 b 383 -109 389 -112 386 -111 z',\n        },\n        noteheadDiamondWhole: {\n            xMin: 0,\n            xMax: 270,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 386 -23 b 389 -16 387 -20 389 -19 b 383 -7 389 -13 386 -9 l 130 179 b 122 180 128 180 125 180 b 115 177 120 180 117 180 l 3 23 b 0 17 1 20 0 19 b 4 7 0 16 3 10 l 258 -179 b 264 -180 261 -179 262 -180 b 272 -176 268 -180 271 -179 z m 66 40 b 62 48 65 42 62 45 l 109 111 b 112 112 109 112 111 112 b 118 111 115 112 117 111 l 320 -37 b 324 -46 323 -39 324 -42 b 275 -111 278 -111 276 -111 b 268 -108 272 -111 271 -109 z',\n        },\n        noteheadDiamondHalf: {\n            xMin: 0,\n            xMax: 251,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 359 -7 b 361 0 360 -6 361 -3 b 359 7 361 3 360 4 l 189 177 b 180 180 186 179 183 180 b 174 177 179 180 176 179 l 4 7 b 0 0 1 4 0 3 b 4 -7 0 -3 1 -6 l 174 -177 b 180 -180 176 -180 179 -180 b 189 -177 183 -180 186 -180 z m 266 26 b 138 -71 266 -12 176 -71 b 96 -50 121 -71 108 -63 b 88 -24 89 -43 88 -32 b 215 73 88 13 177 73 b 266 26 238 73 266 50 z',\n        },\n        noteheadDiamondBlack: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 357 -6 b 360 1 359 -4 360 -1 b 357 9 360 4 359 7 l 189 177 b 180 180 187 179 184 180 b 171 177 177 180 173 179 l 3 9 b 0 1 0 6 0 4 b 4 -7 0 -1 1 -4 l 173 -177 b 180 -180 176 -180 177 -180 b 187 -177 181 -180 184 -180 z',\n        },\n        noteheadParenthesis: {\n            xMin: -73,\n            xMax: 368,\n            yMin: -180,\n            yMax: 182,\n            ha: 362,\n            o: 'm 52 -249 b -30 -144 3 -212 -14 -190 b -52 4 -45 -102 -52 -56 b 52 252 -52 118 -36 179 l 46 262 b -105 3 -49 197 -105 124 b 45 -259 -105 -109 -48 -200 z m 382 -259 b 530 3 474 -202 530 -108 b 379 262 530 122 474 200 l 373 252 b 478 4 462 180 478 118 b 456 -144 478 -56 471 -102 b 373 -249 439 -190 422 -212 z',\n        },\n        noteheadParenthesisRight: {\n            xMin: -36,\n            xMax: 73,\n            yMin: -181,\n            yMax: 181,\n            ha: 362,\n            o: 'm -43 -261 b 105 1 49 -203 105 -109 b -46 261 105 121 49 199 l -52 251 b 53 3 37 179 53 117 b 32 -145 53 -58 46 -104 b -52 -251 14 -192 -3 -213 z',\n        },\n        noteheadParenthesisLeft: {\n            xMin: 0,\n            xMax: 109,\n            yMin: -181,\n            yMax: 181,\n            ha: 362,\n            o: 'm 157 -251 b 75 -145 108 -213 91 -192 b 53 3 60 -104 53 -58 b 157 251 53 117 69 177 l 151 261 b 0 1 56 196 0 122 b 150 -261 0 -111 58 -202 z',\n        },\n        noteheadMoonBlack: {\n            xMin: 0,\n            xMax: 315,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 228 -180 b 454 0 343 -180 454 -130 l 454 180 l 0 180 l 0 0 b 228 -180 0 -131 112 -180 z',\n        },\n        noteheadTriangleLeftBlack: {\n            xMin: 0,\n            xMax: 339,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 488 -180 l 0 180 l 0 -180 z',\n        },\n        noteheadTriangleRightBlack: {\n            xMin: 0,\n            xMax: 339,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 488 180 l 0 -180 l 488 -180 z',\n        },\n        noteheadTriangleRoundDownBlack: {\n            xMin: 0,\n            xMax: 278,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 200 -180 l 400 112 l 383 124 b 199 180 327 161 264 180 b 16 124 135 180 73 161 l 0 112 z',\n        },\n        augmentationDot: {\n            xMin: 0,\n            xMax: 100,\n            yMin: -50,\n            yMax: 50,\n            ha: 100,\n            o: 'm 144 0 b 72 72 144 40 112 72 b 0 0 32 72 0 40 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 z',\n        },\n        tremolo1: {\n            xMin: -150,\n            xMax: 150,\n            yMin: -93,\n            yMax: 94,\n            ha: 187,\n            o: 'm 216 -45 l 216 135 l -216 46 l -216 -134 z',\n        },\n        flag8thUp: {\n            xMin: 0,\n            xMax: 264,\n            yMin: -810,\n            yMax: 9,\n            ha: 819,\n            o: 'm 343 -1138 b 380 -888 343 -1138 380 -1001 b 215 -395 380 -708 305 -539 b 58 -19 141 -281 81 -157 b 27 13 53 4 42 13 b 0 -9 12 13 0 9 l 0 -353 b 284 -688 95 -370 232 -566 b 318 -904 305 -737 318 -819 b 284 -1102 318 -969 308 -1037 b 279 -1123 281 -1110 279 -1117 b 302 -1165 279 -1146 294 -1159 b 343 -1138 311 -1171 336 -1162 z',\n        },\n        flag8thDown: {\n            xMin: 0,\n            xMax: 306,\n            yMin: -14,\n            yMax: 808,\n            ha: 822,\n            o: 'm 346 1094 b 376 897 366 1034 376 962 b 318 642 376 812 340 691 b 0 340 265 521 193 405 l 0 1 b 23 -20 0 -13 12 -20 b 58 12 36 -20 55 -12 b 262 387 82 148 189 274 b 441 881 353 530 441 701 b 400 1142 441 994 412 1096 b 377 1164 396 1158 387 1164 b 346 1094 356 1164 331 1136 z',\n        },\n        flag16thUp: {\n            xMin: 0,\n            xMax: 279,\n            yMin: -813,\n            yMax: 2,\n            ha: 815,\n            o: 'm 392 -1146 b 402 -988 397 -1139 402 -1057 l 402 -956 b 360 -783 402 -896 386 -837 b 359 -770 360 -779 359 -776 b 360 -760 359 -768 359 -765 b 396 -577 364 -752 396 -665 b 392 -526 396 -559 395 -543 b 236 -275 377 -428 340 -387 b 53 -16 158 -192 78 -168 b 24 3 50 0 33 3 b 0 -12 16 3 0 -1 l 0 -570 l 7 -570 b 298 -778 96 -573 199 -576 b 344 -992 331 -847 344 -917 b 333 -1120 344 -1034 340 -1077 b 331 -1133 331 -1126 331 -1129 b 363 -1171 331 -1152 343 -1171 b 392 -1146 373 -1171 383 -1165 z m 301 -661 b 223 -562 278 -625 253 -596 b 59 -331 156 -484 89 -449 b 58 -327 58 -330 58 -328 b 78 -312 58 -321 66 -312 l 89 -312 b 302 -464 177 -312 255 -393 b 341 -592 328 -501 341 -546 b 340 -621 341 -602 341 -611 b 330 -658 337 -632 337 -647 b 311 -667 328 -662 318 -667 b 301 -661 307 -667 304 -665 z',\n        },\n        flag16thDown: {\n            xMin: 0,\n            xMax: 291,\n            yMin: -9,\n            yMax: 812,\n            ha: 821,\n            o: 'm 346 1132 b 312 768 367 1011 367 880 b 7 559 213 566 96 562 l 0 559 l 0 1 b 24 -13 0 -6 10 -13 b 53 6 35 -13 50 -10 b 406 516 88 228 372 289 b 410 567 409 531 410 549 b 374 750 410 655 379 742 b 373 760 373 753 373 756 b 374 773 373 766 374 769 b 405 1138 426 881 428 1022 b 370 1169 397 1171 387 1169 b 346 1132 353 1168 341 1156 z m 325 657 b 344 647 333 657 343 652 b 354 611 351 636 351 622 b 356 582 356 600 356 590 b 317 454 356 534 343 491 b 89 302 269 383 177 302 l 78 302 b 58 317 66 302 58 310 b 59 321 58 318 58 320 b 238 552 89 439 170 472 b 315 651 268 585 292 613 b 325 657 318 655 321 657 z',\n        },\n        flag32ndUp: {\n            xMin: 0,\n            xMax: 261,\n            yMin: -812,\n            yMax: 149,\n            ha: 961,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 366 -289 369 -315 369 -302 b 220 -58 350 -202 317 -163 b 46 187 148 20 71 43 b 20 215 45 200 35 215 b 0 197 12 215 0 207 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 56 -390 147 -527 88 -495 b 73 -367 53 -380 60 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag32ndDown: {\n            xMin: 0,\n            xMax: 273,\n            yMin: -172,\n            yMax: 812,\n            ha: 984,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -229 b 20 -248 0 -242 9 -248 b 48 -219 35 -248 46 -232 b 229 36 72 -69 154 -46 b 380 278 330 145 364 186 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z',\n        },\n        flag64thUp: {\n            xMin: 0,\n            xMax: 261,\n            yMin: -812,\n            yMax: 347,\n            ha: 1159,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 220 228 350 84 317 122 b 46 472 148 305 71 328 b 20 500 45 485 32 500 b 0 482 10 500 0 492 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 58 187 148 20 82 43 b 56 193 58 189 58 192 b 300 24 138 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 52 -376 63 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag64thDown: {\n            xMin: 0,\n            xMax: 273,\n            yMin: -376,\n            yMax: 812,\n            ha: 1188,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -523 b 20 -541 0 -534 9 -541 b 48 -513 35 -541 46 -526 b 229 -258 72 -363 154 -340 b 380 -16 330 -148 364 -108 b 384 27 383 -1 384 13 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z',\n        },\n        flag128thUp: {\n            xMin: 0,\n            xMax: 261,\n            yMin: -812,\n            yMax: 533,\n            ha: 1345,\n            o: 'm 374 -969 b 337 -806 372 -913 359 -858 b 336 -796 336 -804 336 -801 b 337 -788 336 -793 336 -791 b 370 -616 340 -778 370 -698 b 340 -482 370 -570 360 -524 b 369 -330 353 -445 369 -386 b 337 -203 369 -287 359 -242 b 369 -43 350 -167 369 -104 b 366 -4 369 -30 367 -17 b 341 75 360 26 353 50 b 369 222 354 111 369 167 b 366 264 369 236 369 251 b 220 495 350 351 317 390 b 46 740 148 573 71 596 b 22 768 45 753 35 768 b 0 750 10 768 0 760 l 0 -609 l 7 -609 b 278 -802 91 -612 186 -615 b 323 -999 310 -865 323 -930 b 311 -1122 323 -1040 318 -1080 b 310 -1132 311 -1126 310 -1129 b 328 -1166 310 -1149 318 -1162 b 337 -1169 331 -1168 334 -1169 b 366 -1146 346 -1169 356 -1162 b 376 -1009 370 -1138 376 -1071 b 374 -969 376 -995 374 -982 z m 300 292 b 321 223 315 264 321 242 b 317 193 321 212 318 203 b 301 135 314 180 308 158 b 220 228 281 161 255 190 b 55 461 151 304 79 327 b 300 292 134 461 220 426 z m 300 24 b 321 -45 315 -4 321 -26 b 317 -75 321 -56 318 -65 l 298 -145 b 220 -58 278 -121 253 -94 b 56 187 148 20 81 43 b 55 193 56 189 56 192 b 300 24 137 193 220 157 z m 300 -261 b 321 -330 315 -289 321 -311 b 317 -360 321 -341 318 -350 b 300 -423 314 -374 307 -399 b 220 -334 279 -397 253 -370 b 56 -92 150 -256 79 -232 b 300 -261 135 -92 220 -127 z m 315 -657 b 308 -690 312 -668 312 -680 b 292 -698 307 -694 300 -698 b 282 -693 288 -698 284 -697 b 216 -608 261 -661 240 -636 l 209 -600 b 55 -386 147 -527 84 -497 b 73 -367 53 -376 62 -367 b 318 -622 189 -367 318 -505 b 315 -657 318 -634 317 -645 z',\n        },\n        flag128thDown: {\n            xMin: 0,\n            xMax: 273,\n            yMin: -580,\n            yMax: 812,\n            ha: 1392,\n            o: 'm 393 973 b 333 1169 393 1002 383 1169 b 324 1168 330 1169 327 1169 b 304 1130 314 1164 304 1149 b 305 1120 304 1128 305 1125 b 334 962 317 1056 334 1011 b 289 821 334 922 323 880 b 0 619 180 625 88 622 l 0 -816 b 20 -835 0 -828 7 -835 b 48 -806 33 -835 46 -819 b 229 -552 72 -657 154 -634 b 380 -310 330 -442 364 -402 b 384 -266 383 -295 384 -281 b 351 -105 384 -206 366 -143 b 384 27 372 -66 384 -16 b 351 189 384 88 366 151 b 380 278 366 216 374 243 b 383 320 383 291 383 305 b 351 484 383 382 364 445 b 384 629 374 526 384 580 b 356 780 384 704 361 766 b 356 783 356 782 356 783 l 351 791 b 356 804 351 796 353 799 l 361 814 b 393 958 380 850 387 865 z m 56 386 b 217 609 86 501 153 533 b 292 706 246 642 269 670 b 304 711 295 710 300 711 b 321 703 311 711 320 707 b 328 670 325 693 325 681 b 331 634 330 658 331 645 b 82 367 331 516 199 367 l 75 367 b 56 386 62 367 56 379 z m 330 350 b 334 320 331 340 334 331 b 311 248 334 301 328 278 b 59 72 229 109 141 72 b 56 76 56 73 56 75 b 229 331 81 226 154 249 b 310 423 264 369 289 397 b 330 350 318 396 325 366 z m 330 56 b 334 26 331 46 334 37 b 311 -46 334 7 328 -16 b 56 -222 229 -184 137 -222 b 229 36 75 -86 145 -55 b 311 128 264 73 289 102 z m 330 -238 b 334 -268 331 -248 334 -256 b 311 -340 334 -287 328 -310 b 56 -516 229 -478 137 -516 b 229 -258 75 -380 145 -348 b 311 -166 264 -220 289 -192 z',\n        },\n        accidentalFlat: {\n            xMin: 0,\n            xMax: 226,\n            yMin: -175,\n            yMax: 439,\n            ha: 614,\n            o: 'm 17 -245 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 82 -225 117 -186 b 325 82 281 -72 325 16 b 196 220 325 164 262 216 b 117 196 171 220 137 209 b 85 176 108 189 92 176 b 78 177 82 176 81 176 b 62 202 68 181 62 192 b 72 608 63 233 72 579 b 45 632 72 624 59 632 b 0 592 24 632 1 618 b 17 -245 0 592 6 -230 z m 68 -117 b 63 27 68 -117 63 -30 b 66 73 63 50 65 68 b 167 144 76 102 134 144 b 226 60 209 144 226 96 b 98 -134 226 -17 160 -95 b 84 -138 92 -137 88 -138 b 68 -117 71 -138 68 -124 z',\n        },\n        accidentalNatural: {\n            xMin: 0,\n            xMax: 168,\n            yMin: -335,\n            yMax: 341,\n            ha: 676,\n            o: 'm 203 261 b 197 259 200 261 199 259 b 68 226 197 259 105 226 b 53 233 59 226 53 228 l 53 474 b 36 491 53 484 45 491 l 17 491 b 0 474 7 491 0 484 l 0 -268 b 13 -281 0 -276 4 -281 l 16 -279 b 22 -278 17 -279 20 -279 b 164 -235 42 -269 122 -235 b 189 -251 179 -235 189 -239 l 189 -465 b 206 -482 189 -475 196 -482 l 225 -482 b 242 -465 233 -482 242 -475 l 242 258 b 230 269 242 265 236 269 b 225 268 229 269 226 269 z m 53 56 b 176 114 53 76 141 114 b 189 107 184 114 189 112 l 189 -42 b 71 -101 189 -68 107 -101 b 53 -92 60 -101 53 -98 z',\n        },\n        accidentalSharp: {\n            xMin: 0,\n            xMax: 249,\n            yMin: -348,\n            yMax: 350,\n            ha: 698,\n            o: 'm 341 170 b 359 194 351 174 359 186 l 359 297 b 348 308 359 304 354 308 b 341 307 346 308 344 308 b 305 294 341 307 312 295 b 285 312 295 294 285 301 l 285 488 b 265 504 285 497 276 504 b 242 488 251 504 242 497 l 242 301 b 223 259 240 287 236 268 b 132 223 206 249 157 229 b 115 252 120 223 115 240 l 115 425 b 95 441 115 433 105 441 b 72 425 81 441 72 433 l 72 230 b 55 192 72 210 63 196 b 17 176 46 187 17 176 b 0 153 7 173 0 161 l 0 50 b 13 37 0 42 4 37 l 16 39 b 50 53 17 39 39 48 l 52 55 b 72 29 63 55 72 40 l 72 -114 b 56 -147 72 -130 65 -143 b 17 -163 48 -150 17 -163 b 0 -186 7 -166 0 -177 l 0 -288 b 13 -301 0 -297 4 -301 l 16 -300 b 50 -287 17 -300 37 -291 b 55 -285 52 -285 53 -285 b 72 -308 65 -285 72 -301 l 72 -485 b 91 -501 72 -494 81 -501 b 115 -485 105 -501 115 -494 l 115 -285 b 130 -253 115 -266 122 -256 l 217 -217 b 219 -217 217 -217 219 -217 l 222 -216 b 242 -242 235 -216 242 -233 l 242 -422 b 261 -438 242 -431 251 -438 b 285 -422 276 -438 285 -431 l 285 -217 b 301 -184 285 -206 291 -189 b 341 -168 311 -180 341 -168 b 359 -144 351 -164 359 -153 l 359 -42 b 348 -30 359 -35 354 -30 b 341 -32 346 -30 344 -30 l 304 -46 b 285 -20 295 -46 285 -37 l 285 114 b 304 156 285 124 292 151 z m 242 -65 b 132 -122 233 -94 166 -122 b 115 -115 124 -122 117 -120 b 111 -43 112 -109 111 -78 b 115 63 111 1 112 52 b 220 118 118 88 184 118 b 242 109 230 118 239 115 b 248 27 245 102 248 66 b 242 -65 248 -12 245 -52 z',\n        },\n        accidentalDoubleSharp: {\n            xMin: 0,\n            xMax: 247,\n            yMin: -125,\n            yMax: 127,\n            ha: 252,\n            o: 'm 274 -46 b 206 1 258 -37 206 -9 b 274 50 206 22 253 43 b 278 50 275 50 276 50 l 287 49 b 346 63 304 49 331 52 b 356 115 353 71 356 92 b 292 183 356 174 351 183 b 233 173 266 183 240 180 b 226 117 228 168 226 143 b 179 49 219 101 196 49 b 130 117 158 49 135 96 b 118 173 130 141 125 167 b 66 183 112 180 89 183 b 7 173 42 183 16 180 b 0 120 3 170 0 145 b 7 63 0 94 3 68 b 68 49 17 55 43 49 b 82 50 73 49 78 50 b 150 3 98 42 150 13 b 84 -46 150 -16 104 -39 l 69 -46 b 7 -56 43 -46 16 -49 b 0 -111 3 -60 0 -85 b 7 -166 0 -137 3 -163 b 65 -180 17 -174 40 -180 b 118 -166 86 -180 109 -176 b 130 -111 127 -158 130 -134 b 132 -105 130 -109 131 -107 b 177 -45 141 -85 158 -45 b 226 -111 196 -45 220 -91 b 233 -166 226 -137 228 -161 b 291 -180 243 -174 266 -180 b 356 -114 346 -180 356 -166 b 346 -56 356 -89 351 -63 b 288 -46 338 -49 312 -46 z',\n        },\n        accidentalDoubleFlat: {\n            xMin: 0,\n            xMax: 411,\n            yMin: -175,\n            yMax: 437,\n            ha: 612,\n            o: 'm 452 217 b 384 194 426 217 408 207 b 350 176 374 189 363 176 b 343 177 347 176 344 176 b 328 202 333 180 328 190 b 337 606 328 232 337 579 b 310 629 337 622 324 629 b 265 592 291 629 268 616 b 269 194 265 592 266 395 b 196 217 248 209 223 217 l 187 217 b 120 194 160 217 143 207 b 85 176 108 189 98 176 b 78 177 82 176 81 176 b 62 202 68 180 62 190 b 72 606 62 232 72 579 b 45 629 72 622 59 629 b 0 592 24 629 1 616 b 17 -245 0 592 7 -232 b 30 -252 22 -251 26 -252 b 39 -249 35 -252 39 -249 b 153 -161 84 -226 120 -186 b 274 -50 206 -124 246 -85 b 284 -245 276 -158 279 -240 b 295 -252 288 -251 292 -252 b 304 -249 300 -252 304 -249 b 416 -163 348 -226 383 -186 b 592 82 546 -72 592 16 b 461 217 592 163 528 216 z m 96 -134 b 84 -138 92 -137 86 -138 b 68 -115 72 -138 68 -124 b 63 26 68 -115 63 -30 b 66 72 63 49 65 66 b 168 144 75 101 134 144 b 226 59 212 144 226 95 b 96 -134 226 -22 161 -94 z m 361 -134 b 348 -138 356 -137 351 -138 b 333 -115 337 -138 333 -124 b 328 39 333 -115 328 -16 b 330 72 328 55 328 68 b 433 144 338 101 399 144 b 468 130 448 144 459 140 b 490 59 481 112 490 88 b 361 -134 490 -22 426 -94 z',\n        },\n        accidentalParensLeft: {\n            xMin: 0,\n            xMax: 141,\n            yMin: -248,\n            yMax: 247,\n            ha: 495,\n            o: 'm 203 331 l 203 351 b 202 356 203 354 203 356 b 0 0 60 281 0 140 b 199 -357 0 -144 60 -269 b 203 -354 200 -357 203 -356 l 203 -333 b 200 -327 203 -330 202 -328 b 86 0 118 -253 86 -160 b 200 324 86 158 120 251 b 203 331 202 325 203 327 z',\n        },\n        accidentalParensRight: {\n            xMin: 0,\n            xMax: 141,\n            yMin: -248,\n            yMax: 247,\n            ha: 495,\n            o: 'm 0 331 b 3 324 0 327 1 325 b 117 0 84 251 117 158 b 3 -327 117 -160 85 -253 b 0 -333 1 -328 0 -330 l 0 -354 b 4 -357 0 -356 3 -357 b 203 0 143 -269 203 -144 b 1 356 203 140 143 281 b 0 351 0 356 0 354 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            xMin: 1,\n            xMax: 227,\n            yMin: -175,\n            yMax: 439,\n            ha: 614,\n            o: 'm 310 -245 b 327 592 321 -230 327 592 b 282 632 325 618 302 632 b 255 608 268 632 255 624 b 265 202 255 579 264 233 b 249 177 265 192 259 181 b 242 176 246 176 245 176 b 210 196 235 176 219 189 b 131 220 190 209 156 220 b 1 85 65 216 1 164 b 174 -161 1 16 46 -72 b 288 -249 210 -186 245 -225 b 297 -252 288 -249 292 -252 b 310 -245 301 -252 305 -251 z m 259 -117 b 243 -138 259 -124 256 -138 b 229 -134 239 -138 235 -137 b 101 60 167 -95 101 -17 b 160 144 101 96 118 144 b 261 73 193 144 251 102 b 264 27 262 68 264 50 b 259 -117 264 -30 259 -117 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            xMin: 1,\n            xMax: 466,\n            yMin: -175,\n            yMax: 439,\n            ha: 614,\n            o: 'm 363 -245 b 376 -252 367 -251 372 -252 b 384 -249 380 -252 384 -249 b 497 -161 428 -226 464 -186 b 671 84 625 -72 671 16 b 541 220 671 164 606 217 b 513 217 531 220 523 219 b 464 196 495 212 480 206 b 431 176 452 189 442 176 b 423 177 428 176 426 176 b 408 202 413 180 408 190 l 419 608 b 392 632 419 625 406 632 b 346 592 372 632 347 618 b 363 -245 346 592 351 -230 z m 289 -249 b 297 -252 289 -249 292 -252 b 310 -245 300 -252 305 -251 b 328 592 321 -230 328 592 b 282 631 327 618 302 631 b 255 608 268 631 255 624 l 266 202 b 251 177 266 190 261 180 b 243 176 248 176 246 176 b 210 196 232 176 222 189 b 164 216 196 204 180 210 l 163 217 b 132 220 151 219 143 220 b 1 84 65 217 1 163 b 177 -163 1 16 48 -72 b 289 -249 210 -186 245 -226 z m 262 72 b 265 26 264 66 265 49 b 261 -115 265 -30 261 -115 b 245 -138 261 -124 258 -138 b 230 -134 240 -138 236 -137 b 102 60 166 -92 102 -20 b 124 128 102 88 111 112 b 161 144 134 138 147 144 b 199 134 173 144 184 141 b 262 72 219 122 256 92 z m 413 -115 b 409 26 413 -115 409 -30 b 412 72 409 49 410 66 b 514 144 420 102 480 144 b 570 60 557 144 570 96 b 442 -134 570 -23 508 -91 b 429 -138 436 -137 433 -138 b 413 -115 418 -138 413 -124 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            xMin: 0,\n            xMax: 179,\n            yMin: -353,\n            yMax: 307,\n            ha: 660,\n            o: 'm 258 240 b 246 252 258 248 252 252 b 240 251 245 252 242 252 b 168 225 240 251 171 225 b 150 253 156 225 150 240 l 150 426 b 130 442 150 435 141 442 b 105 418 108 442 105 429 l 105 230 b 91 193 105 219 101 202 b 17 161 65 183 42 171 b 0 138 9 158 0 147 l 0 36 b 13 23 0 27 4 23 l 16 24 b 86 53 17 24 73 49 l 88 55 b 107 30 98 55 107 42 l 107 -114 b 92 -145 107 -130 101 -143 l 17 -177 b 0 -200 9 -180 0 -192 l 0 -302 b 13 -315 0 -311 4 -315 l 16 -314 b 85 -285 17 -314 72 -291 b 105 -312 92 -282 105 -301 l 105 -492 b 125 -508 105 -501 114 -508 b 150 -484 147 -508 150 -498 l 150 -285 b 151 -274 150 -281 150 -278 b 164 -253 153 -265 158 -256 b 240 -225 176 -251 240 -225 b 258 -202 249 -222 258 -210 l 258 -99 b 245 -86 258 -91 253 -86 l 242 -88 b 240 -88 242 -88 240 -88 l 240 -86 b 168 -115 240 -86 174 -114 b 148 -91 158 -115 148 -107 l 148 43 b 167 85 148 55 156 81 b 240 114 180 91 240 114 b 258 138 249 118 258 128 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            xMin: 3,\n            xMax: 317,\n            yMin: -347,\n            yMax: 369,\n            ha: 716,\n            o: 'm 456 324 b 448 336 456 330 454 336 b 393 317 445 336 400 320 b 389 315 392 315 390 315 b 383 325 386 315 383 318 l 383 508 b 360 531 383 528 379 531 b 337 508 341 531 337 527 l 337 318 b 325 291 337 300 334 294 b 268 268 320 288 287 276 b 253 281 256 268 253 274 l 253 464 b 230 487 253 484 249 487 b 207 464 212 487 207 482 l 207 264 b 194 240 207 253 204 245 l 132 217 b 131 217 132 217 132 217 l 130 216 b 118 229 122 216 118 220 l 118 420 b 95 444 118 439 114 444 b 72 420 76 444 72 439 l 72 212 b 60 190 72 197 68 193 l 16 173 b 4 161 9 170 4 167 l 4 50 b 13 39 4 45 9 39 b 58 55 16 39 46 49 b 63 56 60 56 62 56 b 72 42 71 56 72 50 l 72 -125 b 58 -150 72 -137 65 -147 l 16 -166 b 4 -177 9 -168 4 -171 l 4 -289 b 14 -301 4 -295 9 -301 b 53 -287 16 -301 40 -291 b 62 -285 56 -285 59 -285 b 72 -298 69 -285 72 -289 l 72 -477 b 95 -500 72 -495 76 -500 b 118 -477 114 -500 118 -495 l 118 -278 b 127 -259 118 -269 121 -261 l 196 -232 b 207 -243 204 -232 207 -235 l 207 -432 b 230 -455 207 -452 212 -455 b 253 -432 249 -455 253 -451 l 253 -228 b 268 -204 253 -216 259 -207 l 320 -186 b 328 -183 323 -184 325 -183 b 337 -194 334 -183 337 -187 l 337 -387 b 360 -410 337 -408 341 -410 b 383 -387 379 -410 383 -406 l 383 -174 b 395 -157 383 -166 390 -158 l 445 -138 b 456 -127 452 -135 456 -132 l 456 -14 b 448 -3 456 -10 454 -3 b 397 -22 445 -3 408 -17 l 396 -23 b 383 -6 387 -23 383 -16 l 383 163 b 392 181 383 173 384 179 b 445 202 397 183 445 202 b 456 213 452 203 456 207 z m 337 -45 b 266 -78 333 -56 287 -78 b 258 -75 262 -78 259 -76 b 253 19 255 -71 253 -27 b 258 130 253 69 255 122 b 333 163 264 141 315 163 b 337 161 334 163 337 161 b 341 78 340 157 341 120 b 337 -45 341 24 340 -37 z m 118 -127 b 114 -48 114 -121 114 -86 b 118 78 114 6 115 68 b 200 114 122 91 180 114 b 207 111 204 114 206 112 b 212 22 210 107 212 66 b 207 -94 212 -29 210 -85 b 127 -130 203 -108 148 -130 b 118 -127 122 -130 120 -128 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            xMin: 1,\n            xMax: 287,\n            yMin: -174,\n            yMax: 438,\n            ha: 612,\n            o: 'm 379 452 b 370 464 379 458 377 464 b 164 389 366 464 170 392 b 156 396 163 389 156 393 b 157 436 157 409 157 428 b 167 452 157 445 161 449 b 366 526 173 455 366 526 b 379 540 374 528 379 534 l 379 611 b 370 622 379 616 377 622 b 170 550 366 622 174 552 b 160 557 163 550 160 554 b 161 608 160 585 161 602 b 134 631 161 624 148 631 b 89 590 114 631 91 616 l 89 528 b 81 517 89 526 88 518 b 16 491 76 514 16 491 b 1 480 6 490 1 485 l 1 406 b 13 395 1 400 4 395 l 14 396 b 79 419 16 396 72 415 b 89 412 86 419 89 415 b 91 376 89 399 89 386 b 82 359 91 364 89 361 b 16 331 76 356 16 331 b 1 321 6 331 1 328 l 1 248 b 13 236 1 242 4 236 b 79 262 16 236 71 258 b 92 251 89 262 92 256 b 107 -242 95 23 101 -236 b 120 -251 111 -249 115 -251 b 128 -248 124 -251 128 -248 b 240 -160 171 -225 207 -184 b 413 84 367 -71 413 16 b 284 220 413 166 350 216 b 207 196 259 220 229 209 b 170 176 196 190 184 176 l 168 177 b 151 203 157 181 151 192 b 153 269 151 210 151 236 b 163 292 153 275 153 289 b 366 367 173 297 366 367 b 379 383 374 370 379 376 z m 186 -132 b 173 -137 180 -135 176 -137 b 157 -114 161 -137 157 -122 b 153 35 157 -114 153 -22 b 154 73 153 53 153 68 b 219 135 160 92 197 124 b 255 144 232 141 243 144 b 292 130 269 144 282 140 b 314 62 305 114 314 91 b 186 -132 314 -17 251 -94 z',\n        },\n        accidentalBuyukMucennebSharp: {\n            xMin: 0,\n            xMax: 341,\n            yMin: -350,\n            yMax: 348,\n            ha: 698,\n            o: 'm 403 167 b 420 192 413 171 420 183 l 420 294 b 410 305 420 301 416 305 b 403 304 408 305 406 305 b 367 291 403 304 374 292 b 347 310 357 291 347 298 l 347 485 b 327 501 347 494 338 501 b 304 485 312 501 304 494 l 304 298 b 285 256 302 284 298 265 b 194 220 268 246 219 226 b 177 249 181 220 177 238 l 177 422 b 157 438 177 431 167 438 b 134 422 143 438 134 431 l 134 228 b 117 189 134 207 125 193 b 79 173 108 184 79 173 b 62 150 69 170 62 158 l 62 48 b 75 35 62 39 66 35 l 78 36 b 111 50 79 36 101 45 b 127 55 117 52 122 55 b 132 50 130 55 132 53 l 132 29 b 128 22 132 26 132 23 b 17 -20 125 20 17 -20 b 0 -35 7 -23 0 -26 l 0 -130 b 13 -144 0 -137 4 -144 b 127 -104 17 -144 120 -107 l 128 -102 b 134 -109 134 -102 134 -107 l 134 -127 b 122 -147 134 -138 132 -143 b 79 -166 114 -151 79 -166 b 62 -189 69 -168 62 -180 l 62 -291 b 75 -304 62 -300 66 -304 l 78 -302 b 112 -289 79 -302 99 -294 b 117 -288 114 -288 115 -288 b 134 -311 127 -288 134 -304 l 134 -488 b 153 -504 134 -497 143 -504 b 177 -488 167 -504 177 -497 l 177 -288 b 192 -256 177 -269 184 -259 l 279 -220 b 281 -220 279 -220 281 -220 l 284 -219 b 304 -245 297 -219 304 -236 l 304 -425 b 323 -441 304 -433 312 -441 b 347 -425 338 -441 347 -433 l 347 -220 b 363 -187 347 -209 353 -192 b 403 -171 373 -183 403 -171 b 420 -147 413 -167 420 -156 l 420 -45 b 410 -33 420 -37 416 -33 b 403 -35 408 -33 406 -33 l 366 -49 b 353 -53 360 -52 356 -53 b 347 -40 348 -53 347 -49 l 347 -26 b 351 -19 347 -23 347 -20 l 474 27 b 491 46 485 30 491 37 l 491 137 b 478 153 491 143 488 153 l 475 150 b 474 150 475 150 474 150 l 474 151 b 351 105 474 151 354 107 b 347 109 348 105 347 107 b 346 128 347 117 346 127 b 366 153 346 143 348 145 z m 177 72 b 301 122 196 89 262 122 b 305 111 305 122 305 117 b 307 94 305 105 305 96 b 304 88 307 92 307 89 b 179 40 284 81 180 42 b 174 43 177 40 174 42 b 177 72 176 50 174 69 z m 305 -65 b 184 -121 301 -85 210 -121 b 177 -118 180 -121 179 -120 b 173 -92 174 -115 174 -105 b 179 -84 173 -86 174 -85 b 302 -37 180 -84 279 -46 b 307 -42 304 -37 307 -40 b 305 -65 307 -52 307 -59 z',\n        },\n        accidentalBakiyeFlat: {\n            xMin: -1,\n            xMax: 286,\n            yMin: -175,\n            yMax: 439,\n            ha: 614,\n            o: 'm 377 454 b 369 467 377 458 376 467 b 363 465 367 467 364 467 b 161 390 363 465 167 393 b 153 399 154 390 153 395 b 157 608 154 494 157 593 b 130 632 157 624 144 632 b 86 592 111 632 88 618 b 88 377 86 592 86 501 b 76 356 88 373 88 360 l 12 331 b -1 320 3 330 -1 327 l -1 248 b 9 236 -1 242 1 236 b 81 264 12 236 78 261 b 89 258 86 264 89 261 b 104 -245 92 30 96 -236 b 115 -252 108 -251 112 -252 b 124 -249 120 -252 124 -249 b 239 -161 167 -226 203 -186 b 412 84 367 -72 412 17 b 282 220 412 166 348 216 b 255 216 274 220 264 219 b 203 196 238 212 222 206 b 171 177 193 189 177 177 b 163 179 168 177 166 177 b 147 202 153 181 147 192 b 147 216 147 204 147 209 l 150 262 b 150 276 150 269 150 275 b 158 291 150 287 154 289 b 363 370 163 292 363 370 b 377 384 373 373 377 379 z m 181 -134 b 167 -138 176 -137 171 -138 b 153 -117 156 -138 153 -125 b 148 27 153 -117 148 -30 b 151 73 148 50 150 68 b 255 144 161 105 219 144 b 312 62 298 144 312 99 b 181 -134 312 -19 249 -96 z',\n        },\n        accidentalKomaSharp: {\n            xMin: 0,\n            xMax: 229,\n            yMin: -337,\n            yMax: 322,\n            ha: 659,\n            o: 'm 312 151 b 330 176 323 156 330 166 l 330 278 b 320 289 330 285 327 289 b 312 288 318 289 315 289 b 200 246 312 288 203 248 b 181 275 187 246 181 264 l 181 448 b 163 464 181 456 173 464 b 138 441 140 464 138 452 l 138 253 b 122 215 137 240 132 225 b 17 177 92 203 45 177 b 0 153 7 173 0 163 l 0 50 b 10 39 0 43 4 39 b 17 40 13 39 14 39 l 128 81 b 138 52 138 81 138 63 l 138 -91 b 124 -124 138 -107 132 -120 b 17 -167 115 -127 17 -167 b 0 -192 7 -171 0 -181 l 0 -294 b 10 -305 0 -301 4 -305 b 17 -304 13 -305 14 -305 b 128 -261 17 -304 117 -264 l 130 -259 b 138 -276 137 -259 138 -268 l 138 -469 b 157 -485 138 -478 147 -485 b 181 -462 179 -485 181 -475 l 181 -262 b 183 -252 181 -258 181 -255 b 197 -232 186 -243 190 -235 b 312 -187 207 -228 312 -187 b 330 -163 323 -183 330 -173 l 330 -60 b 320 -49 330 -53 327 -49 b 312 -50 318 -49 315 -49 l 200 -94 b 193 -95 197 -95 194 -95 b 181 -68 183 -95 181 -85 l 181 66 b 200 108 181 92 189 104 z',\n        },\n        accidentalKucukMucennebSharp: {\n            xMin: -1,\n            xMax: 339,\n            yMin: -338,\n            yMax: 321,\n            ha: 659,\n            o: 'm 264 92 b 271 102 264 98 265 99 l 395 150 b 412 174 405 154 412 164 l 412 276 b 402 288 412 284 409 288 b 395 287 400 288 397 288 b 282 245 395 287 285 246 b 264 274 269 245 264 262 l 264 446 b 245 462 264 455 255 462 b 220 439 222 462 220 451 l 220 252 b 204 213 219 239 215 223 b 99 176 174 202 127 176 b 82 151 89 171 82 161 l 82 49 b 92 37 82 42 86 37 b 99 39 95 37 96 37 l 210 79 b 216 81 212 81 215 81 b 220 78 219 81 220 79 l 220 56 b 216 46 220 52 220 48 b 16 -29 210 45 16 -29 b -1 -45 4 -32 -1 -36 l -1 -138 b 12 -154 -1 -145 3 -154 l 215 -79 b 220 -84 219 -79 220 -81 l 220 -105 b 210 -122 220 -115 219 -120 b 99 -168 202 -127 99 -168 b 82 -193 89 -173 82 -183 l 82 -295 b 92 -307 82 -302 86 -307 b 99 -305 95 -307 96 -307 b 210 -262 99 -305 199 -265 l 212 -261 b 220 -278 219 -261 220 -269 l 220 -471 b 239 -487 220 -480 229 -487 b 264 -464 261 -487 264 -477 l 264 -264 b 265 -253 264 -259 264 -256 b 279 -233 268 -245 272 -236 b 395 -189 289 -229 395 -189 b 412 -164 405 -184 412 -174 l 412 -62 b 402 -50 412 -55 409 -50 b 395 -52 400 -50 397 -50 l 278 -96 b 264 -86 268 -96 264 -94 l 264 -68 b 269 -59 264 -62 265 -60 b 471 17 274 -58 471 17 b 488 36 484 22 488 27 l 488 127 b 475 144 488 134 487 144 l 472 141 b 471 141 472 141 471 141 l 471 143 b 272 68 471 143 282 71 l 269 66 b 264 71 264 66 264 69 z',\n        },\n        accidentalKoron: {\n            xMin: 0,\n            xMax: 300,\n            yMin: -472,\n            yMax: 157,\n            ha: 629,\n            o: 'm 432 -4 b 415 10 432 1 418 9 l 4 226 b 0 223 1 226 0 225 l 0 -672 b 7 -680 0 -677 3 -680 l 45 -680 b 52 -672 49 -680 52 -677 l 52 -193 l 415 -22 b 432 -4 418 -20 432 -13 z m 52 -137 l 52 144 l 327 -7 z',\n        },\n        accidentalSori: {\n            xMin: 0,\n            xMax: 421,\n            yMin: -318,\n            yMax: 328,\n            ha: 646,\n            o: 'm 606 10 b 589 23 606 16 592 22 l 382 109 l 382 465 b 374 472 382 469 379 472 l 337 472 b 330 465 333 472 330 469 l 330 132 l 183 194 l 183 425 b 176 432 183 429 180 432 l 138 432 b 131 425 134 432 131 429 l 131 216 l 3 269 b 0 265 0 269 0 266 l 0 223 b 3 213 0 216 0 215 l 131 160 l 131 -150 l 3 -203 b 0 -212 0 -204 0 -206 l 0 -255 b 3 -259 0 -258 1 -259 l 131 -204 l 131 -451 b 138 -458 131 -455 134 -458 l 176 -458 b 183 -451 180 -458 183 -455 l 183 -183 l 330 -120 l 330 -410 b 337 -418 330 -415 333 -418 l 374 -418 b 382 -410 379 -418 382 -415 l 382 -98 l 589 -9 b 606 10 592 -9 606 0 z m 183 -128 l 183 138 l 330 76 l 330 -66 z m 382 -45 l 382 55 l 501 6 z',\n        },\n        articAccentAbove: {\n            xMin: 0,\n            xMax: 339,\n            yMin: 1,\n            yMax: 245,\n            ha: 244,\n            o: 'm 469 151 b 488 177 488 156 488 166 b 469 203 488 189 488 197 l 37 350 b 24 353 32 351 26 353 b 3 333 12 353 7 344 b 0 318 1 327 0 323 b 20 298 0 311 4 304 b 346 187 20 298 331 193 b 356 177 353 186 356 181 b 344 167 356 173 353 170 b 20 58 328 163 20 58 b 0 36 4 50 0 43 b 3 23 0 32 1 27 b 23 1 7 13 13 1 b 29 3 24 1 27 1 z',\n        },\n        articAccentBelow: {\n            xMin: 0,\n            xMax: 339,\n            yMin: -244,\n            yMax: 0,\n            ha: 244,\n            o: 'm 469 -202 b 488 -176 488 -197 488 -187 b 469 -150 488 -164 488 -156 l 37 -3 b 24 0 32 -1 26 0 b 3 -20 12 0 7 -9 b 0 -35 1 -26 0 -30 b 20 -55 0 -42 4 -49 b 346 -166 20 -55 331 -160 b 356 -176 353 -167 356 -171 b 344 -186 356 -180 353 -183 b 20 -295 328 -190 20 -295 b 0 -317 4 -302 0 -310 b 3 -330 0 -321 1 -325 b 23 -351 7 -340 13 -351 b 29 -350 24 -351 27 -351 z',\n        },\n        articTenutoAbove: {\n            xMin: -1,\n            xMax: 338,\n            yMin: 0,\n            yMax: 48,\n            ha: 48,\n            o: 'm 452 0 b 487 35 485 0 487 16 b 452 69 487 53 487 69 l 33 69 b -1 35 -1 69 -1 53 b 33 0 -1 16 -1 0 z',\n        },\n        articTenutoBelow: {\n            xMin: -1,\n            xMax: 338,\n            yMin: -48,\n            yMax: 0,\n            ha: 48,\n            o: 'm 452 -69 b 487 -35 485 -69 487 -53 b 452 0 487 -16 487 0 l 33 0 b -1 -35 -1 0 -1 -16 b 33 -69 -1 -53 -1 -69 z',\n        },\n        articStaccatoAbove: {\n            xMin: 0,\n            xMax: 84,\n            yMin: 0,\n            yMax: 84,\n            ha: 84,\n            o: 'm 121 60 b 60 121 121 94 94 121 b 0 60 27 121 0 94 b 60 0 0 27 27 0 b 121 60 94 0 121 27 z',\n        },\n        articStaccatoBelow: {\n            xMin: 0,\n            xMax: 84,\n            yMin: -84,\n            yMax: 0,\n            ha: 84,\n            o: 'm 121 -60 b 60 0 121 -27 94 0 b 0 -60 27 0 0 -27 b 60 -121 0 -94 27 -121 b 121 -60 94 -121 121 -94 z',\n        },\n        articStaccatissimoAbove: {\n            xMin: 1,\n            xMax: 100,\n            yMin: -2,\n            yMax: 293,\n            ha: 295,\n            o: 'm 72 422 b 1 390 35 422 3 409 b 72 -3 1 369 39 -3 b 144 389 108 -3 144 356 b 72 422 144 410 111 422 z',\n        },\n        articStaccatissimoBelow: {\n            xMin: 1,\n            xMax: 100,\n            yMin: -295,\n            yMax: 0,\n            ha: 295,\n            o: 'm 72 -425 b 144 -392 111 -425 144 -413 b 72 0 144 -359 108 0 b 1 -393 39 0 1 -372 b 72 -425 3 -412 35 -425 z',\n        },\n        articMarcatoAbove: {\n            xMin: -1,\n            xMax: 235,\n            yMin: -1,\n            yMax: 253,\n            ha: 254,\n            o: 'm 181 356 b 167 364 177 361 173 364 b 153 356 157 364 153 356 l 0 23 b -1 16 -1 20 -1 19 b 9 0 -1 9 1 1 b 16 -1 10 -1 14 -1 b 32 9 22 -1 29 1 b 112 186 32 9 109 180 b 118 190 114 189 115 190 b 127 186 121 190 124 189 b 209 9 128 180 209 9 b 225 0 213 3 219 0 l 323 0 b 338 16 333 1 338 7 b 337 23 338 19 338 22 z',\n        },\n        articMarcatoBelow: {\n            xMin: -1,\n            xMax: 235,\n            yMin: -254,\n            yMax: 0,\n            ha: 254,\n            o: 'm 156 -357 b 170 -366 160 -363 164 -366 b 184 -357 180 -366 184 -357 l 337 -24 b 338 -17 338 -22 338 -20 b 328 -1 338 -10 336 -3 b 321 0 327 0 323 0 b 305 -10 315 0 308 -3 b 225 -187 305 -10 228 -181 b 219 -192 223 -190 222 -192 b 210 -187 216 -192 213 -190 b 128 -10 209 -181 128 -10 b 112 -1 124 -4 118 -1 l 14 -1 b -1 -17 4 -3 -1 -9 b 0 -24 -1 -20 -1 -23 z',\n        },\n        fermataAbove: {\n            xMin: 3,\n            xMax: 605,\n            yMin: -3,\n            yMax: 329,\n            ha: 332,\n            o: 'm 435 318 b 818 36 742 318 804 91 b 821 26 819 32 819 27 b 851 -4 831 6 837 -4 b 871 16 864 -4 871 1 b 870 30 871 20 871 24 b 438 474 780 471 480 474 b 6 30 392 474 94 471 b 4 14 4 24 4 19 b 23 -4 4 0 12 -4 b 52 26 36 -4 43 6 b 56 39 53 27 55 33 b 435 318 73 98 138 318 z m 516 75 b 436 153 516 117 480 153 b 359 75 395 153 359 117 b 436 -4 359 32 395 -4 b 516 75 480 -4 516 32 z',\n        },\n        fermataBelow: {\n            xMin: 3,\n            xMax: 605,\n            yMin: -332,\n            yMax: 0,\n            ha: 332,\n            o: 'm 435 -323 b 56 -43 138 -323 73 -102 b 52 -30 55 -37 53 -32 b 23 0 43 -10 36 0 b 4 -19 12 0 4 -4 b 6 -35 4 -23 4 -29 b 438 -478 94 -475 392 -478 b 870 -35 480 -478 780 -475 b 871 -20 871 -29 871 -24 b 851 0 871 -6 864 0 b 821 -30 837 0 831 -10 b 818 -40 819 -32 819 -36 b 435 -323 804 -95 742 -323 z m 516 -79 b 436 0 516 -36 480 0 b 359 -79 395 0 359 -36 b 436 -157 359 -121 395 -157 b 516 -79 480 -157 516 -121 z',\n        },\n        fermataLongAbove: {\n            xMin: 0,\n            xMax: 603,\n            yMin: -1,\n            yMax: 333,\n            ha: 334,\n            o: 'm 72 480 b 0 441 32 480 0 462 l 0 19 b 35 0 0 9 16 0 b 71 19 55 0 71 9 l 71 289 b 433 315 71 307 252 315 b 798 289 615 315 798 307 l 798 19 b 832 0 798 9 814 0 b 868 19 852 0 868 9 l 868 441 b 796 480 868 462 837 480 z m 513 78 b 433 156 513 121 478 156 b 356 78 390 156 356 121 b 433 -1 356 35 390 -1 b 513 78 478 -1 513 35 z',\n        },\n        fermataLongBelow: {\n            xMin: 0,\n            xMax: 603,\n            yMin: -333,\n            yMax: 1,\n            ha: 334,\n            o: 'm 513 -78 b 433 1 513 -35 478 1 b 356 -78 390 1 356 -35 b 433 -156 356 -121 390 -156 b 513 -78 478 -156 513 -121 z m 796 -480 b 868 -441 837 -480 868 -462 l 868 -19 b 832 0 868 -9 852 0 b 798 -19 814 0 798 -9 l 798 -289 b 433 -315 798 -307 615 -315 b 71 -289 252 -315 71 -307 l 71 -19 b 35 0 71 -9 55 0 b 0 -19 16 0 0 -9 l 0 -441 b 72 -480 0 -462 32 -480 z',\n        },\n        fermataVeryLongAbove: {\n            xMin: 0,\n            xMax: 715,\n            yMin: 0,\n            yMax: 408,\n            ha: 408,\n            o: 'm 76 588 b 0 546 35 588 0 569 l 0 22 b 37 1 0 10 17 1 b 75 22 59 1 75 10 l 75 431 b 514 458 75 449 294 458 b 955 431 734 458 955 449 l 955 22 b 991 1 955 10 971 1 b 1030 22 1012 1 1030 10 l 1030 546 b 953 588 1030 569 995 588 z m 215 389 b 138 347 171 389 138 370 l 138 22 b 174 1 138 10 154 1 b 213 22 196 1 213 10 l 213 217 b 514 245 213 235 363 245 b 816 217 665 245 816 235 l 816 22 b 854 1 816 10 834 1 b 891 22 876 1 891 10 l 891 347 b 815 389 891 370 858 389 z m 606 84 b 521 167 606 130 569 167 b 439 84 475 167 439 130 b 521 0 439 39 475 0 b 606 84 569 0 606 39 z',\n        },\n        fermataVeryLongBelow: {\n            xMin: 0,\n            xMax: 715,\n            yMin: -408,\n            yMax: 0,\n            ha: 408,\n            o: 'm 606 -84 b 521 0 606 -39 569 0 b 439 -84 475 0 439 -39 b 521 -167 439 -130 475 -167 b 606 -84 569 -167 606 -130 z m 815 -389 b 891 -347 858 -389 891 -370 l 891 -22 b 854 -1 891 -10 876 -1 b 816 -22 834 -1 816 -10 l 816 -217 b 514 -245 816 -235 665 -245 b 213 -217 363 -245 213 -235 l 213 -22 b 174 -1 213 -10 196 -1 b 138 -22 154 -1 138 -10 l 138 -347 b 215 -389 138 -370 171 -389 z m 953 -588 b 1030 -546 995 -588 1030 -569 l 1030 -22 b 991 -1 1030 -10 1012 -1 b 955 -22 971 -1 955 -10 l 955 -431 b 514 -458 955 -449 734 -458 b 75 -431 294 -458 75 -449 l 75 -22 b 37 -1 75 -10 59 -1 b 0 -22 17 -1 0 -10 l 0 -546 b 76 -588 0 -569 35 -588 z',\n        },\n        fermataVeryShortAbove: {\n            xMin: 0,\n            xMax: 726,\n            yMin: 0,\n            yMax: 449,\n            ha: 449,\n            o: 'm 46 0 b 59 7 50 0 52 4 b 516 517 120 59 507 517 b 975 4 527 517 920 52 b 988 0 979 1 988 0 l 1041 0 b 1045 6 1041 0 1045 1 b 1043 13 1045 7 1045 10 b 516 647 962 91 536 647 b 3 13 504 647 91 98 b 0 7 0 10 0 9 b 6 0 0 3 6 0 z m 238 0 b 248 6 240 0 242 3 b 516 236 292 43 494 236 b 786 3 539 236 746 37 b 796 0 789 1 796 0 l 865 0 b 870 4 865 0 870 1 b 867 10 870 6 868 9 b 516 409 806 68 531 409 b 166 10 497 409 229 73 b 163 4 164 9 163 6 b 167 0 163 1 167 0 z m 592 91 b 516 167 592 132 557 167 b 438 91 472 167 438 132 b 516 13 438 48 472 13 b 592 91 557 13 592 48 z',\n        },\n        fermataVeryShortBelow: {\n            xMin: 0,\n            xMax: 726,\n            yMin: -449,\n            yMax: 0,\n            ha: 449,\n            o: 'm 167 0 b 163 -4 167 0 163 -1 b 166 -10 163 -6 164 -9 b 516 -409 229 -73 497 -409 b 867 -10 531 -409 806 -68 b 870 -4 868 -9 870 -6 b 865 0 870 -1 865 0 l 796 0 b 786 -3 796 0 789 -1 b 516 -236 746 -37 539 -236 b 248 -6 494 -236 292 -43 b 238 0 242 -3 240 0 z m 6 0 b 0 -7 6 0 0 -3 b 3 -13 0 -9 0 -10 b 516 -647 91 -98 504 -647 b 1043 -13 536 -647 962 -91 b 1045 -6 1045 -10 1045 -7 b 1041 0 1045 -1 1041 0 l 988 0 b 975 -4 988 0 979 -1 b 516 -517 920 -52 527 -517 b 59 -7 507 -517 120 -59 b 46 0 52 -4 50 0 z m 592 -91 b 516 -13 592 -48 557 -13 b 438 -91 472 -13 438 -48 b 516 -167 438 -132 472 -167 b 592 -91 557 -167 592 -132 z',\n        },\n        fermataShortAbove: {\n            xMin: 0,\n            xMax: 604,\n            yMin: 0,\n            yMax: 341,\n            ha: 341,\n            o: 'm 78 0 b 88 6 81 0 82 3 b 435 328 134 45 412 328 b 783 3 458 328 742 39 b 793 0 786 1 793 0 l 865 0 b 870 4 865 0 870 1 b 867 10 870 6 868 9 b 435 491 805 69 474 491 b 3 10 397 491 69 75 b 0 4 1 9 0 6 b 4 0 0 1 4 0 z m 513 94 b 433 171 513 135 477 171 b 354 94 390 171 354 135 b 433 13 354 49 390 13 b 513 94 477 13 513 49 z',\n        },\n        fermataShortBelow: {\n            xMin: 0,\n            xMax: 604,\n            yMin: -341,\n            yMax: 0,\n            ha: 341,\n            o: 'm 4 0 b 0 -4 4 0 0 -1 b 3 -10 0 -6 1 -9 b 435 -491 69 -75 397 -491 b 867 -10 474 -491 805 -69 b 870 -4 868 -9 870 -6 b 865 0 870 -1 865 0 l 793 0 b 783 -3 793 0 786 -1 b 435 -328 742 -39 458 -328 b 88 -6 412 -328 134 -45 b 78 0 82 -3 81 0 z m 513 -94 b 433 -13 513 -49 477 -13 b 354 -94 390 -13 354 -49 b 433 -171 354 -135 390 -171 b 513 -94 477 -171 513 -135 z',\n        },\n        breathMarkComma: {\n            xMin: 1,\n            xMax: 152,\n            yMin: 2,\n            yMax: 251,\n            ha: 249,\n            o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n        },\n        breathMarkUpbow: {\n            xMin: 1,\n            xMax: 249,\n            yMin: 1,\n            yMax: 495,\n            ha: 494,\n            o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n        },\n        caesura: {\n            xMin: 0,\n            xMax: 384,\n            yMin: -1,\n            yMax: 532,\n            ha: 533,\n            o: 'm 40 -1 b 78 26 58 -1 72 9 l 321 713 b 323 726 323 717 323 721 b 282 766 323 747 304 766 b 245 739 265 766 251 756 l 3 52 b 0 37 1 48 0 42 b 27 1 0 22 10 7 b 40 -1 32 -1 36 -1 z m 308 26 l 552 713 b 553 726 553 717 553 721 b 513 766 553 747 534 766 b 475 739 495 766 481 756 l 232 52 b 230 39 230 48 230 43 b 258 1 230 23 240 7 b 271 -1 262 -1 266 -1 b 308 26 287 -1 302 9 z',\n        },\n        caesuraCurved: {\n            xMin: 0,\n            xMax: 373,\n            yMin: 0,\n            yMax: 530,\n            ha: 530,\n            o: 'm 491 763 b 445 719 468 763 446 744 b 252 98 432 507 340 295 l 226 39 b 223 27 225 35 223 32 b 252 0 223 13 233 0 b 276 16 262 0 272 6 b 537 716 386 230 537 478 b 491 763 537 742 518 763 z m 29 0 b 53 16 39 0 48 6 l 82 69 b 314 716 187 264 314 498 b 268 763 314 742 295 763 b 222 719 245 763 223 744 b 29 98 209 507 117 295 l 3 39 b 0 29 1 36 0 33 b 29 0 0 14 12 0 z',\n        },\n        restMaxima: {\n            xMin: 0,\n            xMax: 381,\n            yMin: -249,\n            yMax: 250,\n            ha: 499,\n            o: 'm 180 -330 l 180 331 b 156 360 180 356 170 360 l 23 360 b 0 331 10 360 0 356 l 0 -330 b 23 -359 0 -354 10 -359 l 156 -359 b 180 -330 170 -359 180 -354 z m 549 -330 l 549 331 b 524 360 549 356 539 360 l 392 360 b 369 331 379 360 369 356 l 369 -330 b 392 -359 369 -354 379 -359 l 524 -359 b 549 -330 539 -359 549 -354 z',\n        },\n        restDoubleWhole: {\n            xMin: 0,\n            xMax: 125,\n            yMin: 0,\n            yMax: 250,\n            ha: 250,\n            o: 'm 180 22 l 180 338 b 156 360 180 350 170 360 l 23 360 b 0 338 10 360 0 350 l 0 22 b 23 0 0 10 10 0 l 156 0 b 180 22 170 0 180 10 z',\n        },\n        restWhole: {\n            xMin: 0,\n            xMax: 282,\n            yMin: -135,\n            yMax: 9,\n            ha: 144,\n            o: 'm 406 -157 l 406 -24 b 369 13 406 -3 389 13 l 37 13 b 0 -24 16 13 0 -3 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 z',\n        },\n        restWholeLegerLine: {\n            xMin: -117,\n            xMax: 399,\n            yMin: -135,\n            yMax: 20,\n            ha: 155,\n            o: 'm -143 29 b -168 3 -157 29 -168 17 b -143 -23 -168 -12 -157 -23 l 0 -23 l 0 -157 b 37 -194 0 -177 16 -194 l 369 -194 b 406 -157 389 -194 406 -177 l 406 -24 b 549 -23 406 -23 406 -23 b 575 3 563 -23 575 -12 b 549 29 575 17 563 29 z',\n        },\n        restHalf: {\n            xMin: 0,\n            xMax: 282,\n            yMin: -2,\n            yMax: 142,\n            ha: 144,\n            o: 'm 406 35 l 406 167 b 369 204 406 189 389 204 l 37 204 b 0 167 16 204 0 189 l 0 35 b 37 -3 0 14 16 -3 l 369 -3 b 406 35 389 -3 406 14 z',\n        },\n        restHalfLegerLine: {\n            xMin: -117,\n            xMax: 399,\n            yMin: -13,\n            yMax: 142,\n            ha: 155,\n            o: 'm 549 -19 b 575 7 563 -19 575 -7 b 549 33 575 22 563 33 b 406 35 406 33 406 33 l 406 167 b 369 204 406 187 389 204 l 37 204 b 0 167 16 204 0 187 l 0 33 l -143 33 b -168 7 -157 33 -168 22 b -143 -19 -168 -7 -157 -19 z',\n        },\n        restQuarter: {\n            xMin: 1,\n            xMax: 270,\n            yMin: -375,\n            yMax: 373,\n            ha: 748,\n            o: 'm 112 -55 b 174 -141 135 -84 156 -111 b 183 -161 177 -147 183 -158 b 181 -167 183 -163 183 -166 b 166 -174 179 -173 173 -174 b 143 -170 160 -174 148 -171 b 137 -170 141 -170 138 -170 l 125 -166 b 1 -304 50 -166 1 -233 b 168 -527 1 -376 63 -446 b 206 -540 180 -536 194 -540 b 228 -531 216 -540 226 -537 b 230 -521 229 -527 230 -524 b 207 -487 230 -508 219 -497 b 170 -435 189 -487 173 -448 b 164 -397 166 -423 164 -410 b 255 -292 164 -338 194 -292 b 369 -317 297 -292 344 -308 l 370 -318 b 382 -320 376 -320 379 -320 b 389 -314 386 -320 389 -318 b 336 -232 389 -297 351 -249 b 236 -32 281 -166 236 -112 b 236 -27 236 -30 236 -29 l 238 -17 b 238 -13 238 -16 238 -14 b 333 199 243 71 295 140 b 338 220 337 206 338 213 b 333 248 338 235 333 248 b 95 526 333 248 120 501 b 69 537 88 533 78 537 b 40 507 55 537 40 527 b 46 484 40 500 42 492 b 134 291 52 468 134 395 b 48 108 134 238 112 176 b 27 66 33 94 27 78 b 42 32 27 46 42 32 z',\n        },\n        rest8th: {\n            xMin: 0,\n            xMax: 247,\n            yMin: -251,\n            yMax: 174,\n            ha: 425,\n            o: 'm 193 154 b 96 251 193 207 150 251 b 0 154 43 251 0 207 b 39 81 0 124 17 98 b 117 56 62 65 89 56 b 173 66 137 56 157 60 b 225 88 193 72 206 78 b 232 89 228 89 230 89 b 239 76 238 89 239 84 b 238 60 239 72 239 66 b 104 -343 233 39 130 -248 b 145 -361 104 -360 137 -361 b 196 -347 161 -361 181 -359 b 341 161 200 -344 341 161 b 356 217 347 187 354 210 b 338 240 356 232 341 239 b 323 235 336 240 331 240 b 193 140 312 226 240 140 z',\n        },\n        rest16th: {\n            xMin: 0,\n            xMax: 320,\n            yMin: -500,\n            yMax: 179,\n            ha: 679,\n            o: 'm 300 160 b 202 258 300 215 256 258 b 104 160 148 258 104 215 b 219 62 104 101 164 62 b 331 94 258 62 298 75 b 341 96 336 95 338 96 b 348 86 346 96 348 94 b 265 -173 348 63 275 -151 b 194 -217 253 -200 215 -217 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 151 -105 b 0 -203 43 -105 0 -148 b 115 -301 0 -262 60 -301 b 223 -271 153 -301 190 -288 b 229 -279 226 -271 229 -274 l 228 -281 b 228 -282 228 -282 228 -282 l 91 -690 b 91 -691 91 -690 91 -691 l 89 -693 b 134 -720 89 -706 102 -720 b 189 -687 176 -720 183 -703 l 356 -138 b 420 81 393 -16 420 81 b 459 226 420 81 456 207 b 461 232 459 229 461 230 b 446 248 461 240 449 246 b 431 242 439 248 435 245 b 300 145 420 233 348 147 z',\n        },\n        rest32nd: {\n            xMin: 0,\n            xMax: 363,\n            yMin: -500,\n            yMax: 426,\n            ha: 926,\n            o: 'm 508 603 b 492 598 501 603 497 600 b 361 503 482 590 410 503 l 361 516 b 264 613 361 570 318 613 b 166 516 210 613 166 570 b 206 444 166 487 183 461 b 246 423 217 433 232 428 b 284 418 258 420 269 418 b 393 449 321 418 360 432 b 399 451 395 451 397 451 b 415 426 409 451 415 436 l 413 423 b 413 422 413 423 413 422 l 357 192 b 279 140 350 168 302 140 b 281 153 281 144 281 148 b 183 251 281 207 236 251 b 85 153 128 251 85 207 b 125 81 85 124 102 98 b 164 60 137 71 150 65 b 203 55 176 58 189 55 b 311 86 240 55 278 69 b 315 88 312 88 314 88 b 325 69 323 88 325 76 l 268 -167 b 194 -217 261 -197 216 -216 b 196 -203 196 -212 196 -207 b 98 -105 196 -148 153 -105 b 0 -203 45 -105 0 -148 b 115 -301 0 -262 60 -301 b 228 -269 154 -301 194 -288 b 232 -268 229 -268 230 -268 b 240 -276 236 -268 240 -272 b 138 -688 240 -282 141 -678 b 137 -697 137 -691 137 -694 b 176 -720 137 -708 145 -720 b 232 -690 222 -720 226 -706 b 484 436 236 -672 484 436 b 521 582 484 436 518 564 b 523 588 521 585 523 586 b 508 603 523 600 511 603 z',\n        },\n        rest64th: {\n            xMin: 0,\n            xMax: 423,\n            yMin: -753,\n            yMax: 430,\n            ha: 1183,\n            o: 'm 596 609 b 580 603 589 609 585 606 b 448 507 569 595 497 507 b 449 521 449 511 449 516 b 351 619 449 575 405 619 b 253 521 297 619 253 575 b 372 422 253 461 317 422 b 481 454 410 422 446 438 b 491 456 484 455 488 456 b 504 441 498 456 504 451 b 501 426 504 436 503 432 b 445 202 500 422 451 217 b 359 144 435 174 383 144 l 359 158 b 261 256 359 212 315 256 b 163 158 207 256 163 212 b 243 65 163 112 202 78 b 279 60 255 62 266 60 b 397 91 320 60 360 73 b 403 92 400 92 402 92 b 412 79 409 92 412 86 b 410 72 412 76 412 75 b 351 -161 408 59 356 -150 b 281 -212 340 -199 301 -212 l 281 -197 b 183 -99 281 -144 238 -99 b 85 -197 130 -99 85 -144 b 125 -271 85 -228 102 -253 b 166 -291 138 -279 151 -287 b 204 -297 177 -294 192 -297 b 262 -287 225 -297 245 -292 b 305 -265 282 -279 287 -274 b 310 -264 307 -264 308 -264 b 318 -284 317 -264 318 -275 b 317 -295 318 -288 317 -294 b 259 -524 315 -302 265 -508 b 194 -567 251 -554 213 -567 b 196 -554 196 -563 196 -559 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 40 -626 0 -583 17 -609 b 118 -652 60 -644 92 -652 b 210 -629 145 -652 186 -642 b 216 -628 213 -628 215 -628 b 228 -647 226 -628 228 -639 l 226 -651 b 226 -652 226 -651 226 -652 l 122 -1054 b 121 -1064 121 -1058 121 -1061 b 167 -1084 121 -1077 134 -1084 b 215 -1060 202 -1084 209 -1076 b 402 -278 217 -1047 229 -1021 b 436 -135 403 -278 431 -161 l 570 441 b 609 588 570 441 605 569 b 596 609 609 603 602 608 z',\n        },\n        rest128th: {\n            xMin: 0,\n            xMax: 485,\n            yMin: -750,\n            yMax: 689,\n            ha: 1439,\n            o: 'm 537 894 b 439 992 537 949 494 992 b 341 894 386 992 341 949 b 382 822 341 865 359 840 b 459 796 402 805 433 796 b 518 806 480 796 501 801 l 520 808 b 569 828 539 814 552 819 b 580 831 572 829 577 831 b 598 812 589 831 598 825 b 596 801 598 809 598 805 b 540 575 590 773 546 595 b 448 510 534 553 475 510 l 448 524 b 350 622 448 577 405 622 b 252 524 297 622 252 577 b 292 451 252 494 269 468 b 369 426 318 433 337 426 b 429 435 389 426 412 429 b 494 464 449 442 475 455 b 498 465 495 465 497 465 b 505 446 504 465 505 456 b 503 426 505 439 504 432 l 446 202 b 366 144 439 173 389 144 l 366 158 b 268 256 366 212 323 256 b 170 158 215 256 170 212 b 289 59 170 98 235 59 b 347 69 310 59 330 63 b 397 91 367 76 379 82 b 406 94 400 92 403 94 b 415 79 412 94 415 88 b 412 63 415 75 413 69 b 357 -157 408 42 364 -134 b 281 -212 346 -196 302 -212 b 282 -197 281 -207 282 -203 b 184 -99 282 -144 238 -99 b 86 -197 130 -99 86 -144 b 204 -297 86 -258 150 -297 b 262 -287 225 -297 245 -292 b 312 -265 282 -279 294 -274 b 318 -264 314 -264 317 -264 b 327 -275 324 -264 327 -269 b 266 -517 324 -287 278 -490 b 200 -569 248 -566 220 -567 l 196 -554 b 98 -456 196 -500 153 -456 b 0 -554 45 -456 0 -500 b 118 -652 0 -615 63 -652 b 177 -642 138 -652 160 -648 l 179 -641 b 229 -621 197 -635 210 -629 l 230 -619 b 239 -626 236 -619 239 -622 b 238 -632 239 -628 239 -631 b 131 -1057 235 -642 134 -1050 b 173 -1080 131 -1071 140 -1080 b 230 -1057 219 -1080 225 -1074 l 658 815 b 697 960 658 815 694 942 b 698 966 697 963 698 965 b 684 982 698 975 687 981 b 668 976 677 982 672 979 b 537 880 658 969 586 881 z',\n        },\n        dynamicPiano: {\n            xMin: -89,\n            xMax: 366,\n            yMin: -142,\n            yMax: 274,\n            ha: 416,\n            o: 'm 395 395 b 292 357 350 395 318 380 b 262 328 272 340 268 328 b 246 363 255 328 259 338 b 177 393 236 380 215 393 b 1 251 92 393 46 333 b -9 223 -6 238 -9 230 b 7 207 -9 213 -1 207 b 30 229 17 207 23 216 b 127 338 72 301 101 338 b 143 321 138 338 143 331 b 134 285 143 310 138 295 l -43 -154 b -65 -168 -48 -166 -50 -168 l -109 -168 b -128 -187 -122 -168 -128 -174 b -111 -204 -128 -199 -122 -204 l 167 -204 b 186 -186 180 -204 186 -199 b 168 -168 186 -174 180 -168 l 111 -168 b 98 -164 102 -168 98 -168 b 101 -154 98 -163 99 -158 l 166 7 b 179 24 168 14 171 24 b 213 -1 186 24 190 10 b 276 -14 233 -12 252 -14 b 527 266 415 -14 527 130 b 395 395 527 350 475 395 z m 356 341 b 389 288 380 341 389 320 b 243 35 389 217 312 35 b 207 81 219 35 207 50 b 235 180 207 111 219 140 l 264 251 b 356 341 284 300 321 341 z',\n        },\n        dynamicMezzo: {\n            xMin: -20,\n            xMax: 446,\n            yMin: -10,\n            yMax: 274,\n            ha: 284,\n            o: 'm 528 395 b 431 350 487 395 454 374 b 409 330 416 336 415 330 b 397 360 402 330 406 341 b 334 395 389 379 370 395 b 236 350 292 395 259 374 b 215 330 222 336 220 330 b 203 360 207 330 212 340 b 147 393 194 379 174 393 b -19 251 71 393 26 331 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 1 215 b 107 338 52 300 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 287 323 225 292 255 323 b 308 302 304 323 308 314 b 294 249 308 285 302 269 b 203 24 294 248 292 248 b 199 9 200 17 199 13 b 215 0 199 3 203 0 l 285 0 b 308 17 298 0 302 3 l 402 251 b 481 323 419 292 449 323 b 503 302 498 323 503 314 b 413 43 503 252 413 104 b 478 -14 413 6 436 -14 b 629 102 533 -14 583 26 b 642 132 638 117 642 125 b 629 145 642 141 636 145 b 608 127 619 145 615 138 b 534 49 580 84 553 49 b 523 62 526 49 523 53 b 606 317 523 112 606 238 b 528 395 606 353 588 395 z',\n        },\n        dynamicForte: {\n            xMin: -141,\n            xMax: 364,\n            yMin: -152,\n            yMax: 444,\n            ha: 596,\n            o: 'm 23 380 b 0 357 7 380 0 373 b 22 336 0 343 7 336 l 105 336 b 117 330 114 336 117 336 b 114 315 117 327 115 323 l 23 0 b -101 -187 -17 -141 -43 -187 b -127 -174 -120 -187 -127 -181 b -92 -156 -127 -163 -114 -170 b -63 -102 -75 -144 -63 -125 b -128 -43 -63 -65 -89 -43 b -203 -122 -171 -43 -203 -78 b -95 -219 -203 -186 -156 -219 b 161 17 14 -219 82 -145 b 269 317 203 105 235 194 l 271 318 b 289 336 271 323 282 336 l 383 336 b 406 359 399 336 406 343 b 384 380 406 373 399 380 l 298 380 b 284 387 288 380 284 380 b 287 405 284 392 285 396 b 419 606 315 530 347 606 b 442 595 431 606 442 603 b 419 580 442 586 435 588 b 389 526 400 572 389 552 b 454 465 389 485 418 465 b 524 543 491 465 524 490 b 400 639 524 596 491 639 b 135 402 261 639 183 540 b 107 380 128 380 127 380 z',\n        },\n        dynamicRinforzando: {\n            xMin: -20,\n            xMax: 277,\n            yMin: 0,\n            yMax: 274,\n            ha: 274,\n            o: 'm 324 395 b 235 350 287 395 256 374 b 215 330 222 336 220 330 b 203 360 207 330 213 337 b 145 393 194 379 174 393 b -19 251 75 393 27 337 b -29 223 -26 238 -29 230 b -13 207 -29 213 -22 207 b 9 226 -3 207 3 215 b 107 338 52 301 81 338 b 122 321 118 338 122 331 b 114 285 122 310 118 295 l 9 24 b 4 9 6 17 4 13 b 20 0 4 3 9 0 l 91 0 b 114 17 104 0 108 3 l 207 251 b 304 351 226 298 272 351 b 318 343 312 351 318 348 b 287 285 318 330 287 325 b 338 239 287 256 308 239 b 399 318 373 239 399 268 b 324 395 399 360 377 395 z',\n        },\n        dynamicSforzando: {\n            xMin: 0,\n            xMax: 229,\n            yMin: -10,\n            yMax: 273,\n            ha: 283,\n            o: 'm 212 393 b 68 274 127 393 68 350 b 145 161 68 223 95 196 b 200 85 187 132 200 114 b 127 20 200 53 173 20 b 66 42 91 20 66 32 b 91 56 66 49 75 46 b 111 98 104 65 111 79 b 59 145 111 127 86 145 b 0 78 24 145 0 117 b 125 -14 0 30 49 -14 b 291 120 219 -14 291 36 b 220 232 291 160 276 190 b 151 314 168 271 151 287 b 213 361 151 337 168 361 b 258 346 238 361 258 356 b 240 333 258 340 251 340 b 226 298 232 325 226 314 b 276 252 226 269 248 252 b 330 307 311 252 330 279 b 212 393 330 360 285 393 z',\n        },\n        dynamicZ: {\n            xMin: -30,\n            xMax: 244,\n            yMin: -10,\n            yMax: 268,\n            ha: 278,\n            o: 'm 333 386 b 298 377 321 386 314 382 b 239 370 282 373 259 370 b 94 383 153 370 111 383 b 68 364 79 383 72 377 l 33 264 b 29 242 30 255 29 248 b 45 228 29 232 36 228 b 66 249 55 228 60 236 l 81 279 b 96 297 85 288 88 297 b 168 292 102 297 127 292 b 223 302 194 292 215 302 b 196 269 229 302 197 271 l -26 45 b -43 16 -37 33 -43 27 b -24 -1 -43 6 -36 -1 b 4 16 -12 -1 -3 10 b 39 30 16 24 27 30 b 179 -14 79 30 108 -14 b 297 102 259 -14 297 43 b 245 166 297 147 271 166 b 197 115 219 166 197 145 b 236 72 197 88 216 72 b 259 79 251 72 255 79 b 264 75 262 79 264 78 b 258 60 264 72 261 66 b 229 45 252 50 242 45 b 117 95 186 45 173 95 b 85 86 98 95 89 86 b 102 111 85 86 95 104 l 333 338 b 351 370 344 350 351 359 b 333 386 351 380 343 386 z',\n        },\n        ornamentTrill: {\n            xMin: 0,\n            xMax: 521,\n            yMin: -10,\n            yMax: 390,\n            ha: 400,\n            o: 'm 383 562 b 364 557 377 562 369 559 l 294 534 b 269 511 281 530 275 526 l 217 384 b 206 367 212 370 210 367 b 179 380 200 367 192 374 b 118 393 158 389 140 393 b 0 292 50 393 0 353 b 95 210 0 248 30 210 b 140 213 112 210 131 213 b 144 209 143 213 144 212 b 140 194 144 206 143 202 l 124 156 b 96 58 108 117 96 88 b 179 -14 96 17 124 -14 b 325 153 253 -14 325 46 b 307 251 325 187 320 219 b 302 265 304 258 302 261 b 334 294 302 274 311 281 l 343 298 b 455 348 393 328 428 348 b 474 327 468 348 474 344 b 465 285 474 312 469 295 l 360 24 b 356 9 357 17 356 13 b 372 0 356 3 360 0 l 442 0 b 465 17 455 0 459 3 l 559 251 b 655 351 577 298 624 351 b 670 343 664 351 670 348 b 638 285 670 330 638 325 b 690 239 638 256 660 239 b 750 318 724 239 750 268 b 675 395 750 360 729 395 b 586 350 638 395 608 374 b 566 330 573 336 572 330 b 553 361 559 330 564 340 b 490 393 543 380 521 393 b 347 348 432 393 377 364 b 312 333 328 338 320 333 b 308 337 310 333 308 334 b 315 359 308 343 312 351 l 387 537 b 392 553 390 544 392 549 b 383 562 392 559 389 562 z m 118 360 b 192 325 134 360 192 347 b 186 307 192 321 189 314 l 180 292 b 148 265 173 274 167 269 b 98 258 130 261 112 258 b 39 301 50 258 39 281 b 118 360 39 327 60 360 z m 272 240 b 292 151 285 240 292 164 b 212 30 292 88 253 30 b 196 48 200 30 196 37 b 207 92 196 59 202 78 b 264 230 207 94 209 94 b 272 240 266 238 268 240 z',\n        },\n        ornamentTurn: {\n            xMin: 0,\n            xMax: 460,\n            yMin: 0,\n            yMax: 218,\n            ha: 218,\n            o: 'm 534 314 b 454 251 490 314 454 294 b 505 199 454 219 475 199 b 579 232 547 199 549 232 b 626 164 603 232 626 202 b 533 72 626 102 583 72 b 377 180 487 72 439 111 b 150 312 307 258 243 312 b 0 148 55 312 0 240 b 128 0 0 45 66 0 b 209 63 173 0 209 20 b 157 115 209 95 187 115 b 84 82 115 115 114 82 b 36 150 59 82 36 112 b 130 242 36 212 79 242 b 285 134 176 242 223 203 b 513 1 356 56 419 1 b 662 166 608 1 662 73 b 534 314 662 269 596 314 z',\n        },\n        ornamentTurnSlash: {\n            xMin: 0,\n            xMax: 460,\n            yMin: -90,\n            yMax: 306,\n            ha: 396,\n            o: 'm 333 441 b 310 418 315 441 310 433 l 310 274 b 302 252 310 258 308 252 b 261 278 294 252 287 262 b 150 311 228 298 192 311 b 0 147 55 311 0 239 b 128 -1 0 43 66 -1 b 209 62 173 -1 209 19 b 157 114 209 94 187 114 b 84 81 115 114 114 81 b 36 148 59 81 36 111 b 130 240 36 210 79 240 b 285 128 176 240 222 197 b 307 79 304 108 307 105 l 307 -107 b 330 -130 307 -122 312 -130 b 353 -107 347 -130 353 -122 l 353 37 b 360 59 353 53 353 59 b 402 33 369 59 376 49 b 513 0 435 13 471 0 b 662 164 608 0 662 72 b 534 312 662 268 596 312 b 454 249 490 312 454 292 b 505 197 454 217 475 197 b 579 230 547 197 549 230 b 626 163 603 230 626 200 b 533 71 626 101 583 71 b 377 183 487 71 441 114 b 356 232 359 203 356 206 l 356 418 b 333 441 356 433 350 441 z',\n        },\n        ornamentMordent: {\n            xMin: 1,\n            xMax: 729,\n            yMin: -73,\n            yMax: 319,\n            ha: 392,\n            o: 'm 546 265 l 546 459 l 501 459 l 501 216 l 459 167 b 439 167 454 160 445 160 b 302 327 387 228 310 317 b 258 353 291 338 282 351 b 226 340 245 353 238 348 l 20 107 b 1 73 12 98 1 84 b 30 59 1 65 9 59 b 88 94 53 59 73 79 b 144 143 107 109 124 127 b 176 161 158 154 168 161 b 197 144 183 161 189 156 l 323 10 b 351 0 328 3 340 0 b 377 9 361 0 372 3 b 498 114 392 17 475 94 l 498 -105 l 544 -105 l 544 153 b 562 160 550 157 556 160 b 585 144 569 160 576 156 b 710 10 590 135 697 24 b 737 0 716 3 727 0 b 765 9 749 0 759 3 b 1030 295 776 17 1011 274 l 1032 300 b 1050 328 1041 308 1050 318 b 1012 353 1050 343 1024 353 b 986 343 1002 353 994 348 b 854 190 971 330 871 206 b 828 176 842 180 835 176 b 802 190 818 176 809 183 b 681 333 791 202 696 320 b 645 353 668 344 657 353 b 613 340 634 353 626 350 b 580 304 600 330 590 315 z',\n        },\n        ornamentShortTrill: {\n            xMin: 0,\n            xMax: 725,\n            yMin: 0,\n            yMax: 245,\n            ha: 245,\n            o: 'm 429 167 l 301 325 b 256 353 291 338 282 350 b 225 340 246 353 238 350 b 16 105 158 268 88 186 b 0 72 9 96 0 86 b 29 58 0 63 7 58 b 71 76 42 58 55 62 l 158 154 b 174 160 163 158 168 160 b 197 143 181 160 187 154 b 321 10 203 135 310 24 b 350 0 327 3 338 0 b 377 7 361 0 372 3 l 533 148 b 554 160 543 158 550 160 b 577 143 562 160 566 156 b 703 10 585 135 690 24 b 732 0 708 3 720 0 b 759 7 743 0 753 3 b 1024 294 769 16 1005 272 b 1044 327 1032 305 1044 321 b 1005 353 1044 341 1018 353 b 979 343 996 353 988 348 b 848 189 963 330 864 204 b 821 174 837 179 828 174 b 796 189 811 174 804 181 b 674 331 783 202 688 318 b 641 351 662 343 651 351 b 606 340 628 351 619 350 b 573 304 593 328 583 315 b 444 167 533 259 491 213 b 429 167 439 161 433 161 z',\n        },\n        ornamentTremblement: {\n            xMin: 1,\n            xMax: 985,\n            yMin: 0,\n            yMax: 244,\n            ha: 244,\n            o: 'm 678 325 b 634 351 667 338 657 350 b 602 338 621 351 613 348 l 448 167 b 439 167 446 164 441 164 l 302 325 b 258 351 291 338 281 350 b 228 338 245 351 238 348 b 193 304 215 328 204 315 l 19 107 b 1 72 13 96 1 76 b 30 58 1 63 9 58 b 89 92 52 58 73 78 l 144 141 b 148 144 145 143 147 143 b 176 160 160 153 170 160 b 199 143 183 160 189 154 b 324 10 204 134 311 23 b 351 0 330 3 340 0 b 379 7 363 0 373 3 l 530 148 b 552 160 536 154 546 160 b 575 143 559 160 564 154 b 698 10 580 134 687 23 b 727 0 704 3 716 0 b 755 7 739 0 749 3 l 907 147 b 930 160 922 158 923 160 b 952 143 937 160 943 154 l 1077 10 b 1107 0 1084 3 1096 0 b 1133 7 1117 0 1128 3 b 1398 294 1143 16 1380 272 b 1418 327 1407 305 1418 321 b 1381 351 1418 343 1394 351 b 1354 341 1371 351 1362 348 b 1223 189 1338 328 1238 204 b 1195 174 1211 179 1202 174 b 1171 189 1185 174 1178 181 b 1048 331 1158 200 1063 318 b 1012 351 1035 343 1024 351 b 981 338 1002 351 994 350 b 948 304 968 328 958 315 b 827 166 907 258 865 212 b 815 166 824 163 818 163 b 678 325 760 226 732 264 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            xMin: 0,\n            xMax: 1119,\n            yMin: 0,\n            yMax: 481,\n            ha: 481,\n            o: 'm 1015 163 b 873 328 963 223 880 318 b 828 354 860 344 847 353 b 796 341 816 354 809 351 b 763 305 783 331 773 317 b 642 168 721 261 681 215 b 636 163 641 167 639 164 b 494 328 585 223 501 318 b 449 354 481 344 468 353 b 418 341 438 354 431 351 b 384 305 405 331 395 317 b 264 168 343 261 302 215 l 242 144 b 144 88 232 124 171 88 b 79 197 81 88 79 189 l 79 648 b 60 693 79 683 71 693 b 52 691 58 693 55 693 b 0 616 3 672 0 625 l 0 207 b 121 0 0 40 68 0 b 249 68 168 0 232 53 b 279 94 262 75 271 86 b 336 144 298 111 315 128 b 367 163 350 156 360 163 b 389 145 374 163 380 157 b 514 12 395 137 501 26 b 543 1 520 4 531 1 b 569 9 553 1 563 4 b 636 73 576 14 605 43 l 658 94 b 714 144 677 111 694 128 b 746 163 729 156 739 163 b 768 145 753 163 759 157 b 893 12 773 137 880 26 b 922 1 899 4 910 1 b 948 9 932 1 942 4 l 1012 71 b 1037 94 1022 78 1030 86 b 1092 144 1054 111 1073 128 b 1123 161 1106 156 1115 161 b 1146 145 1130 161 1136 157 b 1270 12 1152 137 1259 26 b 1299 1 1276 4 1287 1 b 1326 9 1310 1 1320 4 b 1591 297 1336 19 1572 275 b 1611 328 1600 307 1611 320 b 1574 354 1611 343 1585 354 b 1548 344 1565 354 1555 350 b 1416 192 1532 331 1431 206 b 1388 177 1404 181 1395 177 b 1365 190 1380 177 1371 184 b 1243 333 1352 203 1256 321 b 1205 354 1228 346 1217 354 b 1174 341 1195 354 1187 351 b 1140 305 1161 330 1152 317 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            xMin: 2,\n            xMax: 1150,\n            yMin: -367,\n            yMax: 245,\n            ha: 612,\n            o: 'm 1058 160 b 916 327 1007 220 923 317 b 871 353 903 343 890 351 b 840 340 860 353 852 350 b 806 304 827 330 816 315 b 685 167 765 259 724 213 l 680 160 l 615 235 b 419 344 582 275 523 344 b 3 -144 258 344 3 26 b 4 -168 3 -153 3 -160 b 246 -482 24 -315 99 -422 b 458 -528 340 -521 410 -528 b 514 -526 485 -528 504 -526 b 552 -508 531 -526 552 -517 b 514 -497 552 -503 541 -498 l 503 -497 b 194 -390 432 -494 298 -488 b 69 -151 194 -390 69 -279 b 184 96 69 -60 128 27 b 328 183 202 118 258 183 b 477 96 413 183 454 118 b 559 10 510 62 552 19 b 588 0 566 3 576 0 b 613 7 598 0 609 3 b 723 112 622 14 681 73 b 789 161 733 122 776 161 b 811 144 796 161 802 156 b 936 10 816 135 923 24 b 965 0 942 3 953 0 b 991 7 975 0 985 3 b 1051 66 996 12 1022 37 b 1081 92 1063 73 1073 84 b 1136 143 1099 109 1117 127 b 1168 160 1151 154 1159 160 b 1191 144 1175 160 1181 156 b 1315 10 1197 135 1303 24 b 1344 0 1320 3 1332 0 b 1371 7 1355 0 1365 3 b 1636 295 1381 17 1617 274 b 1656 327 1644 305 1656 318 b 1619 353 1656 341 1630 353 b 1593 343 1610 353 1600 348 b 1460 190 1577 330 1476 204 b 1433 176 1449 180 1440 176 b 1410 189 1424 176 1416 183 b 1287 331 1397 202 1300 320 b 1250 353 1273 344 1261 353 b 1218 340 1240 353 1231 350 b 1185 304 1205 328 1197 315 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            xMin: 0,\n            xMax: 1048,\n            yMin: -367,\n            yMax: 331,\n            ha: 698,\n            o: 'm 1038 477 l 979 477 l 979 238 l 912 160 b 769 327 858 220 775 317 b 724 353 756 343 743 351 b 693 340 713 353 706 350 b 660 304 680 330 670 315 b 539 167 618 259 577 213 b 533 161 536 166 534 163 b 390 327 480 220 396 317 b 346 353 377 343 364 351 l 340 353 b 308 340 330 353 321 350 b 275 304 295 330 285 315 b 117 122 220 243 168 186 b 0 -144 68 62 0 -48 b 1 -168 0 -153 0 -160 b 243 -482 22 -315 96 -422 b 455 -528 337 -521 408 -528 b 511 -526 482 -528 501 -526 b 549 -508 528 -526 549 -517 b 511 -497 549 -503 539 -498 l 500 -497 b 192 -390 429 -494 295 -488 b 68 -177 192 -390 84 -298 b 66 -151 66 -168 66 -160 b 189 105 66 -58 127 35 b 232 143 203 118 216 131 b 264 161 246 154 256 161 b 285 144 271 161 276 156 b 410 10 291 135 397 24 b 439 0 416 3 428 0 b 465 7 449 0 459 3 l 531 72 b 554 92 540 78 547 86 b 611 143 573 109 590 127 b 642 161 625 154 635 161 b 664 144 649 161 655 156 b 789 10 670 135 776 24 b 818 0 795 3 806 0 b 844 7 828 0 838 3 b 904 66 850 12 876 37 b 935 92 916 73 924 84 b 979 134 949 107 963 121 l 979 -88 l 1037 -88 l 1037 151 l 1044 144 b 1168 10 1050 135 1156 24 b 1197 0 1174 3 1185 0 b 1224 7 1208 0 1218 3 b 1489 295 1234 17 1470 274 b 1509 327 1498 305 1509 318 b 1472 353 1509 341 1483 353 b 1446 343 1463 353 1453 348 b 1313 190 1430 330 1329 204 b 1286 176 1302 180 1293 176 b 1263 189 1277 176 1269 183 b 1140 331 1250 202 1153 320 b 1103 353 1126 344 1115 353 b 1071 340 1093 353 1084 350 b 1038 304 1058 328 1050 315 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            xMin: 0,\n            xMax: 949,\n            yMin: 0,\n            yMax: 381,\n            ha: 381,\n            o: 'm 1367 314 b 1250 521 1367 419 1318 482 b 1107 549 1211 537 1145 549 b 1083 546 1096 549 1087 549 b 1066 528 1071 540 1066 534 b 1079 520 1066 524 1070 520 b 1323 351 1187 517 1323 487 b 1201 171 1323 269 1260 219 b 1194 166 1201 171 1198 168 b 1056 327 1142 226 1063 317 b 1011 353 1043 343 1030 351 b 979 340 999 353 992 350 b 946 304 966 330 956 315 b 825 167 904 259 864 213 l 821 161 b 678 327 768 222 685 317 b 634 353 665 343 652 351 b 602 340 622 353 615 350 b 569 304 589 330 579 315 b 448 167 527 259 487 213 l 444 161 b 301 327 390 222 308 317 b 256 353 288 343 275 351 b 225 340 245 353 238 350 b 192 304 212 330 202 315 b 71 167 150 259 109 213 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 174 161 157 154 167 161 b 196 144 181 161 187 156 b 321 10 202 135 308 24 b 350 0 327 3 338 0 b 376 7 360 0 370 3 b 485 112 384 14 444 73 b 552 161 495 122 539 161 b 573 144 559 161 564 156 b 698 10 579 135 685 24 b 727 0 704 3 716 0 b 753 7 737 0 747 3 b 863 112 762 14 821 73 b 929 161 873 122 916 161 b 950 144 936 161 942 156 b 1076 10 956 135 1063 24 b 1104 0 1081 3 1093 0 b 1130 7 1115 0 1125 3 b 1236 108 1139 14 1195 69 b 1367 314 1297 160 1367 233 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            xMin: 0,\n            xMax: 1278,\n            yMin: 0,\n            yMax: 247,\n            ha: 247,\n            o: 'm 1801 356 b 1776 346 1793 356 1783 351 b 1642 192 1760 333 1659 206 b 1614 177 1630 181 1621 177 b 1591 190 1606 177 1597 184 b 1469 334 1578 203 1482 323 b 1430 356 1453 347 1441 356 b 1398 343 1420 356 1411 353 b 1365 307 1385 331 1377 318 l 1240 164 b 1097 330 1187 226 1104 320 b 1053 356 1084 346 1071 354 b 1021 343 1041 356 1034 353 b 988 307 1008 333 998 318 b 865 168 946 262 904 216 l 861 163 b 717 330 808 223 724 320 b 672 356 704 346 691 354 b 641 343 661 356 654 353 b 608 307 628 333 618 318 b 485 168 566 262 524 216 l 455 134 b 284 46 409 88 351 46 b 16 285 148 46 32 265 b 3 295 9 292 4 295 b 0 291 1 295 0 292 b 1 285 0 288 1 285 b 308 0 42 190 157 0 b 530 120 415 1 482 63 b 559 144 539 128 549 137 b 590 163 573 156 583 163 b 612 145 598 163 603 157 b 739 10 618 137 724 24 b 768 0 744 3 756 0 b 793 7 778 0 788 3 b 903 114 802 14 861 75 l 939 144 b 971 163 953 156 963 163 b 992 145 978 163 984 157 b 1119 10 998 137 1106 24 b 1148 0 1125 3 1136 0 b 1174 7 1158 0 1168 3 b 1284 114 1182 14 1241 75 b 1316 144 1282 115 1312 141 b 1348 161 1331 156 1339 161 b 1371 145 1355 161 1361 157 b 1496 10 1377 137 1485 24 b 1525 0 1502 3 1513 0 b 1552 7 1536 0 1547 3 b 1819 298 1562 17 1800 276 b 1840 330 1829 308 1840 320 b 1832 344 1840 334 1837 340 b 1801 356 1820 351 1810 356 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            xMin: 0,\n            xMax: 1277,\n            yMin: -62,\n            yMax: 333,\n            ha: 395,\n            o: 'm 1273 202 l 1273 480 l 1230 480 l 1230 174 l 1097 328 b 1053 354 1084 344 1071 353 b 1021 341 1041 354 1034 351 b 988 305 1008 331 998 317 b 865 167 945 261 904 215 l 861 161 b 717 328 808 222 724 318 b 672 354 704 344 691 353 b 641 341 661 354 654 351 b 608 305 628 331 618 317 b 485 167 564 261 524 215 b 455 132 474 156 465 144 b 284 45 410 88 350 45 b 14 284 148 45 30 264 b 3 294 9 291 4 294 b 0 289 1 294 0 291 b 1 284 0 287 1 284 b 308 -1 42 189 157 -1 b 530 118 415 0 481 62 b 557 143 539 127 547 135 b 590 161 572 154 582 161 b 612 144 598 161 603 156 b 737 9 618 135 724 24 b 768 -1 743 1 755 -1 b 793 6 778 -1 788 1 b 903 112 802 13 861 73 l 937 143 b 971 161 953 154 963 161 b 992 144 978 161 984 156 b 1117 9 998 135 1104 24 b 1148 -1 1123 1 1136 -1 b 1174 6 1158 -1 1168 1 l 1230 60 l 1230 -89 l 1273 -89 l 1273 102 l 1283 112 b 1348 160 1295 125 1332 160 b 1371 144 1355 160 1361 156 b 1496 9 1377 135 1483 24 b 1525 -1 1502 1 1513 -1 b 1552 6 1536 -1 1547 1 b 1819 297 1562 16 1800 275 b 1839 328 1827 307 1839 320 b 1801 354 1839 343 1813 354 b 1776 344 1793 354 1783 350 b 1642 190 1760 331 1657 206 b 1614 176 1630 180 1621 176 b 1591 189 1606 176 1597 183 b 1467 333 1578 203 1480 321 b 1430 354 1453 346 1441 354 b 1398 341 1420 354 1411 351 b 1365 305 1385 330 1377 317 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            xMin: 0,\n            xMax: 859,\n            yMin: -222,\n            yMax: 246,\n            ha: 468,\n            o: 'm 1164 217 b 1031 351 1138 259 1063 351 b 1011 337 1020 351 1024 347 b 828 167 952 291 886 217 l 824 164 b 683 328 772 225 690 318 b 638 354 670 344 657 353 b 606 341 626 354 619 351 b 573 305 593 331 583 317 b 451 167 530 261 490 215 l 446 161 b 302 328 393 222 310 318 b 258 354 289 344 276 353 b 226 341 246 354 239 351 b 193 305 213 331 203 317 b 71 167 150 261 109 215 b 17 105 52 147 36 127 b 0 73 10 98 0 84 b 29 58 0 65 7 58 b 86 92 56 59 72 79 b 143 143 105 109 122 127 b 176 161 157 154 168 161 b 197 144 183 161 189 156 b 323 9 203 135 310 23 b 353 -1 328 1 340 -1 b 379 6 363 -1 373 1 b 488 112 387 13 446 73 l 523 143 b 556 161 539 154 549 161 b 577 144 563 161 569 156 b 703 9 583 135 690 23 b 733 -1 708 1 721 -1 b 759 6 743 -1 753 1 b 868 112 768 13 827 73 b 955 183 878 122 943 183 b 1081 107 965 183 1031 153 b 1156 -89 1128 63 1156 6 l 1156 -102 b 948 -297 1156 -204 1048 -297 b 806 -271 904 -297 850 -282 l 792 -266 b 801 -288 792 -268 795 -282 b 948 -320 809 -297 880 -320 b 1237 -50 1092 -320 1237 -199 b 1164 217 1237 75 1218 122 z',\n        },\n        brassScoop: {\n            xMin: 1,\n            xMax: 320,\n            yMin: -373,\n            yMax: 13,\n            ha: 386,\n            o: 'm 35 -537 b 461 -12 194 -518 461 -289 b 438 19 461 13 451 19 b 410 -9 425 19 413 9 b 35 -425 357 -366 92 -403 b 1 -482 13 -433 1 -438 l 1 -505 b 26 -537 1 -526 3 -537 z',\n        },\n        brassDoitMedium: {\n            xMin: 0,\n            xMax: 489,\n            yMin: -40,\n            yMax: 346,\n            ha: 386,\n            o: 'm 33 -58 b 704 468 255 -58 683 186 b 681 498 704 494 693 498 b 654 471 668 498 658 488 b 33 55 550 118 91 76 b 0 -3 12 46 0 42 l 0 -26 b 24 -58 0 -46 1 -58 z',\n        },\n        brassFallLipShort: {\n            xMin: 1,\n            xMax: 293,\n            yMin: -345,\n            yMax: 42,\n            ha: 387,\n            o: 'm 22 60 b 1 35 4 60 1 52 l 1 6 b 26 -50 3 -40 10 -43 b 32 -52 27 -50 30 -50 b 376 -469 85 -73 327 -111 b 400 -497 379 -487 387 -497 b 422 -467 412 -497 422 -491 b 32 60 422 -187 177 40 z',\n        },\n        brassLiftMedium: {\n            xMin: 0,\n            xMax: 811,\n            yMin: 0,\n            yMax: 852,\n            ha: 852,\n            o: 'm 1138 1220 b 1135 1225 1135 1223 1135 1224 b 1129 1227 1133 1227 1130 1227 b 1117 1207 1122 1227 1117 1212 l 1117 1201 b 1109 1164 1117 1187 1117 1172 b 1100 1156 1107 1161 1104 1158 b 959 1104 1058 1128 995 1140 b 929 1032 936 1081 929 1056 b 932 1007 929 1024 930 1015 b 923 976 932 995 930 985 l 914 971 b 773 919 873 942 809 955 b 743 847 750 896 743 870 b 746 821 743 838 744 829 b 737 791 746 809 744 799 l 729 783 b 588 733 687 756 624 769 b 557 661 564 710 557 684 b 560 635 557 652 559 644 b 552 605 560 624 559 612 l 543 598 b 402 547 501 570 438 583 b 372 475 379 524 372 498 b 374 449 372 467 373 458 b 366 419 374 438 373 426 l 357 412 b 216 361 315 384 252 397 b 186 289 193 338 186 312 b 189 264 186 281 187 272 b 180 233 189 252 187 240 b 171 226 177 232 174 229 b 30 176 130 199 66 212 b 0 104 7 153 0 128 b 33 0 0 88 14 0 b 49 17 40 0 49 10 b 71 63 52 35 56 49 b 212 115 102 95 154 59 b 239 186 230 134 239 160 b 236 210 239 194 238 202 b 256 249 239 225 243 236 b 397 301 288 281 340 245 b 425 372 416 320 425 346 b 422 396 425 380 423 387 b 442 435 425 410 429 422 b 583 487 474 467 526 431 b 611 557 602 505 611 531 b 608 582 611 566 609 573 b 628 621 611 596 615 608 b 769 672 660 652 711 618 b 796 743 788 691 796 717 b 793 768 796 752 795 759 b 814 806 796 782 801 793 b 955 858 845 838 897 804 b 982 929 973 877 982 903 b 979 953 982 937 981 945 b 999 992 982 968 986 979 b 1140 1045 1031 1024 1083 989 b 1168 1116 1161 1066 1168 1090 b 1138 1220 1168 1162 1145 1207 z',\n        },\n        brassFallRoughMedium: {\n            xMin: 0,\n            xMax: 811,\n            yMin: 0,\n            yMax: 852,\n            ha: 852,\n            o: 'm 30 1220 b 0 1116 23 1207 0 1162 b 27 1045 0 1090 7 1066 b 168 992 85 989 137 1024 b 189 953 181 979 186 968 b 186 929 187 945 186 937 b 213 858 186 903 194 877 b 354 806 271 804 323 838 b 374 768 367 793 372 782 b 372 743 373 759 372 752 b 399 672 372 717 380 691 b 540 621 456 618 508 652 b 560 582 553 608 557 596 b 557 557 559 573 557 566 b 585 487 557 531 566 505 b 726 435 642 431 694 467 b 746 396 739 422 743 410 b 743 372 744 387 743 380 b 770 301 743 346 752 320 b 912 249 828 245 880 281 b 932 210 924 236 929 225 b 929 186 930 202 929 194 b 956 115 929 160 937 134 b 1097 63 1014 59 1066 95 b 1119 17 1112 49 1116 35 b 1135 0 1119 10 1128 0 b 1168 104 1153 0 1168 91 b 1138 176 1168 128 1161 153 b 996 226 1102 212 1038 199 b 988 233 994 229 991 232 b 979 264 981 240 979 252 b 982 289 981 272 982 281 b 952 361 982 312 975 338 b 811 412 916 397 852 384 l 802 419 b 793 449 795 426 793 438 b 796 475 795 458 796 467 b 766 547 796 498 789 524 b 625 598 730 583 667 570 l 616 605 b 608 635 609 612 608 624 b 611 661 609 644 611 652 b 580 733 611 684 603 710 b 439 783 544 769 481 756 l 431 791 b 422 821 423 799 422 809 b 425 847 423 829 425 838 b 395 919 425 870 418 896 b 253 971 359 955 295 942 l 245 976 b 236 1007 238 985 236 995 b 239 1032 238 1015 239 1024 b 209 1104 239 1056 232 1081 b 68 1156 173 1140 109 1128 b 59 1164 63 1158 60 1161 b 50 1201 50 1172 50 1187 l 50 1207 b 39 1227 50 1212 46 1227 b 33 1225 37 1227 35 1227 b 30 1220 33 1224 33 1223 z',\n        },\n        brassBend: {\n            xMin: 0,\n            xMax: 392,\n            yMin: 0,\n            yMax: 282,\n            ha: 282,\n            o: 'm 282 0 b 552 72 369 0 456 23 b 564 92 560 75 564 84 l 564 383 b 541 406 564 395 554 406 b 518 383 528 406 518 395 l 518 107 b 282 46 435 65 357 46 b 46 107 207 46 130 65 l 46 383 b 23 406 46 395 36 406 b 0 383 10 406 0 395 l 0 92 b 13 72 0 84 4 75 b 282 0 108 23 196 0 z',\n        },\n        brassMuteClosed: {\n            xMin: 0,\n            xMax: 272,\n            yMin: 0,\n            yMax: 272,\n            ha: 272,\n            o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n        },\n        brassMuteOpen: {\n            xMin: 0,\n            xMax: 304,\n            yMin: 0,\n            yMax: 304,\n            ha: 304,\n            o: 'm 219 0 b 438 219 340 0 438 98 b 219 438 438 340 340 438 b 0 219 98 438 0 340 b 219 0 0 98 98 0 z m 219 392 b 392 219 314 392 392 314 b 219 46 392 124 314 46 b 46 219 124 46 46 124 b 219 392 46 314 124 392 z',\n        },\n        brassFlip: {\n            xMin: 0,\n            xMax: 379,\n            yMin: 0,\n            yMax: 282,\n            ha: 282,\n            o: 'm 523 0 b 541 9 530 0 536 3 b 546 22 544 13 546 17 b 536 42 546 29 541 36 l 36 402 b 23 406 33 405 27 406 b 0 383 12 406 0 395 l 0 23 b 23 0 0 10 10 0 b 46 23 36 0 46 10 l 46 337 l 508 4 b 523 0 513 1 517 0 z',\n        },\n        brassJazzTurn: {\n            xMin: 0,\n            xMax: 620,\n            yMin: 0,\n            yMax: 245,\n            ha: 245,\n            o: 'm 792 190 b 765 176 780 179 772 176 b 740 190 755 176 747 183 b 629 325 727 202 644 312 b 593 347 616 338 605 347 b 562 334 583 346 575 344 b 528 298 549 323 539 310 l 406 176 b 389 168 406 176 399 168 b 374 176 384 168 379 170 b 245 325 360 192 245 325 b 200 353 232 343 219 351 b 168 340 190 353 181 350 l 17 156 b 0 121 10 147 0 132 b 16 107 0 114 4 108 b 84 143 26 107 76 137 b 118 160 92 150 108 160 b 141 143 125 160 131 154 b 265 10 147 135 253 24 b 294 0 271 3 282 0 b 321 7 305 0 315 3 b 498 160 321 7 478 158 b 521 143 505 160 513 154 b 647 10 528 135 635 24 b 675 0 652 3 664 0 b 703 7 687 0 697 3 b 874 186 713 16 855 164 b 893 220 881 196 893 212 b 873 245 890 235 883 243 b 796 194 847 245 815 213 z',\n        },\n        brassSmear: {\n            xMin: 1,\n            xMax: 306,\n            yMin: 0,\n            yMax: 170,\n            ha: 170,\n            o: 'm 193 79 b 308 0 219 50 264 0 b 439 117 396 0 438 102 b 439 120 439 118 439 118 l 441 125 b 441 128 441 127 441 127 b 433 141 441 135 439 141 b 416 130 429 141 423 137 b 343 94 390 107 370 94 b 269 153 315 94 294 121 l 265 158 b 144 245 239 190 180 245 b 6 134 62 245 10 143 b 1 114 3 125 1 118 b 7 107 1 108 4 107 b 36 122 13 107 22 112 b 92 151 55 137 65 151 b 183 89 125 151 161 112 b 189 84 184 88 187 86 z',\n        },\n        stringsDownBow: {\n            xMin: 0,\n            xMax: 312,\n            yMin: 0,\n            yMax: 318,\n            ha: 318,\n            o: 'm 37 458 b 0 420 17 458 0 441 l 0 17 b 17 0 0 7 9 0 l 37 0 b 55 17 46 0 55 7 l 55 253 b 225 278 55 269 140 278 b 395 253 310 278 395 269 l 395 17 b 413 0 395 7 403 0 l 432 0 b 449 17 441 0 449 7 l 449 420 b 412 458 449 441 432 458 z',\n        },\n        stringsUpBow: {\n            xMin: 1,\n            xMax: 249,\n            yMin: 1,\n            yMax: 495,\n            ha: 494,\n            o: 'm 181 1 b 206 22 193 1 203 10 l 359 683 l 359 688 b 338 713 359 700 351 710 l 333 713 b 308 694 321 713 311 706 l 180 140 l 53 694 b 27 713 49 706 39 713 l 22 713 b 1 690 10 710 1 700 b 3 683 1 687 1 685 l 154 22 b 181 1 157 10 167 1 z',\n        },\n        stringsHarmonic: {\n            xMin: 0,\n            xMax: 200,\n            yMin: 0,\n            yMax: 200,\n            ha: 200,\n            o: 'm 288 144 b 144 288 288 225 223 288 b 0 144 65 288 0 225 b 144 0 0 65 65 0 b 288 144 223 0 288 65 z m 144 249 b 249 144 203 249 249 203 b 144 39 249 86 203 39 b 39 144 86 39 39 86 b 144 249 39 203 86 249 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            xMin: 0,\n            xMax: 200,\n            yMin: 0,\n            yMax: 300,\n            ha: 300,\n            o: 'm 0 144 b 144 0 0 63 65 0 b 288 144 223 0 288 63 b 167 285 288 215 235 275 l 167 432 l 121 432 l 121 285 b 0 144 52 275 0 215 z m 121 246 l 121 144 l 167 144 l 167 246 b 249 144 213 236 249 193 b 144 39 249 85 202 39 b 39 144 85 39 39 85 b 121 246 39 193 73 236 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            xMin: 0,\n            xMax: 200,\n            yMin: 0,\n            yMax: 300,\n            ha: 300,\n            o: 'm 288 288 b 144 432 288 369 223 432 b 0 288 65 432 0 369 b 121 145 0 216 52 157 l 121 0 l 167 0 l 167 145 b 288 288 235 157 288 216 z m 167 186 l 167 288 l 121 288 l 121 186 b 39 288 75 196 39 238 b 144 393 39 347 86 393 b 249 288 203 393 249 347 b 167 186 249 238 215 196 z',\n        },\n        pluckedLeftHandPizzicato: {\n            xMin: 0,\n            xMax: 272,\n            yMin: 0,\n            yMax: 272,\n            ha: 272,\n            o: 'm 392 219 l 219 219 l 219 392 l 173 392 l 173 219 l 0 219 l 0 173 l 173 173 l 173 0 l 219 0 l 219 173 l 392 173 z',\n        },\n        keyboardPedalPed: {\n            xMin: 0,\n            xMax: 1019,\n            yMin: -8,\n            yMax: 555,\n            ha: 563,\n            o: 'm 413 799 b 179 749 327 798 261 789 b 0 517 107 713 0 632 b 122 376 0 454 37 376 b 240 540 189 376 240 452 b 225 586 240 579 233 586 b 204 549 213 586 212 573 b 138 480 199 527 181 480 b 85 549 96 480 85 517 l 85 554 b 353 762 89 690 230 762 b 373 752 364 762 373 760 b 351 708 373 740 360 723 b 274 546 330 675 274 585 b 353 416 274 508 333 444 b 412 304 372 390 412 351 b 382 228 412 275 403 256 b 334 190 363 202 361 200 b 147 29 271 167 147 88 b 196 -12 147 4 171 -12 b 343 108 239 -12 279 33 l 363 132 b 387 150 370 141 376 150 b 543 -4 445 150 467 -4 b 631 42 567 -4 586 0 l 668 78 b 685 89 674 84 680 89 b 696 75 688 89 690 86 b 809 -9 717 29 753 -9 b 946 66 854 -9 894 13 b 988 107 971 92 981 107 b 1002 89 994 107 996 99 b 1152 -4 1030 36 1077 -4 b 1329 248 1238 -4 1329 82 b 792 717 1329 556 1047 665 b 766 720 785 719 775 720 b 747 703 752 720 747 711 b 780 680 747 693 756 685 b 1223 222 1028 621 1223 504 b 1152 39 1223 122 1205 39 b 1073 229 1104 39 1073 132 b 1132 423 1073 314 1086 377 b 1142 442 1140 432 1142 436 b 1126 458 1142 451 1136 458 b 1093 446 1119 458 1109 455 b 975 216 1022 408 975 337 l 975 190 b 943 121 975 160 972 150 b 852 69 899 76 877 69 b 776 148 816 69 786 117 b 773 163 775 154 773 158 b 786 177 773 167 776 170 l 801 187 b 937 366 867 235 937 284 b 844 454 937 422 900 454 b 665 217 711 454 665 331 b 671 153 665 197 667 176 l 671 147 b 662 134 671 143 670 140 b 605 111 639 118 625 111 b 521 160 572 111 546 135 b 451 203 497 184 474 197 b 426 212 435 207 426 206 b 436 230 426 216 429 220 b 510 389 464 269 510 340 b 429 521 510 435 480 462 b 369 629 387 570 369 599 b 402 720 369 648 384 691 b 462 763 425 759 446 763 b 611 624 540 763 611 704 b 564 575 611 592 590 575 b 501 602 540 575 520 582 b 474 622 492 611 487 622 b 459 603 465 622 459 615 b 603 471 459 570 510 471 b 711 588 670 471 711 524 b 422 799 711 742 554 799 z m 815 403 b 848 343 838 403 848 383 b 780 226 848 295 824 261 b 765 217 773 220 768 217 b 759 228 762 217 759 220 b 756 282 757 245 756 262 b 815 403 756 346 772 403 z m 1405 124 b 1344 62 1369 124 1344 98 b 1405 0 1344 26 1369 0 b 1467 62 1441 0 1467 26 b 1405 124 1467 98 1441 124 z',\n        },\n        keyboardPedalUp: {\n            xMin: 0,\n            xMax: 450,\n            yMin: 0,\n            yMax: 450,\n            ha: 450,\n            o: 'm 582 396 b 516 367 554 396 533 384 b 465 340 495 347 487 340 l 458 340 b 412 377 432 340 412 348 b 432 409 412 387 419 396 l 438 415 b 490 429 451 428 464 429 b 575 501 534 429 575 452 b 501 575 575 541 541 575 b 429 490 452 575 429 534 b 415 438 429 464 428 451 l 409 432 b 377 412 396 419 387 412 b 340 458 348 412 340 432 l 340 465 b 367 516 340 487 347 495 b 396 582 384 533 396 554 b 324 648 396 625 363 648 b 252 582 285 648 252 625 b 281 516 252 554 264 533 b 308 465 301 495 308 487 l 308 458 b 271 412 308 432 300 412 b 239 432 261 412 252 419 l 233 438 b 219 490 220 451 219 464 b 147 575 219 534 196 575 b 73 501 107 575 73 541 b 158 429 73 452 114 429 b 210 415 184 429 197 428 l 216 409 b 236 377 229 396 236 387 b 190 340 236 348 216 340 l 183 340 b 132 367 161 340 153 347 b 66 396 115 384 94 396 b 0 324 23 396 0 363 b 66 252 0 285 23 252 b 132 281 94 252 115 264 b 183 308 153 301 161 308 l 190 308 b 236 271 216 308 236 300 b 216 239 236 261 229 252 l 210 233 b 158 219 197 220 184 219 b 73 147 114 219 73 196 b 147 73 73 107 107 73 b 219 158 196 73 219 114 b 233 210 219 184 220 197 l 239 216 b 271 236 252 229 261 236 b 308 190 300 236 308 216 l 308 183 b 281 132 308 161 301 153 b 252 66 264 115 252 94 b 324 0 252 23 285 0 b 396 66 363 0 396 23 b 367 132 396 94 384 115 b 340 183 347 153 340 161 l 340 190 b 377 236 340 216 348 236 b 409 216 387 236 396 229 l 415 210 b 429 158 428 197 429 184 b 501 73 429 114 452 73 b 575 147 541 73 575 107 b 490 219 575 196 534 219 b 438 233 464 219 451 220 l 432 239 b 412 271 419 252 412 261 b 458 308 412 300 432 308 l 465 308 b 516 281 487 308 495 301 b 582 252 533 264 554 252 b 648 324 625 252 648 285 b 582 396 648 363 625 396 z m 324 271 b 271 324 291 271 271 291 b 324 377 271 357 291 377 b 377 324 357 377 377 357 b 324 271 377 291 357 271 z',\n        },\n        pictChokeCymbal: {\n            xMin: 1,\n            xMax: 152,\n            yMin: 2,\n            yMax: 251,\n            ha: 249,\n            o: 'm 104 361 b 1 271 42 361 1 321 b 82 190 1 222 35 190 b 122 160 118 190 122 160 b 125 144 124 154 125 150 b 102 88 125 124 115 105 b 37 32 78 56 40 35 b 26 17 32 29 26 26 l 27 16 b 37 3 29 6 33 3 b 181 102 85 3 158 66 b 219 239 210 147 219 197 l 219 249 b 104 361 219 317 170 361 z',\n        },\n        wiggleArpeggiatoUp: {\n            xMin: -33,\n            xMax: 292,\n            yMin: 0,\n            yMax: 119,\n            ha: 119,\n            o: 'm 130 171 b -39 68 16 171 -14 91 b -48 53 -45 62 -48 58 b -29 42 -48 46 -39 42 b -10 46 -23 42 -16 43 b 56 63 12 56 29 63 b 248 0 121 63 135 0 b 419 127 361 0 410 104 b 420 132 420 130 420 131 b 412 140 420 137 416 140 b 386 130 403 140 392 134 b 334 107 367 117 353 107 b 318 108 330 107 324 107 b 240 138 289 112 265 128 b 130 171 209 153 168 171 z',\n        },\n        arrowheadBlackUp: {\n            xMin: 0,\n            xMax: 228,\n            yMin: 0,\n            yMax: 299,\n            ha: 299,\n            o: 'm 166 431 b 0 20 111 274 0 30 b 16 0 0 12 6 0 l 17 1 b 166 50 43 16 160 50 b 310 1 171 50 289 13 l 311 0 b 328 20 321 0 328 12 b 166 431 328 30 220 274 z',\n        },\n        arrowheadBlackDown: {\n            xMin: 0,\n            xMax: 228,\n            yMin: 0,\n            yMax: 299,\n            ha: 299,\n            o: 'm 166 0 b 328 410 220 157 328 400 b 311 431 328 419 321 431 l 310 429 b 166 380 289 418 171 380 b 17 429 160 380 43 415 l 16 431 b 0 410 6 431 0 419 b 166 0 0 400 111 157 z',\n        },\n        arpeggiatoUp: {\n            xMin: 1,\n            xMax: 229,\n            yMin: 7,\n            yMax: 1511,\n            ha: 1504,\n            o: 'm 219 1848 l 330 1848 l 164 2176 l 1 1848 l 121 1848 b 92 1778 115 1822 101 1800 l 89 1773 b 59 1668 75 1741 59 1702 b 96 1555 59 1614 76 1580 b 99 1551 98 1554 99 1551 l 102 1547 b 124 1496 115 1531 124 1515 b 122 1482 124 1492 124 1488 b 92 1404 118 1453 102 1428 b 59 1293 78 1372 59 1332 b 105 1172 59 1234 81 1198 b 124 1120 118 1155 124 1143 l 122 1113 b 122 1110 122 1113 122 1112 b 92 1032 118 1081 102 1057 b 59 922 78 1001 59 960 b 115 792 59 855 86 816 b 124 760 121 782 124 773 b 122 744 124 756 124 750 b 92 667 118 716 102 693 b 59 556 78 635 59 595 b 108 433 59 495 82 458 b 124 389 117 420 124 408 b 122 374 124 384 124 379 b 92 298 118 346 102 323 l 89 292 b 59 186 75 261 59 222 b 163 19 59 73 140 42 b 177 10 168 13 173 10 b 189 29 184 10 189 19 b 184 48 189 35 187 42 b 167 114 174 69 167 85 b 230 305 167 179 229 193 b 181 423 230 357 209 396 b 167 484 173 442 167 458 b 230 675 167 547 229 563 b 179 796 230 729 206 769 b 167 850 171 812 167 827 b 230 1040 167 913 229 929 b 183 1158 230 1092 209 1130 b 167 1220 173 1178 167 1194 b 230 1411 167 1284 229 1300 b 186 1526 230 1462 210 1499 b 167 1594 176 1529 167 1584 b 230 1786 167 1659 229 1673 b 219 1848 230 1809 226 1829 z',\n        },\n        arpeggiatoDown: {\n            xMin: 1,\n            xMax: 229,\n            yMin: -4,\n            yMax: 1500,\n            ha: 1504,\n            o: 'm 219 323 b 230 384 226 341 230 361 b 167 576 229 497 167 511 b 186 644 167 586 176 641 b 230 759 210 671 230 708 b 167 950 229 870 167 886 b 183 1012 167 976 173 992 b 230 1130 209 1040 230 1079 b 167 1320 229 1241 167 1257 b 179 1374 167 1344 171 1358 b 230 1495 206 1401 230 1441 b 167 1686 229 1607 167 1623 b 181 1747 167 1712 173 1728 b 230 1865 209 1774 230 1813 b 167 2056 229 1977 167 1992 b 184 2123 167 2085 174 2101 b 189 2141 187 2128 189 2136 b 177 2160 189 2151 184 2160 b 163 2151 173 2160 168 2157 b 59 1984 140 2128 59 2097 b 89 1878 59 1948 75 1909 l 92 1872 b 122 1796 102 1848 118 1824 b 124 1781 124 1791 124 1786 b 108 1737 124 1763 117 1750 b 59 1614 82 1712 59 1675 b 92 1503 59 1575 78 1535 b 122 1426 102 1477 118 1454 b 124 1410 124 1420 124 1414 b 115 1378 124 1397 121 1388 b 59 1248 86 1354 59 1315 b 92 1138 59 1210 78 1169 b 122 1060 102 1113 118 1089 b 122 1057 122 1058 122 1058 l 124 1050 b 105 998 124 1027 118 1015 b 59 877 81 972 59 936 b 92 766 59 838 78 798 b 122 688 102 742 118 717 b 124 674 124 683 124 678 b 102 624 124 655 115 639 l 99 619 b 96 615 99 619 98 616 b 59 503 76 590 59 556 b 89 397 59 468 75 429 l 92 392 b 121 323 101 370 115 348 l 1 323 l 164 -6 l 330 323 z',\n        },\n        repeat1Bar: {\n            xMin: 0,\n            xMax: 532,\n            yMin: -250,\n            yMax: 279,\n            ha: 529,\n            o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 675 -71 b 586 -161 626 -71 586 -111 b 675 -251 586 -210 626 -251 b 766 -161 726 -251 766 -210 b 675 -71 766 -111 726 -71 z',\n        },\n        repeat2Bars: {\n            xMin: 0,\n            xMax: 762,\n            yMin: -250,\n            yMax: 279,\n            ha: 529,\n            o: 'm 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1007 -71 b 917 -161 958 -71 917 -111 b 1007 -251 917 -210 958 -251 b 1097 -161 1057 -251 1097 -210 b 1007 -71 1097 -111 1057 -71 z',\n        },\n        repeat4Bars: {\n            xMin: 0,\n            xMax: 1232,\n            yMin: -250,\n            yMax: 279,\n            ha: 529,\n            o: 'm 1767 380 b 1774 395 1771 386 1774 390 b 1765 402 1774 399 1771 402 l 1613 402 b 1587 380 1604 402 1597 393 l 1012 -340 b 1008 -350 1009 -343 1008 -347 b 1020 -360 1008 -356 1012 -360 l 1162 -360 b 1192 -340 1175 -360 1185 -348 z m 1436 380 b 1443 395 1440 386 1443 390 b 1434 402 1443 399 1440 402 l 1282 402 b 1256 380 1273 402 1266 393 l 681 -340 b 677 -350 678 -343 677 -347 b 688 -360 677 -356 681 -360 l 831 -360 b 861 -340 844 -360 854 -348 z m 1090 380 b 1097 395 1094 386 1097 390 b 1089 402 1097 399 1094 402 l 936 402 b 910 380 927 402 920 393 l 336 -340 b 331 -350 333 -343 331 -347 b 343 -360 331 -356 336 -360 l 485 -360 b 516 -340 498 -360 508 -348 z m 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z m 89 288 b 0 197 40 288 0 248 b 89 108 0 148 40 108 b 180 197 140 108 180 148 b 89 288 180 248 140 288 z m 1683 -71 b 1594 -161 1634 -71 1594 -111 b 1683 -251 1594 -210 1634 -251 b 1774 -161 1734 -251 1774 -210 b 1683 -71 1774 -111 1734 -71 z',\n        },\n        repeatBarSlash: {\n            xMin: 0,\n            xMax: 532,\n            yMin: -250,\n            yMax: 279,\n            ha: 529,\n            o: 'm 759 380 b 766 395 763 386 766 390 b 757 402 766 399 763 402 l 605 402 b 579 380 596 402 589 393 l 4 -340 b 0 -350 1 -343 0 -347 b 12 -360 0 -356 4 -360 l 154 -360 b 184 -340 167 -360 177 -348 z',\n        },\n        csymDiminished: {\n            xMin: 0,\n            xMax: 473,\n            yMin: 0,\n            yMax: 473,\n            ha: 473,\n            o: 'm 341 681 b 0 341 153 681 0 530 b 341 0 0 153 153 0 b 681 341 530 0 681 153 b 341 681 681 530 530 681 z m 341 618 b 618 341 495 618 618 495 b 341 63 618 189 494 63 b 63 341 187 63 63 187 b 341 618 63 494 189 618 z',\n        },\n        csymHalfDiminished: {\n            xMin: -16,\n            xMax: 488,\n            yMin: -15,\n            yMax: 489,\n            ha: 504,\n            o: 'm 703 660 l 658 704 l 557 603 b 340 681 498 652 422 681 b -1 341 151 681 -1 530 b 78 124 -1 259 29 183 l -23 23 l 22 -22 l 122 79 b 340 0 181 30 258 0 b 680 341 528 0 680 153 b 602 559 680 423 651 500 z m 62 341 b 340 618 62 494 187 618 b 513 559 403 618 464 598 l 122 168 b 62 341 84 217 62 278 z m 616 341 b 340 63 616 189 492 63 b 167 124 276 63 216 85 l 557 514 b 616 341 596 465 616 405 z',\n        },\n        csymAugmented: {\n            xMin: 0,\n            xMax: 395,\n            yMin: 1,\n            yMax: 396,\n            ha: 395,\n            o: 'm 569 318 l 317 318 l 317 570 l 253 570 l 253 318 l 0 318 l 0 255 l 253 255 l 253 1 l 317 1 l 317 255 l 569 255 z',\n        },\n        csymMajorSeventh: {\n            xMin: 0,\n            xMax: 558,\n            yMin: 1,\n            yMax: 477,\n            ha: 476,\n            o: 'm 402 687 l 0 1 l 804 1 z m 402 562 l 693 65 l 111 65 z',\n        },\n        csymMinor: {\n            xMin: 0,\n            xMax: 325,\n            yMin: 216,\n            yMax: 260,\n            ha: 44,\n            o: 'm 468 374 l 0 374 l 0 311 l 468 311 z',\n        },\n        csymParensLeftTall: {\n            xMin: 1,\n            xMax: 185,\n            yMin: 0,\n            yMax: 997,\n            ha: 997,\n            o: 'm 266 48 b 261 65 266 55 264 62 b 92 719 157 212 92 400 b 262 1371 92 1037 154 1228 b 266 1394 266 1378 266 1394 l 266 1424 b 264 1436 266 1431 266 1436 b 259 1434 262 1436 259 1434 b 1 719 84 1261 1 1011 b 259 1 1 429 79 177 b 264 0 261 0 262 0 b 266 9 265 0 266 6 z',\n        },\n        csymParensRightTall: {\n            xMin: -20,\n            xMax: 164,\n            yMin: 0,\n            yMax: 997,\n            ha: 997,\n            o: 'm -29 9 b -26 0 -29 6 -27 0 b -22 1 -24 0 -23 0 b 236 719 158 177 236 429 b -22 1434 236 1011 154 1261 b -26 1436 -22 1434 -24 1436 b -29 1424 -29 1436 -29 1431 l -29 1394 b -24 1371 -29 1394 -29 1378 b 145 719 84 1228 145 1037 b -23 65 145 400 81 212 b -29 48 -26 62 -29 55 z',\n        },\n        csymBracketLeftTall: {\n            xMin: 0,\n            xMax: 155,\n            yMin: 0,\n            yMax: 1000,\n            ha: 1000,\n            o: 'm 217 0 b 223 9 220 0 223 4 l 223 37 b 217 46 223 42 220 46 l 92 46 l 92 1394 l 217 1394 b 223 1403 220 1394 223 1398 l 223 1431 b 217 1440 223 1436 220 1440 l 6 1440 b 0 1436 3 1440 0 1439 l 0 4 b 6 0 0 1 3 0 z',\n        },\n        csymBracketRightTall: {\n            xMin: 1,\n            xMax: 156,\n            yMin: 0,\n            yMax: 1000,\n            ha: 1000,\n            o: 'm 219 0 b 225 4 222 0 225 1 l 225 1436 b 219 1440 225 1439 222 1440 l 7 1440 b 1 1431 4 1440 1 1436 l 1 1403 b 7 1394 1 1398 4 1394 l 132 1394 l 132 46 l 7 46 b 1 37 4 46 1 42 l 1 9 b 7 0 1 4 4 0 z',\n        },\n        csymParensLeftVeryTall: {\n            xMin: 0,\n            xMax: 122,\n            yMin: 0,\n            yMax: 993,\n            ha: 993,\n            o: 'm 176 32 b 171 49 176 39 174 46 b 60 716 104 194 60 399 b 173 1382 60 1032 101 1241 b 176 1405 176 1390 176 1405 l 176 1427 b 173 1430 176 1428 174 1430 b 0 716 40 1297 0 978 b 170 3 0 428 50 179 b 171 0 170 1 170 0 b 176 6 173 0 176 4 z',\n        },\n        csymParensRightVeryTall: {\n            xMin: -15,\n            xMax: 107,\n            yMin: 0,\n            yMax: 993,\n            ha: 993,\n            o: 'm -22 6 b -17 0 -22 4 -19 0 b -16 3 -16 0 -16 1 b 154 716 104 179 154 428 b -19 1430 154 978 114 1297 b -22 1427 -20 1430 -22 1428 l -22 1405 b -19 1382 -22 1405 -22 1390 b 94 716 53 1241 94 1032 b -17 49 94 399 50 194 b -22 32 -20 46 -22 39 z',\n        },\n        csymDiagonalArrangementSlash: {\n            xMin: 0,\n            xMax: 999,\n            yMin: 0,\n            yMax: 1000,\n            ha: 1000,\n            o: 'm 1439 1380 l 1377 1440 l 0 60 l 62 0 z',\n        },\n        accSagittal5v7KleismaUp: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -35 b 135 -112 68 -86 99 -112 b 225 68 194 -112 225 -53 l 180 68 b 144 -4 180 20 168 -4 b 122 0 138 -4 131 -3 b 23 248 86 14 52 96 l 0 248 z',\n        },\n        accSagittal5v7KleismaDown: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 122 0 52 -96 86 -14 b 144 4 131 3 138 4 b 180 -68 168 4 180 -20 l 225 -68 b 135 112 225 53 194 112 b 45 35 99 112 68 86 l 45 517 l 0 517 z',\n        },\n        accSagittal5CommaUp: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 225 -517 l 225 248 l 203 248 l 0 -112 l 0 -284 l 180 33 l 180 -517 z',\n        },\n        accSagittal5CommaDown: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 180 517 l 180 -33 l 0 284 l 0 112 l 203 -248 l 225 -248 l 225 517 z',\n        },\n        accSagittal7CommaUp: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 248 l 0 -517 l 45 -517 l 45 112 l 89 112 b 180 -68 150 112 180 53 l 180 -248 l 225 -248 l 225 68 b 135 248 225 187 194 248 z',\n        },\n        accSagittal7CommaDown: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 135 -248 b 225 -68 194 -248 225 -187 l 225 248 l 180 248 l 180 68 b 89 -112 180 -53 150 -112 l 45 -112 l 45 517 l 0 517 l 0 -248 z',\n        },\n        accSagittal25SmallDiesisUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -157 l 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 68 l 0 -33 l 315 135 l 315 10 z',\n        },\n        accSagittal25SmallDiesisDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 315 -10 l 315 -135 l 0 33 l 0 -68 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 l 0 157 z',\n        },\n        accSagittal35MediumDiesisUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 l 0 -112 z',\n        },\n        accSagittal35MediumDiesisDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 203 -248 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittal11MediumDiesisUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 l 0 -89 l 0 -248 z',\n        },\n        accSagittal11MediumDiesisDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 89 l 248 -248 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 z',\n        },\n        accSagittal11LargeDiesisUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 112 l 315 112 b 449 -68 405 112 449 53 l 449 -248 l 495 -248 l 495 68 b 360 248 495 187 449 248 l 135 248 b 0 68 45 248 0 187 z',\n        },\n        accSagittal11LargeDiesisDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 360 -248 b 495 -68 449 -248 495 -187 l 495 248 l 449 248 l 449 68 b 315 -112 449 -53 405 -112 l 271 -112 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal35LargeDiesisUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 271 -58 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal35LargeDiesisDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 l 540 112 l 540 274 l 269 -58 l 269 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp25SDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 112 -112 0 -53 36 -112 l 135 -112 l 135 -517 l 180 -517 l 180 -89 b 248 26 206 -65 229 -27 b 315 -89 264 -27 287 -65 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 122 0 216 96 176 14 b 94 -4 112 -3 102 -4 b 45 68 60 -4 45 20 z',\n        },\n        accSagittalFlat25SUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 94 4 45 -20 60 4 b 122 0 102 4 112 3 b 248 -248 176 -14 216 -96 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 248 -26 287 65 264 27 b 180 89 229 27 206 65 l 180 517 l 135 517 l 135 112 l 112 112 b 0 -68 36 112 0 53 z',\n        },\n        accSagittalSharp7CDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 112 l 89 112 b 180 104 124 112 154 109 l 180 -517 l 225 -517 l 225 89 b 315 -68 285 60 315 9 l 315 -248 l 360 -248 l 360 68 b 135 248 360 187 285 248 l 0 248 z',\n        },\n        accSagittalFlat7CUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 135 -248 b 360 -68 285 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -89 315 -9 285 -60 l 225 517 l 180 517 l 180 -104 b 89 -112 154 -109 124 -112 l 45 -112 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5CDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -517 l 45 71 l 180 -56 l 180 -517 l 225 -517 l 225 -98 l 405 -268 l 405 -112 l 23 248 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat5CUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 517 l 0 -248 l 23 -248 l 405 112 l 405 268 l 225 98 l 225 517 l 180 517 l 180 56 l 45 -71 l 45 517 z',\n        },\n        accSagittalSharp5v7kDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -276 l 135 -82 l 135 -517 l 180 -517 l 180 -17 l 271 112 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 z',\n        },\n        accSagittalFlat5v7kUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 248 -248 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 l 180 17 l 180 517 l 135 517 l 135 82 l 0 276 l 0 112 z',\n        },\n        accSagittalSharp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 180 -53 l 180 -517 l 225 -517 l 225 0 l 292 85 l 360 0 l 360 -517 l 405 -517 l 405 -53 l 585 -274 l 585 -112 l 292 248 l 0 -112 l 0 -274 z',\n        },\n        accSagittalFlat: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 l 585 112 l 585 274 l 405 53 l 405 517 l 360 517 l 360 0 l 292 -85 l 225 0 l 225 517 l 180 517 l 180 53 z',\n        },\n        accSagittalSharp5v7kUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -361,\n            yMax: 172,\n            ha: 533,\n            o: 'm 45 -517 l 45 -10 b 135 -92 68 -48 98 -75 l 135 -520 l 180 -520 l 180 -108 b 248 -115 203 -112 225 -115 b 271 -112 256 -115 264 -115 l 271 -517 l 315 -517 l 315 -107 b 449 68 405 -89 449 -30 l 405 68 b 297 -4 405 19 369 -4 b 23 248 131 -4 56 85 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat5v7kDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 361,\n            ha: 533,\n            o: 'm 0 517 l 0 -248 l 23 -248 b 297 4 56 -85 131 4 b 405 -68 369 4 405 -19 l 449 -68 b 315 107 449 30 405 89 l 315 517 l 271 517 l 271 112 b 248 115 264 115 256 115 b 180 108 225 115 203 112 l 180 520 l 135 520 l 135 92 b 45 10 98 75 68 48 l 45 517 z',\n        },\n        accSagittalSharp5CUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 -112 z',\n        },\n        accSagittalFlat5CDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 z',\n        },\n        accSagittalSharp7CUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 112 l 135 112 l 135 -517 l 180 -517 l 180 108 b 271 89 213 105 243 99 l 271 -517 l 315 -517 l 315 73 b 405 -68 374 45 405 -3 l 405 -248 l 449 -248 l 449 68 b 135 248 449 187 346 248 l 0 248 z',\n        },\n        accSagittalFlat7CDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 135 -248 b 449 -68 346 -248 449 -187 l 449 248 l 405 248 l 405 68 b 315 -73 405 3 374 -45 l 315 517 l 271 517 l 271 -89 b 180 -108 243 -99 213 -105 l 180 517 l 135 517 l 135 -112 l 45 -112 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp25SUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -30 l 495 143 l 495 14 l 0 -157 l 0 -255 l 225 -177 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 l 0 68 z',\n        },\n        accSagittalFlat25SDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 l 517 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 177 l 0 255 l 0 157 l 495 -14 l 495 -143 l 0 30 z',\n        },\n        accSagittalSharp35MUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -274 l 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 z',\n        },\n        accSagittalFlat35MDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 l 0 274 l 0 112 z',\n        },\n        accSagittalSharp11MUp: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 z',\n        },\n        accSagittalFlat11MDown: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 337 -248 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 l 0 112 z',\n        },\n        accSagittalSharp11LUp: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 104 b 631 -68 585 82 631 26 l 631 -248 l 675 -248 l 675 68 b 449 248 675 187 600 248 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat11LDown: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 449 -248 b 675 -68 600 -248 675 -187 l 675 248 l 631 248 l 631 68 b 495 -104 631 -26 585 -82 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp35LUp: {\n            xMin: 0,\n            xMax: 500,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 71 l 452 -17 l 452 -517 l 495 -517 l 495 -56 l 720 -268 l 720 -112 l 337 248 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat35LDown: {\n            xMin: 0,\n            xMax: 500,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 l 720 112 l 720 268 l 495 56 l 495 517 l 452 517 l 452 17 l 360 -71 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalDoubleSharp25SDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 135 -112 0 -53 45 -112 b 243 -62 180 -112 215 -95 l 89 -503 l 143 -517 l 292 -82 l 445 -517 l 495 -503 l 343 -62 b 449 -112 372 -95 408 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 z',\n        },\n        accSagittalDoubleFlat25SUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 343 62 408 112 372 95 l 495 503 l 445 517 l 292 82 l 143 517 l 89 503 l 243 62 b 135 112 215 95 180 112 b 0 -68 45 112 0 53 z',\n        },\n        accSagittalDoubleSharp7CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -503 l 52 -517 l 203 -82 l 354 -517 l 405 -503 l 230 0 l 271 108 b 495 -68 420 92 495 35 l 495 -248 l 540 -248 l 540 68 b 225 248 540 187 435 248 l 89 248 l 89 112 l 135 112 l 174 0 z m 213 112 l 203 82 l 192 112 z',\n        },\n        accSagittalDoubleFlat7CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 174 0 l 135 -112 l 89 -112 l 89 -248 l 225 -248 b 540 -68 435 -248 540 -187 l 540 248 l 495 248 l 495 68 b 271 -108 495 -35 420 -92 l 230 0 l 405 503 l 354 517 l 203 82 l 52 517 l 0 503 z m 192 -112 l 203 -82 l 213 -112 z',\n        },\n        accSagittalDoubleSharp5CDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 405 -503 l 230 0 l 232 4 l 585 -264 l 585 -112 l 112 248 l 89 248 l 89 112 l 151 68 l 174 0 l 0 -503 l 52 -517 l 203 -82 l 354 -517 z',\n        },\n        accSagittalDoubleFlat5CUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 354 517 l 203 82 l 52 517 l 0 503 l 174 0 l 151 -68 l 89 -112 l 89 -248 l 112 -248 l 585 112 l 585 264 l 232 -4 l 230 0 l 405 503 z',\n        },\n        accSagittalDoubleSharp5v7kDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -274 l 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 l 0 -112 z',\n        },\n        accSagittalDoubleFlat5v7kUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 292 -248 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 l 0 274 z',\n        },\n        accSagittalDoubleSharp: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 540 -503 l 366 0 l 380 45 l 675 -271 l 675 -112 l 337 248 l 0 -112 l 0 -271 l 295 45 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 z',\n        },\n        accSagittalDoubleFlat: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 295 -45 l 0 271 l 0 112 l 337 -248 l 675 112 l 675 271 l 380 -45 l 366 0 l 540 503 z',\n        },\n        accSagittal7v11KleismaUp: {\n            xMin: 0,\n            xMax: 219,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -45 b 248 -112 200 -89 225 -112 b 315 68 292 -112 315 -53 l 271 68 b 248 -4 271 20 264 -4 b 236 0 245 -4 240 -3 b 157 248 213 14 187 96 b 78 0 127 96 101 14 b 65 -4 73 -3 68 -4 b 45 68 50 -4 45 20 l 0 68 b 68 -112 0 -53 23 -112 z',\n        },\n        accSagittal7v11KleismaDown: {\n            xMin: 0,\n            xMax: 219,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 68 112 b 0 -68 23 112 0 53 l 45 -68 b 65 4 45 -20 50 4 b 78 0 68 4 73 3 b 157 -248 101 -14 127 -96 b 236 0 187 -96 213 -14 b 248 4 240 3 245 4 b 271 -68 264 4 271 -20 l 315 -68 b 248 112 315 53 292 112 b 180 45 225 112 200 89 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n        },\n        accSagittal17CommaUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 -40 b 315 -118 248 -92 279 -118 b 405 62 374 -118 405 -59 l 360 62 b 324 -10 360 14 348 -10 b 302 -6 318 -10 311 -9 b 206 217 268 9 235 84 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal17CommaDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 206 -217 b 302 6 235 -84 268 -9 b 324 10 311 9 318 10 b 360 -62 348 10 360 -14 l 405 -62 b 315 118 405 59 374 118 b 225 40 279 118 248 92 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal55CommaUp: {\n            xMin: 0,\n            xMax: 219,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 248 l 0 -517 l 45 -517 l 45 58 l 315 -274 l 315 -112 l 23 248 z',\n        },\n        accSagittal55CommaDown: {\n            xMin: 0,\n            xMax: 219,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 23 -248 l 315 112 l 315 274 l 45 -58 l 45 517 l 0 517 l 0 -248 z',\n        },\n        accSagittal7v11CommaUp: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 248 l 135 248 b 0 68 45 248 0 187 z',\n        },\n        accSagittal7v11CommaDown: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 135 -248 0 -187 45 -248 l 271 -248 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittal5v11SmallDiesisUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 73 l 0 -248 l 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -40 b 360 -118 295 -92 325 -118 b 449 62 420 -118 449 -59 l 405 62 b 369 -10 405 14 393 -10 b 348 -6 363 -10 356 -9 b 251 217 312 9 279 84 l 248 248 l 135 248 b 0 73 45 248 0 189 z',\n        },\n        accSagittal5v11SmallDiesisDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -73 b 135 -248 0 -189 45 -248 l 248 -248 l 251 -217 b 348 6 279 -84 312 -9 b 369 10 356 9 363 10 b 405 -62 393 10 405 -14 l 449 -62 b 360 118 449 59 420 118 b 271 40 325 118 295 92 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp5v11SDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 242 37 203 -23 225 -3 b 315 -89 262 -23 285 -63 l 315 -517 l 360 -517 l 360 -112 l 383 -112 b 495 68 458 -112 495 -53 l 449 68 b 399 -4 449 20 433 -4 b 248 248 297 -4 261 171 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat5v11SUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 b 399 4 261 -171 297 4 b 449 -68 433 4 449 -20 l 495 -68 b 383 112 495 53 458 112 l 360 112 l 360 517 l 315 517 l 315 89 b 242 -37 285 63 262 23 b 180 23 225 3 203 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp7v11CDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 89 -112 l 89 -517 l 135 -517 l 135 -95 b 206 37 163 -73 187 -30 b 271 -23 225 -3 248 -23 l 271 -517 l 315 -517 l 315 -23 l 383 -23 b 449 -203 428 -23 449 -84 l 495 -203 b 405 68 495 -23 465 68 l 292 68 b 203 248 258 68 228 127 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 l 0 68 b 89 -112 0 -52 30 -112 z',\n        },\n        accSagittalFlat7v11CUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 89 112 b 0 -68 30 112 0 52 l 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 b 292 -68 228 -127 258 -68 l 405 -68 b 495 203 465 -68 495 23 l 449 203 b 383 23 449 84 428 23 l 315 23 l 315 517 l 271 517 l 271 23 b 206 -37 248 23 225 3 b 135 95 187 30 163 73 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp55CDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 l 0 -112 z',\n        },\n        accSagittalFlat55CUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 337 -248 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 z',\n        },\n        accSagittalSharp17CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -89 292 13 321 -55 l 360 -517 l 405 -517 l 405 -112 l 428 -112 b 540 68 504 -112 540 -53 l 495 68 b 445 -4 495 20 480 -4 b 292 248 343 -4 307 171 l 180 248 b 0 68 60 248 0 187 l 0 -248 z',\n        },\n        accSagittalFlat17CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 445 4 307 -171 343 4 b 495 -68 480 4 495 -20 l 540 -68 b 428 112 540 53 504 112 l 405 112 l 405 517 l 360 517 l 360 89 b 271 -112 321 55 292 -13 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 z',\n        },\n        accSagittalSharp7v11kDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -32 l 405 138 l 405 13 l 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 l 0 68 z',\n        },\n        accSagittalFlat7v11kUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 l 428 -248 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 l 405 -13 l 405 -138 l 0 32 z',\n        },\n        accSagittalSharp7v11kUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 135 -112 l 135 -517 l 180 -517 l 180 -105 b 271 -23 217 -94 248 -65 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 315 148 b 112 -4 274 148 236 -4 b 45 68 68 -4 45 20 l 0 68 b 135 -112 0 -53 45 -112 z',\n        },\n        accSagittalFlat7v11kDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 135 112 b 0 -68 45 112 0 53 l 45 -68 b 112 4 45 -20 68 4 b 292 -248 236 4 274 -148 b 475 4 315 -148 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 23 b 180 105 248 65 217 94 l 180 517 l 135 517 z',\n        },\n        accSagittalSharp17CUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 -23 b 405 -105 337 -65 369 -94 l 405 -517 l 449 -517 l 449 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat17CDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 l 449 517 l 405 517 l 405 105 b 315 23 369 94 337 65 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp55CUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -517 l 45 78 l 135 10 l 135 -517 l 180 -517 l 180 -23 l 271 -92 l 271 -517 l 315 -517 l 315 -127 l 495 -264 l 495 -112 l 23 248 l 0 248 l 0 -517 z',\n        },\n        accSagittalFlat55CDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 517 l 0 -248 l 23 -248 l 495 112 l 495 264 l 315 127 l 315 517 l 271 517 l 271 92 l 180 23 l 180 517 l 135 517 l 135 -10 l 45 -78 l 45 517 z',\n        },\n        accSagittalSharp7v11CUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 86 45 6 89 58 l 180 -517 l 225 -517 l 225 98 b 315 109 252 104 282 108 l 315 -517 l 360 -517 l 360 112 l 449 112 l 449 -517 l 495 -517 l 495 248 l 360 248 b 0 68 121 248 0 189 z',\n        },\n        accSagittalFlat7v11CDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 360 -248 0 -189 121 -248 l 495 -248 l 495 517 l 449 517 l 449 -112 l 360 -112 l 360 517 l 315 517 l 315 -109 b 225 -98 282 -108 252 -104 l 225 517 l 180 517 l 180 -86 b 45 68 89 -58 45 -6 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp5v11SUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 -23 b 449 -105 383 -65 415 -94 l 449 -517 l 495 -517 l 495 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 z',\n        },\n        accSagittalFlat5v11SDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 l 495 517 l 449 517 l 449 105 b 360 23 415 94 383 65 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalDoubleSharp5v11SDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 341 -60 b 449 -112 370 -95 405 -112 b 585 68 540 -112 585 -53 l 540 68 b 475 -4 540 20 517 -4 b 292 248 350 -4 312 150 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat5v11SUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 b 475 4 312 -150 350 4 b 540 -68 517 4 540 -20 l 585 -68 b 449 112 585 53 540 112 b 341 60 405 112 370 95 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp7v11CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 112 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -503 l 275 0 l 278 4 b 337 -23 295 -13 315 -23 l 405 -23 b 495 -203 465 -23 495 -84 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 127 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 112 -112 0 -52 36 -112 z',\n        },\n        accSagittalDoubleFlat7v11CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 112 112 b 0 -68 36 112 0 52 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -127 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 84 465 23 l 337 23 b 278 -4 315 23 295 13 l 275 0 l 449 503 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 z',\n        },\n        accSagittalDoubleSharp55CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 428 248 l 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 z',\n        },\n        accSagittalDoubleFlat55CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 l 428 -248 z',\n        },\n        accSagittalDoubleSharp17CDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 387 -62 b 495 -112 416 -95 452 -112 b 631 68 585 -112 631 -53 l 585 68 b 520 -4 585 20 563 -4 b 337 248 396 -4 360 150 l 225 248 b 0 68 76 248 0 187 l 0 -248 z',\n        },\n        accSagittalDoubleFlat17CUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 225 -248 0 -187 76 -248 l 337 -248 b 520 4 360 -150 396 4 b 585 -68 563 4 585 -20 l 631 -68 b 495 112 631 53 585 112 b 387 62 452 112 416 95 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 z',\n        },\n        accSagittalDoubleSharp7v11kDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -30 l 366 96 l 399 0 l 392 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 276 -517 l 428 -82 l 579 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 z m 416 115 l 442 124 l 428 82 z',\n        },\n        accSagittalDoubleFlat7v11kUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 517 -248 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 579 517 l 428 82 l 276 517 l 225 503 l 353 135 l 0 255 l 0 157 l 392 23 l 399 0 l 366 -96 l 0 30 l 0 -68 z m 428 -82 l 442 -124 l 416 -115 z',\n        },\n        accSagittal23CommaUp: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -4 b 68 -23 53 -17 60 -23 l 180 -23 b 225 -203 210 -23 225 -82 l 271 -203 b 206 68 271 -23 248 68 l 89 68 b 23 248 71 68 48 127 l 0 248 z',\n        },\n        accSagittal23CommaDown: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 89 -68 48 -127 71 -68 l 206 -68 b 271 203 248 -68 271 23 l 225 203 b 180 23 225 82 210 23 l 68 23 b 45 4 60 23 53 17 l 45 517 l 0 517 z',\n        },\n        accSagittal5v19CommaUp: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 248 l 203 248 b 86 112 151 157 112 112 b 45 157 59 112 45 127 l 0 157 b 76 23 0 72 26 27 l 0 -112 z',\n        },\n        accSagittal5v19CommaDown: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 76 -23 b 0 -157 26 -27 0 -72 l 45 -157 b 86 -112 45 -127 59 -112 b 203 -248 112 -112 151 -157 l 225 -248 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittal5v23SmallDiesisUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -284 l 180 33 l 180 -517 l 225 -517 l 225 -4 b 248 -23 233 -17 240 -23 l 360 -23 b 405 -203 390 -23 405 -82 l 449 -203 b 386 68 449 -23 428 68 l 271 68 b 203 248 251 68 228 127 l 0 -112 z',\n        },\n        accSagittal5v23SmallDiesisDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 203 -248 b 271 -68 228 -127 251 -68 l 386 -68 b 449 203 428 -68 449 23 l 405 203 b 360 23 405 82 390 23 l 248 23 b 225 4 240 23 233 17 l 225 517 l 180 517 l 180 -33 l 0 284 z',\n        },\n        accSagittalSharp5v23SDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 6 b 89 -23 59 -13 73 -23 l 180 -23 l 180 -517 l 225 -517 l 225 -23 l 292 -23 b 360 -203 337 -23 360 -84 l 405 -203 b 315 68 405 -23 374 68 l 112 68 b 23 248 78 68 48 127 l 0 248 z',\n        },\n        accSagittalFlat5v23SUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 112 -68 48 -127 78 -68 l 315 -68 b 405 203 374 -68 405 23 l 360 203 b 292 23 360 84 337 23 l 225 23 l 225 517 l 180 517 l 180 23 l 89 23 b 45 -6 73 23 59 13 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v19CDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 89 -112 0 -52 30 -112 l 89 -517 l 135 -517 l 135 -95 b 225 112 173 -65 203 4 l 271 112 l 271 -517 l 315 -517 l 315 107 b 405 -68 374 89 405 30 l 405 -248 l 449 -248 l 449 68 b 315 248 449 189 405 248 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 23 z',\n        },\n        accSagittalFlat5v19CUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 81 3 45 -23 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 315 -248 b 449 -68 405 -248 449 -189 l 449 248 l 405 248 l 405 68 b 315 -107 405 -30 374 -89 l 315 517 l 271 517 l 271 -112 l 225 -112 b 135 95 203 -4 173 65 l 135 517 l 89 517 l 89 112 b 0 -68 30 112 0 52 z',\n        },\n        accSagittalSharp23CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 135 -82 l 135 -517 l 180 -517 l 180 -17 l 239 68 b 315 -23 261 7 287 -23 l 315 -517 l 360 -517 l 360 -23 l 428 -23 b 495 -203 472 -23 495 -84 l 540 -203 b 449 68 540 -23 510 68 l 337 68 b 248 248 302 68 271 127 l 0 -112 l 0 -276 z',\n        },\n        accSagittalFlat23CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 276 l 0 112 l 248 -248 b 337 -68 271 -127 302 -68 l 449 -68 b 540 203 510 -68 540 23 l 495 203 b 428 23 495 84 472 23 l 360 23 l 360 517 l 315 517 l 315 23 b 239 -68 287 23 261 -7 l 180 17 l 180 517 l 135 517 l 135 82 z',\n        },\n        accSagittalSharp23CUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 14 b 112 -23 63 -10 86 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 360 -23 b 449 -203 420 -23 449 -84 l 495 -203 b 383 68 495 -23 458 68 l 135 68 b 23 248 85 68 48 127 l 0 248 z',\n        },\n        accSagittalFlat23CDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 b 135 -68 48 -127 85 -68 l 383 -68 b 495 203 458 -68 495 23 l 449 203 b 360 23 449 84 420 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 -14 86 23 63 10 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v19CUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -266 l 135 -153 l 135 -517 l 180 -517 l 180 -115 l 271 -39 l 271 -517 l 315 -517 l 315 0 l 405 75 l 405 -517 l 449 -517 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n        },\n        accSagittalFlat5v19CDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 517 l 405 517 l 405 -75 l 315 0 l 315 517 l 271 517 l 271 39 l 180 115 l 180 517 l 135 517 l 135 153 l 0 266 l 0 112 z',\n        },\n        accSagittalSharp5v23SUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 135 -108 l 135 -517 l 180 -517 l 180 -53 l 271 58 l 271 -517 l 315 -517 l 315 14 b 383 -23 334 -10 357 -23 l 405 -23 l 405 -517 l 449 -517 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n        },\n        accSagittalFlat5v23SDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 449 517 l 405 517 l 405 23 l 383 23 b 315 -14 357 23 334 10 l 315 517 l 271 517 l 271 -58 l 180 53 l 180 517 l 135 517 l 135 108 z',\n        },\n        accSagittalDoubleSharp5v23SDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 52 -517 l 203 -81 l 354 -517 l 405 -503 l 239 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 225 68 b 112 248 176 68 138 127 l 89 248 l 89 112 b 170 -14 109 45 135 0 l 0 -501 z',\n        },\n        accSagittalDoubleFlat5v23SUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 501 l 170 14 b 89 -112 135 0 109 -45 l 89 -248 l 112 -248 b 225 -68 138 -127 176 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 239 23 l 405 503 l 354 517 l 203 81 l 52 517 z',\n        },\n        accSagittalDoubleSharp5v19CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 112 -112 0 -52 36 -112 b 193 -73 143 -112 170 -99 l 45 -501 l 95 -517 l 248 -81 l 397 -517 l 449 -501 l 275 0 l 315 112 b 495 -68 435 112 495 53 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 z',\n        },\n        accSagittalDoubleFlat5v19CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 315 -112 495 -53 435 -112 l 275 0 l 449 501 l 397 517 l 248 81 l 95 517 l 45 501 l 193 73 b 112 112 170 99 143 112 b 0 -68 36 112 0 52 z',\n        },\n        accSagittalDoubleSharp23CDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 252 35 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 323 4 b 383 -23 340 -13 360 -23 l 449 -23 b 540 -203 510 -23 540 -84 l 585 -203 b 472 68 585 -23 547 68 l 405 68 b 292 248 356 68 318 127 l 0 -112 l 0 -274 z',\n        },\n        accSagittalDoubleFlat23CUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 274 l 0 112 l 292 -248 b 405 -68 318 -127 356 -68 l 472 -68 b 585 203 547 -68 585 23 l 540 203 b 449 23 540 84 510 23 l 383 23 b 323 -4 360 23 340 13 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 252 -35 z',\n        },\n        accSagittal19SchismaUp: {\n            xMin: 0,\n            xMax: 125,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 68 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 l 0 68 b 68 -112 0 -52 23 -112 z',\n        },\n        accSagittal19SchismaDown: {\n            xMin: 0,\n            xMax: 125,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 68 112 b 0 -68 23 112 0 52 l 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 180 -248 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 z',\n        },\n        accSagittal17KleismaUp: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal17KleismaDown: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal143CommaUp: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 248 l 203 248 b 135 68 177 127 154 68 l 105 68 b 45 157 65 68 45 98 l 0 157 b 23 20 0 95 7 50 b 0 -203 7 -23 0 -98 z',\n        },\n        accSagittal143CommaDown: {\n            xMin: 0,\n            xMax: 156,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 23 -20 0 98 7 23 b 0 -157 7 -50 0 -95 l 45 -157 b 105 -68 45 -98 65 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 225 -248 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal11v49CommaUp: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -292 b 89 -157 45 -203 60 -157 l 203 -157 b 225 -143 210 -157 217 -153 l 225 -517 l 271 -517 l 271 248 l 248 248 b 180 157 233 187 210 157 l 68 157 b 0 -68 23 157 0 82 l 45 -68 b 89 68 45 23 60 68 l 203 68 b 225 84 209 68 216 72 l 225 -36 b 180 -68 213 -58 199 -68 l 68 -68 b 0 -292 23 -68 0 -143 z',\n        },\n        accSagittal11v49CommaDown: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 292 b 68 68 0 143 23 68 l 180 68 b 225 36 199 68 213 58 l 225 -84 b 203 -68 216 -72 209 -68 l 89 -68 b 45 68 60 -68 45 -23 l 0 68 b 68 -157 0 -82 23 -157 l 180 -157 b 248 -248 210 -157 233 -187 l 271 -248 l 271 517 l 225 517 l 225 143 b 203 157 217 153 210 157 l 89 157 b 45 292 60 157 45 203 z',\n        },\n        accSagittal19CommaUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 -4 b 203 -23 187 -17 196 -23 l 315 -23 b 360 -203 346 -23 360 -82 l 405 -203 b 341 68 405 -23 383 68 l 225 68 b 157 248 206 68 183 127 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n        },\n        accSagittal19CommaDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 b 225 -68 183 -127 206 -68 l 341 -68 b 405 203 383 -68 405 23 l 360 203 b 315 23 360 82 346 23 l 203 23 b 180 4 196 23 187 17 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n        },\n        accSagittal7v19CommaUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 68 -112 0 -52 23 -112 b 135 -45 89 -112 112 -89 l 135 -517 l 180 -517 l 180 112 l 225 112 b 315 -68 285 112 315 53 l 315 -248 l 360 -248 l 360 68 b 271 248 360 187 330 248 l 157 248 b 79 0 127 98 101 16 b 68 -3 73 0 68 -3 b 45 68 52 -3 45 20 z',\n        },\n        accSagittal7v19CommaDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 68 3 45 -20 52 3 b 79 0 68 3 73 0 b 157 -248 101 -16 127 -98 l 271 -248 b 360 -68 330 -248 360 -187 l 360 248 l 315 248 l 315 68 b 225 -112 315 -53 285 -112 l 180 -112 l 180 517 l 135 517 l 135 45 b 68 112 112 89 89 112 b 0 -68 23 112 0 52 z',\n        },\n        accSagittal49SmallDiesisUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -68 330 112 360 53 l 360 -248 l 405 -248 l 405 68 b 315 248 405 187 374 248 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal49SmallDiesisDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 315 -248 b 405 -68 374 -248 405 -187 l 405 248 l 360 248 l 360 68 b 271 -112 360 -53 330 -112 l 225 -112 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal23SmallDiesisUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 89 -23 45 -82 60 -23 l 157 -23 b 180 -4 164 -23 173 -17 l 180 -517 l 225 -517 l 225 58 l 495 -274 l 495 -112 l 203 248 b 135 68 177 127 154 68 l 68 68 b 0 -203 23 68 0 -23 z',\n        },\n        accSagittal23SmallDiesisDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -68 0 23 23 -68 l 135 -68 b 203 -248 154 -68 177 -127 l 495 112 l 495 274 l 225 -58 l 225 517 l 180 517 l 180 4 b 157 23 173 17 164 23 l 89 23 b 45 203 60 23 45 82 z',\n        },\n        accSagittal5v13MediumDiesisUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -259 l 315 -89 l 315 -517 l 360 -517 l 360 248 l 337 248 b 128 180 253 203 184 180 b 45 248 73 180 45 203 l 0 248 b 52 95 0 170 17 120 l 0 68 l 0 -33 l 315 135 l 315 10 l 0 -157 z',\n        },\n        accSagittal5v13MediumDiesisDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 157 l 315 -10 l 315 -135 l 0 33 l 0 -68 l 52 -95 b 0 -248 17 -120 0 -170 l 45 -248 b 128 -180 45 -203 73 -180 b 337 -248 184 -180 253 -203 l 360 -248 l 360 517 l 315 517 l 315 89 l 0 259 z',\n        },\n        accSagittal11v19MediumDiesisUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -248 l 45 -68 b 180 112 45 53 89 112 l 225 112 l 225 -517 l 271 -517 l 271 -4 b 292 -23 278 -17 285 -23 l 405 -23 b 449 -203 435 -23 449 -82 l 495 -203 b 431 68 495 -23 472 68 l 315 68 b 248 248 295 68 271 127 l 135 248 b 0 68 45 248 0 187 l 0 -248 z',\n        },\n        accSagittal11v19MediumDiesisDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 248 l 0 -68 b 135 -248 0 -187 45 -248 l 248 -248 b 315 -68 271 -127 295 -68 l 431 -68 b 495 203 472 -68 495 23 l 449 203 b 405 23 449 82 435 23 l 292 23 b 271 4 285 23 278 17 l 271 517 l 225 517 l 225 -112 l 180 -112 b 45 68 89 -112 45 -53 l 45 248 z',\n        },\n        accSagittal49MediumDiesisUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -68 l 0 -248 l 45 -248 l 315 -94 l 315 -517 l 360 -517 l 360 248 l 225 248 b 0 -68 75 248 0 143 z m 45 -68 b 225 112 45 53 105 112 l 315 112 l 315 10 l 45 -145 z',\n        },\n        accSagittal49MediumDiesisDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 68 b 225 -248 0 -143 75 -248 l 360 -248 l 360 517 l 315 517 l 315 94 l 45 248 l 0 248 z m 45 145 l 315 -10 l 315 -112 l 225 -112 b 45 68 105 -112 45 -53 z',\n        },\n        accSagittal5v49MediumDiesisUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -89 l 0 -248 l 225 53 l 225 -517 l 271 -517 l 271 53 l 495 -248 l 495 -89 l 248 248 b 89 89 170 143 118 89 b 45 157 60 89 45 112 l 0 157 b 68 3 0 68 23 16 z',\n        },\n        accSagittal5v49MediumDiesisDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 68 -3 b 0 -157 23 -16 0 -68 l 45 -157 b 89 -89 45 -112 60 -89 b 248 -248 118 -89 170 -143 l 495 89 l 495 248 l 271 -53 l 271 517 l 225 517 l 225 -53 l 0 248 l 0 89 z',\n        },\n        accSagittal49LargeDiesisUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -89 l 360 -248 l 405 -248 l 405 -68 b 180 248 405 143 330 248 l 0 248 z m 45 12 l 45 112 l 180 112 b 360 -68 300 112 360 53 l 360 -147 z',\n        },\n        accSagittal49LargeDiesisDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 180 -248 b 405 68 330 -248 405 -143 l 405 248 l 360 248 l 45 89 l 45 517 l 0 517 z m 360 147 l 360 68 b 180 -112 360 -53 300 -112 l 45 -112 l 45 -12 z',\n        },\n        accSagittal11v19LargeDiesisUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -86 l 449 -256 l 449 -157 l 45 13 l 45 138 l 449 -30 l 449 68 l 23 248 l 0 248 z',\n        },\n        accSagittal11v19LargeDiesisDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 l 449 -68 l 449 30 l 45 -138 l 45 -13 l 449 157 l 449 256 l 45 86 l 45 517 l 0 517 z',\n        },\n        accSagittal5v13LargeDiesisUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 b 89 -112 0 -52 30 -112 b 180 -35 125 -112 157 -86 l 180 -517 l 225 -517 l 225 -86 l 631 -256 l 631 -157 l 225 13 l 225 138 l 631 -30 l 631 68 l 203 248 b 101 0 173 98 138 16 b 81 -3 94 0 86 -3 b 45 68 56 -3 45 20 z',\n        },\n        accSagittal5v13LargeDiesisDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -68 b 81 3 45 -20 56 3 b 101 0 86 3 94 0 b 203 -248 138 -16 173 -98 l 631 -68 l 631 30 l 225 -138 l 225 -13 l 631 157 l 631 256 l 225 86 l 225 517 l 180 517 l 180 35 b 89 112 157 86 125 112 b 0 -68 30 112 0 52 z',\n        },\n        accSagittalSharp23SDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 b 315 6 287 -23 301 -13 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 68 312 127 282 68 l 194 68 b 89 157 125 68 89 98 l 45 157 b 60 59 45 118 50 85 b 0 -203 20 30 0 -56 z',\n        },\n        accSagittalFlat23SUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 60 -59 0 56 20 -30 b 45 -157 50 -85 45 -118 l 89 -157 b 194 -68 89 -98 125 -68 l 248 -68 b 337 -248 282 -68 312 -127 l 360 -248 l 360 517 l 315 517 l 315 -6 b 271 23 301 13 287 23 l 180 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp49SDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 135 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 b 315 -135 285 -157 300 -150 l 315 -517 l 360 -517 l 360 248 l 337 248 b 248 157 323 187 292 157 l 89 157 b 0 -68 30 157 0 82 l 45 -68 b 112 68 45 23 68 68 l 271 68 b 315 89 284 68 300 75 l 315 -32 b 248 -68 298 -56 275 -68 l 89 -68 b 0 -292 29 -68 0 -143 z',\n        },\n        accSagittalFlat49SUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 292 b 89 68 0 143 29 68 l 248 68 b 315 32 275 68 298 56 l 315 -89 b 271 -68 300 -75 284 -68 l 112 -68 b 45 68 68 -68 45 -23 l 0 68 b 89 -157 0 -82 30 -157 l 248 -157 b 337 -248 292 -157 323 -187 l 360 -248 l 360 517 l 315 517 l 315 135 b 271 157 300 150 285 157 l 180 157 l 180 517 l 135 517 l 135 157 l 112 157 b 45 292 68 157 45 203 z',\n        },\n        accSagittalSharp7v19CDown: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -271 l 135 -125 l 135 -517 l 180 -517 l 180 -78 l 315 65 l 315 -517 l 360 -517 l 360 248 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 89 -20 0 53 29 -6 z',\n        },\n        accSagittalFlat7v19CUp: {\n            xMin: 0,\n            xMax: 250,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 89 20 b 0 -157 29 6 0 -53 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 360 -248 l 360 517 l 315 517 l 315 -65 l 180 78 l 180 517 l 135 517 l 135 125 l 0 271 l 0 112 z',\n        },\n        accSagittalSharp19CDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 96 45 17 89 72 l 180 -517 l 225 -517 l 225 107 b 315 112 252 112 282 112 l 360 112 l 360 -517 l 405 -517 l 405 248 l 271 248 b 0 68 89 248 0 187 z',\n        },\n        accSagittalFlat19CUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 271 -248 0 -187 89 -248 l 405 -248 l 405 517 l 360 517 l 360 -112 l 315 -112 b 225 -107 282 -112 252 -112 l 225 517 l 180 517 l 180 -96 b 45 68 89 -72 45 -17 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp11v49CDown: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -82 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 271 112 215 -23 245 23 l 315 112 l 315 -517 l 360 -517 l 360 107 b 449 -68 420 89 449 30 l 449 -248 l 495 -248 l 495 68 b 360 248 495 189 449 248 l 248 248 b 157 68 222 128 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat11v49CUp: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -128 l 360 -248 b 495 -68 449 -248 495 -189 l 495 248 l 449 248 l 449 68 b 360 -107 449 -30 420 -89 l 360 517 l 315 517 l 315 -112 l 271 -112 b 180 23 245 -23 215 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 82 z',\n        },\n        accSagittalSharp143CDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 112 -23 45 -84 68 -23 l 135 -23 l 135 -517 l 180 -517 l 180 -23 b 259 76 210 -23 236 10 l 315 17 l 315 -517 l 360 -517 l 360 -30 l 585 -271 l 585 -112 l 248 248 b 157 68 222 127 192 68 l 89 68 b 0 -203 30 68 0 -23 z',\n        },\n        accSagittalFlat143CUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 89 -68 0 23 30 -68 l 157 -68 b 248 -248 192 -68 222 -127 l 585 112 l 585 271 l 360 30 l 360 517 l 315 517 l 315 -17 l 259 -76 b 180 23 236 -10 210 23 l 180 517 l 135 517 l 135 23 l 112 23 b 45 203 68 23 45 84 z',\n        },\n        accSagittalSharp17kDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -157 l 0 -256 l 225 -161 l 225 -517 l 271 -517 l 271 -144 l 405 -86 l 405 -517 l 449 -517 l 449 248 l 428 248 b 145 171 305 196 210 171 b 45 248 78 171 45 196 l 0 248 b 79 101 0 170 26 121 l 0 68 l 0 -32 l 405 138 l 405 13 z',\n        },\n        accSagittalFlat17kUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 405 -13 l 405 -138 l 0 32 l 0 -68 l 79 -101 b 0 -248 26 -121 0 -170 l 45 -248 b 145 -171 45 -196 78 -171 b 428 -248 210 -171 305 -196 l 449 -248 l 449 517 l 405 517 l 405 86 l 271 144 l 271 517 l 225 517 l 225 161 l 0 256 l 0 157 z',\n        },\n        accSagittalSharp19sDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 180 109 45 36 89 95 l 180 -517 l 225 -517 l 225 112 l 271 112 b 360 -23 295 23 325 -23 l 360 -517 l 405 -517 l 405 -23 l 472 -23 b 540 -203 517 -23 540 -84 l 585 -203 b 495 68 585 -23 554 68 l 383 68 b 292 248 348 68 318 127 l 180 248 b 0 68 60 248 0 187 z',\n        },\n        accSagittalFlat19sUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 180 -248 0 -187 60 -248 l 292 -248 b 383 -68 318 -127 348 -68 l 495 -68 b 585 203 554 -68 585 23 l 540 203 b 472 23 540 84 517 23 l 405 23 l 405 517 l 360 517 l 360 23 b 271 -112 325 23 295 -23 l 225 -112 l 225 517 l 180 517 l 180 -109 b 45 68 89 -95 45 -36 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp19sUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 89 -96 l 89 -517 l 135 -517 l 135 -108 b 180 -112 148 -112 163 -112 b 225 -108 196 -112 210 -112 l 225 -517 l 271 -517 l 271 -94 b 360 -12 305 -78 337 -50 l 360 -517 l 405 -517 l 405 248 l 383 248 b 190 0 353 98 288 16 b 138 -3 171 0 153 -3 b 45 68 75 -3 45 20 l 0 68 b 89 -96 0 -17 30 -72 z',\n        },\n        accSagittalFlat19sDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 89 96 b 0 -68 30 72 0 17 l 45 -68 b 138 3 45 -20 75 3 b 190 0 153 3 171 0 b 383 -248 288 -16 353 -98 l 405 -248 l 405 517 l 360 517 l 360 12 b 271 94 337 50 305 78 l 271 517 l 225 517 l 225 108 b 180 112 210 112 196 112 b 135 108 163 112 148 112 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp17kUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat17kDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp143CUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 271 -23 l 271 -517 l 315 -517 l 315 -23 l 337 -23 b 405 14 363 -23 386 -10 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n        },\n        accSagittalFlat143CDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 517 l 405 517 l 405 -14 b 337 23 386 10 363 23 l 315 23 l 315 517 l 271 517 l 271 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp11v49CUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -68 b 135 68 45 23 76 68 l 337 68 b 405 95 363 68 386 76 l 405 -27 b 315 -68 386 -55 356 -68 l 112 -68 b 0 -292 37 -68 0 -143 l 45 -292 b 135 -157 45 -203 75 -157 l 135 -517 l 180 -517 l 180 -157 l 271 -157 l 271 -517 l 315 -517 l 315 -157 l 337 -157 b 405 -130 360 -157 383 -148 l 405 -517 l 449 -517 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 37 157 0 82 z',\n        },\n        accSagittalFlat11v49CDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 68 b 112 -157 0 -82 37 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 517 l 405 517 l 405 130 b 337 157 383 148 360 157 l 315 157 l 315 517 l 271 517 l 271 157 l 180 157 l 180 517 l 135 517 l 135 157 b 45 292 75 157 45 203 l 0 292 b 112 68 0 143 37 68 l 315 68 b 405 27 356 68 386 55 l 405 -95 b 337 -68 386 -76 363 -68 l 135 -68 b 45 68 76 -68 45 -23 z',\n        },\n        accSagittalSharp19CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 14 b 337 -23 289 -10 311 -23 l 360 -23 l 360 -517 l 405 -517 l 405 -23 b 495 -203 465 -23 495 -82 l 540 -203 b 428 68 540 -23 503 68 l 360 68 b 248 248 310 68 271 128 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat19CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 b 360 -68 271 -128 310 -68 l 428 -68 b 540 203 503 -68 540 23 l 495 203 b 405 23 495 82 465 23 l 405 517 l 360 517 l 360 23 l 337 23 b 271 -14 311 23 289 10 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp7v19CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 112 l 315 112 b 360 109 331 112 346 112 l 360 -517 l 405 -517 l 405 98 b 495 -68 465 73 495 19 l 495 -248 l 540 -248 l 540 68 b 360 248 540 189 480 248 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat7v19CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 360 -248 b 540 -68 480 -248 540 -189 l 540 248 l 495 248 l 495 68 b 405 -98 495 -19 465 -73 l 405 517 l 360 517 l 360 -109 b 315 -112 346 -112 331 -112 l 271 -112 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalSharp49SUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 112 l 360 112 b 405 109 376 112 390 112 l 405 -517 l 449 -517 l 449 96 b 540 -68 510 72 540 17 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat49SDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 449 -96 540 -17 510 -72 l 449 517 l 405 517 l 405 -109 b 360 -112 390 -112 376 -112 l 315 -112 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp23SUp: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 135 -517 l 180 -517 l 180 -23 l 203 -23 b 271 14 229 -23 251 -10 l 271 -517 l 315 -517 l 315 71 l 405 -14 l 405 -517 l 449 -517 l 449 -56 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalFlat23SDown: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 449 56 l 449 517 l 405 517 l 405 14 l 315 -71 l 315 517 l 271 517 l 271 -14 b 203 23 251 10 229 23 l 180 23 l 180 517 l 135 517 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalSharp5v13MUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 495 141 l 495 14 l 0 -157 l 0 -256 l 225 -180 l 225 -517 l 271 -517 l 271 -161 l 360 -130 l 360 -517 l 405 -517 l 405 -115 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 l 0 248 b 95 99 0 170 30 120 l 0 68 l 0 -30 z',\n        },\n        accSagittalFlat5v13MDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 30 l 0 -68 l 95 -99 b 0 -248 30 -120 0 -170 l 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 115 l 405 517 l 360 517 l 360 130 l 271 161 l 271 517 l 225 517 l 225 180 l 0 256 l 0 157 l 495 -14 l 495 -141 z',\n        },\n        accSagittalSharp11v19MUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 180 104 45 26 89 82 l 180 -517 l 225 -517 l 225 112 l 315 112 l 315 -517 l 360 -517 l 360 14 b 428 -23 379 -10 402 -23 l 449 -23 l 449 -517 l 495 -517 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalFlat11v19MDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 495 517 l 449 517 l 449 23 l 428 23 b 360 -14 402 23 379 10 l 360 517 l 315 517 l 315 -112 l 225 -112 l 225 517 l 180 517 l 180 -104 b 45 68 89 -82 45 -26 l 45 248 l 0 248 z',\n        },\n        accSagittalSharp49MUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 225 -180 l 225 -517 l 271 -517 l 271 -166 l 360 -132 l 360 -517 l 405 -517 l 405 -117 l 495 -84 l 495 -517 l 540 -517 l 540 248 l 360 248 b 0 -68 120 248 0 143 z m 45 -145 l 45 -68 b 360 112 45 53 150 112 l 495 112 l 495 14 z',\n        },\n        accSagittalFlat49MDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 68 b 360 -248 0 -143 120 -248 l 540 -248 l 540 517 l 495 517 l 495 84 l 405 117 l 405 517 l 360 517 l 360 132 l 271 166 l 271 517 l 225 517 l 225 180 l 45 248 l 0 248 z m 495 -14 l 495 -112 l 360 -112 b 45 68 150 -112 45 -53 l 45 145 z',\n        },\n        accSagittalSharp5v49MUp: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -271 l 180 -79 l 180 -517 l 225 -517 l 225 -30 l 315 65 l 315 -517 l 360 -517 l 360 65 l 449 -30 l 449 -517 l 495 -517 l 495 -79 l 675 -271 l 675 -112 l 337 248 b 118 89 239 143 166 89 b 45 157 68 89 45 112 l 0 157 b 107 0 0 62 36 10 l 0 -112 z',\n        },\n        accSagittalFlat5v49MDown: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 112 l 107 0 b 0 -157 36 -10 0 -62 l 45 -157 b 118 -89 45 -112 68 -89 b 337 -248 166 -89 239 -143 l 675 112 l 675 271 l 495 79 l 495 517 l 449 517 l 449 30 l 360 -65 l 360 517 l 315 517 l 315 -65 l 225 30 l 225 517 l 180 517 l 180 79 l 0 271 z',\n        },\n        accSagittalSharp49LUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -82 l 135 -112 l 135 -517 l 180 -517 l 180 -127 l 271 -157 l 271 -517 l 315 -517 l 315 -173 l 540 -248 l 585 -248 l 585 -68 b 180 248 585 143 449 248 l 0 248 z m 45 112 l 180 112 b 540 -68 420 112 540 53 l 540 -145 l 45 16 z',\n        },\n        accSagittalFlat49LDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 180 -248 b 585 68 449 -248 585 -143 l 585 248 l 540 248 l 315 173 l 315 517 l 271 517 l 271 157 l 180 127 l 180 517 l 135 517 l 135 112 l 45 82 l 45 517 l 0 517 z m 45 -16 l 540 145 l 540 68 b 180 -112 540 -53 420 -112 l 45 -112 z',\n        },\n        accSagittalSharp11v19LUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -517 l 45 -517 l 45 -81 l 135 -108 l 135 -517 l 180 -517 l 180 -121 l 271 -148 l 271 -517 l 315 -517 l 315 -161 l 631 -255 l 631 -157 l 45 16 l 45 144 l 631 -30 l 631 68 l 23 248 l 0 248 z',\n        },\n        accSagittalFlat11v19LDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -248 l 23 -248 l 631 -68 l 631 30 l 45 -144 l 45 -16 l 631 157 l 631 255 l 315 161 l 315 517 l 271 517 l 271 148 l 180 121 l 180 517 l 135 517 l 135 108 l 45 81 l 45 517 l 0 517 z',\n        },\n        accSagittalSharp5v13LUp: {\n            xMin: 0,\n            xMax: 500,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 89 -109 l 89 -517 l 135 -517 l 135 -109 b 225 -27 170 -102 200 -75 l 225 -517 l 271 -517 l 271 -85 l 360 -120 l 360 -517 l 405 -517 l 405 -135 l 720 -256 l 720 -157 l 271 14 l 271 141 l 720 -30 l 720 68 l 248 248 b 122 0 217 98 176 16 b 95 -3 112 0 104 -3 b 45 68 60 -3 45 20 l 0 68 b 89 -109 0 -39 30 -98 z',\n        },\n        accSagittalFlat5v13LDown: {\n            xMin: 0,\n            xMax: 500,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 89 109 b 0 -68 30 98 0 39 l 45 -68 b 95 3 45 -20 60 3 b 122 0 104 3 112 0 b 248 -248 176 -16 217 -98 l 720 -68 l 720 30 l 271 -141 l 271 -14 l 720 157 l 720 256 l 405 135 l 405 517 l 360 517 l 360 120 l 271 85 l 271 517 l 225 517 l 225 27 b 135 109 200 75 170 102 l 135 517 l 89 517 z',\n        },\n        accSagittalDoubleSharp23SDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -203 l 45 -203 b 135 -23 45 -82 76 -23 l 301 -23 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 370 -14 b 449 112 423 10 449 53 l 449 248 l 428 248 b 315 68 402 127 364 68 l 240 68 b 89 157 140 68 89 98 l 45 157 b 68 53 45 115 52 81 b 0 -203 23 23 0 -63 z',\n        },\n        accSagittalDoubleFlat23SUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 68 -53 0 63 23 -23 b 45 -157 52 -81 45 -115 l 89 -157 b 240 -68 89 -98 140 -68 l 315 -68 b 428 -248 364 -68 402 -127 l 449 -248 l 449 -112 b 370 14 449 -53 423 -10 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 301 23 l 135 23 b 45 203 76 23 45 82 z',\n        },\n        accSagittalDoubleSharp49SDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -292 l 45 -292 b 112 -157 45 -203 68 -157 l 256 -157 l 135 -503 l 187 -517 l 337 -82 l 490 -517 l 540 -503 l 366 0 l 396 89 b 449 157 416 102 435 125 l 449 248 l 428 248 b 315 157 413 187 376 157 l 112 157 b 0 -68 39 157 0 82 l 45 -68 b 135 68 45 23 76 68 l 287 68 l 311 0 l 288 -68 l 89 -68 b 0 -292 32 -68 0 -144 z',\n        },\n        accSagittalDoubleFlat49SUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 292 b 89 68 0 144 32 68 l 288 68 l 311 0 l 287 -68 l 135 -68 b 45 68 76 -68 45 -23 l 0 68 b 112 -157 0 -82 39 -157 l 315 -157 b 428 -248 376 -157 413 -187 l 449 -248 l 449 -157 b 396 -89 435 -125 416 -102 l 366 0 l 540 503 l 490 517 l 337 82 l 187 517 l 135 503 l 256 157 l 112 157 b 45 292 68 157 45 203 z',\n        },\n        accSagittalDoubleSharp7v19CDown: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -112 l 0 -266 l 307 -7 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 386 59 l 449 112 l 449 248 l 428 248 b 130 68 285 127 186 68 b 45 157 73 68 45 98 l 0 157 b 112 -20 0 53 37 -6 z',\n        },\n        accSagittalDoubleFlat7v19CUp: {\n            xMin: 0,\n            xMax: 375,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 112 20 b 0 -157 37 6 0 -53 l 45 -157 b 130 -68 45 -98 73 -68 b 428 -248 186 -68 285 -127 l 449 -248 l 449 -112 l 386 -59 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 307 7 l 0 266 l 0 112 z',\n        },\n        accSagittalDoubleSharp19CDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 68 l 0 -248 l 45 -248 l 45 -68 b 315 109 45 36 135 95 l 354 0 l 180 -503 l 232 -517 l 383 -82 l 534 -517 l 585 -503 l 410 0 l 449 112 l 495 112 l 495 248 l 360 248 b 0 68 120 248 0 187 z m 372 112 l 393 112 l 383 82 z',\n        },\n        accSagittalDoubleFlat19CUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 360 -248 0 -187 120 -248 l 495 -248 l 495 -112 l 449 -112 l 410 0 l 585 503 l 534 517 l 383 82 l 232 517 l 180 503 l 354 0 l 315 -109 b 45 68 135 -95 45 -36 l 45 248 l 0 248 z m 383 -82 l 393 -112 l 372 -112 z',\n        },\n        accSagittalDoubleSharp11v49CDown: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 360 112 b 540 -68 480 112 540 53 l 540 -248 l 585 -248 l 585 68 b 405 248 585 187 526 248 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat11v49CUp: {\n            xMin: 0,\n            xMax: 406,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 405 -248 b 585 -68 526 -248 585 -187 l 585 248 l 540 248 l 540 68 b 360 -112 540 -53 480 -112 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp143CDown: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 45 -203 b 135 -23 45 -84 75 -23 l 203 -23 b 262 4 225 -23 245 -13 l 265 0 l 89 -503 l 141 -517 l 292 -82 l 444 -517 l 495 -503 l 321 0 l 337 49 l 675 -268 l 675 -112 l 292 248 b 180 68 268 127 230 68 l 112 68 b 0 -203 37 68 0 -23 z',\n        },\n        accSagittalDoubleFlat143CUp: {\n            xMin: 0,\n            xMax: 469,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 203 b 112 -68 0 23 37 -68 l 180 -68 b 292 -248 230 -68 268 -127 l 675 112 l 675 268 l 337 -49 l 321 0 l 495 503 l 444 517 l 292 82 l 141 517 l 89 503 l 265 0 l 262 -4 b 203 23 245 13 225 23 l 135 23 b 45 203 75 23 45 84 z',\n        },\n        accSagittalDoubleSharp17kDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 248 b 95 101 0 170 30 121 l 0 68 l 0 -30 l 364 96 l 399 0 l 390 -23 l 0 -157 l 0 -255 l 353 -135 l 225 -503 l 275 -517 l 428 -82 l 577 -517 l 631 -503 l 455 0 l 507 145 l 540 157 l 540 248 l 517 248 b 167 168 366 194 248 168 b 45 248 85 168 45 194 z m 416 115 l 442 124 l 428 82 z',\n        },\n        accSagittalDoubleFlat17kUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 45 -248 b 167 -168 45 -194 85 -168 b 517 -248 248 -168 366 -194 l 540 -248 l 540 -157 l 507 -145 l 455 0 l 631 503 l 577 517 l 428 82 l 275 517 l 225 503 l 353 135 l 0 255 l 0 157 l 390 23 l 399 0 l 364 -96 l 0 30 l 0 -68 l 95 -101 b 0 -248 30 -121 0 -170 z m 428 -82 l 442 -124 l 416 -115 z',\n        },\n        accSagittalDoubleSharp19sDown: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 -248 l 45 -248 l 45 -68 b 271 112 45 53 120 112 l 310 0 l 135 -503 l 186 -517 l 337 -82 l 488 -517 l 540 -503 l 366 0 l 367 4 b 428 -23 386 -13 405 -23 l 495 -23 b 585 -203 554 -23 585 -84 l 631 -203 b 517 68 631 -23 593 68 l 449 68 b 337 248 400 68 363 127 l 225 248 b 0 68 75 248 0 187 z',\n        },\n        accSagittalDoubleFlat19sUp: {\n            xMin: 0,\n            xMax: 438,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 0 -68 b 225 -248 0 -187 75 -248 l 337 -248 b 449 -68 363 -127 400 -68 l 517 -68 b 631 203 593 -68 631 23 l 585 203 b 495 23 585 84 554 23 l 428 23 b 367 -4 405 23 386 13 l 366 0 l 540 503 l 488 517 l 337 82 l 186 517 l 135 503 l 310 0 l 271 -112 b 45 68 120 -112 45 -53 l 45 248 l 0 248 z',\n        },\n        accSagittalShaftUp: {\n            xMin: 0,\n            xMax: 31,\n            yMin: -359,\n            yMax: 172,\n            ha: 531,\n            o: 'm 0 112 l 0 -517 l 45 -517 l 45 112 l 23 248 z',\n        },\n        accSagittalShaftDown: {\n            xMin: 0,\n            xMax: 31,\n            yMin: -172,\n            yMax: 359,\n            ha: 531,\n            o: 'm 23 -248 l 45 -112 l 45 517 l 0 517 l 0 -112 z',\n        },\n        accSagittalAcute: {\n            xMin: 0,\n            xMax: 125,\n            yMin: -62,\n            yMax: 125,\n            ha: 187,\n            o: 'm 0 0 l 0 -89 l 180 89 l 180 180 z',\n        },\n        accSagittalGrave: {\n            xMin: 0,\n            xMax: 125,\n            yMin: -125,\n            yMax: 62,\n            ha: 187,\n            o: 'm 180 -180 l 180 -89 l 0 89 l 0 0 z',\n        },\n        accSagittal1MinaUp: {\n            xMin: -7,\n            xMax: 124,\n            yMin: 16,\n            yMax: 106,\n            ha: 90,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal1MinaDown: {\n            xMin: -7,\n            xMax: 124,\n            yMin: -106,\n            yMax: -16,\n            ha: 90,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal2MinasUp: {\n            xMin: -7,\n            xMax: 218,\n            yMin: 16,\n            yMax: 106,\n            ha: 90,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal2MinasDown: {\n            xMin: -7,\n            xMax: 218,\n            yMin: -106,\n            yMax: -16,\n            ha: 90,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal1TinaUp: {\n            xMin: 0,\n            xMax: 93,\n            yMin: 16,\n            yMax: 107,\n            ha: 91,\n            o: 'm 134 154 l 91 154 b 81 76 91 101 91 86 b 0 68 73 69 48 68 l 0 23 b 134 154 122 23 134 36 z',\n        },\n        accSagittal1TinaDown: {\n            xMin: 0,\n            xMax: 93,\n            yMin: -107,\n            yMax: -16,\n            ha: 91,\n            o: 'm 134 -154 b 0 -23 134 -36 122 -23 l 0 -68 b 81 -76 48 -68 73 -69 b 91 -154 91 -86 91 -101 z',\n        },\n        accSagittal2TinasUp: {\n            xMin: 0,\n            xMax: 94,\n            yMin: 16,\n            yMax: 107,\n            ha: 91,\n            o: 'm 135 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal2TinasDown: {\n            xMin: 0,\n            xMax: 94,\n            yMin: -107,\n            yMax: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 z',\n        },\n        accSagittal3TinasUp: {\n            xMin: -7,\n            xMax: 124,\n            yMin: 16,\n            yMax: 106,\n            ha: 90,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 134 150 179 112 163 135 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal3TinasDown: {\n            xMin: -7,\n            xMax: 124,\n            yMin: -106,\n            yMax: -16,\n            ha: 90,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 179 -23 163 -135 179 -112 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal4TinasUp: {\n            xMin: 0,\n            xMax: 187,\n            yMin: 16,\n            yMax: 107,\n            ha: 91,\n            o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 225 150 269 112 253 135 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n        },\n        accSagittal4TinasDown: {\n            xMin: 0,\n            xMax: 187,\n            yMin: -107,\n            yMax: -16,\n            ha: 91,\n            o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 269 -23 253 -135 269 -112 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n        },\n        accSagittal5TinasUp: {\n            xMin: 0,\n            xMax: 218,\n            yMin: 16,\n            yMax: 107,\n            ha: 91,\n            o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 269 150 314 112 298 135 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal5TinasDown: {\n            xMin: 0,\n            xMax: 218,\n            yMin: -107,\n            yMax: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n        },\n        accSagittal6TinasUp: {\n            xMin: -7,\n            xMax: 218,\n            yMin: 16,\n            yMax: 106,\n            ha: 90,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 269 150 314 112 298 135 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal6TinasDown: {\n            xMin: -7,\n            xMax: 218,\n            yMin: -106,\n            yMax: -16,\n            ha: 90,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 314 -23 298 -135 314 -112 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittal7TinasUp: {\n            xMin: 0,\n            xMax: 281,\n            yMin: 16,\n            yMax: 107,\n            ha: 91,\n            o: 'm 0 68 l 0 23 b 143 45 105 23 124 26 b 203 107 153 55 183 107 b 226 23 216 107 226 86 l 269 23 b 298 65 269 23 291 55 b 343 107 314 86 331 107 b 361 23 354 107 363 86 l 405 23 b 360 150 405 112 389 135 b 294 130 343 158 311 150 b 264 92 281 115 272 104 b 225 150 258 127 245 140 b 160 132 207 158 181 153 b 115 81 138 112 124 88 b 0 68 104 71 94 68 z',\n        },\n        accSagittal7TinasDown: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -107,\n            yMax: -16,\n            ha: 91,\n            o: 'm 0 -68 b 115 -81 94 -68 104 -71 b 160 -132 124 -88 138 -112 b 225 -150 181 -153 207 -158 b 264 -92 245 -140 258 -127 b 294 -130 272 -104 281 -115 b 360 -150 311 -150 343 -158 b 405 -23 389 -135 405 -112 l 361 -23 b 343 -107 363 -86 354 -107 b 298 -65 331 -107 314 -86 b 269 -23 291 -55 269 -23 l 226 -23 b 203 -107 226 -86 216 -107 b 143 -45 183 -107 153 -55 b 0 -23 124 -26 105 -23 z',\n        },\n        accSagittal8TinasUp: {\n            xMin: 0,\n            xMax: 312,\n            yMin: 16,\n            yMax: 107,\n            ha: 91,\n            o: 'm 135 23 b 187 45 156 23 168 26 b 249 107 197 55 228 107 b 271 23 262 107 271 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 204 132 252 158 226 153 b 160 81 183 112 168 88 b 135 68 148 71 147 68 b 89 154 94 68 89 124 l 46 154 b 36 92 45 131 42 105 b 0 68 32 82 23 68 l 0 23 b 68 63 29 23 53 40 b 135 23 84 39 104 23 z',\n        },\n        accSagittal8TinasDown: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -107,\n            yMax: -16,\n            ha: 91,\n            o: 'm 135 -23 b 68 -63 104 -23 84 -39 b 0 -23 53 -40 29 -23 l 0 -68 b 36 -92 23 -68 32 -82 b 46 -154 42 -105 45 -131 l 89 -154 b 135 -68 89 -124 94 -68 b 160 -81 147 -68 148 -71 b 204 -132 168 -88 183 -112 b 269 -150 226 -153 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 249 -107 271 -86 262 -107 b 187 -45 228 -107 197 -55 b 135 -23 168 -26 156 -23 z',\n        },\n        accSagittal9TinasUp: {\n            xMin: -7,\n            xMax: 312,\n            yMin: 16,\n            yMax: 106,\n            ha: 90,\n            o: 'm -10 23 l 43 23 b 72 65 43 23 65 55 b 117 107 88 86 105 107 b 135 23 128 107 137 86 l 179 23 b 207 65 179 23 200 55 b 252 107 223 86 240 107 b 271 23 264 107 272 86 l 314 23 b 343 65 314 23 336 55 b 387 107 359 86 376 107 b 406 23 399 107 408 86 l 449 23 b 405 150 449 112 433 135 b 338 130 387 158 356 150 b 308 92 325 115 317 104 b 269 150 302 127 289 140 b 203 130 252 158 220 150 b 173 92 190 115 181 104 b 134 150 167 127 154 140 b 68 130 117 158 85 150 b -10 23 43 101 13 58 z',\n        },\n        accSagittal9TinasDown: {\n            xMin: -7,\n            xMax: 312,\n            yMin: -106,\n            yMax: -16,\n            ha: 90,\n            o: 'm -10 -23 b 68 -130 13 -58 43 -101 b 134 -150 85 -150 117 -158 b 173 -92 154 -140 167 -127 b 203 -130 181 -104 190 -115 b 269 -150 220 -150 252 -158 b 308 -92 289 -140 302 -127 b 338 -130 317 -104 325 -115 b 405 -150 356 -150 387 -158 b 449 -23 433 -135 449 -112 l 406 -23 b 387 -107 408 -86 399 -107 b 343 -65 376 -107 359 -86 b 314 -23 336 -55 314 -23 l 271 -23 b 252 -107 272 -86 264 -107 b 207 -65 240 -107 223 -86 b 179 -23 200 -55 179 -23 l 135 -23 b 117 -107 137 -86 128 -107 b 72 -65 105 -107 88 -86 b 43 -23 65 -55 43 -23 z',\n        },\n        accSagittalFractionalTinaUp: {\n            xMin: -3,\n            xMax: 35,\n            yMin: 73,\n            yMax: 111,\n            ha: 38,\n            o: 'm -4 132 b 23 105 -4 118 9 105 b 50 132 37 105 50 118 b 23 160 50 147 37 160 b -4 132 9 160 -4 147 z',\n        },\n        accSagittalFractionalTinaDown: {\n            xMin: -3,\n            xMax: 35,\n            yMin: -111,\n            yMax: -73,\n            ha: 38,\n            o: 'm -4 -132 b 23 -160 -4 -147 9 -160 b 50 -132 37 -160 50 -147 b 23 -105 50 -118 37 -105 b -4 -132 9 -105 -4 -118 z',\n        },\n        accidentalNarrowReversedFlat: {\n            xMin: 0,\n            xMax: 164,\n            yMin: -194,\n            yMax: 421,\n            ha: 615,\n            o: 'm 236 -279 l 236 606 l 192 606 l 192 179 b 85 243 150 222 114 243 b 0 84 23 243 0 134 b 112 -158 0 3 37 -78 z m 192 112 l 192 -163 l 135 -98 b 82 40 101 -50 82 -3 b 138 144 82 73 96 144 b 192 112 153 144 170 132 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            xMin: 0,\n            xMax: 414,\n            yMin: -194,\n            yMax: 421,\n            ha: 615,\n            o: 'm 281 606 l 281 -268 l 438 -158 b 596 84 547 -82 596 3 b 475 243 596 154 556 243 b 325 179 435 243 384 222 l 325 606 z m 235 -279 l 235 606 l 190 606 l 190 179 b 85 243 148 222 114 243 b 12 158 52 243 27 215 b 0 84 3 134 0 108 b 112 -158 0 3 37 -78 z m 325 111 b 410 144 359 132 386 144 b 498 36 462 144 498 84 b 413 -107 498 -9 469 -58 l 325 -173 z m 192 112 l 192 -163 l 135 -98 b 81 40 99 -50 81 -3 b 91 94 81 59 84 76 b 137 144 102 127 118 144 b 192 112 153 144 170 132 z',\n        },\n        accidentalWilsonPlus: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -203,\n            yMax: 203,\n            ha: 406,\n            o: 'm 405 268 l 225 98 l 225 292 l 180 292 l 180 56 l 0 -112 l 0 -268 l 180 -98 l 180 -292 l 225 -292 l 225 -56 l 405 112 z',\n        },\n        accidentalWilsonMinus: {\n            xMin: 0,\n            xMax: 281,\n            yMin: -186,\n            yMax: 186,\n            ha: 372,\n            o: 'm 0 112 l 405 -268 l 405 -112 l 0 268 z',\n        },\n    },\n    fontFamily: 'Bravura',\n    resolution: 1000,\n    generatedOn: '2022-12-18T09:06:51.407Z',\n};\n","export const CommonMetrics = {\n    smufl: true,\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by TimeSignature objects\n        shiftLine: -1,\n        // used by tuplets\n        shiftY: -6,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tuplet: {\n        noteHeadOffset: 20,\n        stemOffset: 10,\n        bottomLine: 4,\n        topModifierOffset: 15,\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.75,\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        textNote: {\n            breathMarkTick: {\n                shiftY: 9,\n            },\n            breathMarkComma: {},\n            segno: {\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -8,\n                shiftY: 8,\n            },\n            ornamentTurn: {},\n            ornamentTurnSlash: {},\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        chordSymbol: {\n            scale: 0.8,\n        },\n    },\n};\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        vexAccidentalMicrotonal1: {\n            xMin: -171.5,\n            xMax: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        vexAccidentalMicrotonal3: {\n            xMin: 0,\n            xMax: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            xMin: 0,\n            xMax: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            xMin: 0,\n            xMax: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            xMin: 0,\n            xMax: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n        vexWiggleArpeggioUp: {\n            xMin: 58.53125,\n            xMax: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n    },\n};\n","export const GonvilleSmuflFont = {\n    glyphs: {\n        bracketTop: {\n            xMin: 0,\n            xMax: 412,\n            yMin: -18,\n            yMax: 223,\n            ha: 241,\n            o: 'm 569 315 b 583 321 575 319 579 321 b 591 316 586 321 589 319 b 593 310 592 314 593 312 b 579 289 593 306 589 301 b 385 111 517 219 449 156 b 372 101 379 106 373 102 b 244 28 340 78 285 46 b 21 -26 168 -6 88 -26 b 2 -21 6 -26 5 -25 b 0 47 1 -19 0 14 b 2 114 0 79 1 112 b 29 120 5 119 6 119 b 569 315 209 124 395 191 z',\n        },\n        bracketBottom: {\n            xMin: 0,\n            xMax: 412,\n            yMin: -223,\n            yMax: 18,\n            ha: 241,\n            o: 'm 5 24 b 21 26 7 25 12 26 b 63 23 32 26 47 25 b 342 -81 155 13 249 -22 b 388 -113 353 -89 382 -108 b 400 -122 389 -114 395 -118 b 578 -289 459 -166 522 -225 b 593 -310 589 -301 593 -306 b 591 -316 593 -312 592 -314 b 583 -321 588 -319 586 -321 b 568 -315 579 -321 575 -319 b 29 -120 395 -191 209 -124 b 1 -114 5 -119 5 -119 b 0 -47 0 -112 0 -111 b 0 -22 0 -37 0 -29 b 5 24 0 25 0 21 z',\n        },\n        barlineTick: {\n            xMin: -59,\n            xMax: 59,\n            yMin: -139,\n            yMax: 139,\n            ha: 279,\n            o: 'm 24 200 b 34 201 26 200 30 201 b 51 198 40 201 47 200 b 84 152 72 191 84 174 b 84 149 84 151 84 150 b 68 103 84 139 83 137 b -64 -195 3 -44 -63 -194 b -74 -201 -66 -199 -70 -201 b -83 -195 -77 -201 -81 -199 b -84 -191 -84 -194 -84 -193 b -78 -155 -84 -186 -83 -177 b -25 104 -45 8 -35 53 b -11 167 -18 136 -12 164 b 24 200 -6 183 6 195 z',\n        },\n        breathMarkTick: {\n            xMin: -151,\n            xMax: 272,\n            yMin: 0,\n            yMax: 429,\n            ha: 429,\n            o: 'm 367 613 b 382 618 373 616 378 618 b 392 607 388 618 392 614 b 376 592 392 601 390 599 b 309 546 354 580 331 565 b 46 47 185 439 88 256 b 0 0 39 14 26 0 b -44 39 -23 0 -36 12 b -203 270 -68 118 -125 202 b -217 288 -213 279 -217 284 b -215 294 -217 290 -217 292 b -208 299 -213 297 -211 299 b -193 293 -204 299 -199 297 b -19 144 -124 249 -66 199 b -14 138 -16 141 -14 138 b -9 149 -14 138 -11 143 b 367 613 72 359 220 541 z',\n        },\n        segno: {\n            xMin: 7,\n            xMax: 493,\n            yMin: -50,\n            yMax: 650,\n            ha: 699,\n            o: 'm 218 934 b 237 935 224 935 231 935 b 394 820 306 935 371 889 b 398 794 397 811 398 802 b 333 730 398 758 372 730 b 269 777 302 730 280 746 b 183 851 254 823 219 851 b 158 846 175 851 166 849 b 120 786 133 835 120 815 b 122 766 120 780 121 773 b 347 511 138 672 227 570 b 368 500 356 506 366 501 l 371 499 l 372 501 b 485 672 373 502 404 550 b 560 786 506 704 540 755 b 617 873 581 818 607 857 b 645 910 639 906 640 907 b 660 915 650 914 655 915 b 687 888 674 915 687 904 b 687 886 687 887 687 887 b 665 844 687 878 687 878 b 610 761 655 830 631 792 b 462 537 551 672 501 595 b 425 480 443 508 426 482 l 422 476 l 431 472 b 628 269 521 423 591 352 b 658 136 649 225 658 179 b 518 -68 658 36 606 -48 b 484 -71 507 -70 495 -71 b 327 43 415 -71 351 -26 b 322 70 324 52 322 61 b 387 134 322 106 348 134 b 451 86 419 134 440 118 b 537 13 466 41 501 13 b 563 18 545 13 554 15 b 600 78 587 29 600 49 b 598 98 600 84 599 91 b 374 353 582 192 493 293 b 352 363 364 358 354 363 l 349 365 l 348 363 b 235 192 347 361 315 313 b 160 77 214 160 180 109 b 103 -9 139 46 113 7 b 75 -47 81 -42 80 -43 b 60 -51 70 -50 65 -51 b 33 -24 46 -51 33 -40 b 33 -22 33 -23 33 -23 b 55 19 33 -14 33 -14 b 259 329 84 63 162 181 b 297 386 279 360 296 385 l 298 388 l 290 392 b 92 594 200 441 130 512 b 62 728 71 639 62 685 b 218 934 62 834 121 922 z m 630 616 b 643 618 634 617 639 618 b 699 589 665 618 687 607 b 709 552 706 578 709 565 b 699 515 709 539 706 526 b 644 486 686 496 665 486 b 596 507 626 486 609 493 b 578 551 584 520 578 536 b 630 616 578 581 598 609 z m 62 376 b 75 378 67 377 71 378 b 124 357 93 378 112 370 b 142 312 136 344 142 328 b 131 275 142 299 138 286 b 76 246 118 256 97 246 b 28 267 59 246 41 253 b 11 311 16 280 11 296 b 62 376 11 341 30 369 z',\n        },\n        coda: {\n            xMin: 22,\n            xMax: 478,\n            yMin: -31,\n            yMax: 531,\n            ha: 563,\n            o: 'm 350 764 b 359 765 352 765 355 765 b 367 764 362 765 365 765 b 381 753 373 762 378 758 b 386 706 386 746 386 747 b 387 670 386 672 386 670 b 448 647 396 670 430 657 b 597 395 532 601 587 507 l 598 386 l 632 386 b 677 382 670 386 670 386 b 689 359 685 376 689 367 b 677 336 689 350 685 341 b 632 331 670 331 670 331 l 598 331 l 597 322 b 396 50 585 186 504 77 b 387 48 392 49 388 48 b 386 12 386 48 386 46 l 386 8 b 380 -36 386 -29 386 -28 b 359 -45 375 -42 367 -45 b 338 -36 351 -45 342 -42 b 331 8 331 -28 331 -29 l 331 12 b 330 48 331 46 331 48 b 269 70 321 48 288 60 b 120 322 186 117 130 210 l 119 331 l 86 331 b 43 336 50 331 50 331 b 31 359 35 341 31 350 b 50 385 31 370 38 381 b 86 386 53 386 60 386 l 119 386 l 120 395 b 269 647 130 508 186 601 b 330 670 288 657 321 670 b 331 706 331 670 331 672 b 332 746 331 736 332 744 b 350 764 335 754 342 762 z m 331 502 b 331 617 331 565 331 617 b 310 599 329 617 317 607 b 229 393 266 555 235 477 l 229 386 l 280 386 l 331 386 z m 393 613 b 386 617 390 615 387 617 b 386 502 386 617 386 565 l 386 386 l 437 386 l 488 386 l 488 393 b 393 613 482 486 443 575 z m 331 216 l 331 331 l 280 331 l 229 331 l 229 324 b 310 118 235 241 266 162 b 331 100 317 111 329 100 b 331 216 331 100 331 152 z m 488 324 l 488 331 l 437 331 l 386 331 l 386 216 b 386 100 386 152 386 100 b 408 118 388 100 400 111 b 488 324 452 162 482 241 z',\n        },\n        gClef: {\n            xMin: 0,\n            xMax: 623,\n            yMin: -632,\n            yMax: 1082,\n            ha: 1713,\n            o: 'm 521 1558 b 524 1558 522 1558 523 1558 b 579 1515 537 1558 556 1543 b 718 1118 662 1415 718 1254 b 717 1089 718 1108 718 1098 b 505 667 707 930 639 793 b 470 633 493 655 477 640 l 456 620 l 483 495 b 510 369 498 426 510 369 b 510 369 510 369 510 369 b 519 370 511 369 514 370 b 558 372 525 371 542 372 b 590 371 572 372 585 371 b 897 45 760 350 885 217 b 898 22 897 38 898 30 b 666 -316 898 -120 805 -256 b 657 -320 661 -318 657 -320 b 675 -403 657 -320 665 -357 b 695 -500 685 -448 694 -491 b 704 -596 701 -534 704 -566 b 642 -796 704 -677 683 -744 b 407 -909 582 -871 495 -909 b 176 -804 323 -909 238 -874 b 137 -704 150 -774 137 -739 b 168 -612 137 -672 147 -640 b 291 -550 198 -571 245 -550 b 405 -604 333 -550 376 -568 b 437 -694 427 -632 437 -663 b 305 -834 437 -764 384 -831 l 294 -835 l 298 -836 b 405 -861 330 -853 367 -861 b 539 -823 453 -861 501 -848 b 655 -596 617 -774 655 -699 b 644 -490 655 -564 651 -528 b 611 -336 640 -471 611 -336 b 611 -336 611 -336 611 -336 b 598 -339 610 -336 605 -337 b 536 -349 579 -343 558 -347 b 498 -350 529 -350 514 -350 b 449 -349 478 -350 457 -350 b 0 149 189 -320 0 -110 b 102 460 0 264 33 364 b 342 742 175 562 250 650 l 374 774 l 360 839 b 342 922 352 874 344 912 b 321 1024 329 983 323 1013 b 312 1124 315 1057 312 1091 b 477 1523 312 1275 371 1420 b 521 1558 501 1546 513 1556 z m 591 1349 b 574 1351 586 1350 580 1351 b 471 1297 542 1351 506 1332 b 376 1044 410 1236 376 1145 b 383 967 376 1019 378 993 b 415 814 385 956 414 814 b 415 814 415 814 415 814 b 460 860 416 814 450 848 b 644 1242 578 991 644 1132 b 639 1295 644 1261 643 1278 b 591 1349 632 1327 618 1342 z m 418 565 b 415 577 417 571 416 577 b 290 431 412 577 327 479 b 160 220 210 331 182 284 b 135 74 143 172 135 122 b 209 -162 135 -11 160 -94 b 495 -314 278 -259 385 -314 b 550 -310 514 -314 532 -313 b 602 -296 570 -306 602 -298 b 574 -164 602 -295 590 -236 b 522 81 559 -92 535 18 b 497 196 508 144 497 196 b 497 196 497 196 497 196 b 457 179 493 196 469 186 b 358 16 391 144 358 79 b 438 -128 358 -40 384 -95 b 455 -151 449 -135 455 -143 b 448 -165 455 -156 452 -160 b 434 -172 444 -169 440 -172 b 401 -159 427 -172 417 -168 b 256 82 305 -110 256 -15 b 386 322 256 172 299 264 b 462 358 408 337 453 358 b 462 359 462 358 462 358 b 462 360 462 359 462 359 b 418 565 462 362 422 547 z m 581 203 b 558 204 576 204 565 204 l 545 204 l 546 202 b 589 -1 546 201 565 109 b 634 -214 613 -112 633 -208 b 642 -251 636 -220 639 -237 l 648 -277 l 651 -275 b 776 -137 710 -241 752 -195 b 795 -42 789 -106 795 -73 b 581 203 795 78 707 188 z',\n        },\n        cClef: {\n            xMin: 0,\n            xMax: 643,\n            yMin: -508,\n            yMax: 508,\n            ha: 1016,\n            o: 'm 0 0 l 0 731 l 87 731 l 175 731 l 175 0 l 175 -731 l 87 -731 l 0 -731 z m 240 0 l 240 731 l 262 731 l 284 731 l 284 382 l 284 32 l 291 38 b 374 145 318 61 351 104 b 439 314 402 196 423 251 b 458 341 444 338 447 341 b 475 319 470 341 474 335 b 647 120 483 206 560 120 b 665 122 653 120 659 121 b 771 330 741 132 766 181 b 772 404 772 357 772 381 b 707 662 772 557 753 630 b 615 687 684 679 651 687 b 517 666 582 687 548 680 b 504 660 509 663 504 660 b 504 660 504 660 504 660 b 578 578 545 658 578 621 b 578 575 578 577 578 576 b 492 494 576 524 534 494 b 419 534 465 494 437 506 b 403 584 408 550 403 567 b 434 651 403 608 413 632 b 616 721 485 698 550 721 b 884 565 720 721 826 665 b 925 406 912 515 925 460 b 719 99 925 272 846 140 b 648 87 694 91 671 87 b 543 122 610 87 576 99 b 536 126 540 124 536 126 b 535 126 535 126 535 126 b 497 63 535 126 518 98 l 459 0 l 497 -63 b 535 -126 518 -98 535 -126 b 536 -126 535 -126 535 -126 b 543 -122 536 -126 540 -124 b 648 -87 575 -99 610 -87 b 677 -89 657 -87 667 -88 b 924 -382 811 -110 913 -230 b 925 -407 925 -391 925 -399 b 639 -720 925 -570 803 -706 b 615 -721 631 -720 623 -721 b 430 -647 545 -721 478 -694 b 403 -585 412 -629 403 -607 b 492 -494 403 -538 439 -494 b 497 -494 493 -494 495 -494 b 578 -578 545 -496 578 -536 b 564 -625 578 -594 574 -610 b 504 -660 551 -644 525 -659 b 504 -660 504 -660 504 -660 b 517 -666 504 -660 509 -663 b 615 -687 548 -680 582 -687 b 707 -662 651 -687 684 -679 b 772 -404 753 -630 772 -557 b 771 -330 772 -381 772 -357 b 665 -122 766 -181 741 -132 b 647 -120 659 -121 653 -120 b 475 -319 560 -120 483 -206 b 458 -341 474 -335 470 -341 b 439 -314 447 -341 444 -338 b 374 -145 423 -251 402 -196 b 291 -38 351 -104 317 -61 l 284 -32 l 284 -382 l 284 -731 l 262 -731 l 240 -731 z',\n        },\n        fClef: {\n            xMin: 0,\n            xMax: 661,\n            yMin: -545,\n            yMax: 254,\n            ha: 798,\n            o: 'm 326 364 b 356 365 336 365 346 365 b 647 278 464 365 575 332 b 788 -2 740 207 788 112 b 785 -51 788 -18 787 -34 b 161 -747 750 -356 500 -634 b 16 -784 110 -764 31 -784 b 0 -768 7 -784 0 -778 b 24 -747 0 -758 3 -755 b 601 -72 353 -625 575 -364 b 603 -10 602 -51 603 -30 b 469 298 603 133 556 243 b 346 332 432 321 389 332 b 100 185 248 332 146 277 b 89 161 97 178 89 162 b 89 161 89 161 89 161 b 95 164 90 161 92 162 b 169 185 118 179 144 185 b 308 74 232 185 293 142 b 311 42 310 63 311 53 b 167 -101 311 -36 248 -101 b 147 -99 161 -101 154 -100 b 9 79 65 -88 9 -15 l 9 79 b 326 364 9 228 148 353 z m 888 225 b 894 225 889 225 891 225 b 914 223 901 225 910 224 b 952 171 940 214 952 192 b 914 118 952 149 939 127 b 898 116 910 117 904 116 b 881 118 892 116 886 117 b 843 170 856 127 843 149 b 888 225 843 195 859 219 z m 888 -116 b 894 -116 889 -116 891 -116 b 914 -118 901 -116 910 -117 b 952 -170 940 -127 952 -149 b 914 -223 952 -192 939 -214 b 898 -225 910 -224 904 -225 b 881 -223 892 -225 886 -224 b 843 -171 856 -214 843 -193 b 888 -116 843 -146 859 -122 z',\n        },\n        unpitchedPercussionClef1: {\n            xMin: -4,\n            xMax: 337,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm -6 0 l -6 360 l 75 360 l 157 360 l 157 0 l 157 -360 l 75 -360 l -6 -360 z m 321 0 l 321 360 l 403 360 l 485 360 l 485 0 l 485 -360 l 403 -360 l 321 -360 z',\n        },\n        '6stringTabClef': {\n            xMin: 0,\n            xMax: 501,\n            yMin: -735,\n            yMax: 753,\n            ha: 1487,\n            o: 'm 633 1083 b 639 1084 635 1084 637 1084 b 669 1072 650 1084 661 1079 b 681 1043 677 1063 681 1053 b 657 1004 681 1028 673 1013 b 467 964 609 980 535 964 l 452 964 l 452 959 b 456 874 455 932 456 903 b 418 611 456 781 443 686 b 245 415 380 495 327 435 b 195 409 228 411 214 409 b 147 412 182 409 167 410 b 110 453 124 414 110 433 b 122 482 110 464 114 474 b 151 494 130 490 141 494 b 184 478 163 494 175 489 b 194 475 186 476 190 475 b 224 486 202 475 213 479 b 283 575 246 500 263 527 b 335 871 317 657 335 760 b 331 967 335 903 334 935 l 330 980 l 321 982 b 260 992 301 989 280 992 b 139 927 206 992 160 968 b 90 895 128 906 109 895 b 42 933 70 895 49 908 b 40 947 40 937 40 942 b 105 1020 40 972 61 996 b 263 1058 150 1045 207 1058 b 350 1047 293 1058 323 1054 b 465 1030 389 1036 429 1030 b 612 1073 526 1030 579 1045 b 633 1083 618 1078 625 1082 z m 441 376 b 448 376 443 376 445 376 b 470 374 456 376 465 375 b 511 321 494 366 509 346 b 534 155 515 283 525 210 b 621 -190 556 21 589 -109 b 668 -253 632 -220 651 -245 l 672 -254 l 676 -253 b 687 -252 680 -252 683 -252 b 721 -287 707 -252 721 -269 b 705 -316 721 -298 716 -309 b 676 -321 699 -320 689 -321 b 650 -319 668 -321 659 -321 b 506 -206 588 -312 533 -269 b 444 0 487 -163 460 -72 b 441 8 443 4 441 8 b 441 8 441 8 441 8 b 436 -3 441 7 438 2 b 381 -99 422 -33 400 -72 b 375 -109 377 -105 375 -107 b 381 -114 375 -111 377 -112 b 435 -133 398 -126 415 -132 b 452 -138 446 -134 448 -134 b 457 -150 455 -141 457 -145 b 446 -166 457 -156 453 -163 b 406 -174 434 -171 420 -174 b 344 -160 385 -174 363 -169 l 337 -156 l 334 -159 b 49 -314 250 -255 145 -311 b 39 -315 45 -315 42 -315 b 10 -305 23 -315 18 -312 b 0 -281 3 -298 0 -290 b 34 -247 0 -264 14 -247 b 40 -248 36 -247 38 -247 b 46 -248 42 -248 44 -248 b 144 -208 69 -248 108 -233 b 390 306 283 -115 381 90 b 394 334 391 320 392 328 b 441 376 401 356 419 372 z m 376 -371 b 408 -371 383 -371 395 -371 b 451 -372 425 -371 444 -371 b 529 -388 482 -376 502 -380 b 689 -546 621 -417 689 -484 b 563 -696 689 -599 639 -658 l 552 -701 l 561 -705 b 700 -882 646 -748 700 -818 b 699 -896 700 -887 700 -892 b 503 -1054 689 -974 608 -1039 b 451 -1058 486 -1057 468 -1058 b 272 -1010 389 -1058 329 -1042 b 248 -972 257 -1001 248 -987 b 249 -963 248 -969 248 -966 l 250 -959 l 249 -960 b 241 -966 248 -961 244 -964 b 124 -1015 208 -992 168 -1009 b 90 -1017 118 -1016 104 -1017 b 48 -1015 72 -1017 52 -1016 b 19 -977 30 -1009 19 -993 b 31 -949 19 -967 23 -957 b 59 -937 39 -941 49 -937 b 85 -947 68 -937 77 -941 l 88 -951 l 94 -951 b 210 -845 134 -951 183 -906 b 220 -821 212 -840 216 -830 b 286 -526 264 -724 286 -623 b 283 -469 286 -507 285 -488 b 282 -459 283 -463 282 -459 b 282 -459 282 -459 282 -459 b 256 -469 281 -459 266 -464 b 141 -563 201 -491 160 -526 b 94 -592 130 -583 112 -592 b 43 -540 68 -592 43 -573 b 88 -476 43 -518 51 -505 b 376 -371 158 -418 261 -381 z m 432 -437 b 411 -437 427 -437 418 -437 l 399 -437 l 400 -440 b 406 -505 402 -448 405 -478 b 407 -527 407 -512 407 -520 b 334 -840 407 -628 382 -737 b 284 -925 315 -881 304 -901 b 280 -930 281 -928 280 -929 b 281 -930 280 -930 280 -930 b 284 -930 281 -930 282 -930 b 291 -929 286 -929 288 -929 b 320 -941 300 -929 310 -933 b 452 -991 362 -975 405 -991 l 452 -991 b 580 -883 531 -991 580 -941 b 538 -791 580 -852 566 -820 b 421 -733 508 -761 470 -742 b 392 -715 405 -730 397 -724 b 388 -698 389 -709 388 -703 b 420 -665 388 -681 401 -667 b 567 -563 490 -658 555 -613 b 569 -546 568 -557 569 -552 b 432 -437 569 -493 510 -444 z',\n        },\n        timeSig0: {\n            xMin: 0,\n            xMax: 380,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 249 313 b 272 314 256 314 264 314 b 428 259 325 314 385 293 b 547 0 505 196 547 105 b 544 -49 547 -16 546 -32 b 273 -314 526 -197 407 -314 b 32 -149 175 -314 81 -250 b 0 0 11 -105 0 -53 b 32 150 0 53 11 106 b 249 313 78 242 158 302 z m 293 279 b 273 281 286 280 280 281 b 203 251 242 281 216 270 b 170 -3 185 224 170 102 b 172 -59 170 -23 171 -42 b 203 -251 178 -163 189 -231 b 273 -281 216 -270 243 -281 b 306 -277 284 -281 295 -280 b 366 -160 344 -267 356 -243 b 376 0 373 -103 376 -51 b 366 160 376 51 373 103 b 293 279 355 250 341 272 z m 273 -360 l 275 -360 l 272 -360 z m 273 340 l 275 340 l 272 340 z',\n        },\n        timeSig1: {\n            xMin: 0,\n            xMax: 254,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 135 302 b 210 303 137 303 141 303 b 235 303 219 303 228 303 b 290 298 290 303 286 303 b 295 70 295 293 295 314 b 300 -219 295 -201 295 -202 b 352 -269 307 -239 324 -255 b 366 -287 361 -274 366 -280 b 361 -298 366 -291 364 -295 b 266 -303 357 -303 367 -303 b 210 -303 250 -303 232 -303 b 154 -303 188 -303 170 -303 b 59 -298 53 -303 63 -303 b 54 -287 55 -295 54 -291 b 68 -269 54 -280 59 -274 b 120 -219 96 -255 113 -239 b 125 -50 124 -205 125 -193 b 125 24 125 -29 125 -4 l 125 189 l 120 181 b 90 136 116 176 103 156 b 48 72 77 116 58 87 b 16 38 26 38 26 38 b 0 54 6 38 0 45 b 0 56 0 55 0 55 l 0 60 l 64 178 b 135 302 128 296 130 299 z m 183 -360 l 184 -360 l 182 -360 z m 183 340 l 184 340 l 182 340 z',\n        },\n        timeSig2: {\n            xMin: 0,\n            xMax: 337,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 210 313 b 232 314 217 314 224 314 b 317 303 261 314 293 310 b 459 147 407 277 459 217 b 441 77 459 124 453 101 b 258 -67 409 10 349 -37 b 76 -181 173 -95 117 -130 l 73 -185 l 77 -182 b 226 -128 121 -146 174 -128 b 322 -152 260 -128 293 -136 b 378 -173 346 -165 359 -170 b 395 -174 383 -174 389 -174 b 454 -149 421 -174 446 -164 b 470 -139 457 -142 464 -139 b 486 -155 478 -139 486 -145 b 462 -217 486 -165 474 -197 b 319 -313 428 -276 373 -313 l 318 -313 b 273 -300 296 -313 290 -311 b 133 -256 226 -271 178 -256 b 93 -260 119 -256 106 -257 b 32 -294 68 -265 41 -280 b 15 -303 28 -300 21 -303 b 1 -292 9 -303 3 -299 b 0 -284 0 -291 0 -288 b 6 -234 0 -271 3 -249 b 180 -36 28 -147 90 -75 b 303 122 246 -7 290 50 b 305 146 305 130 305 138 b 272 225 305 177 294 204 b 185 259 249 248 220 259 b 163 257 178 259 170 258 b 152 256 155 257 152 256 b 155 253 152 255 153 254 b 191 188 180 238 191 213 b 138 112 191 156 173 124 b 112 108 129 109 120 108 b 29 191 67 108 29 146 b 33 214 29 199 30 206 b 210 313 46 263 122 305 z m 243 -360 l 244 -360 l 241 -360 z m 243 340 l 244 340 l 241 340 z',\n        },\n        timeSig3: {\n            xMin: 0,\n            xMax: 302,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 179 313 b 209 314 189 314 199 314 b 429 163 327 314 429 247 b 282 29 429 110 369 56 l 272 26 l 275 25 b 430 -111 354 -1 413 -53 b 435 -147 433 -123 435 -136 b 268 -308 435 -222 369 -288 b 211 -314 249 -312 230 -314 b 24 -241 140 -314 72 -288 b 0 -185 7 -224 0 -204 b 82 -100 0 -142 35 -100 b 97 -101 87 -100 92 -100 b 162 -180 140 -109 162 -145 b 113 -251 162 -209 146 -239 b 110 -253 111 -252 110 -252 b 120 -256 110 -253 113 -254 b 164 -261 136 -260 150 -261 b 248 -228 197 -261 226 -250 b 281 -145 270 -206 281 -178 b 278 -112 281 -135 280 -123 b 157 10 264 -42 215 7 b 135 27 141 11 135 16 b 157 44 135 39 141 43 b 272 137 210 47 257 85 b 276 162 275 145 276 154 b 194 256 276 206 244 245 b 167 258 188 258 178 258 b 124 255 152 258 136 257 l 119 254 l 123 252 b 162 186 149 238 162 212 b 108 110 162 154 144 121 b 83 105 100 107 91 105 b 0 189 37 105 0 144 b 8 224 0 200 3 212 b 179 313 28 266 103 305 z m 217 -360 l 219 -360 l 216 -360 z m 217 340 l 219 340 l 216 340 z',\n        },\n        timeSig4: {\n            xMin: 0,\n            xMax: 345,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 184 302 b 304 303 186 303 247 303 b 403 302 354 303 401 303 b 412 286 409 299 412 294 b 392 256 412 280 411 278 b 260 108 374 236 318 173 b 222 67 243 89 226 71 b 165 3 218 62 193 34 b 90 -82 138 -28 104 -66 b 65 -111 77 -97 65 -110 b 64 -111 64 -111 64 -111 b 160 -112 64 -112 74 -112 l 257 -112 l 257 -43 b 259 27 257 24 257 25 b 307 82 259 28 281 53 b 373 156 332 110 362 144 b 409 188 402 189 401 188 b 425 179 416 188 422 185 b 426 32 426 176 426 171 l 426 -112 l 452 -112 b 481 -113 476 -112 477 -112 b 494 -134 489 -116 494 -125 b 488 -149 494 -139 492 -145 b 452 -156 482 -155 481 -156 l 426 -156 l 426 -162 b 427 -183 427 -165 427 -175 b 484 -269 428 -227 441 -248 b 497 -287 493 -274 497 -280 b 493 -298 497 -291 496 -295 b 397 -303 488 -303 499 -303 b 341 -303 382 -303 363 -303 b 285 -303 320 -303 301 -303 b 190 -298 184 -303 195 -303 b 185 -287 187 -295 185 -291 b 199 -269 185 -280 190 -274 b 256 -183 242 -248 255 -227 b 256 -162 256 -175 256 -165 l 257 -156 l 135 -156 b 90 -156 117 -156 102 -156 b 5 -151 2 -156 9 -155 b 0 -140 2 -148 0 -144 b 9 -122 0 -135 3 -129 b 174 272 110 -9 170 134 b 184 302 175 295 176 298 z m 249 -360 l 250 -360 l 247 -360 z m 249 340 l 250 340 l 247 340 z',\n        },\n        timeSig5: {\n            xMin: 0,\n            xMax: 302,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 51 302 b 57 303 53 302 55 303 b 71 300 61 303 65 302 b 224 275 117 283 170 275 b 391 300 279 275 336 283 b 406 303 398 302 402 303 b 417 298 411 303 414 301 b 421 288 420 295 421 292 b 411 260 421 282 418 274 b 278 157 378 194 340 165 b 226 154 262 155 244 154 b 78 175 177 154 124 161 b 66 179 72 177 66 179 b 56 64 66 178 56 68 b 56 64 56 64 56 64 b 56 64 56 64 56 64 b 63 67 57 64 60 65 b 159 96 89 81 124 92 b 201 98 168 97 185 98 b 227 97 212 98 222 98 b 434 -104 351 80 434 -1 l 434 -105 b 239 -312 434 -208 353 -294 b 212 -314 230 -313 221 -314 b 23 -229 148 -314 76 -282 b 0 -174 7 -213 0 -193 b 82 -89 0 -131 35 -89 b 97 -90 87 -89 92 -89 b 162 -168 140 -98 162 -133 b 108 -242 162 -199 145 -230 l 102 -244 l 109 -247 b 159 -259 127 -255 143 -259 b 215 -241 178 -259 197 -253 b 281 -99 258 -212 281 -161 b 277 -51 281 -84 280 -68 b 211 62 267 6 241 51 l 205 64 l 189 64 b 57 24 142 64 96 50 b 37 14 43 14 42 14 b 20 30 26 14 20 20 b 43 293 20 41 42 290 b 51 302 44 297 48 300 z m 222 -276 b 222 -276 222 -276 222 -276 b 218 -277 221 -276 221 -276 b 216 -279 217 -278 216 -279 b 216 -279 216 -279 216 -279 b 222 -276 217 -279 222 -276 z m 217 -360 l 219 -360 l 216 -360 z m 217 340 l 219 340 l 216 340 z',\n        },\n        timeSig6: {\n            xMin: 0,\n            xMax: 349,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 272 313 b 295 314 278 314 286 314 b 350 308 314 314 336 312 b 473 226 402 295 458 259 b 481 191 479 215 481 203 b 399 108 481 147 444 108 b 373 112 390 108 382 109 b 319 187 337 124 319 156 b 372 260 319 218 337 249 b 378 263 375 262 378 263 b 378 263 378 263 378 263 b 347 275 378 264 358 271 b 305 280 333 278 319 280 b 220 242 270 280 239 267 b 178 110 201 217 187 173 b 170 31 175 88 170 41 b 170 29 170 30 170 29 b 170 29 170 29 170 29 b 180 32 171 29 175 30 b 273 52 213 45 243 52 b 364 33 302 52 332 45 b 487 -64 422 11 466 -24 b 502 -128 497 -83 502 -105 b 479 -208 502 -156 494 -185 b 272 -314 439 -268 345 -314 b 239 -310 260 -314 249 -313 b 9 -77 129 -284 35 -188 b 0 6 3 -53 0 -23 b 5 65 0 26 2 47 b 272 313 27 193 137 296 z m 290 17 b 273 19 284 18 279 19 b 227 2 254 19 236 13 b 198 -122 209 -17 198 -69 b 201 -175 198 -140 199 -158 b 274 -280 214 -258 229 -280 l 274 -280 b 341 -193 315 -280 329 -262 b 349 -123 346 -166 349 -145 b 344 -66 349 -105 347 -87 b 290 17 334 -9 321 12 z m 251 -360 l 253 -360 l 250 -360 z m 251 340 l 253 340 l 250 340 z',\n        },\n        timeSig7: {\n            xMin: 0,\n            xMax: 326,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 162 314 b 179 315 168 315 174 315 b 333 260 232 315 290 294 b 361 249 343 252 350 249 b 370 250 364 249 367 249 b 435 291 395 253 417 267 b 453 303 442 299 447 303 b 460 302 455 303 457 303 b 469 288 466 299 469 296 b 456 233 469 279 465 263 b 369 16 433 146 396 56 b 290 -268 322 -53 293 -159 b 280 -302 289 -295 289 -298 b 192 -303 278 -303 235 -303 b 105 -302 150 -303 107 -303 b 96 -281 98 -298 96 -294 b 96 -280 96 -280 96 -280 b 178 -54 96 -212 128 -124 b 279 57 207 -12 235 18 b 399 198 335 107 368 146 b 404 207 402 204 404 206 b 403 207 404 207 404 207 b 400 205 403 207 402 206 b 258 155 357 172 306 155 b 132 201 212 155 167 171 b 90 222 117 215 103 222 b 58 201 78 222 67 215 b 33 141 49 187 41 168 b 16 128 30 133 23 128 b 1 138 10 128 4 131 b 0 216 0 140 0 178 b 1 293 0 253 0 291 b 15 303 4 300 9 303 b 30 298 20 303 25 301 b 52 289 37 292 43 289 b 96 300 62 289 75 293 b 162 314 124 309 140 312 z m 234 -360 l 236 -360 l 233 -360 z m 234 340 l 236 340 l 233 340 z',\n        },\n        timeSig8: {\n            xMin: 0,\n            xMax: 360,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 246 314 b 260 314 252 314 258 314 b 261 314 261 314 261 314 b 275 313 263 314 269 314 b 399 276 317 312 363 298 b 486 136 456 242 486 189 b 441 29 486 99 471 61 l 435 23 l 441 19 b 518 -119 492 -16 518 -67 b 483 -217 518 -153 507 -187 b 259 -314 435 -279 349 -314 b 138 -291 218 -314 176 -307 b 0 -118 48 -256 0 -187 b 76 18 0 -69 25 -20 l 83 23 l 77 30 b 32 137 48 61 32 99 b 42 189 32 155 36 172 b 246 314 70 260 152 310 z m 282 267 b 260 269 276 269 268 269 b 228 266 249 269 237 268 b 168 214 192 258 168 235 b 171 202 168 210 169 206 b 354 62 190 162 270 101 l 359 60 l 362 65 b 380 136 375 88 380 112 b 282 267 380 196 342 254 z m 148 -20 b 139 -16 144 -18 139 -16 b 139 -16 139 -16 139 -16 b 119 -36 137 -16 124 -29 b 91 -118 100 -62 91 -90 b 188 -255 91 -174 126 -229 b 257 -269 210 -265 234 -269 b 356 -229 298 -269 336 -255 b 368 -196 364 -218 368 -208 b 350 -151 368 -183 362 -168 b 166 -28 317 -101 256 -61 b 148 -20 161 -26 153 -23 z m 259 -360 l 261 -360 l 258 -360 z m 259 340 l 261 340 l 258 340 z',\n        },\n        timeSig9: {\n            xMin: 0,\n            xMax: 349,\n            yMin: -250,\n            yMax: 236,\n            ha: 486,\n            o: 'm 208 313 b 227 314 214 314 220 314 b 332 284 259 314 295 304 b 497 61 420 236 480 155 b 503 -4 501 42 503 19 b 498 -65 503 -26 501 -47 b 279 -303 479 -176 393 -269 b 204 -314 253 -310 228 -314 b 98 -287 166 -314 130 -305 b 25 -216 58 -265 33 -241 b 22 -191 23 -208 22 -199 b 104 -108 22 -146 59 -108 b 130 -112 112 -108 121 -109 b 184 -187 166 -124 184 -156 b 131 -260 184 -218 166 -249 b 125 -263 128 -262 125 -263 b 125 -263 125 -263 125 -263 b 156 -275 125 -264 144 -271 b 197 -280 170 -278 184 -280 b 279 -247 231 -280 260 -269 b 324 -117 300 -223 313 -182 b 333 -31 328 -93 333 -42 b 332 -29 333 -30 333 -29 b 332 -29 332 -29 332 -29 b 323 -32 332 -29 328 -30 b 230 -52 289 -45 260 -52 b 173 -44 211 -52 192 -49 b 23 50 108 -27 51 9 b 0 128 8 74 0 101 b 34 222 0 161 11 194 b 208 313 70 266 142 304 z m 248 278 b 231 281 243 280 237 281 b 195 272 217 281 203 277 b 156 156 176 259 163 221 b 154 124 154 146 154 135 b 183 -2 154 72 166 16 b 230 -19 194 -13 212 -19 b 276 -2 248 -19 266 -13 b 305 122 294 17 305 69 b 301 175 305 140 304 158 b 248 278 290 246 278 270 z m 251 -360 l 253 -360 l 250 -360 z m 251 340 l 253 340 l 250 340 z',\n        },\n        timeSigCommon: {\n            xMin: 0,\n            xMax: 409,\n            yMin: -233,\n            yMax: 233,\n            ha: 466,\n            o: 'm 315 334 b 343 336 324 335 334 336 b 558 227 431 336 512 296 b 575 174 570 210 575 192 b 475 74 575 122 533 74 b 472 74 474 74 473 74 b 380 167 417 76 380 120 b 402 225 380 187 387 207 b 469 256 418 244 444 256 b 484 254 474 256 479 255 b 487 254 485 254 487 254 b 488 254 488 254 488 254 b 479 260 488 254 485 256 b 346 302 439 289 398 302 l 345 302 b 154 -3 205 302 154 220 b 154 -3 154 -3 154 -3 b 316 -302 154 -225 195 -300 b 321 -302 318 -302 320 -302 b 556 -108 438 -302 536 -221 b 573 -87 558 -92 562 -87 b 589 -105 584 -87 589 -93 b 582 -144 589 -114 587 -127 b 393 -327 556 -233 484 -302 b 321 -336 371 -333 346 -336 b 248 -327 296 -336 271 -333 b 7 -69 125 -296 32 -196 b 0 -1 2 -46 0 -24 b 315 334 0 170 131 317 z',\n        },\n        timeSigCutCommon: {\n            xMin: 0,\n            xMax: 409,\n            yMin: -394,\n            yMax: 394,\n            ha: 788,\n            o: 'm 308 566 b 316 568 311 567 314 568 b 337 554 325 568 334 562 b 338 446 338 550 338 549 l 338 341 l 355 341 b 558 232 437 339 514 298 b 575 179 570 216 575 197 b 475 79 575 128 533 79 b 472 79 474 79 473 79 b 380 172 417 81 380 126 b 402 231 380 192 387 213 b 469 261 418 250 444 261 b 484 260 474 261 479 261 b 487 259 485 259 487 259 b 488 259 488 259 488 259 b 479 266 488 260 485 262 b 354 307 442 292 400 306 l 338 308 l 338 6 l 338 -297 l 340 -296 b 347 -296 341 -296 344 -296 b 555 -103 449 -288 538 -205 b 573 -82 558 -87 562 -82 b 589 -100 584 -82 589 -87 b 582 -138 589 -109 587 -121 b 374 -326 554 -234 473 -307 b 342 -330 366 -327 356 -328 l 338 -330 l 338 -440 b 339 -489 338 -460 339 -476 b 332 -561 339 -563 338 -555 b 317 -568 328 -566 322 -568 b 296 -554 308 -568 299 -563 b 295 -440 295 -550 295 -549 l 295 -330 l 293 -329 b 282 -328 291 -329 287 -328 b 7 -63 146 -310 35 -203 b 0 4 2 -41 0 -18 b 259 331 0 156 103 291 b 294 338 269 333 292 338 b 295 444 295 338 295 385 b 296 554 295 549 295 550 b 308 566 298 559 303 564 z m 295 4 b 294 303 295 288 295 303 b 284 301 293 303 288 302 b 154 3 190 276 154 192 l 154 2 b 291 -295 154 -204 190 -283 l 295 -295 z',\n        },\n        timeSigPlus: {\n            xMin: 0,\n            xMax: 235,\n            yMin: -118,\n            yMax: 118,\n            ha: 235,\n            o: 'm 159 168 b 169 169 162 169 166 169 b 198 153 180 169 192 163 b 202 97 202 146 202 147 l 202 87 l 202 33 l 257 33 l 267 33 b 322 29 317 33 315 33 b 339 0 333 22 339 11 b 323 -28 339 -11 333 -22 b 266 -33 315 -33 317 -33 l 257 -33 l 202 -33 l 202 -87 l 202 -97 b 198 -153 202 -148 202 -146 b 169 -169 191 -164 180 -169 b 141 -153 158 -169 147 -164 b 137 -97 137 -146 137 -147 l 137 -87 l 137 -33 l 82 -33 l 72 -33 b 16 -28 22 -33 23 -33 b 0 0 5 -22 0 -11 b 16 28 0 11 5 22 b 72 33 23 33 22 33 l 82 33 l 137 33 l 137 87 l 137 97 b 141 153 137 148 137 146 b 159 168 145 160 151 165 z',\n        },\n        timeSigPlusSmall: {\n            xMin: 0,\n            xMax: 235,\n            yMin: -118,\n            yMax: 118,\n            ha: 235,\n            o: 'm 159 168 b 169 169 162 169 166 169 b 198 153 180 169 192 163 b 202 97 202 146 202 147 l 202 87 l 202 33 l 257 33 l 267 33 b 322 29 317 33 315 33 b 339 0 333 22 339 11 b 323 -28 339 -11 333 -22 b 266 -33 315 -33 317 -33 l 257 -33 l 202 -33 l 202 -87 l 202 -97 b 198 -153 202 -148 202 -146 b 169 -169 191 -164 180 -169 b 141 -153 158 -169 147 -164 b 137 -97 137 -146 137 -147 l 137 -87 l 137 -33 l 82 -33 l 72 -33 b 16 -28 22 -33 23 -33 b 0 0 5 -22 0 -11 b 16 28 0 11 5 22 b 72 33 23 33 22 33 l 82 33 l 137 33 l 137 87 l 137 97 b 141 153 137 148 137 146 b 159 168 145 160 151 165 z',\n        },\n        timeSigMinus: {\n            xMin: 0,\n            xMax: 235,\n            yMin: -23,\n            yMax: 23,\n            ha: 46,\n            o: 'm 23 32 b 177 33 26 32 103 33 b 315 32 246 33 312 32 b 338 0 331 27 338 14 b 315 -32 338 -14 331 -27 b 169 -33 312 -33 241 -33 b 23 -32 98 -33 26 -33 b 0 0 8 -27 0 -14 b 23 32 0 13 8 26 z',\n        },\n        timeSigParensRight: {\n            xMin: 19,\n            xMax: 122,\n            yMin: -267,\n            yMax: 267,\n            ha: 535,\n            o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n        },\n        timeSigParensRightSmall: {\n            xMin: 19,\n            xMax: 122,\n            yMin: -267,\n            yMax: 267,\n            ha: 535,\n            o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n        },\n        timeSigParensLeft: {\n            xMin: -122,\n            xMax: -19,\n            yMin: -267,\n            yMax: 267,\n            ha: 534,\n            o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n        },\n        timeSigParensLeftSmall: {\n            xMin: -122,\n            xMax: -19,\n            yMin: -267,\n            yMax: 267,\n            ha: 534,\n            o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n        },\n        noteheadDoubleWhole: {\n            xMin: 0,\n            xMax: 663,\n            yMin: -174,\n            yMax: 174,\n            ha: 349,\n            o: 'm 19 250 b 27 251 21 251 24 251 b 36 250 31 251 34 251 b 50 239 41 248 47 244 b 55 93 54 233 55 247 b 55 0 55 67 55 37 b 55 -93 55 -37 55 -67 b 50 -239 55 -247 54 -233 b 28 -251 45 -247 36 -251 b 1 -232 16 -251 5 -244 b 0 4 0 -230 0 -112 b 1 232 0 117 0 230 b 19 250 4 240 11 247 z m 117 250 b 126 251 119 251 122 251 b 134 250 129 251 132 251 b 152 232 142 247 149 240 b 153 128 153 229 153 214 b 154 31 153 48 153 31 b 154 31 154 31 154 31 b 417 191 176 112 281 176 b 478 194 437 193 458 194 b 801 31 636 194 776 127 b 801 31 801 31 801 31 b 802 128 802 31 802 48 b 805 237 802 235 802 232 b 830 251 811 246 821 251 b 852 239 839 251 847 247 b 857 93 857 233 857 247 b 857 0 857 67 857 37 b 857 -93 857 -37 857 -67 b 852 -239 857 -247 857 -233 b 830 -251 847 -247 838 -251 b 807 -239 821 -251 812 -247 b 802 -128 802 -232 802 -239 b 801 -31 802 -48 802 -31 b 801 -31 801 -31 801 -31 b 539 -191 779 -112 675 -176 b 477 -194 518 -193 498 -194 b 154 -31 319 -194 180 -127 b 154 -31 154 -31 154 -31 b 153 -128 153 -31 153 -48 b 148 -239 153 -239 153 -232 b 126 -251 143 -247 134 -251 b 99 -232 114 -251 103 -244 b 98 4 99 -230 98 -112 b 99 232 98 117 99 230 b 117 250 102 240 109 247 z m 458 168 b 439 169 452 169 445 169 b 332 44 375 169 332 116 b 344 -25 332 22 336 -1 b 517 -169 377 -116 452 -169 b 613 -101 558 -169 595 -148 b 623 -44 620 -83 623 -64 b 458 168 623 50 549 154 z m 919 250 b 928 251 921 251 924 251 b 936 250 931 251 934 251 b 951 239 942 248 947 244 b 955 93 955 233 955 247 b 955 0 955 67 955 36 b 955 -93 955 -37 955 -67 b 951 -239 955 -247 955 -233 b 928 -251 945 -247 937 -251 b 902 -232 917 -251 905 -244 b 900 4 901 -230 900 -112 b 901 232 900 117 901 230 b 919 250 904 240 911 247 z',\n        },\n        noteheadWhole: {\n            xMin: 0,\n            xMax: 455,\n            yMin: -135,\n            yMax: 135,\n            ha: 269,\n            o: 'm 291 193 b 326 194 303 194 315 194 b 649 38 482 194 619 129 b 655 0 653 25 655 12 b 327 -194 655 -106 513 -194 b 0 0 144 -194 0 -109 b 291 193 0 100 124 182 z m 308 168 b 289 169 301 169 295 169 b 181 44 224 169 181 116 b 194 -26 181 22 185 -1 b 366 -169 226 -116 302 -169 b 463 -101 408 -169 445 -148 b 473 -45 470 -83 473 -64 b 308 168 473 50 398 154 z',\n        },\n        noteheadHalf: {\n            xMin: 0,\n            xMax: 316,\n            yMin: -135,\n            yMax: 135,\n            ha: 269,\n            o: 'm 270 193 b 281 194 272 194 276 194 b 322 192 294 194 315 193 b 455 53 411 178 455 120 b 307 -156 455 -20 405 -104 b 166 -194 260 -182 211 -194 b 3 -81 84 -194 17 -153 b 0 -52 1 -72 0 -62 b 270 193 0 62 123 178 z m 388 139 b 372 141 383 140 378 141 b 99 -26 307 141 174 61 b 50 -116 68 -62 50 -96 b 60 -136 50 -125 53 -132 b 83 -141 66 -139 74 -141 b 367 40 152 -141 296 -52 b 405 115 392 72 405 98 b 388 139 405 127 399 135 z',\n        },\n        noteheadBlack: {\n            xMin: 0,\n            xMax: 316,\n            yMin: -135,\n            yMax: 135,\n            ha: 269,\n            o: 'm 270 193 b 281 194 272 194 276 194 b 322 192 294 194 315 193 b 455 53 411 178 455 120 b 307 -156 455 -20 405 -104 b 166 -194 260 -182 211 -194 b 3 -81 84 -194 17 -153 b 0 -52 1 -72 0 -62 b 270 193 0 62 123 178 z',\n        },\n        noteheadXWhole: {\n            xMin: 0,\n            xMax: 440,\n            yMin: -133,\n            yMax: 133,\n            ha: 265,\n            o: 'm 67 190 b 82 191 71 191 76 191 b 97 190 88 191 94 191 b 216 138 108 188 116 184 l 317 91 l 417 138 b 548 191 529 190 532 191 b 551 191 549 191 550 191 b 634 109 601 191 634 151 b 611 52 634 89 627 69 b 549 17 601 41 597 39 b 513 0 529 8 513 0 b 549 -17 513 0 529 -8 b 611 -52 597 -39 601 -41 b 634 -109 627 -69 634 -89 b 551 -191 634 -151 601 -191 b 548 -191 550 -191 549 -191 b 417 -138 532 -191 529 -190 l 317 -91 l 216 -138 b 86 -191 105 -190 102 -191 b 83 -191 85 -191 84 -191 b 0 -109 33 -191 0 -151 b 23 -52 0 -89 7 -69 b 85 -17 33 -41 37 -39 b 121 0 105 -8 121 0 b 85 17 121 0 105 8 b 23 52 37 39 33 41 b 0 109 7 69 0 89 b 67 190 0 146 26 182 z m 91 141 b 82 142 88 142 85 142 b 49 109 63 142 49 126 b 59 86 49 101 52 92 b 159 37 64 81 55 85 b 238 0 202 17 238 0 b 159 -37 238 0 202 -17 b 59 -86 55 -85 64 -81 b 49 -109 52 -92 49 -101 b 82 -142 49 -126 62 -142 l 82 -142 b 206 -88 91 -142 91 -141 b 317 -37 267 -60 317 -37 b 428 -88 317 -37 367 -60 b 551 -142 542 -141 543 -142 l 552 -142 b 584 -109 572 -142 584 -126 b 574 -86 584 -101 581 -92 b 475 -37 569 -81 578 -85 b 396 0 431 -17 396 0 b 475 37 396 0 431 17 b 574 86 578 85 569 81 b 584 109 581 92 584 101 b 552 142 584 126 572 142 l 551 142 b 428 88 543 142 542 141 b 317 37 367 60 317 37 b 206 88 317 37 267 60 b 91 141 145 117 93 140 z',\n        },\n        noteheadXHalf: {\n            xMin: 0,\n            xMax: 300,\n            yMin: -133,\n            yMax: 133,\n            ha: 265,\n            o: 'm 60 189 b 76 191 65 190 71 191 b 118 179 91 191 106 187 b 169 138 121 177 144 159 l 216 100 l 262 138 b 325 185 312 179 314 181 b 355 191 335 189 345 191 b 431 115 397 191 431 156 b 426 86 431 105 430 96 b 372 29 419 69 415 64 b 337 0 353 14 337 0 b 372 -29 337 0 353 -14 b 426 -86 415 -64 419 -69 b 431 -115 430 -96 431 -105 b 355 -191 431 -156 397 -191 b 325 -185 345 -191 335 -189 b 262 -138 314 -181 312 -179 l 216 -100 l 169 -138 b 106 -185 120 -179 117 -181 b 76 -191 96 -189 86 -191 b 0 -115 35 -191 0 -156 b 6 -86 0 -105 2 -96 b 59 -29 12 -69 17 -64 b 94 0 78 -14 94 0 b 59 29 94 0 78 14 b 20 63 40 45 22 61 b 0 114 6 78 0 97 b 60 189 0 148 23 181 z m 88 140 b 77 142 85 141 81 142 b 56 133 69 142 61 139 b 49 115 51 128 49 121 b 55 98 49 109 51 103 b 114 48 56 96 82 74 b 171 0 146 22 171 0 b 114 -48 171 0 146 -22 b 55 -98 82 -74 56 -96 b 49 -114 51 -103 49 -109 b 65 -140 49 -125 55 -135 b 77 -142 68 -141 72 -142 b 88 -140 81 -142 85 -141 b 154 -87 91 -138 114 -120 b 216 -36 188 -59 216 -36 b 278 -87 216 -36 244 -59 b 343 -140 318 -120 341 -138 b 355 -142 346 -141 350 -142 b 367 -140 359 -142 364 -141 b 382 -114 377 -135 382 -125 b 377 -98 382 -109 381 -103 b 317 -48 376 -96 349 -74 b 260 0 286 -22 260 0 b 317 48 260 0 286 22 b 377 98 349 74 376 96 b 382 114 381 103 382 109 b 367 140 382 125 377 135 b 355 142 364 141 359 142 b 343 140 350 142 346 141 b 278 87 341 138 318 120 b 216 36 244 59 216 36 b 154 87 216 36 188 59 b 88 140 112 121 91 138 z',\n        },\n        noteheadXBlack: {\n            xMin: 0,\n            xMax: 300,\n            yMin: -133,\n            yMax: 133,\n            ha: 265,\n            o: 'm 24 190 b 32 191 26 191 29 191 b 46 189 37 191 43 190 b 135 114 52 186 50 187 b 216 44 179 76 216 44 b 296 114 216 44 252 76 b 396 191 392 197 384 190 b 398 191 397 191 398 191 b 432 158 418 191 432 175 b 422 135 432 150 429 142 b 343 66 420 133 384 102 b 267 0 301 30 267 0 b 343 -66 267 0 301 -30 b 422 -135 384 -102 420 -133 b 432 -158 429 -142 432 -150 b 398 -191 432 -175 418 -191 b 396 -191 398 -191 397 -191 b 296 -114 384 -190 392 -197 b 216 -44 252 -76 216 -44 b 135 -114 216 -44 179 -76 b 35 -191 40 -197 48 -190 b 33 -191 35 -191 34 -191 b 0 -158 13 -191 0 -175 b 10 -135 0 -150 3 -142 b 89 -66 12 -133 48 -102 b 164 0 131 -30 164 0 b 89 66 164 0 131 30 b 10 135 48 102 12 133 b 0 158 3 142 0 150 b 24 190 0 172 9 186 z',\n        },\n        noteheadCircleX: {\n            xMin: 0,\n            xMax: 357,\n            yMin: -178,\n            yMax: 178,\n            ha: 357,\n            o: 'm 242 256 b 256 257 249 257 253 257 b 270 256 260 257 263 257 b 514 0 412 248 514 131 b 496 -95 514 -31 508 -63 b 255 -257 454 -200 355 -257 b 61 -166 184 -257 112 -228 b 0 -2 19 -117 0 -58 b 242 256 0 126 96 248 z m 267 190 b 257 191 262 190 259 191 b 245 190 254 191 251 190 b 153 159 212 188 179 177 l 147 156 l 202 101 l 257 46 l 311 101 l 366 156 l 361 159 b 267 190 334 177 302 188 z m 155 -55 l 210 0 l 155 54 l 101 109 l 97 104 b 66 0 77 74 66 37 b 71 -44 66 -15 68 -30 b 97 -105 77 -66 86 -87 l 101 -110 z m 416 104 b 413 109 414 107 413 109 b 358 54 413 109 388 84 l 304 0 l 358 -55 l 413 -110 l 416 -105 b 447 0 437 -74 447 -37 b 416 104 447 36 437 73 z m 312 -102 b 257 -47 282 -72 257 -47 b 202 -102 257 -47 232 -72 l 147 -156 l 153 -160 b 257 -191 183 -180 220 -191 b 361 -160 294 -191 330 -180 l 366 -156 z',\n        },\n        noteheadTriangleUpWhole: {\n            xMin: 0,\n            xMax: 462,\n            yMin: -149,\n            yMax: 149,\n            ha: 297,\n            o: 'm 326 213 b 333 214 327 214 330 214 b 355 194 342 214 344 212 b 647 -174 447 44 562 -101 b 659 -184 652 -178 657 -182 b 666 -198 664 -188 666 -193 b 650 -214 666 -207 660 -214 b 598 -200 645 -214 641 -213 b 333 -161 514 -174 423 -161 b 68 -200 242 -161 152 -174 b 16 -214 25 -213 20 -214 b 0 -198 7 -214 0 -208 b 12 -179 0 -190 1 -189 b 311 194 100 -106 216 40 b 326 213 320 208 322 211 z m 338 141 b 333 153 336 147 333 153 b 327 141 333 153 330 147 b 190 -130 285 41 232 -63 b 185 -138 187 -134 185 -138 b 185 -138 185 -138 185 -138 b 185 -138 185 -138 185 -138 b 195 -137 187 -138 190 -138 b 224 -134 201 -136 214 -135 b 333 -128 260 -130 296 -128 b 410 -131 359 -128 384 -129 b 470 -137 425 -132 454 -135 b 480 -138 475 -138 479 -138 b 481 -138 481 -138 481 -138 b 481 -138 481 -138 481 -138 b 478 -133 481 -138 479 -135 b 338 141 436 -67 381 40 z',\n        },\n        noteheadTriangleUpHalf: {\n            xMin: 0,\n            xMax: 323,\n            yMin: -149,\n            yMax: 149,\n            ha: 298,\n            o: 'm 225 213 b 232 214 227 214 230 214 b 253 191 242 214 245 212 b 447 -169 316 42 385 -85 b 465 -198 461 -187 465 -193 b 463 -204 465 -200 464 -202 b 450 -214 461 -211 457 -214 b 431 -208 446 -214 439 -212 b 233 -162 368 -178 300 -162 b 33 -208 165 -162 97 -178 b 15 -214 25 -212 19 -214 b 5 -209 11 -214 8 -213 b 0 -199 2 -206 0 -203 b 9 -181 0 -194 3 -188 b 213 194 67 -109 149 42 b 225 213 218 208 220 211 z m 280 51 b 264 85 274 62 267 78 l 258 98 l 248 83 b 93 -135 201 9 143 -73 b 87 -143 90 -139 87 -143 b 87 -144 87 -144 87 -144 b 87 -144 87 -144 87 -144 b 94 -141 87 -144 90 -142 b 297 -98 162 -113 233 -98 b 354 -102 317 -98 336 -99 b 363 -104 359 -103 363 -104 b 363 -104 363 -104 363 -104 b 360 -97 363 -103 361 -101 b 280 51 337 -60 304 2 z',\n        },\n        noteheadTriangleUpBlack: {\n            xMin: 0,\n            xMax: 322,\n            yMin: -149,\n            yMax: 149,\n            ha: 297,\n            o: 'm 224 213 b 232 214 226 213 229 214 b 250 197 241 214 244 211 b 277 135 269 152 270 149 b 288 111 280 127 285 117 b 336 12 296 92 330 23 b 344 -3 336 12 340 5 b 376 -60 360 -32 363 -38 b 452 -177 406 -112 430 -148 b 463 -198 463 -191 463 -191 b 447 -214 463 -208 458 -214 l 447 -214 l 441 -214 l 430 -208 b 232 -163 368 -178 300 -163 b 33 -208 163 -163 95 -178 l 22 -214 l 16 -214 l 16 -214 b 0 -198 6 -214 0 -208 b 11 -177 0 -191 0 -191 b 75 -81 29 -154 52 -120 b 119 -3 93 -52 102 -36 b 127 12 123 5 127 12 b 176 111 133 23 167 92 b 186 135 178 117 183 127 b 213 197 193 149 194 152 b 224 213 218 207 220 210 z',\n        },\n        noteheadDiamondWhole: {\n            xMin: 0,\n            xMax: 462,\n            yMin: -138,\n            yMax: 138,\n            ha: 277,\n            o: 'm 326 198 b 333 199 328 199 330 199 b 350 189 340 199 342 198 b 638 20 417 112 517 53 b 654 16 645 19 652 17 b 666 0 662 14 666 7 b 654 -16 666 -7 662 -14 b 638 -20 652 -17 645 -19 b 352 -186 518 -53 419 -110 b 333 -199 342 -198 340 -199 b 316 -189 326 -199 324 -198 b 28 -20 249 -112 149 -53 b 12 -16 21 -19 14 -17 b 0 0 4 -14 0 -7 b 12 16 0 7 4 14 b 28 20 14 17 21 19 b 316 189 149 53 249 112 b 326 198 321 194 324 197 z m 338 143 b 333 149 335 146 333 149 b 328 143 333 149 331 146 b 172 4 290 85 233 35 b 165 0 168 2 165 0 b 172 -4 165 0 168 -2 b 328 -143 233 -35 290 -85 b 333 -149 331 -147 332 -149 b 335 -146 334 -149 334 -148 b 494 -4 370 -91 432 -35 b 501 0 498 -2 501 0 b 494 4 501 0 498 2 b 338 143 433 35 376 85 z',\n        },\n        noteheadDiamondHalf: {\n            xMin: 0,\n            xMax: 322,\n            yMin: -138,\n            yMax: 138,\n            ha: 277,\n            o: 'm 225 198 b 232 199 227 199 229 199 b 251 183 240 199 243 197 b 445 19 295 109 362 52 b 464 0 461 13 464 10 b 447 -18 464 -9 460 -13 b 251 -183 365 -49 294 -109 b 232 -199 243 -197 240 -199 b 213 -183 224 -199 221 -197 b 19 -19 169 -109 102 -52 b 0 0 3 -13 0 -10 b 17 18 0 9 3 13 b 213 183 99 50 169 109 b 225 198 218 193 221 196 z m 255 119 b 251 122 253 121 252 122 b 244 114 250 122 249 120 b 98 -17 208 61 151 10 l 95 -19 l 98 -21 b 211 -120 138 -44 176 -78 b 213 -123 212 -122 212 -123 b 213 -122 213 -123 213 -122 b 366 17 244 -72 311 -11 l 369 19 l 366 21 b 255 119 327 44 283 82 z',\n        },\n        noteheadDiamondBlack: {\n            xMin: 0,\n            xMax: 322,\n            yMin: -138,\n            yMax: 138,\n            ha: 277,\n            o: 'm 225 198 b 232 199 227 199 229 199 b 253 180 241 199 243 197 b 444 19 297 107 363 52 b 464 0 461 13 464 10 b 444 -19 464 -10 461 -13 b 253 -180 363 -52 297 -107 b 232 -199 243 -197 241 -199 b 211 -180 223 -199 221 -197 b 19 -19 167 -107 101 -52 b 0 0 3 -13 0 -10 b 19 19 0 10 3 13 b 211 180 101 52 167 107 b 225 198 219 194 221 196 z',\n        },\n        augmentationDot: {\n            xMin: -63,\n            xMax: 63,\n            yMin: -63,\n            yMax: 63,\n            ha: 126,\n            o: 'm -18 89 b 0 90 -12 90 -6 90 b 90 0 49 90 90 49 b 89 -18 90 -6 90 -12 b -1 -90 79 -64 39 -90 b -70 -57 -26 -90 -52 -80 b -90 -1 -84 -40 -90 -20 b -18 89 -90 40 -63 79 z',\n        },\n        tremolo1: {\n            xMin: -252,\n            xMax: 216,\n            yMin: -185,\n            yMax: 148,\n            ha: 333,\n            o: 'm 265 211 b 275 213 269 212 272 213 b 311 175 295 213 311 194 b 301 151 311 166 308 158 b 243 110 297 147 295 145 b 175 64 224 97 194 77 b 107 18 156 52 126 31 b 40 -27 89 6 58 -15 b -28 -73 21 -40 -9 -60 b -95 -119 -46 -86 -77 -106 b -162 -164 -113 -131 -144 -152 b -230 -210 -181 -177 -211 -197 b -285 -247 -249 -223 -274 -240 b -310 -263 -297 -255 -308 -263 b -326 -267 -315 -266 -321 -267 b -363 -230 -346 -267 -363 -250 b -357 -212 -363 -224 -361 -218 b -309 -174 -353 -205 -350 -202 b -203 -103 -287 -160 -240 -128 b -68 -11 -167 -78 -106 -37 b 67 80 -30 14 31 55 b 194 166 104 105 161 143 b 265 211 255 207 259 210 z',\n        },\n        flag8thUp: {\n            xMin: -17,\n            xMax: 234,\n            yMin: -745,\n            yMax: -4,\n            ha: 741,\n            o: 'm -25 -167 l -25 -5 l -21 -5 b 1 -29 -9 -5 -3 -12 b 183 -326 32 -144 91 -241 b 336 -686 285 -421 336 -551 b 219 -1028 336 -802 298 -923 b 172 -1072 191 -1065 183 -1072 b 150 -1052 158 -1072 150 -1063 b 158 -1032 150 -1046 153 -1039 b 284 -707 241 -935 284 -818 b 185 -446 284 -610 251 -517 b -24 -328 144 -402 72 -361 b -25 -167 -24 -328 -25 -295 z',\n        },\n        flag8thDown: {\n            xMin: -15,\n            xMax: 271,\n            yMin: 4,\n            yMax: 745,\n            ha: 741,\n            o: 'm 242 1071 b 252 1073 246 1072 249 1073 b 277 1051 260 1073 267 1066 b 390 687 352 938 390 810 b 343 464 390 609 374 533 b 248 331 319 413 285 365 b 60 125 166 256 110 194 b 0 21 35 90 10 47 b -19 5 -4 11 -12 5 l -22 5 l -22 167 l -22 328 l -17 328 b 105 350 13 328 69 338 b 334 722 241 396 334 547 b 240 1027 334 826 301 934 b 229 1050 230 1041 229 1044 b 242 1071 229 1060 234 1068 z',\n        },\n        flag16thUp: {\n            xMin: -17,\n            xMax: 234,\n            yMin: -847,\n            yMax: -4,\n            ha: 843,\n            o: 'm -25 -151 l -25 -5 l -21 -5 b 0 -23 -11 -5 -5 -11 b 208 -289 31 -96 103 -189 b 336 -592 292 -369 336 -477 b 311 -740 336 -641 328 -691 l 308 -751 l 312 -762 b 336 -906 328 -808 336 -857 b 241 -1185 336 -1004 304 -1103 b 202 -1220 218 -1215 213 -1220 b 180 -1198 188 -1220 180 -1210 b 187 -1181 180 -1193 182 -1187 b 286 -923 252 -1106 286 -1015 b 283 -873 286 -906 285 -890 b 278 -844 281 -861 279 -849 b 274 -830 277 -842 276 -836 b 152 -651 255 -758 210 -692 b -10 -612 119 -628 51 -612 b -22 -611 -16 -612 -21 -612 l -25 -611 l -25 -465 l -25 -319 l -21 -319 b 0 -336 -11 -319 -5 -325 b 207 -602 31 -410 105 -504 b 275 -685 235 -628 260 -658 b 277 -688 276 -687 277 -688 b 280 -680 278 -688 279 -685 b 286 -609 284 -657 286 -633 b 280 -541 286 -586 284 -563 b 278 -530 280 -537 279 -532 b 274 -516 277 -528 276 -522 b 152 -337 255 -444 210 -378 b -10 -298 119 -315 51 -298 b -22 -298 -16 -298 -21 -298 l -25 -297 z',\n        },\n        flag16thDown: {\n            xMin: -15,\n            xMax: 267,\n            yMin: 4,\n            yMax: 745,\n            ha: 741,\n            o: 'm 319 1071 b 328 1073 322 1072 325 1073 b 350 1054 337 1073 344 1067 b 384 901 373 1008 384 955 b 360 766 384 856 376 810 l 356 756 l 360 745 b 384 615 376 703 384 659 b 273 336 384 516 346 416 b 217 282 258 319 241 302 b -1 19 125 204 42 104 b -19 5 -5 11 -13 5 l -22 5 l -22 146 l -22 287 l -12 288 b 212 369 90 304 162 330 b 339 620 294 433 339 524 b 330 691 339 644 336 668 l 329 699 l 323 690 b 217 569 296 645 265 610 b -1 305 125 491 42 390 b -19 292 -5 297 -13 292 l -22 292 l -22 433 l -22 573 l -12 575 b 194 643 78 589 147 611 b 339 908 286 704 339 806 b 313 1030 339 950 330 991 b 306 1050 306 1045 306 1045 b 319 1071 306 1060 311 1068 z',\n        },\n        flag32ndUp: {\n            xMin: -17,\n            xMax: 233,\n            yMin: -1005,\n            yMax: 96,\n            ha: 1101,\n            o: 'm -25 -6 l -25 139 l -21 139 b 1 121 -11 139 -6 134 b 172 -93 31 61 97 -21 b 201 -121 182 -103 195 -115 b 328 -375 266 -184 311 -274 b 335 -464 333 -404 335 -434 b 317 -612 335 -513 329 -564 l 313 -626 l 315 -632 b 328 -689 320 -647 325 -670 b 335 -778 333 -717 335 -747 b 317 -926 335 -827 329 -878 l 313 -940 l 315 -946 b 328 -1002 320 -961 325 -984 b 335 -1092 333 -1032 335 -1062 b 280 -1346 335 -1177 316 -1264 b 228 -1441 265 -1380 236 -1432 b 213 -1447 224 -1445 218 -1447 b 191 -1425 202 -1447 191 -1438 b 198 -1406 191 -1419 192 -1416 b 284 -1118 254 -1317 284 -1215 b 281 -1072 284 -1103 283 -1087 b 118 -798 269 -948 207 -844 b 6 -778 93 -785 60 -779 l -25 -778 l -25 -634 l -25 -489 l -21 -489 b 1 -507 -11 -489 -6 -494 b 172 -720 31 -567 97 -649 b 275 -848 229 -774 249 -800 l 281 -858 l 282 -849 b 284 -806 283 -834 284 -820 b 118 -484 284 -663 220 -537 b 6 -465 93 -471 60 -465 l -25 -464 l -25 -320 l -25 -175 l -21 -175 b 1 -193 -11 -175 -6 -180 b 172 -406 31 -253 97 -335 b 275 -534 229 -460 249 -486 l 281 -544 l 282 -535 b 284 -492 283 -521 284 -506 b 118 -170 284 -349 220 -223 b 6 -151 93 -157 60 -151 l -25 -151 z',\n        },\n        flag32ndDown: {\n            xMin: -15,\n            xMax: 270,\n            yMin: -96,\n            yMax: 895,\n            ha: 991,\n            o: 'm 292 1287 b 300 1288 294 1288 297 1288 b 309 1287 303 1288 306 1288 b 374 1151 324 1281 359 1209 b 388 1039 383 1115 388 1077 b 368 904 388 993 381 947 l 365 896 l 368 886 b 374 864 370 881 372 871 b 388 752 383 828 388 790 b 368 618 388 706 381 660 l 365 609 l 368 599 b 374 578 370 594 372 584 b 388 467 384 541 388 504 b 236 128 388 339 334 215 b 201 99 226 119 226 119 b 0 -122 110 27 36 -55 b -19 -139 -5 -133 -12 -139 l -22 -139 l -22 0 l -22 138 l -16 138 b 200 215 66 150 144 178 b 340 485 287 273 340 376 b 336 531 340 501 339 516 l 335 540 l 333 537 b 236 415 306 488 275 449 b 201 385 226 406 226 405 b 0 164 110 313 36 231 b -19 148 -5 153 -12 148 l -22 148 l -22 286 l -22 424 l -16 425 b 200 501 66 437 144 464 b 340 772 287 559 340 663 b 336 818 340 787 339 803 l 335 827 l 333 823 b 236 701 306 774 275 735 b 201 672 226 692 226 692 b 0 451 110 600 36 518 b -19 434 -5 440 -12 434 l -22 434 l -22 572 l -22 711 l -16 711 b 219 802 77 725 165 759 b 339 1058 298 865 339 959 b 286 1246 339 1122 322 1187 b 278 1267 279 1258 278 1260 b 292 1287 278 1276 284 1284 z',\n        },\n        flag64thUp: {\n            xMin: -17,\n            xMax: 233,\n            yMin: -933,\n            yMax: 296,\n            ha: 1230,\n            o: 'm -25 282 l -25 427 l -21 427 b 2 404 -9 427 -4 421 b 148 203 25 333 72 268 b 313 -42 230 134 277 64 b 335 -182 328 -86 335 -134 b 309 -332 335 -233 327 -284 l 307 -339 l 312 -354 b 335 -496 328 -399 335 -447 b 309 -646 335 -547 327 -598 l 307 -653 l 312 -668 b 335 -809 328 -713 335 -761 b 309 -960 335 -860 327 -911 l 307 -966 l 312 -981 b 335 -1122 328 -1027 335 -1075 b 288 -1325 335 -1191 320 -1260 b 265 -1344 281 -1340 276 -1344 b 243 -1322 252 -1344 243 -1335 b 251 -1300 243 -1317 243 -1316 b 289 -1125 276 -1244 289 -1184 b 173 -854 289 -1018 248 -915 b 34 -798 127 -816 83 -798 b -9 -802 20 -798 5 -800 b -21 -804 -14 -803 -20 -804 l -25 -804 l -25 -659 l -25 -515 l -21 -515 b 2 -537 -9 -515 -4 -520 b 148 -738 25 -609 72 -673 b 274 -892 204 -785 247 -838 b 279 -900 277 -898 279 -900 b 280 -898 280 -900 280 -899 b 282 -886 280 -897 281 -892 b 289 -811 287 -861 289 -836 b 173 -540 289 -703 246 -600 b 34 -484 127 -502 83 -484 b -9 -489 20 -484 5 -486 b -21 -490 -14 -489 -20 -490 l -25 -490 l -25 -346 l -25 -201 l -21 -201 b 2 -224 -9 -201 -4 -207 b 148 -424 25 -295 72 -360 b 274 -578 204 -471 247 -524 b 279 -586 277 -584 279 -586 b 280 -584 280 -586 280 -585 b 282 -573 280 -583 281 -578 b 289 -497 287 -548 289 -522 b 173 -226 289 -389 246 -286 b 34 -171 127 -188 83 -171 b -9 -175 20 -171 5 -172 b -21 -176 -14 -176 -20 -176 l -25 -176 l -25 -32 l -25 113 l -21 113 b 2 90 -9 113 -4 107 b 148 -110 25 19 72 -46 b 274 -264 204 -158 247 -210 b 279 -272 277 -270 279 -272 b 280 -270 280 -272 280 -272 b 282 -259 280 -269 281 -264 b 289 -184 287 -234 289 -208 b 173 88 289 -75 246 28 b 34 143 127 125 83 143 b -9 139 20 143 5 142 b -21 137 -14 138 -20 137 l -25 137 z',\n        },\n        flag64thDown: {\n            xMin: -15,\n            xMax: 271,\n            yMin: -296,\n            yMax: 820,\n            ha: 1116,\n            o: 'm 272 1179 b 281 1181 275 1180 278 1181 b 297 1174 286 1181 292 1178 b 359 1098 322 1154 344 1127 b 390 972 380 1059 390 1016 b 357 836 390 926 379 879 l 351 825 l 353 823 b 359 812 354 822 357 817 b 390 685 380 773 390 729 b 357 549 390 639 379 593 l 351 539 l 353 536 b 359 526 354 535 357 530 b 390 399 380 486 390 443 b 357 263 390 353 379 306 l 351 252 l 353 250 b 390 113 374 218 390 162 b 390 113 390 113 390 113 b 246 -148 390 9 339 -84 b -1 -411 129 -228 30 -334 b -18 -426 -4 -420 -11 -426 l -22 -427 l -22 -291 l -22 -156 l -13 -155 b 156 -124 51 -152 115 -140 b 338 126 266 -80 338 23 b 326 195 338 150 334 173 b 321 207 324 204 323 207 b 318 203 321 207 319 205 b 246 139 299 180 276 159 b -1 -125 129 59 30 -48 b -18 -140 -4 -134 -11 -139 l -22 -140 l -22 -5 l -22 131 l -13 131 b 156 163 51 134 115 146 b 338 413 266 206 338 310 b 326 482 338 436 334 459 b 321 493 324 490 323 493 b 318 489 321 493 319 492 b 246 425 299 466 276 446 b -1 162 129 345 30 239 b -18 147 -4 153 -11 147 l -22 146 l -22 282 l -22 417 l -13 418 b 156 449 51 421 115 433 b 338 699 266 493 338 596 b 326 768 338 723 334 746 b 321 780 324 777 323 780 b 318 776 320 780 319 778 b 246 712 299 753 276 732 b -1 448 129 632 30 525 b -19 433 -4 439 -11 434 l -22 433 l -22 568 l -22 704 l -13 704 b 156 736 51 707 115 719 b 338 985 264 778 337 879 l 338 985 b 272 1137 338 1045 313 1103 b 259 1159 262 1146 259 1150 b 272 1179 259 1168 265 1176 z',\n        },\n        flag128thUp: {\n            xMin: -17,\n            xMax: 231,\n            yMin: -987,\n            yMax: 496,\n            ha: 1484,\n            o: 'm -25 582 l -25 715 l -21 715 b 3 693 -11 715 -6 710 b 150 501 30 639 82 570 b 237 396 191 459 212 434 b 333 93 300 302 333 195 b 311 -46 333 45 326 -2 b 307 -60 308 -54 307 -57 b 310 -72 307 -63 308 -65 b 332 -220 325 -121 332 -171 b 311 -359 332 -269 325 -316 b 307 -374 308 -368 307 -371 b 310 -386 307 -377 308 -379 b 332 -534 325 -434 332 -485 b 311 -673 332 -583 325 -630 b 307 -688 308 -682 307 -685 b 310 -700 307 -690 308 -693 b 332 -848 325 -748 332 -799 b 311 -987 332 -896 325 -944 b 307 -1001 308 -995 307 -998 b 310 -1013 307 -1004 308 -1007 b 333 -1161 325 -1062 333 -1113 b 268 -1391 333 -1246 311 -1326 b 235 -1422 251 -1417 246 -1422 b 213 -1402 221 -1422 213 -1413 b 220 -1382 213 -1396 215 -1389 b 286 -1176 265 -1322 286 -1250 b 163 -883 286 -1073 244 -966 b -16 -806 122 -841 54 -812 b -23 -805 -19 -806 -22 -806 l -25 -805 l -25 -673 l -25 -541 l -21 -541 b 3 -562 -11 -541 -6 -545 b 150 -754 30 -617 82 -685 b 273 -921 209 -814 242 -860 l 280 -933 l 281 -927 b 287 -861 285 -906 287 -884 b 163 -569 287 -756 243 -650 b -16 -492 122 -527 54 -498 b -23 -492 -19 -492 -22 -492 l -25 -491 l -25 -359 l -25 -227 l -21 -227 b 3 -248 -11 -227 -6 -231 b 150 -441 30 -303 82 -372 b 273 -608 209 -500 242 -546 l 280 -620 l 281 -614 b 287 -548 285 -592 287 -570 b 163 -255 287 -442 243 -336 b -16 -179 122 -213 54 -184 b -23 -178 -19 -178 -22 -178 l -25 -178 l -25 -45 l -25 87 l -21 87 b 3 66 -11 87 -6 83 b 150 -127 30 11 82 -58 b 273 -294 209 -186 242 -232 l 280 -306 l 281 -300 b 287 -234 285 -278 287 -256 b 163 59 287 -129 243 -23 b -16 135 122 100 54 129 b -23 136 -19 135 -22 136 l -25 136 l -25 268 l -25 401 l -21 401 b 3 379 -11 401 -6 397 b 150 187 30 325 82 256 b 273 20 209 127 242 82 l 280 8 l 281 14 b 287 80 285 36 287 58 b 163 372 287 185 243 291 b -16 449 122 414 54 443 b -23 450 -19 449 -22 449 l -25 450 z',\n        },\n        flag128thDown: {\n            xMin: -15,\n            xMax: 270,\n            yMin: -496,\n            yMax: 870,\n            ha: 1366,\n            o: 'm 292 1251 b 301 1253 295 1252 298 1253 b 325 1235 309 1253 316 1247 b 389 1031 368 1174 389 1103 b 364 898 389 986 381 941 l 359 888 l 364 876 b 389 745 381 834 389 789 b 364 612 389 700 381 654 l 359 601 l 364 589 b 389 458 381 547 389 503 b 364 325 389 413 381 368 l 359 315 l 364 303 b 389 172 381 261 389 216 b 364 39 389 127 381 81 l 359 28 l 364 16 b 390 -115 381 -26 390 -71 b 260 -391 390 -219 344 -320 b 0 -698 135 -495 36 -613 b -19 -715 -5 -709 -11 -715 l -22 -715 l -22 -582 l -21 -449 l -14 -447 b 124 -400 25 -439 79 -420 b 213 -349 168 -379 189 -367 b 340 -101 294 -288 340 -196 b 332 -36 340 -79 337 -57 b 330 -27 331 -30 331 -27 b 326 -31 329 -27 328 -29 b 260 -104 309 -57 286 -82 b 0 -412 135 -209 36 -326 b -19 -428 -5 -422 -11 -428 l -22 -428 l -22 -295 l -21 -162 l -14 -161 b 124 -113 25 -153 79 -134 b 213 -63 168 -92 189 -81 b 340 186 294 -2 340 91 b 332 251 340 207 337 229 b 330 259 331 257 331 259 b 326 255 329 259 328 258 b 260 182 309 229 286 204 b 0 -125 135 78 36 -40 b -19 -142 -5 -136 -11 -142 l -22 -142 l -22 -9 l -21 124 l -14 126 b 124 173 25 134 79 152 b 213 224 168 194 189 206 b 340 472 294 285 340 377 b 332 537 340 494 337 516 b 330 546 331 543 331 546 b 326 542 329 546 328 544 b 255 465 307 514 286 491 b 0 161 135 364 35 245 b -19 145 -4 151 -11 145 l -22 145 l -22 278 l -21 411 l -14 412 b 124 460 25 420 79 439 b 213 510 168 481 189 492 b 340 759 294 571 340 664 b 332 824 340 780 337 802 b 330 832 331 830 331 832 b 326 828 329 832 328 831 b 255 751 308 801 286 777 b 0 448 135 650 35 532 b -19 431 -4 437 -11 431 l -22 431 l -22 564 l -21 697 l -14 699 b 124 746 25 707 79 725 b 213 797 168 767 189 779 b 340 1046 295 859 340 953 b 285 1213 340 1105 322 1163 b 278 1232 281 1220 278 1226 b 292 1251 278 1241 283 1248 z',\n        },\n        accidentalFlat: {\n            xMin: -15,\n            xMax: 185,\n            yMin: -165,\n            yMax: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 398 22 640 22 640 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 l -22 -220 l -22 210 l -22 640 l -20 644 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n        },\n        accidentalNatural: {\n            xMin: 0,\n            xMax: 176,\n            yMin: -334,\n            yMax: 334,\n            ha: 667,\n            o: 'm 13 479 b 21 480 16 480 19 480 b 42 467 30 480 39 475 b 44 339 44 463 44 462 b 44 214 44 250 44 214 b 136 237 45 214 86 224 b 234 259 209 255 227 259 b 240 258 237 259 238 259 b 252 246 245 256 251 251 l 254 242 l 254 -111 l 254 -463 l 252 -467 b 232 -480 249 -475 241 -480 b 216 -474 226 -480 221 -478 b 210 -392 211 -468 210 -477 b 210 -336 210 -377 210 -358 b 209 -209 210 -245 210 -209 b 117 -231 209 -209 168 -219 b 19 -254 45 -249 27 -254 b 13 -252 17 -254 15 -253 b 1 -240 8 -251 3 -245 l 0 -237 l 0 113 l 0 463 l 1 467 b 13 479 3 472 8 477 z m 210 23 b 210 74 210 44 210 61 b 209 121 210 118 210 121 l 209 121 b 126 101 208 121 171 112 l 44 81 l 44 -18 b 44 -62 44 -35 44 -50 b 44 -116 44 -104 44 -116 b 128 -96 45 -116 82 -107 l 210 -75 z',\n        },\n        accidentalSharp: {\n            xMin: 0,\n            xMax: 239,\n            yMin: -388,\n            yMax: 388,\n            ha: 775,\n            o: 'm 232 557 b 240 558 234 558 237 558 b 261 545 249 558 258 553 b 262 405 262 541 262 540 b 263 269 262 278 262 269 b 263 269 263 269 263 269 b 322 282 275 273 319 282 b 343 269 331 282 340 277 b 344 217 344 266 344 241 b 343 165 344 192 344 168 b 295 144 339 155 337 154 l 262 136 l 262 22 b 263 -91 262 -83 262 -91 b 263 -91 263 -91 263 -91 b 322 -78 275 -88 319 -78 b 338 -84 329 -78 333 -80 b 344 -129 344 -90 344 -88 b 344 -143 344 -133 344 -138 b 344 -157 344 -148 344 -153 b 338 -203 344 -198 344 -197 b 295 -217 333 -207 333 -207 l 262 -225 l 262 -362 b 261 -504 262 -499 262 -500 b 240 -517 258 -512 249 -517 b 225 -511 235 -517 229 -515 b 218 -430 219 -505 218 -514 b 218 -368 218 -413 218 -393 b 218 -235 218 -295 218 -235 b 171 -247 218 -235 197 -241 b 123 -259 145 -253 123 -259 b 123 -400 123 -259 123 -322 b 122 -545 123 -540 123 -541 b 101 -558 118 -553 110 -558 b 86 -552 95 -558 90 -556 b 79 -469 80 -546 79 -556 b 79 -405 79 -452 79 -431 b 78 -270 79 -279 79 -270 b 78 -270 78 -270 78 -270 b 22 -282 65 -273 25 -282 b 2 -269 13 -282 5 -277 b 0 -217 1 -266 0 -242 b 2 -165 0 -192 1 -168 b 48 -144 5 -155 7 -154 l 79 -136 l 79 -23 b 78 90 79 83 79 90 b 78 90 78 90 78 90 b 22 78 65 87 25 78 b 2 91 13 78 5 83 b 0 143 1 94 0 119 b 2 195 0 168 1 192 b 48 216 5 205 7 206 l 79 224 l 79 362 b 81 504 79 499 79 500 b 101 517 84 512 93 517 b 117 511 107 517 112 515 b 123 430 123 505 123 515 b 123 367 123 413 123 392 b 123 235 123 294 123 235 b 171 246 123 235 145 240 b 218 258 197 253 218 258 b 218 399 218 258 218 322 b 220 545 218 540 218 541 b 232 557 222 549 227 555 z m 218 11 b 218 125 218 102 218 125 l 218 125 b 201 121 217 125 210 123 b 154 109 193 119 171 113 l 123 102 l 123 -12 b 123 -126 123 -74 123 -126 b 171 -114 123 -126 145 -120 b 218 -102 197 -107 218 -102 b 218 11 218 -102 218 -51 z',\n        },\n        accidentalDoubleSharp: {\n            xMin: 0,\n            xMax: 271,\n            yMin: -135,\n            yMax: 135,\n            ha: 271,\n            o: 'm 0 130 l 0 195 l 65 195 l 131 195 l 131 145 l 131 96 l 163 64 l 195 32 l 227 64 l 259 96 l 259 145 l 259 195 l 325 195 l 390 195 l 390 130 l 390 64 l 341 64 l 291 64 l 259 32 l 227 0 l 259 -32 l 291 -64 l 341 -64 l 390 -64 l 390 -130 l 390 -195 l 325 -195 l 259 -195 l 259 -145 l 259 -96 l 227 -64 l 195 -32 l 163 -64 l 131 -96 l 131 -145 l 131 -195 l 65 -195 l 0 -195 l 0 -130 l 0 -64 l 50 -64 l 99 -64 l 131 -32 l 163 0 l 131 32 l 99 64 l 50 64 l 0 64 z',\n        },\n        accidentalDoubleFlat: {\n            xMin: -15,\n            xMax: 356,\n            yMin: -165,\n            yMax: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 398 22 640 22 640 l 22 155 l 24 158 b 149 208 64 191 109 208 b 220 187 175 208 200 201 l 223 184 l 224 413 l 224 642 l 226 645 b 246 657 229 653 237 657 b 266 644 254 657 263 653 b 267 398 267 640 267 640 l 267 155 l 270 158 b 392 208 309 191 351 208 b 440 200 408 208 424 205 b 512 89 486 183 512 140 b 488 1 512 61 505 30 b 352 -148 466 -41 436 -73 b 271 -222 307 -188 297 -198 b 246 -237 256 -236 254 -237 b 230 -231 239 -237 234 -236 b 224 -164 224 -225 224 -232 b 224 -125 224 -153 224 -140 l 224 -29 l 218 -36 b 107 -148 194 -67 170 -91 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 l -22 -220 l -22 210 l -22 640 l -20 644 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z m 364 137 b 347 139 360 138 352 139 b 342 139 345 139 343 139 b 272 92 315 135 290 118 l 267 84 l 267 -39 l 267 -161 l 271 -157 b 399 88 349 -73 399 24 b 397 107 399 95 398 101 b 364 137 394 122 382 134 z',\n        },\n        accidentalParensLeft: {\n            xMin: -122,\n            xMax: -19,\n            yMin: -267,\n            yMax: 267,\n            ha: 534,\n            o: 'm -51 383 b -44 385 -49 384 -46 385 b -29 375 -38 385 -31 381 b -27 369 -28 373 -27 372 b -33 349 -27 365 -29 360 b -98 54 -71 259 -91 167 b -99 0 -98 44 -99 22 b -98 -54 -99 -22 -98 -45 b -33 -349 -91 -167 -71 -259 b -27 -368 -28 -363 -27 -365 b -44 -385 -27 -378 -34 -385 b -65 -367 -52 -385 -55 -383 b -176 0 -139 -251 -176 -125 b -65 367 -176 125 -139 251 b -51 383 -57 379 -55 381 z',\n        },\n        accidentalParensRight: {\n            xMin: 19,\n            xMax: 122,\n            yMin: -267,\n            yMax: 267,\n            ha: 535,\n            o: 'm 36 384 b 44 385 38 385 41 385 b 65 367 52 385 55 383 b 176 0 139 251 176 126 b 65 -367 176 -125 139 -250 b 44 -385 56 -380 51 -385 b 36 -383 42 -385 39 -384 b 27 -370 30 -380 27 -377 b 33 -349 27 -365 29 -359 b 99 0 77 -242 99 -121 b 33 350 99 122 77 243 b 27 371 29 359 27 366 b 36 384 27 377 30 381 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            xMin: 0,\n            xMax: 200,\n            yMin: -165,\n            yMax: 457,\n            ha: 622,\n            o: 'm 258 656 b 266 658 261 657 264 658 b 287 644 275 658 284 652 l 289 640 l 289 210 l 289 -220 l 287 -224 b 267 -237 284 -232 276 -237 b 241 -222 258 -237 256 -236 b 163 -151 216 -199 200 -183 b 24 2 78 -75 47 -41 b 0 88 8 31 0 61 b 73 200 0 140 26 183 b 120 208 88 205 104 208 b 242 158 161 208 203 191 l 245 155 l 245 398 b 246 644 245 640 245 640 b 258 656 248 649 253 654 z m 179 137 b 159 139 174 138 165 139 b 155 139 157 139 156 139 b 115 107 131 134 118 124 b 113 88 114 101 113 95 b 241 -157 113 24 163 -73 l 245 -161 l 245 -39 l 245 84 l 240 92 b 179 137 224 116 203 131 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            xMin: 0,\n            xMax: 446,\n            yMin: -165,\n            yMax: 457,\n            ha: 622,\n            o: 'm 258 656 b 266 658 261 657 264 658 b 287 644 275 658 284 652 l 289 640 l 289 210 l 289 -220 l 287 -224 b 267 -237 284 -232 276 -237 b 241 -222 258 -237 256 -236 b 163 -151 216 -199 200 -183 b 24 2 78 -75 47 -41 b 0 88 8 31 0 61 b 73 200 0 140 26 183 b 120 208 88 205 104 208 b 242 158 161 208 203 191 l 245 155 l 245 398 b 246 644 245 640 245 640 b 258 656 248 649 253 654 z m 179 137 b 159 139 174 138 165 139 b 155 139 157 139 156 139 b 115 107 131 134 118 124 b 113 88 114 101 113 95 b 241 -157 113 24 163 -73 l 245 -161 l 245 -39 l 245 84 l 240 92 b 179 137 224 116 203 131 z m 367 656 b 375 658 370 657 373 658 b 396 644 384 658 393 652 b 398 398 398 640 398 640 l 398 155 l 400 158 b 522 208 440 191 482 208 b 570 200 538 208 554 205 b 643 89 617 183 643 140 b 619 1 643 61 635 30 b 483 -148 596 -41 566 -73 b 401 -222 438 -188 427 -198 b 376 -237 386 -236 384 -237 b 355 -224 366 -237 358 -232 l 354 -220 l 354 210 l 354 640 l 355 644 b 367 656 357 649 362 654 z m 495 137 b 477 139 491 138 482 139 b 472 139 475 139 473 139 b 403 92 445 135 420 118 l 398 84 l 398 -39 l 398 -161 l 401 -157 b 529 88 479 -73 529 24 b 528 107 529 95 529 101 b 495 137 525 122 512 134 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            xMin: 0,\n            xMax: 142,\n            yMin: -373,\n            yMax: 373,\n            ha: 747,\n            o: 'm 92 536 b 101 538 95 537 98 538 b 122 524 110 538 118 532 b 123 390 123 520 123 519 l 123 259 l 151 268 b 182 277 175 276 178 277 b 184 277 183 277 183 277 b 203 265 193 276 199 272 l 204 262 l 205 213 b 205 187 205 202 205 194 b 201 154 205 159 204 159 b 158 136 197 149 194 148 l 123 125 l 123 10 b 124 -104 123 -64 123 -104 b 150 -94 124 -104 136 -100 b 179 -85 164 -89 177 -85 b 183 -84 181 -84 182 -84 b 203 -98 192 -84 200 -90 b 205 -157 204 -101 205 -130 b 204 -201 205 -179 205 -199 b 158 -226 200 -211 199 -212 l 123 -239 l 123 -380 l 123 -522 l 121 -525 b 101 -538 117 -533 109 -538 b 85 -531 95 -538 90 -536 b 79 -450 80 -526 79 -535 b 79 -387 79 -433 79 -413 b 79 -254 79 -314 79 -254 b 54 -263 79 -254 67 -258 b 19 -273 36 -270 26 -273 b 6 -267 14 -273 10 -271 b 0 -222 0 -261 0 -263 b 0 -207 0 -217 0 -213 b 0 -195 0 -203 0 -199 b 6 -148 0 -152 0 -154 b 47 -131 10 -144 10 -144 l 79 -120 l 79 -5 b 79 110 79 58 79 110 b 53 101 79 110 67 106 b 19 93 35 95 25 93 b 6 99 14 93 10 95 b 0 144 0 105 0 103 b 0 158 0 148 0 153 b 0 185 0 169 0 178 b 45 233 0 222 3 219 l 79 244 l 79 382 b 81 524 79 519 79 520 b 92 536 82 529 88 534 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            xMin: 0,\n            xMax: 335,\n            yMin: -391,\n            yMax: 391,\n            ha: 782,\n            o: 'm 373 562 b 379 563 375 563 377 563 b 399 551 388 563 395 559 l 401 548 l 401 410 l 401 272 l 403 273 b 432 278 403 273 417 275 b 463 282 448 281 457 282 b 477 276 470 282 473 280 b 483 241 482 271 483 271 b 483 216 483 234 483 226 l 483 167 l 481 164 b 471 153 479 160 475 155 b 402 140 469 152 405 140 b 401 25 401 140 401 88 l 401 -91 l 403 -90 b 432 -85 403 -90 417 -88 b 463 -80 448 -82 457 -80 b 477 -87 470 -80 473 -83 b 483 -122 482 -92 483 -91 b 483 -147 483 -128 483 -137 l 483 -196 l 481 -199 b 471 -209 479 -203 475 -207 b 402 -223 469 -210 405 -223 b 401 -359 401 -223 401 -284 l 401 -496 l 399 -500 b 379 -512 395 -507 388 -512 b 359 -500 371 -512 363 -507 l 357 -496 l 357 -363 b 356 -231 357 -240 357 -231 b 356 -231 356 -231 356 -231 b 309 -240 356 -232 334 -235 l 262 -249 l 262 -384 b 262 -448 262 -410 262 -431 b 256 -531 262 -535 261 -526 b 240 -538 251 -536 246 -538 b 220 -525 232 -538 224 -533 l 219 -522 l 218 -389 l 218 -257 l 171 -265 b 123 -274 144 -270 123 -274 b 123 -411 123 -274 123 -336 l 122 -548 l 121 -551 b 101 -563 116 -559 109 -563 b 81 -551 93 -563 85 -559 l 79 -548 l 79 -415 b 79 -282 79 -342 79 -282 b 52 -287 78 -282 66 -285 b 20 -292 36 -290 26 -292 b 6 -286 13 -292 10 -290 b 0 -241 0 -280 0 -282 b 0 -226 0 -236 0 -232 b 0 -212 0 -221 0 -216 b 6 -167 0 -171 0 -173 b 48 -155 11 -162 13 -162 l 79 -150 l 79 -35 b 79 80 79 29 79 80 b 52 76 78 80 66 78 b 20 71 36 73 26 71 b 6 77 13 71 10 73 b 0 122 0 83 0 81 b 0 136 0 126 0 131 b 0 151 0 142 0 146 b 6 196 0 192 0 190 b 48 207 11 201 13 201 l 79 213 l 79 354 l 79 496 l 81 500 b 101 512 85 508 93 512 b 121 500 109 512 116 508 l 122 497 l 123 359 l 123 221 l 171 230 b 218 239 197 235 218 239 b 218 380 218 239 218 302 b 220 524 218 519 218 520 b 240 538 223 533 231 538 b 256 531 246 538 251 536 b 262 448 261 526 262 535 b 262 384 262 431 262 410 b 263 247 262 295 262 247 b 310 255 263 247 284 251 b 357 264 335 260 357 264 b 358 406 357 264 357 328 l 358 548 l 359 551 b 373 562 362 557 367 561 z m 357 16 b 357 132 357 108 357 132 l 357 132 b 309 123 356 132 335 128 l 262 114 l 262 -1 b 263 -116 262 -76 262 -116 b 310 -107 263 -116 284 -112 b 357 -99 335 -103 357 -99 b 357 16 357 -99 357 -48 z m 218 -124 b 218 -56 218 -124 218 -96 b 218 -9 218 -42 218 -26 l 218 106 l 171 97 b 123 88 145 93 123 89 b 123 21 123 88 123 61 b 123 -27 123 6 123 -10 l 123 -142 l 170 -133 b 218 -124 196 -128 218 -124 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            xMin: -125,\n            xMax: 185,\n            yMin: -165,\n            yMax: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 575 22 640 22 639 b 23 510 22 524 22 510 b 23 510 23 510 23 510 b 164 557 49 520 160 557 b 186 534 177 557 186 546 b 176 516 186 527 183 520 b 98 489 175 515 140 503 l 22 463 l 22 405 b 22 378 22 394 22 386 b 23 347 22 354 22 347 b 23 347 23 347 23 347 b 164 393 49 356 160 393 b 186 371 177 393 186 382 b 176 352 186 364 183 357 b 98 325 175 352 140 339 l 22 300 l 22 228 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 b -22 32 -22 -220 -22 -220 b -22 284 -22 171 -22 284 b -88 262 -23 284 -52 274 b -160 240 -141 245 -154 240 b -167 241 -163 240 -164 241 b -180 262 -175 245 -180 254 b -169 281 -180 270 -176 278 b -30 329 -168 282 -92 308 l -22 332 l -22 390 b -22 448 -22 422 -22 448 b -88 426 -23 448 -52 438 b -160 404 -141 408 -154 404 b -167 405 -163 404 -164 404 b -180 426 -175 408 -180 417 b -169 445 -180 434 -176 441 b -30 493 -168 446 -92 472 l -22 495 l -22 568 b -20 644 -22 639 -22 641 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n        },\n        accidentalBuyukMucennebSharp: {\n            xMin: 0,\n            xMax: 284,\n            yMin: -388,\n            yMax: 388,\n            ha: 775,\n            o: 'm 264 557 b 272 558 267 558 269 558 b 293 545 281 558 290 553 b 294 435 294 541 294 540 b 295 329 294 337 294 329 b 296 329 296 329 296 329 b 355 342 308 333 351 342 b 375 329 364 342 372 337 b 376 277 376 326 376 302 b 375 225 376 252 376 228 b 327 204 371 215 369 214 l 294 196 l 294 142 b 295 89 294 94 294 89 b 296 89 295 89 296 89 b 389 110 314 94 384 110 b 389 110 389 110 389 110 b 407 98 397 110 403 105 l 409 95 l 409 45 b 409 25 409 37 409 30 b 404 -13 409 -11 408 -8 b 345 -32 400 -18 398 -19 b 295 -44 317 -39 295 -44 b 294 -98 294 -44 294 -68 b 295 -151 294 -147 294 -151 b 296 -151 295 -151 296 -151 b 355 -138 308 -148 351 -138 b 375 -151 364 -138 372 -143 b 376 -203 376 -154 376 -179 b 375 -255 376 -228 376 -252 b 327 -277 371 -265 369 -266 l 294 -285 l 294 -392 b 293 -504 294 -499 294 -500 b 272 -517 290 -512 281 -517 b 257 -511 267 -517 261 -515 b 251 -443 251 -505 251 -512 b 251 -398 251 -430 251 -416 b 250 -295 251 -341 251 -295 b 203 -307 250 -295 229 -301 b 156 -319 177 -313 156 -319 b 155 -430 155 -319 155 -369 b 154 -545 155 -540 155 -541 b 133 -558 151 -553 142 -558 b 118 -552 128 -558 122 -556 b 112 -482 112 -546 112 -553 b 112 -435 112 -469 112 -454 b 110 -330 112 -337 111 -330 b 110 -330 110 -330 110 -330 b 54 -342 98 -333 58 -342 b 34 -329 45 -342 37 -337 b 32 -277 33 -326 32 -302 b 34 -225 32 -252 33 -228 b 80 -204 38 -215 39 -214 l 112 -196 l 112 -143 b 111 -90 112 -94 111 -90 b 110 -90 110 -90 110 -90 b 20 -110 89 -96 25 -110 b 20 -110 20 -110 20 -110 b 2 -98 12 -110 5 -105 l 0 -95 l 0 -45 b 0 -25 0 -37 0 -30 b 5 13 0 11 0 8 b 62 32 9 18 10 19 b 111 44 89 38 111 44 b 112 97 111 44 112 68 b 111 150 112 146 111 150 b 110 150 110 150 110 150 b 54 138 98 147 58 138 b 34 151 45 138 37 143 b 32 203 33 154 32 179 b 34 255 32 228 33 252 b 80 276 38 265 39 266 l 112 284 l 112 392 b 113 504 112 499 112 500 b 133 517 116 512 125 517 b 149 511 139 517 145 515 b 155 443 155 505 155 512 b 155 397 155 430 155 415 b 155 295 155 341 155 295 b 203 306 156 295 177 300 b 250 318 229 313 250 318 b 251 429 251 318 251 368 b 252 545 251 540 251 541 b 264 557 254 549 259 555 z m 251 131 b 250 185 251 174 250 185 l 250 185 b 233 181 249 185 242 183 b 186 169 225 179 204 173 l 155 162 l 155 108 b 155 55 155 79 155 55 b 203 66 156 55 177 60 b 250 78 229 73 250 78 b 251 131 251 78 251 102 z m 251 -109 b 250 -55 251 -67 250 -55 l 250 -55 b 233 -59 249 -55 242 -57 b 186 -71 225 -62 204 -67 l 155 -79 l 155 -132 b 155 -186 155 -161 155 -186 b 203 -174 156 -186 177 -180 b 250 -162 229 -168 250 -162 b 251 -109 251 -162 251 -138 z',\n        },\n        accidentalBakiyeFlat: {\n            xMin: -129,\n            xMax: 185,\n            yMin: -165,\n            yMax: 457,\n            ha: 622,\n            o: 'm -9 656 b 0 658 -6 657 -3 658 b 20 644 9 658 17 652 b 22 524 22 640 22 639 b 22 407 22 460 22 407 b 90 441 22 407 53 422 l 157 474 l 163 475 b 164 475 163 475 163 475 b 186 453 177 475 186 465 b 184 445 186 450 185 447 b 99 396 181 436 184 438 l 22 357 l 22 256 l 22 155 l 24 158 b 146 208 64 191 106 208 b 194 200 163 208 179 205 b 267 89 241 183 267 140 b 243 1 267 61 259 30 b 107 -148 220 -41 190 -73 b 25 -222 62 -188 51 -198 b 0 -237 10 -236 9 -237 b -20 -224 -9 -237 -17 -232 b -22 57 -22 -220 -22 -220 b -22 335 -22 210 -22 335 b -90 301 -22 335 -53 320 l -157 268 l -163 268 b -164 268 -163 268 -163 268 b -186 289 -177 268 -186 277 b -184 298 -186 292 -185 295 b -99 347 -181 306 -184 304 l -22 385 l -22 513 b -20 644 -22 639 -22 640 b -9 656 -19 649 -13 654 z m 119 137 b 101 139 115 138 107 139 b 97 139 99 139 98 139 b 27 92 69 135 45 118 l 22 84 l 22 -39 l 22 -161 l 26 -157 b 153 88 104 -73 153 24 b 152 107 153 95 153 101 b 119 137 149 122 136 134 z',\n        },\n        accidentalKomaSharp: {\n            xMin: 0,\n            xMax: 142,\n            yMin: -373,\n            yMax: 373,\n            ha: 747,\n            o: 'm 92 536 b 101 538 95 537 98 538 b 122 524 110 538 118 532 b 123 390 123 520 123 519 l 123 259 l 151 268 b 182 277 175 276 178 277 b 184 277 183 277 183 277 b 203 265 193 276 199 272 l 204 262 l 205 213 b 205 187 205 202 205 194 b 201 154 205 159 204 159 b 158 136 197 149 194 148 l 123 125 l 123 10 b 124 -104 123 -64 123 -104 b 150 -94 124 -104 136 -100 b 179 -85 164 -89 177 -85 b 183 -84 181 -84 182 -84 b 203 -98 192 -84 200 -90 b 205 -157 204 -101 205 -130 b 204 -201 205 -179 205 -199 b 158 -226 200 -211 199 -212 l 123 -239 l 123 -380 l 123 -522 l 121 -525 b 101 -538 117 -533 109 -538 b 85 -531 95 -538 90 -536 b 79 -450 80 -526 79 -535 b 79 -387 79 -433 79 -413 b 79 -254 79 -314 79 -254 b 54 -263 79 -254 67 -258 b 19 -273 36 -270 26 -273 b 6 -267 14 -273 10 -271 b 0 -222 0 -261 0 -263 b 0 -207 0 -217 0 -213 b 0 -195 0 -203 0 -199 b 6 -148 0 -152 0 -154 b 47 -131 10 -144 10 -144 l 79 -120 l 79 -5 b 79 110 79 58 79 110 b 53 101 79 110 67 106 b 19 93 35 95 25 93 b 6 99 14 93 10 95 b 0 144 0 105 0 103 b 0 158 0 148 0 153 b 0 185 0 169 0 178 b 45 233 0 222 3 219 l 79 244 l 79 382 b 81 524 79 519 79 520 b 92 536 82 529 88 534 z',\n        },\n        accidentalKucukMucennebSharp: {\n            xMin: 0,\n            xMax: 188,\n            yMin: -373,\n            yMax: 373,\n            ha: 747,\n            o: 'm 127 536 b 135 538 129 537 132 538 b 156 524 144 538 153 532 b 157 420 157 520 157 519 l 157 319 l 185 328 b 216 337 209 336 212 337 b 218 337 217 337 217 337 b 237 325 227 336 233 332 l 239 322 l 239 273 b 239 247 239 262 239 254 b 235 214 239 219 238 219 b 192 196 231 209 229 208 l 157 185 l 157 129 b 158 75 157 86 157 75 b 158 75 158 75 158 75 b 202 89 158 75 178 81 l 245 103 l 250 103 b 268 91 258 102 265 98 l 270 88 l 270 39 b 270 13 270 28 270 20 b 266 -20 270 -15 270 -15 b 208 -43 262 -25 261 -25 l 157 -60 l 157 -112 b 157 -127 157 -117 157 -122 b 158 -164 157 -151 157 -164 b 184 -154 158 -164 170 -160 b 214 -145 198 -149 212 -145 b 217 -144 215 -144 216 -144 b 238 -158 226 -144 235 -150 b 239 -217 239 -161 239 -190 b 238 -261 239 -239 239 -259 b 192 -286 235 -271 233 -272 l 157 -299 l 157 -410 b 155 -525 157 -522 157 -522 b 135 -538 152 -533 143 -538 b 120 -531 130 -538 124 -536 b 113 -463 114 -525 113 -532 b 113 -417 113 -450 113 -435 b 113 -314 113 -361 113 -314 b 88 -323 113 -314 102 -318 b 53 -333 70 -330 60 -333 b 41 -327 48 -333 45 -331 b 34 -282 35 -321 34 -323 b 34 -267 34 -277 34 -273 b 34 -255 34 -263 34 -259 b 40 -208 34 -212 35 -214 b 81 -191 44 -204 44 -204 l 113 -180 l 113 -127 b 113 -75 113 -86 113 -75 b 113 -75 113 -75 113 -75 b 69 -89 112 -75 92 -81 l 26 -103 l 21 -103 b 1 -89 12 -102 4 -97 b 0 -43 0 -86 0 -65 b 2 15 0 -16 1 12 b 63 43 5 24 4 24 l 113 60 l 113 115 b 113 130 113 120 113 125 b 113 170 113 153 113 170 b 87 161 113 170 101 166 b 53 153 69 156 60 153 b 41 159 48 153 45 155 b 34 204 35 165 34 163 b 34 218 34 208 34 213 b 34 245 34 229 34 238 b 79 293 34 282 38 279 l 113 304 l 113 412 b 115 524 113 519 113 520 b 127 536 117 529 122 534 z',\n        },\n        articAccentAbove: {\n            xMin: -256,\n            xMax: 19,\n            yMin: -114,\n            yMax: 114,\n            ha: 227,\n            o: 'm -350 163 b -341 164 -348 163 -344 164 b -333 163 -338 164 -335 163 b -312 151 -330 162 -327 160 b -9 30 -231 99 -122 56 b 13 24 8 27 11 26 b 28 0 23 18 28 9 b 3 -28 28 -12 19 -24 b -19 -33 -1 -29 -11 -31 b -315 -153 -129 -58 -238 -102 b -341 -164 -331 -163 -333 -164 b -369 -136 -357 -164 -369 -151 b -364 -121 -369 -131 -367 -126 b -346 -107 -361 -117 -358 -114 b -135 -8 -285 -67 -213 -34 b -111 0 -122 -4 -111 0 b -135 8 -111 0 -122 4 b -346 107 -213 34 -285 67 b -364 121 -358 114 -361 116 b -368 136 -367 126 -368 131 b -350 163 -368 148 -361 159 z',\n        },\n        articAccentBelow: {\n            xMin: -256,\n            xMax: 19,\n            yMin: -114,\n            yMax: 114,\n            ha: 227,\n            o: 'm -350 163 b -341 164 -348 163 -344 164 b -333 163 -338 164 -335 163 b -312 151 -330 162 -327 160 b -9 30 -231 99 -122 56 b 13 24 8 27 11 26 b 28 0 23 18 28 9 b 3 -28 28 -12 19 -24 b -19 -33 -1 -29 -11 -31 b -315 -153 -129 -58 -238 -102 b -341 -164 -331 -163 -333 -164 b -369 -136 -357 -164 -369 -151 b -364 -121 -369 -131 -367 -126 b -346 -107 -361 -117 -358 -114 b -135 -8 -285 -67 -213 -34 b -111 0 -122 -4 -111 0 b -135 8 -111 0 -122 4 b -346 107 -213 34 -285 67 b -364 121 -358 114 -361 116 b -368 136 -367 126 -368 131 b -350 163 -368 148 -361 159 z',\n        },\n        articTenutoAbove: {\n            xMin: -154,\n            xMax: 154,\n            yMin: -15,\n            yMax: 15,\n            ha: 30,\n            o: 'm -208 20 b 2 22 -205 21 -101 22 b 208 20 104 22 205 21 b 221 0 216 17 221 9 b 215 -16 221 -6 219 -11 b 101 -22 209 -21 225 -22 b 0 -22 75 -22 41 -22 b -101 -22 -41 -22 -75 -22 b -215 -16 -225 -22 -209 -21 b -221 0 -219 -11 -221 -6 b -208 20 -221 8 -216 17 z',\n        },\n        articTenutoBelow: {\n            xMin: -154,\n            xMax: 154,\n            yMin: -15,\n            yMax: 15,\n            ha: 30,\n            o: 'm -208 20 b 2 22 -205 21 -101 22 b 208 20 104 22 205 21 b 221 0 216 17 221 9 b 215 -16 221 -6 219 -11 b 101 -22 209 -21 225 -22 b 0 -22 75 -22 41 -22 b -101 -22 -41 -22 -75 -22 b -215 -16 -225 -22 -209 -21 b -221 0 -219 -11 -221 -6 b -208 20 -221 8 -216 17 z',\n        },\n        articStaccatoAbove: {\n            xMin: -49,\n            xMax: 49,\n            yMin: -49,\n            yMax: 49,\n            ha: 99,\n            o: 'm -13 70 b -1 71 -9 71 -5 71 b 59 40 23 71 46 59 b 71 0 67 28 71 14 b 40 -59 71 -23 60 -46 b 0 -71 28 -67 14 -71 b -59 -40 -23 -71 -46 -60 b -71 0 -67 -28 -71 -14 b -13 70 -71 32 -48 64 z',\n        },\n        articStaccatoBelow: {\n            xMin: -49,\n            xMax: 49,\n            yMin: -49,\n            yMax: 49,\n            ha: 99,\n            o: 'm -13 70 b -1 71 -9 71 -5 71 b 59 40 23 71 46 59 b 71 0 67 28 71 14 b 40 -59 71 -23 60 -46 b 0 -71 28 -67 14 -71 b -59 -40 -23 -71 -46 -60 b -71 0 -67 -28 -71 -14 b -13 70 -71 32 -48 64 z',\n        },\n        articStaccatissimoAbove: {\n            xMin: -53,\n            xMax: 53,\n            yMin: 0,\n            yMax: 184,\n            ha: 184,\n            o: 'm -76 263 l -77 265 l 0 265 l 77 265 l 76 263 b 0 0 75 259 0 0 b -76 263 0 0 -75 259 z',\n        },\n        articStaccatissimoBelow: {\n            xMin: -53,\n            xMax: 53,\n            yMin: -184,\n            yMax: 0,\n            ha: 184,\n            o: 'm -38 -131 b 0 0 -17 -59 0 0 b 76 -263 0 0 75 -259 l 77 -265 l 0 -265 l -77 -265 l -76 -263 b -38 -131 -76 -262 -59 -203 z',\n        },\n        articMarcatoAbove: {\n            xMin: -114,\n            xMax: 114,\n            yMin: -256,\n            yMax: 19,\n            ha: 275,\n            o: 'm -9 26 b 0 28 -6 27 -3 28 b 28 3 13 28 24 18 b 33 -19 29 -1 31 -11 b 153 -315 58 -129 102 -238 b 164 -341 163 -331 164 -333 b 136 -368 164 -357 152 -368 b 107 -346 124 -368 118 -364 b 8 -135 67 -285 34 -213 b 0 -111 4 -122 0 -111 b -8 -135 0 -111 -4 -122 b -107 -346 -34 -213 -67 -285 b -136 -368 -118 -364 -124 -368 b -164 -341 -152 -368 -164 -357 b -151 -312 -164 -333 -163 -332 b -30 -9 -99 -231 -56 -122 b -21 18 -26 11 -26 12 b -9 26 -19 21 -13 25 z',\n        },\n        articMarcatoBelow: {\n            xMin: -114,\n            xMax: 114,\n            yMin: -19,\n            yMax: 256,\n            ha: 275,\n            o: 'm -145 367 b -136 369 -142 368 -139 369 b -107 346 -125 369 -117 362 b -8 135 -67 285 -34 213 b 0 111 -4 122 0 111 b 8 135 0 111 4 122 b 107 346 34 213 67 285 b 121 364 114 358 117 361 b 136 369 126 367 131 369 b 164 341 151 369 164 357 b 153 315 164 333 163 331 b 30 9 101 235 56 124 b 21 -18 26 -11 26 -12 b 0 -27 16 -24 8 -27 b -21 -18 -8 -27 -16 -24 b -30 9 -26 -12 -26 -11 b -151 312 -56 122 -99 231 b -164 341 -163 332 -164 333 b -145 367 -164 353 -156 364 z',\n        },\n        fermataAbove: {\n            xMin: -324,\n            xMax: 324,\n            yMin: 0,\n            yMax: 353,\n            ha: 353,\n            o: 'm -33 507 b 0 508 -22 508 -11 508 b 459 112 228 508 419 345 b 467 31 464 85 467 51 b 465 14 467 22 466 16 b 445 0 462 5 453 0 b 429 7 439 0 433 2 b 422 32 424 12 423 15 b 0 365 414 221 231 365 b -63 362 -33 365 -39 365 b -422 32 -265 338 -415 200 b -429 7 -423 15 -424 12 b -445 0 -433 2 -439 0 b -465 14 -453 0 -462 5 b -467 31 -466 16 -467 22 b -459 112 -467 51 -464 85 b -33 507 -422 332 -249 492 z m -15 196 b 0 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 91 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n        },\n        fermataBelow: {\n            xMin: -324,\n            xMax: 324,\n            yMin: -353,\n            yMax: 0,\n            ha: 353,\n            o: 'm -453 -2 b -445 0 -451 -1 -448 0 b -429 -7 -439 0 -433 -3 b -422 -33 -424 -12 -423 -15 b 0 -365 -414 -221 -231 -365 b 63 -362 33 -365 39 -365 b 422 -33 265 -338 415 -201 b 429 -7 423 -15 424 -12 b 445 0 433 -2 439 0 b 465 -14 453 0 462 -5 b 467 -31 466 -17 467 -23 b 463 -87 467 -46 465 -68 b 35 -507 434 -319 259 -490 b -1 -508 23 -508 11 -508 b -459 -112 -228 -508 -419 -345 b -467 -31 -464 -85 -467 -51 b -465 -14 -467 -23 -466 -17 b -453 -2 -463 -9 -458 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        fermataLongAbove: {\n            xMin: -286,\n            xMax: 286,\n            yMin: 0,\n            yMax: 364,\n            ha: 364,\n            o: 'm -399 523 b 0 524 -395 524 -392 524 l 395 524 l 399 523 b 411 511 404 521 409 516 b 412 262 412 507 412 507 b 412 141 412 213 412 173 b 406 7 412 -8 412 12 b 390 0 402 2 396 0 b 382 2 387 0 385 1 b 370 14 377 4 372 9 b 368 183 368 17 368 18 l 368 350 l 0 350 l -368 350 l -368 183 b -370 14 -368 18 -368 17 b -390 0 -373 5 -381 0 b -411 14 -399 0 -407 5 b -412 262 -412 17 -412 139 b -411 511 -412 385 -412 508 b -399 523 -409 516 -403 521 z m -15 196 b 0 197 -10 197 -5 197 b 75 163 27 197 56 184 b 98 99 91 145 98 121 b 56 17 98 67 84 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -64 187 z',\n        },\n        fermataLongBelow: {\n            xMin: -286,\n            xMax: 286,\n            yMin: -364,\n            yMax: 0,\n            ha: 364,\n            o: 'm -399 -2 b -391 0 -396 -1 -393 0 b -370 -14 -382 0 -373 -6 b -368 -184 -368 -18 -368 -18 l -368 -350 l 0 -350 l 368 -350 l 368 -184 b 370 -14 368 -18 368 -18 b 390 0 373 -5 382 0 b 411 -14 399 0 407 -5 b 412 -262 412 -17 412 -140 b 411 -511 412 -385 412 -508 b 399 -523 409 -516 404 -521 l 395 -524 l 0 -524 l -395 -524 l -399 -523 b -411 -511 -404 -521 -409 -516 b -412 -262 -412 -508 -412 -385 b -411 -14 -412 -140 -412 -17 b -399 -2 -409 -9 -404 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        fermataVeryLongAbove: {\n            xMin: -286,\n            xMax: 286,\n            yMin: 0,\n            yMax: 438,\n            ha: 438,\n            o: 'm -399 629 b 0 631 -395 631 -392 631 l 395 631 l 399 629 b 411 617 404 627 409 622 b 412 315 412 614 412 465 b 411 14 412 166 412 17 b 390 0 407 5 399 0 b 370 14 382 0 373 5 b 368 237 368 17 368 18 l 368 456 l 0 456 l -368 456 l -368 237 b -370 14 -368 18 -368 17 b -390 0 -373 5 -382 0 b -411 14 -399 0 -407 5 b -412 315 -412 17 -412 166 b -411 617 -412 465 -412 614 b -399 629 -409 622 -404 627 z m -290 384 b 3 385 -287 385 -141 385 b 289 384 145 385 287 385 b 301 372 294 382 300 377 b 303 193 303 369 303 281 b 301 14 303 105 303 17 b 281 0 298 5 290 0 b 265 7 275 0 270 2 b 259 80 260 12 259 4 b 259 130 259 94 259 111 l 259 243 l 0 243 l -259 243 l -259 130 b -259 80 -259 111 -259 94 b -265 7 -259 4 -260 12 b -281 0 -270 2 -275 0 b -301 14 -290 0 -298 5 b -303 193 -303 17 -303 105 b -301 372 -303 281 -303 369 b -290 384 -300 376 -294 382 z m -15 196 b 0 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 91 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n        },\n        fermataVeryLongBelow: {\n            xMin: -286,\n            xMax: 286,\n            yMin: -438,\n            yMax: 0,\n            ha: 438,\n            o: 'm -399 -2 b -391 0 -396 -1 -393 0 b -370 -14 -382 0 -373 -6 b -368 -237 -368 -18 -368 -18 l -368 -456 l 0 -456 l 368 -456 l 368 -237 b 370 -14 368 -18 368 -18 b 390 0 373 -5 382 0 b 411 -14 399 0 407 -5 b 412 -316 412 -17 412 -166 b 411 -617 412 -465 412 -614 b 399 -629 409 -622 404 -628 l 395 -631 l 0 -631 l -395 -631 l -399 -629 b -411 -617 -404 -628 -409 -622 b -412 -316 -412 -614 -412 -465 b -411 -14 -412 -166 -412 -17 b -399 -2 -409 -9 -404 -4 z m -290 -2 b -281 0 -287 -1 -284 0 b -261 -14 -272 0 -264 -6 b -259 -130 -259 -18 -259 -19 l -259 -243 l 0 -243 l 259 -243 l 259 -130 b 259 -81 259 -111 259 -94 b 265 -7 259 -5 260 -13 b 281 0 270 -2 275 0 b 301 -14 290 0 298 -5 b 303 -193 303 -17 303 -105 b 301 -372 303 -281 303 -369 b 289 -384 300 -377 294 -382 b 0 -385 287 -385 143 -385 b -289 -384 -143 -385 -287 -385 b -301 -372 -294 -382 -300 -377 b -303 -193 -303 -369 -303 -281 b -301 -14 -303 -105 -303 -17 b -290 -2 -300 -9 -294 -4 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        fermataVeryShortAbove: {\n            xMin: -351,\n            xMax: 351,\n            yMin: 0,\n            yMax: 571,\n            ha: 571,\n            o: 'm -9 820 b 0 822 -6 821 -3 822 b 8 820 3 822 6 821 b 35 785 15 818 17 815 b 68 733 45 770 59 747 b 98 684 76 720 90 698 b 146 606 107 670 128 635 b 193 532 164 578 185 544 b 227 477 200 519 216 495 b 313 337 277 396 301 358 b 362 260 321 325 343 290 b 406 188 380 230 400 197 b 436 140 412 179 425 157 b 505 25 500 37 505 30 b 505 22 505 24 505 23 b 491 2 505 13 499 5 b 450 0 488 1 469 0 b 409 2 431 0 412 1 b 382 37 403 4 400 7 b 350 89 373 52 358 75 b 319 138 342 102 328 124 b 271 216 311 152 289 187 b 225 290 253 244 232 278 b 191 345 217 302 202 327 b 104 485 142 424 117 464 b 8 639 73 534 24 613 b -21 686 -2 655 -15 676 b -33 704 -27 696 -33 704 b -44 686 -33 704 -38 696 b -73 639 -51 676 -64 655 b -170 485 -89 614 -133 543 b -203 430 -177 472 -192 448 b -290 290 -253 351 -277 311 b -337 216 -298 278 -319 244 b -385 138 -355 187 -376 152 b -415 89 -393 124 -407 102 b -448 37 -424 75 -438 52 b -474 2 -466 7 -468 4 b -483 0 -477 1 -480 0 b -505 22 -495 0 -505 9 b -505 25 -505 23 -505 24 b -436 140 -505 30 -500 37 b -406 188 -425 157 -412 179 b -362 260 -400 197 -380 230 b -313 337 -343 290 -321 325 b -227 477 -301 358 -277 396 b -193 532 -216 495 -200 519 b -146 606 -185 544 -164 578 b -98 684 -128 635 -107 670 b -68 733 -90 697 -76 720 b -35 785 -59 747 -45 770 b -9 820 -17 814 -14 818 z m -36 506 b -28 508 -33 507 -30 508 b -12 502 -22 508 -16 506 b 280 30 -8 498 278 36 b 281 22 281 28 281 25 b 268 2 281 14 276 5 b 226 0 265 1 246 0 b 185 2 207 0 188 1 b 58 199 178 4 182 -1 b -60 389 -7 304 -60 389 b -178 199 -60 389 -114 304 b -305 2 -302 -1 -298 4 b -314 0 -308 1 -311 0 b -336 22 -326 0 -336 10 b -334 30 -336 25 -335 27 b -43 502 -332 36 -46 498 b -36 506 -41 504 -38 506 z m -56 196 b -41 197 -51 197 -46 197 b 33 163 -14 197 15 184 b 57 99 50 145 57 121 b 15 17 57 67 43 36 b -41 0 -3 5 -22 0 b -139 99 -92 0 -139 40 b -56 196 -139 148 -105 187 z',\n        },\n        fermataVeryShortBelow: {\n            xMin: -351,\n            xMax: 351,\n            yMin: -571,\n            yMax: 0,\n            ha: 571,\n            o: 'm 9 -820 b 0 -822 6 -821 3 -822 b -8 -820 -3 -822 -6 -821 b -35 -785 -15 -818 -17 -815 b -68 -733 -45 -770 -59 -747 b -98 -684 -76 -720 -90 -698 b -146 -606 -107 -670 -128 -635 b -193 -532 -164 -578 -185 -544 b -227 -477 -200 -519 -216 -495 b -313 -337 -277 -396 -301 -358 b -362 -260 -321 -325 -343 -290 b -406 -188 -380 -230 -400 -197 b -436 -140 -412 -179 -425 -157 b -505 -25 -500 -37 -505 -30 b -505 -22 -505 -24 -505 -23 b -491 -2 -505 -13 -499 -5 b -450 0 -488 -1 -469 0 b -409 -2 -431 0 -412 -1 b -382 -37 -403 -4 -400 -7 b -350 -89 -373 -52 -358 -75 b -319 -138 -342 -102 -328 -124 b -271 -216 -311 -152 -289 -187 b -225 -290 -253 -244 -232 -278 b -191 -345 -217 -302 -202 -327 b -104 -485 -142 -424 -117 -464 b -8 -639 -73 -534 -24 -613 b 21 -686 2 -655 15 -676 b 33 -704 27 -696 33 -704 b 44 -686 33 -704 38 -696 b 73 -639 51 -676 64 -655 b 170 -485 89 -614 133 -543 b 203 -430 177 -472 192 -448 b 290 -290 253 -351 277 -311 b 337 -216 298 -278 319 -244 b 385 -138 355 -187 376 -152 b 415 -89 393 -124 407 -102 b 448 -37 424 -75 438 -52 b 474 -2 466 -7 468 -4 b 483 0 477 -1 480 0 b 505 -22 495 0 505 -9 b 505 -25 505 -23 505 -24 b 436 -140 505 -30 500 -37 b 406 -188 425 -157 412 -179 b 362 -260 400 -197 380 -230 b 313 -337 343 -290 321 -325 b 227 -477 301 -358 277 -396 b 193 -532 216 -495 200 -519 b 146 -606 185 -544 164 -578 b 98 -684 128 -635 107 -670 b 68 -733 90 -697 76 -720 b 35 -785 59 -747 45 -770 b 9 -820 17 -814 14 -818 z m 36 -506 b 28 -508 33 -507 30 -508 b 12 -502 22 -508 16 -506 b -280 -30 8 -498 -278 -36 b -281 -22 -281 -28 -281 -25 b -268 -2 -281 -14 -276 -5 b -226 0 -265 -1 -246 0 b -185 -2 -207 0 -188 -1 b -58 -199 -178 -4 -182 1 b 60 -389 7 -304 60 -389 b 178 -199 60 -389 114 -304 b 305 -2 302 1 298 -4 b 314 0 308 -1 311 0 b 336 -22 326 0 336 -10 b 334 -30 336 -25 335 -27 b 43 -502 332 -36 46 -498 b 36 -506 41 -504 38 -506 z m 56 -196 b 41 -197 51 -197 46 -197 b -33 -163 14 -197 -15 -184 b -57 -99 -50 -145 -57 -121 b -15 -17 -57 -67 -43 -36 b 41 0 3 -5 22 0 b 139 -99 92 0 139 -40 b 56 -196 139 -148 105 -187 z',\n        },\n        fermataShortAbove: {\n            xMin: -286,\n            xMax: 286,\n            yMin: 0,\n            yMax: 469,\n            ha: 469,\n            o: 'm -9 674 b 0 676 -6 675 -3 676 b 15 670 6 676 11 674 b 74 576 17 667 37 637 b 233 319 105 526 176 410 b 373 92 290 227 353 125 b 411 30 393 59 410 31 b 412 23 412 27 412 25 b 398 2 412 14 407 5 b 357 0 396 1 376 0 b 316 2 338 0 319 1 b 250 100 309 4 309 4 b 91 357 220 150 148 266 b -22 541 35 449 -17 532 b -33 558 -28 550 -33 558 b -42 544 -33 558 -37 551 b -137 389 -47 536 -89 467 b -240 223 -185 312 -231 237 b -382 2 -387 -16 -374 4 b -390 0 -385 1 -387 0 b -412 22 -402 0 -412 9 l -412 22 b -375 90 -412 29 -412 29 b -253 286 -285 236 -269 261 b -182 402 -244 301 -212 354 b -34 641 -127 491 -64 593 b -9 674 -17 668 -15 672 z m -15 196 b -1 197 -10 197 -5 197 b 74 163 27 197 56 184 b 98 99 90 145 98 121 b 55 17 98 67 83 36 b 0 0 38 5 19 0 b -98 99 -51 0 -98 40 b -15 196 -98 148 -65 187 z',\n        },\n        fermataShortBelow: {\n            xMin: -286,\n            xMax: 286,\n            yMin: -469,\n            yMax: 0,\n            ha: 469,\n            o: 'm -399 -2 b -390 0 -396 -1 -393 0 b -375 -6 -385 0 -379 -3 b -316 -100 -373 -9 -353 -39 b -157 -358 -285 -150 -214 -266 b -43 -541 -100 -449 -49 -532 b -33 -558 -38 -550 -33 -558 b -24 -544 -32 -558 -28 -552 b 20 -473 -19 -536 1 -505 b 72 -390 39 -442 62 -405 b 143 -274 81 -375 113 -322 b 291 -35 198 -185 261 -83 b 316 -2 308 -8 310 -4 b 357 0 319 -1 338 0 b 399 -2 377 0 396 -1 b 412 -23 407 -5 412 -14 b 411 -30 412 -25 412 -27 b 392 -62 410 -31 402 -46 b 355 -122 382 -78 365 -105 b 253 -287 345 -138 299 -212 b 152 -451 207 -361 162 -435 b 76 -573 142 -467 108 -522 b 4 -676 16 -671 13 -676 b 0 -676 3 -676 1 -676 b -4 -676 -1 -676 -3 -676 b -74 -576 -13 -676 -16 -671 b -233 -319 -105 -526 -176 -411 b -373 -92 -290 -227 -353 -125 b -411 -30 -393 -59 -410 -31 b -412 -23 -412 -27 -412 -25 b -399 -2 -412 -14 -407 -5 z m -15 -1 b 0 0 -10 0 -5 0 b 82 -43 31 0 64 -17 b 99 -98 93 -61 99 -80 b 0 -197 99 -150 58 -197 b -99 -98 -58 -197 -99 -150 b -82 -43 -99 -80 -93 -61 b -15 -1 -67 -21 -43 -6 z',\n        },\n        breathMarkComma: {\n            xMin: 0,\n            xMax: 168,\n            yMin: -155,\n            yMax: 155,\n            ha: 311,\n            o: 'm 96 223 b 107 224 100 224 103 224 b 236 104 164 224 218 174 b 242 55 240 88 242 71 b 66 -209 242 -42 175 -144 b 33 -224 48 -219 39 -224 b 25 -219 30 -224 28 -222 b 23 -213 24 -216 23 -215 b 36 -199 23 -208 28 -204 b 130 -56 96 -166 130 -110 b 111 8 130 -34 124 -12 l 110 10 l 100 11 b 6 82 58 12 19 42 b 0 117 2 94 0 105 b 96 223 0 170 40 217 z',\n        },\n        breathMarkUpbow: {\n            xMin: -125,\n            xMax: 125,\n            yMin: 0,\n            yMax: 409,\n            ha: 409,\n            o: 'm -171 588 b -130 589 -168 589 -166 589 l -123 589 b -83 585 -87 589 -88 589 b -23 385 -80 581 -84 594 b 34 193 8 280 34 193 b 91 385 34 193 60 280 b 149 580 122 491 148 579 b 164 590 151 586 157 590 b 179 580 170 590 176 586 b 180 577 179 579 180 579 b 99 292 180 569 169 533 b 13 6 18 16 15 6 b 13 6 13 6 13 6 b 12 5 13 6 13 6 b 0 0 9 2 5 0 b -16 11 -7 0 -13 4 b -180 573 -25 41 -180 570 b -171 588 -180 580 -177 586 z',\n        },\n        caesura: {\n            xMin: 0,\n            xMax: 457,\n            yMin: -202,\n            yMax: 303,\n            ha: 504,\n            o: 'm 423 434 b 431 436 426 435 428 436 b 453 414 443 436 453 426 b 452 406 453 411 453 409 b 37 -284 450 401 41 -281 b 23 -290 33 -289 28 -290 b 0 -268 11 -290 0 -281 b 1 -261 0 -266 0 -263 b 416 430 3 -256 413 427 b 423 434 418 431 421 433 z m 627 434 b 636 436 630 435 633 436 b 658 414 648 436 658 426 b 657 406 658 411 658 409 b 242 -284 655 401 245 -281 b 227 -290 238 -289 232 -290 b 205 -268 216 -290 205 -281 b 206 -261 205 -266 205 -263 b 621 430 208 -256 618 427 b 627 434 623 431 625 433 z',\n        },\n        caesuraCurved: {\n            xMin: 0,\n            xMax: 370,\n            yMin: -207,\n            yMax: 310,\n            ha: 517,\n            o: 'm 291 447 b 296 447 293 447 294 447 b 328 410 314 447 328 431 b 328 403 328 408 328 406 b 325 384 328 401 326 392 b 44 -284 299 206 196 -38 b 22 -298 38 -293 30 -298 b 7 -291 16 -298 11 -296 b 0 -278 2 -287 0 -283 b 11 -251 0 -272 3 -264 b 262 409 146 -12 245 246 b 291 447 264 433 273 444 z m 496 447 b 501 447 498 447 499 447 b 533 410 519 447 533 431 b 533 403 533 408 533 406 b 530 384 532 401 531 392 b 248 -284 504 206 401 -38 b 226 -298 242 -293 234 -298 b 211 -291 221 -298 216 -296 b 205 -278 207 -287 205 -283 b 215 -251 205 -272 208 -264 b 466 409 351 -12 449 246 b 496 447 469 433 477 444 z',\n        },\n        restMaxima: {\n            xMin: 0,\n            xMax: 853,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 0 0 l 0 360 l 205 360 l 409 360 l 409 0 l 409 -360 l 205 -360 l 0 -360 z m 819 0 l 819 360 l 1023 360 l 1228 360 l 1228 0 l 1228 -360 l 1023 -360 l 819 -360 z',\n        },\n        restDoubleWhole: {\n            xMin: 0,\n            xMax: 284,\n            yMin: 0,\n            yMax: 250,\n            ha: 250,\n            o: 'm 0 180 l 0 360 l 205 360 l 409 360 l 409 180 l 409 0 l 205 0 l 0 0 z',\n        },\n        restWhole: {\n            xMin: 0,\n            xMax: 330,\n            yMin: -125,\n            yMax: 0,\n            ha: 125,\n            o: 'm 0 -90 l 0 0 l 237 0 l 475 0 l 475 -90 l 475 -180 l 237 -180 l 0 -180 z',\n        },\n        restWholeLegerLine: {\n            xMin: 0,\n            xMax: 542,\n            yMin: -125,\n            yMax: 11,\n            ha: 137,\n            o: 'm 9 15 b 427 17 11 16 226 17 b 771 15 603 17 769 16 b 780 0 777 13 780 6 b 771 -15 780 -6 777 -13 b 698 -16 768 -16 760 -16 l 628 -16 l 628 -98 l 628 -180 l 390 -180 l 153 -180 l 153 -98 l 153 -16 l 83 -16 b 10 -15 21 -16 12 -16 b 0 0 3 -13 0 -6 b 9 15 0 6 3 12 z',\n        },\n        restHalf: {\n            xMin: 0,\n            xMax: 330,\n            yMin: 0,\n            yMax: 125,\n            ha: 125,\n            o: 'm 0 90 l 0 180 l 237 180 l 475 180 l 475 90 l 475 0 l 237 0 l 0 0 z',\n        },\n        restHalfLegerLine: {\n            xMin: 0,\n            xMax: 542,\n            yMin: -11,\n            yMax: 125,\n            ha: 137,\n            o: 'm 153 98 l 153 180 l 390 180 l 628 180 l 628 98 l 628 16 l 698 16 b 771 15 760 16 769 16 b 781 0 777 13 781 6 b 771 -15 781 -6 777 -13 b 427 -17 769 -16 603 -17 b 9 -15 226 -17 11 -16 b 0 0 3 -12 0 -6 b 4 12 0 4 1 8 b 58 16 9 16 5 16 b 83 16 65 16 73 16 l 153 16 z',\n        },\n        restQuarter: {\n            xMin: 0,\n            xMax: 221,\n            yMin: -365,\n            yMax: 365,\n            ha: 730,\n            o: 'm 50 524 b 56 526 52 525 54 526 b 74 516 62 526 67 523 b 96 497 78 513 88 504 b 118 478 105 489 115 481 b 181 423 143 456 154 447 b 311 305 302 317 311 310 b 310 302 311 304 310 303 b 310 299 310 301 310 300 b 298 278 310 295 310 294 b 234 132 268 233 245 181 b 222 39 226 100 222 69 b 306 -177 222 -46 251 -123 b 319 -198 318 -190 319 -191 b 303 -214 319 -208 313 -214 b 291 -212 299 -214 295 -213 b 260 -208 281 -209 270 -208 b 155 -260 221 -208 181 -227 b 122 -353 133 -287 122 -320 b 185 -490 122 -400 143 -450 b 197 -510 193 -498 197 -505 b 191 -521 197 -514 195 -517 b 181 -526 188 -524 185 -526 b 136 -495 173 -526 161 -517 b 0 -270 48 -420 0 -340 l 0 -270 l 0 -253 l 2 -243 b 157 -146 19 -182 78 -146 b 217 -152 176 -146 196 -148 l 228 -155 l 226 -152 b 124 -62 223 -150 168 -101 b 19 37 23 27 19 31 b 19 39 19 38 19 39 l 19 40 b 29 59 19 46 19 47 b 117 312 87 138 117 229 b 53 489 117 382 96 446 b 41 509 42 500 41 503 b 50 524 41 516 44 521 z',\n        },\n        rest8th: {\n            xMin: 0,\n            xMax: 258,\n            yMin: -197,\n            yMax: 219,\n            ha: 416,\n            o: 'm 98 315 b 110 316 102 315 106 316 b 177 293 132 316 159 307 b 218 207 204 271 218 239 b 191 137 218 182 209 157 l 187 132 l 193 134 b 326 260 251 150 302 198 b 331 270 328 264 330 269 b 349 279 336 276 343 279 b 371 257 360 279 371 270 b 213 -273 371 253 216 -267 b 194 -283 209 -280 202 -283 b 173 -270 185 -283 176 -279 b 172 -265 172 -268 172 -268 b 230 -62 172 -257 180 -228 b 289 134 263 46 289 134 b 289 134 289 134 289 134 b 280 128 289 134 285 131 b 149 84 241 98 194 84 b 39 121 108 84 69 96 b 0 204 13 142 0 173 b 31 282 0 232 10 260 b 98 315 48 300 69 311 z',\n        },\n        rest16th: {\n            xMin: 0,\n            xMax: 331,\n            yMin: -443,\n            yMax: 219,\n            ha: 662,\n            o: 'm 205 315 b 216 316 208 315 212 316 b 283 293 239 316 265 307 b 324 207 310 271 324 239 b 298 137 324 182 316 157 l 293 132 l 299 134 b 433 260 358 150 409 198 b 438 270 434 264 437 269 b 455 279 443 276 449 279 b 477 257 467 279 477 270 b 213 -627 477 253 216 -621 b 194 -638 209 -635 202 -638 b 173 -625 185 -638 176 -634 b 172 -620 172 -623 172 -622 b 230 -417 172 -612 180 -583 b 289 -221 263 -309 289 -221 b 289 -221 289 -221 289 -221 b 280 -227 289 -221 285 -223 b 149 -271 241 -256 194 -271 b 39 -234 108 -271 69 -259 b 0 -150 13 -213 0 -182 b 31 -73 0 -123 10 -95 b 110 -39 52 -50 81 -39 b 207 -100 149 -39 188 -60 b 218 -147 214 -114 218 -131 b 191 -218 218 -173 209 -199 l 187 -223 l 193 -221 b 326 -96 251 -205 302 -157 b 395 134 328 -91 395 133 b 395 134 395 134 395 134 b 387 128 395 134 391 131 b 256 84 347 98 301 84 b 145 121 215 84 175 96 b 106 204 119 142 106 173 b 137 282 106 232 116 260 b 205 315 155 300 176 311 z',\n        },\n        rest32nd: {\n            xMin: 0,\n            xMax: 405,\n            yMin: -443,\n            yMax: 466,\n            ha: 909,\n            o: 'm 311 670 b 322 670 315 670 318 670 b 390 647 345 670 371 662 b 431 562 417 626 431 594 b 404 492 431 536 422 511 l 400 487 l 406 488 b 539 614 464 504 515 552 b 544 625 541 619 543 623 b 562 633 549 631 555 633 b 584 612 573 633 584 625 b 213 -627 584 607 216 -621 b 194 -638 209 -635 202 -638 b 173 -625 185 -638 176 -634 b 172 -620 172 -623 172 -622 b 230 -417 172 -612 180 -583 b 289 -221 263 -309 289 -221 b 289 -221 289 -221 289 -221 b 280 -227 289 -221 285 -223 b 149 -271 241 -256 194 -271 b 39 -234 108 -271 69 -259 b 0 -150 13 -213 0 -182 b 31 -73 0 -123 10 -95 b 110 -39 52 -50 81 -39 b 207 -100 149 -39 188 -60 b 218 -147 214 -114 218 -131 b 191 -218 218 -173 209 -199 l 187 -223 l 193 -221 b 326 -96 251 -205 302 -157 b 395 134 328 -91 395 133 b 395 134 395 134 395 134 b 387 128 395 134 391 131 b 256 84 347 98 301 84 b 145 121 215 84 175 96 b 106 204 119 142 106 173 b 137 282 106 232 116 260 b 216 315 159 304 187 315 b 314 255 255 315 295 294 b 324 208 321 240 324 224 b 298 137 324 182 315 156 l 293 132 l 299 134 b 432 258 357 149 409 198 b 502 489 434 264 502 487 b 502 489 502 489 502 489 b 493 483 502 489 498 486 b 362 438 454 453 407 438 b 251 475 321 438 282 451 b 213 559 226 496 213 528 b 243 636 213 587 223 615 b 311 670 261 655 282 665 z',\n        },\n        rest64th: {\n            xMin: 0,\n            xMax: 479,\n            yMin: -689,\n            yMax: 466,\n            ha: 1155,\n            o: 'm 417 670 b 429 670 421 670 425 670 b 496 647 451 670 478 662 b 537 562 523 626 537 594 b 510 492 537 536 529 511 l 506 487 l 512 488 b 646 614 570 504 621 552 b 651 625 647 619 650 623 b 668 633 655 631 662 633 b 690 612 679 633 690 625 b 213 -982 690 607 216 -976 b 194 -993 209 -989 202 -993 b 173 -979 185 -993 176 -988 b 172 -974 172 -978 172 -977 b 230 -771 172 -966 180 -938 b 289 -575 263 -664 289 -575 b 289 -575 289 -575 289 -575 b 280 -582 289 -575 285 -578 b 149 -626 241 -611 194 -626 b 39 -589 108 -626 69 -613 b 0 -505 13 -568 0 -537 b 31 -428 0 -477 10 -449 b 110 -394 52 -405 81 -394 b 207 -454 149 -394 188 -415 b 218 -502 214 -469 218 -485 b 191 -572 218 -528 209 -553 l 187 -577 l 193 -576 b 326 -451 251 -560 302 -512 b 395 -221 328 -446 395 -222 b 395 -221 395 -221 395 -221 b 387 -227 395 -221 391 -223 b 256 -271 347 -256 301 -271 b 145 -234 215 -271 175 -259 b 106 -150 119 -213 106 -182 b 137 -73 106 -123 116 -95 b 216 -39 159 -50 187 -39 b 314 -100 255 -39 295 -60 b 324 -147 321 -114 324 -131 b 298 -218 324 -173 315 -199 l 293 -223 l 299 -221 b 432 -96 357 -205 409 -157 b 502 134 434 -91 502 133 b 502 134 502 134 502 134 b 493 128 502 134 498 131 b 362 84 454 98 407 84 b 251 121 321 84 282 96 b 213 204 226 142 213 173 b 243 282 213 232 223 260 b 322 315 265 304 294 315 b 420 255 362 315 401 294 b 431 208 427 240 431 224 b 404 137 431 182 422 156 l 400 132 l 406 134 b 539 258 463 149 515 198 b 608 489 541 264 608 487 b 608 489 608 489 608 489 b 599 483 608 489 604 486 b 468 438 560 453 513 438 b 358 475 428 438 388 451 b 319 559 332 496 319 528 b 350 636 319 587 329 615 b 417 670 368 655 388 665 z',\n        },\n        rest128th: {\n            xMin: 0,\n            xMax: 553,\n            yMin: -689,\n            yMax: 712,\n            ha: 1401,\n            o: 'm 524 1024 b 535 1025 527 1025 531 1025 b 603 1002 558 1025 584 1016 b 644 916 630 981 644 949 b 617 846 644 891 635 866 l 612 841 l 619 843 b 752 969 677 859 728 907 b 757 979 754 973 756 978 b 775 988 762 985 768 988 b 797 966 786 988 797 980 b 213 -982 797 962 216 -976 b 194 -993 209 -989 202 -993 b 173 -979 185 -993 176 -988 b 172 -974 172 -978 172 -977 b 230 -771 172 -966 180 -938 b 289 -575 263 -664 289 -575 b 289 -575 289 -575 289 -575 b 280 -582 289 -575 285 -578 b 149 -626 241 -611 194 -626 b 39 -589 108 -626 69 -613 b 0 -505 13 -568 0 -537 b 31 -428 0 -477 10 -449 b 110 -394 52 -405 81 -394 b 207 -454 149 -394 188 -415 b 218 -502 214 -469 218 -485 b 191 -572 218 -528 209 -553 l 187 -577 l 193 -576 b 326 -451 251 -560 302 -512 b 395 -221 328 -446 395 -222 b 395 -221 395 -221 395 -221 b 387 -227 395 -221 391 -223 b 256 -271 347 -256 301 -271 b 145 -234 215 -271 175 -259 b 106 -150 119 -213 106 -182 b 137 -73 106 -123 116 -95 b 216 -39 159 -50 187 -39 b 314 -100 255 -39 295 -60 b 324 -147 321 -114 324 -131 b 298 -218 324 -173 315 -199 l 293 -223 l 299 -221 b 432 -96 357 -205 409 -157 b 502 134 434 -91 502 133 b 502 134 502 134 502 134 b 493 128 502 134 498 131 b 362 84 454 98 407 84 b 251 121 321 84 282 96 b 213 204 226 142 213 173 b 243 282 213 232 223 260 b 322 315 265 304 294 315 b 420 255 362 315 401 294 b 431 208 427 240 431 224 b 404 137 431 182 422 156 l 400 132 l 406 134 b 539 258 463 149 515 198 b 608 489 541 264 608 487 b 608 489 608 489 608 489 b 599 483 608 489 604 486 b 468 438 560 453 513 438 b 358 475 428 438 388 451 b 319 559 332 496 319 528 b 350 636 319 587 329 615 b 429 670 372 659 400 670 b 526 610 468 670 507 649 b 537 563 534 595 537 579 b 511 492 537 536 528 511 l 506 487 l 512 488 b 645 613 570 504 621 553 b 715 843 647 618 715 842 b 715 843 715 843 715 843 b 706 837 714 843 711 841 b 575 793 667 808 620 793 b 464 830 534 793 495 805 b 426 914 439 851 426 882 b 456 991 426 941 436 969 b 524 1024 474 1010 495 1020 z',\n        },\n        dynamicPiano: {\n            xMin: -39,\n            xMax: 378,\n            yMin: -178,\n            yMax: 277,\n            ha: 455,\n            o: 'm 197 399 b 208 399 201 399 205 399 b 305 314 255 399 298 362 l 306 308 l 312 315 b 405 382 339 346 376 373 b 430 386 413 385 421 386 b 494 362 451 386 474 378 b 544 249 526 336 544 296 b 377 -30 544 116 475 1 b 334 -37 362 -34 347 -37 b 291 -25 316 -37 300 -33 b 281 -17 289 -23 285 -20 b 240 43 262 -1 248 20 b 237 52 238 47 237 52 b 237 53 237 52 237 53 b 198 -74 236 53 229 30 b 159 -207 166 -181 159 -202 b 160 -209 159 -208 160 -208 b 194 -221 165 -213 179 -218 b 206 -224 198 -222 204 -224 b 217 -240 213 -226 217 -233 b 208 -255 217 -246 214 -252 b 81 -257 206 -256 144 -257 b -46 -255 18 -257 -44 -256 b -56 -240 -52 -252 -56 -246 b -51 -229 -56 -236 -54 -232 b -33 -222 -48 -225 -46 -225 b 29 -191 9 -213 24 -206 b 174 291 34 -177 173 286 b 176 303 174 294 175 299 b 178 317 177 308 178 313 b 163 336 178 329 173 336 b 157 336 161 336 159 336 b 70 239 124 326 90 288 b 56 224 65 225 63 224 b 46 233 49 224 46 227 b 49 248 46 237 47 242 b 149 376 70 302 105 347 b 161 385 154 379 160 383 b 197 399 168 391 184 397 z m 399 318 b 389 320 396 320 393 320 b 318 285 370 320 340 306 b 302 263 306 273 304 270 b 297 253 301 260 299 256 b 273 176 296 250 288 226 l 251 104 l 252 97 b 266 51 253 81 258 64 b 296 29 274 39 288 29 b 298 29 297 29 297 29 b 309 34 299 30 304 32 b 429 230 370 62 420 144 b 431 256 430 240 431 249 b 399 318 431 289 421 307 z',\n        },\n        dynamicMezzo: {\n            xMin: 35,\n            xMax: 493,\n            yMin: -19,\n            yMax: 272,\n            ha: 291,\n            o: 'm 191 390 b 206 392 196 391 201 392 b 282 350 235 392 265 376 b 291 331 285 345 291 333 b 292 330 291 330 292 330 b 297 337 292 330 294 331 b 329 371 306 350 317 362 b 339 380 332 374 336 377 b 376 392 347 388 361 392 b 434 372 395 392 418 385 b 463 331 447 362 461 341 b 464 330 463 330 463 330 b 469 337 464 330 466 331 b 501 371 478 350 489 362 b 511 380 504 374 508 377 b 548 392 519 388 533 392 b 606 372 567 392 589 385 b 641 295 628 354 641 323 b 633 260 641 282 639 270 b 576 69 631 256 576 72 b 574 59 576 68 575 63 b 573 47 573 55 573 51 b 585 25 573 35 577 25 b 586 26 585 25 585 25 b 684 127 621 30 664 74 b 699 145 690 143 692 145 b 709 135 706 145 709 142 b 696 98 709 128 705 116 b 595 -12 672 47 640 12 b 582 -20 590 -15 584 -19 b 552 -27 573 -25 563 -27 b 481 18 524 -27 495 -10 b 470 63 474 31 470 47 b 478 98 470 76 473 88 b 535 289 480 102 535 285 b 537 298 535 290 536 294 b 538 311 538 303 538 307 b 522 339 538 324 533 333 b 516 341 519 340 517 341 b 507 337 514 341 512 340 b 468 282 491 329 470 300 b 462 261 467 276 464 264 b 422 133 461 259 444 203 b 380 2 383 1 384 4 l 378 0 l 333 0 b 321 0 329 0 324 0 b 283 5 284 0 286 0 b 282 8 282 6 282 7 b 322 149 282 15 288 37 b 363 289 344 224 363 287 b 365 299 364 292 364 296 b 367 311 366 303 367 307 b 350 339 367 324 361 333 b 344 341 347 340 346 341 b 336 337 342 341 340 340 b 296 282 319 329 298 300 b 290 261 295 276 292 264 b 251 133 289 259 272 203 b 208 2 211 1 212 4 l 206 0 l 161 0 b 149 0 157 0 152 0 b 111 5 112 0 114 0 b 110 8 110 6 110 7 b 150 149 110 15 116 37 b 191 289 172 224 191 287 b 193 299 192 292 193 296 b 195 311 194 303 195 307 b 179 338 195 323 189 333 b 171 340 176 339 174 340 b 150 333 166 340 160 338 b 75 240 120 318 92 283 b 60 224 69 225 67 224 b 50 233 53 224 50 227 b 53 248 50 237 51 242 b 162 378 75 306 117 355 b 170 383 164 379 168 381 b 191 390 176 386 183 389 z',\n        },\n        dynamicForte: {\n            xMin: -87,\n            xMax: 440,\n            yMin: -182,\n            yMax: 415,\n            ha: 597,\n            o: 'm 486 597 b 491 597 487 597 489 597 b 515 596 499 597 512 597 b 528 595 517 596 523 595 b 631 522 576 591 622 559 b 633 506 632 516 633 511 b 559 433 633 466 598 433 b 532 439 550 433 541 435 b 493 499 506 450 493 475 b 518 548 493 517 501 536 b 519 550 519 549 519 549 b 519 550 519 550 519 550 b 496 537 518 550 504 542 b 371 353 445 503 399 436 b 367 341 369 347 367 341 b 407 341 367 341 385 341 b 414 341 410 341 412 341 b 459 335 452 341 451 341 b 468 314 465 330 468 322 b 459 293 468 306 465 298 b 411 286 451 287 453 286 b 399 286 407 286 404 286 l 353 286 l 351 279 b 174 -146 320 120 253 -41 b -24 -262 120 -218 45 -262 b -28 -262 -25 -262 -26 -262 b -125 -165 -83 -260 -125 -217 b -122 -140 -125 -157 -124 -148 b -53 -89 -113 -106 -83 -89 b 17 -142 -23 -89 8 -107 b 19 -158 18 -147 19 -153 b -13 -214 19 -181 7 -202 b -16 -217 -15 -216 -16 -216 b -16 -217 -16 -217 -16 -217 b -10 -215 -15 -217 -13 -216 b 80 -130 25 -205 58 -173 b 102 -74 88 -115 93 -102 b 186 245 126 -3 146 72 b 196 285 191 267 196 285 b 196 285 196 285 196 285 b 151 286 196 286 192 286 b 98 290 103 286 102 287 b 83 314 88 296 83 305 b 98 338 83 323 88 332 b 157 341 102 341 102 341 l 211 341 l 215 353 b 486 597 264 491 372 588 z',\n        },\n        dynamicRinforzando: {\n            xMin: 58,\n            xMax: 357,\n            yMin: 0,\n            yMax: 275,\n            ha: 275,\n            o: 'm 383 395 b 401 396 389 395 395 396 b 508 352 446 396 495 377 b 515 327 513 344 515 336 b 490 285 515 310 506 293 b 465 278 482 280 474 278 b 423 301 450 278 434 286 b 365 332 408 322 386 332 b 299 281 335 332 307 314 b 296 272 298 277 297 273 b 294 266 295 271 294 269 b 291 260 293 264 292 261 b 252 133 290 259 273 201 b 210 2 213 1 214 4 l 207 0 l 163 0 b 150 0 158 0 154 0 b 112 5 113 0 115 0 b 111 8 112 6 111 7 b 152 149 111 15 118 37 b 193 289 174 225 192 287 b 195 300 193 292 194 296 b 197 315 196 305 197 310 b 175 344 197 331 189 342 b 170 344 173 344 172 344 b 109 316 149 344 127 334 b 95 306 100 306 99 306 b 84 316 88 306 84 310 b 87 325 84 319 85 322 b 149 372 99 341 127 363 b 211 388 168 381 197 388 b 215 388 213 388 214 388 b 283 349 245 385 267 372 b 285 345 284 347 285 345 b 285 345 285 345 285 345 b 291 350 286 345 288 347 b 383 395 316 374 349 390 z',\n        },\n        dynamicSforzando: {\n            xMin: 52,\n            xMax: 278,\n            yMin: -22,\n            yMax: 270,\n            ha: 292,\n            o: 'm 259 388 b 271 388 263 388 267 388 b 370 362 305 388 338 379 b 396 338 385 354 391 348 b 401 315 399 331 401 323 b 359 261 401 290 384 266 b 349 260 356 260 352 260 b 300 306 322 260 300 282 b 305 327 300 313 302 320 b 308 332 307 330 308 332 b 308 332 308 332 308 332 b 287 334 308 334 297 334 b 269 333 279 334 272 334 b 220 300 245 329 226 316 b 219 295 219 299 219 297 b 273 232 219 278 243 249 b 301 215 289 223 295 219 b 373 95 347 181 373 136 b 361 49 373 79 369 63 b 219 -32 332 -4 277 -32 b 101 7 179 -32 138 -19 b 75 51 84 19 75 34 b 85 82 75 61 78 71 b 129 106 94 98 112 106 b 164 92 142 106 154 102 b 178 59 173 83 178 71 b 170 34 178 50 175 42 l 166 29 l 168 28 b 203 22 178 24 190 22 b 226 25 211 22 219 23 b 275 68 253 31 275 52 b 274 75 275 70 274 73 b 217 132 264 98 249 114 b 122 262 161 163 127 210 b 122 270 122 265 122 267 b 259 388 122 329 184 384 z',\n        },\n        dynamicZ: {\n            xMin: 23,\n            xMax: 309,\n            yMin: 2,\n            yMax: 250,\n            ha: 248,\n            o: 'm 124 360 b 222 360 125 360 168 360 b 435 359 312 360 434 360 b 445 344 442 356 445 350 b 440 331 445 339 444 335 b 314 227 438 330 382 283 b 190 124 247 172 191 125 l 188 123 l 201 123 b 205 123 202 123 204 123 b 268 101 231 123 249 117 b 320 79 284 88 305 79 b 326 80 322 79 324 79 b 340 93 330 81 334 84 b 342 97 341 96 342 97 b 342 98 342 98 342 98 b 340 97 342 98 341 97 b 330 96 336 96 333 96 b 294 134 311 96 294 113 b 295 142 294 136 294 139 b 340 176 299 163 320 176 b 371 163 351 176 363 172 b 383 124 380 154 383 139 b 359 60 383 100 375 74 b 322 30 350 51 329 35 b 239 3 295 12 266 3 b 179 21 218 3 197 9 b 117 39 161 33 138 39 b 86 35 106 39 95 38 b 67 23 79 32 76 31 b 49 14 58 15 55 14 b 33 30 39 14 33 21 b 38 42 33 34 34 38 b 73 72 41 46 60 62 b 303 262 80 77 299 258 b 303 262 303 262 303 262 b 246 263 303 262 277 263 b 146 261 203 263 150 262 b 102 239 131 259 117 252 b 88 231 94 232 92 231 b 85 230 87 230 86 230 b 69 246 76 230 69 237 l 69 247 l 69 252 l 92 302 b 116 355 104 330 115 354 b 124 360 118 357 122 359 z',\n        },\n        ornamentTrill: {\n            xMin: -249,\n            xMax: 249,\n            yMin: 0,\n            yMax: 376,\n            ha: 376,\n            o: 'm -92 502 b -29 542 -33 541 -33 542 b -21 534 -25 542 -21 539 b -70 366 -21 532 -65 383 l -71 364 l -47 364 b 125 383 13 366 71 372 b 149 387 136 386 143 387 b 167 382 156 387 160 385 b 181 370 171 380 179 373 b 182 370 181 370 181 370 b 230 380 185 370 195 372 b 304 394 286 393 290 394 b 305 394 305 394 305 394 b 357 353 330 394 349 379 b 359 336 358 349 359 342 b 354 314 359 326 357 316 b 257 291 352 312 263 291 b 257 291 257 291 257 291 b 250 299 252 292 250 294 b 251 305 250 301 250 303 b 251 314 251 308 251 311 b 234 350 251 329 245 343 l 230 353 l 224 349 b 169 287 202 334 183 313 b 127 156 163 276 166 286 b 88 37 92 43 91 39 b -8 15 84 35 -4 15 b -8 15 -8 15 -8 15 b -14 22 -12 16 -14 17 b -8 47 -14 26 -12 33 b -2 69 -5 59 -2 69 b -2 69 -2 69 -2 69 b -45 44 -2 69 -22 58 b -122 4 -102 10 -105 9 b -151 0 -132 1 -142 0 b -256 105 -208 0 -256 46 b -255 119 -256 110 -256 114 b -223 231 -254 129 -256 121 b -195 325 -208 282 -195 325 b -195 325 -195 325 -195 325 b -198 325 -196 325 -196 325 b -274 324 -206 325 -237 325 b -340 324 -310 324 -329 324 b -354 325 -351 324 -353 324 b -359 332 -357 326 -359 329 b -356 338 -359 334 -358 336 b -308 351 -355 340 -353 340 l -261 361 l -222 362 l -182 363 l -168 411 b -152 461 -160 438 -153 460 b -92 502 -152 462 -125 480 z m 62 348 b 57 349 60 349 59 349 b 40 346 55 349 51 348 b -62 330 8 339 -30 333 b -83 321 -84 329 -82 330 b -115 211 -83 318 -93 283 b -148 88 -149 94 -148 99 b -148 87 -148 88 -148 88 b -123 53 -148 67 -137 53 b -113 55 -120 53 -117 54 b 18 133 -111 57 17 132 b 46 227 19 134 46 225 b 53 251 46 231 48 239 b 78 334 57 261 78 331 b 62 348 78 340 71 347 z',\n        },\n        ornamentTurn: {\n            xMin: -310,\n            xMax: 310,\n            yMin: -143,\n            yMax: 143,\n            ha: 286,\n            o: 'm -272 205 b -264 206 -270 206 -267 206 b -202 198 -249 206 -221 202 b 44 48 -119 177 -37 127 b 261 -91 117 -24 191 -71 b 307 -100 285 -97 297 -100 b 318 -99 311 -100 314 -99 b 401 2 362 -92 396 -51 b 402 11 401 5 402 8 b 321 87 402 58 366 87 b 258 70 301 87 279 81 b 221 60 246 63 233 60 b 157 125 186 60 157 86 b 213 194 157 158 175 179 b 277 206 234 202 256 206 b 437 90 348 206 413 162 b 447 24 444 69 447 47 b 365 -163 447 -46 416 -120 b 257 -206 331 -192 297 -206 b 178 -192 233 -206 207 -201 b -47 -48 101 -168 28 -121 b -250 86 -116 20 -180 62 b -312 99 -275 94 -295 99 b -361 83 -331 99 -346 94 b -402 6 -388 65 -402 36 b -349 -77 -402 -28 -384 -62 b -314 -85 -337 -82 -326 -85 b -260 -70 -297 -85 -280 -80 b -224 -60 -247 -63 -235 -60 b -188 -71 -211 -60 -199 -64 b -160 -126 -169 -84 -160 -105 b -189 -181 -160 -147 -169 -168 b -272 -204 -211 -195 -242 -204 b -293 -202 -279 -204 -286 -203 b -447 -6 -385 -189 -447 -103 b -435 68 -447 18 -443 43 b -280 204 -411 141 -349 196 b -272 205 -277 205 -273 205 z',\n        },\n        ornamentTurnSlash: {\n            xMin: -310,\n            xMax: 310,\n            yMin: -201,\n            yMax: 201,\n            ha: 402,\n            o: 'm -10 288 b -2 289 -7 289 -4 289 b 19 276 8 289 16 284 b 21 171 21 272 21 271 l 21 71 l 43 49 b 261 -90 120 -26 191 -71 b 307 -100 285 -97 297 -100 b 318 -99 311 -100 314 -99 b 401 2 362 -91 396 -50 b 402 12 402 5 402 8 b 321 87 402 58 367 87 b 258 70 301 87 280 82 b 221 60 246 63 233 60 b 157 125 187 60 157 86 b 214 194 157 158 175 180 b 277 206 235 202 256 206 b 431 106 342 206 402 169 b 447 24 442 82 447 54 b 443 -24 447 9 446 -7 b 258 -206 423 -127 344 -206 b 257 -206 258 -206 258 -206 b 23 -109 190 -205 102 -169 l 21 -107 l 21 -190 b 21 -223 21 -203 21 -214 b 14 -283 21 -282 20 -277 b -1 -289 10 -287 5 -289 b -22 -276 -10 -289 -18 -284 b -23 -171 -23 -272 -23 -271 l -23 -71 l -46 -49 b -250 86 -119 22 -179 62 b -312 99 -275 95 -295 99 b -360 84 -330 99 -345 94 b -401 7 -388 66 -401 36 b -349 -77 -401 -28 -383 -62 b -314 -85 -337 -82 -326 -85 b -260 -69 -297 -85 -279 -80 b -223 -60 -247 -63 -235 -60 b -177 -81 -206 -60 -190 -67 b -159 -125 -165 -93 -159 -109 b -188 -180 -159 -147 -169 -168 b -268 -203 -212 -196 -240 -203 b -376 -165 -306 -203 -345 -190 b -447 -7 -425 -124 -447 -65 b -293 202 -447 86 -390 180 b -260 206 -283 204 -272 206 b -25 109 -194 206 -105 170 l -23 107 l -23 189 b -22 276 -23 271 -23 272 b -10 288 -20 281 -15 286 z',\n        },\n        ornamentMordent: {\n            xMin: -296,\n            xMax: 296,\n            yMin: -215,\n            yMax: 198,\n            ha: 413,\n            o: 'm -11 284 b -3 285 -9 285 -6 285 b 17 273 5 285 14 280 b 19 164 19 270 19 269 l 19 59 l 68 118 b 118 179 98 155 117 178 b 131 182 122 181 127 182 b 143 179 136 182 140 181 b 307 18 145 177 232 92 l 326 -1 l 356 36 b 404 81 393 81 393 81 l 404 81 b 426 59 417 81 426 71 b 424 50 426 56 426 53 b 236 -179 421 44 241 -176 b 224 -182 233 -181 228 -182 b 211 -178 219 -182 215 -181 b 119 -89 210 -178 169 -137 b 29 0 70 -40 30 0 b 29 0 29 0 29 0 b 24 -6 29 0 27 -3 l 19 -12 l 19 -152 b 19 -218 19 -179 19 -200 b 13 -303 19 -308 19 -298 b -3 -310 9 -308 3 -310 b -23 -297 -11 -310 -19 -305 b -25 -180 -24 -294 -24 -294 l -25 -66 l -70 -121 b -118 -178 -99 -156 -116 -177 b -131 -182 -122 -181 -127 -182 b -144 -178 -135 -182 -140 -181 b -307 -18 -145 -177 -233 -91 l -326 1 l -356 -36 b -404 -81 -393 -81 -393 -81 l -404 -81 b -426 -59 -417 -81 -426 -71 b -424 -50 -426 -56 -426 -53 b -236 179 -421 -44 -241 176 b -224 182 -233 181 -228 182 b -211 179 -219 182 -215 181 b -48 18 -209 177 -116 86 l -29 0 l -27 2 l -25 5 l -25 137 b -23 272 -25 267 -25 268 b -11 284 -21 277 -16 282 z',\n        },\n        ornamentShortTrill: {\n            xMin: -296,\n            xMax: 296,\n            yMin: -127,\n            yMax: 127,\n            ha: 253,\n            o: 'm -231 181 b -225 182 -229 182 -227 182 b -211 179 -220 182 -215 181 b -119 89 -210 178 -169 137 b -29 0 -70 40 -30 0 b 44 88 -29 0 4 40 b 118 179 89 144 117 178 b 131 182 122 181 127 182 b 143 179 136 182 140 181 b 307 18 145 177 232 92 l 326 -1 l 356 36 b 404 81 393 81 393 81 l 404 81 b 426 59 417 81 426 71 b 424 50 426 56 426 53 b 236 -179 421 44 241 -176 b 224 -182 233 -181 228 -182 b 211 -178 219 -182 215 -181 b 119 -89 210 -178 169 -137 b 29 0 70 -40 30 0 b -44 -88 29 0 -4 -40 b -118 -179 -89 -144 -117 -178 b -131 -182 -122 -181 -127 -182 b -144 -178 -135 -182 -140 -181 b -307 -18 -145 -177 -233 -91 l -326 1 l -356 -36 b -404 -81 -393 -81 -393 -81 l -404 -81 b -426 -59 -417 -81 -426 -71 b -424 -50 -426 -56 -426 -53 b -236 179 -421 -44 -241 176 b -231 181 -235 179 -233 181 z',\n        },\n        ornamentTremblement: {\n            xMin: -419,\n            xMax: 419,\n            yMin: -127,\n            yMax: 127,\n            ha: 253,\n            o: 'm -409 181 b -402 182 -407 182 -404 182 b -389 179 -397 182 -392 181 b -297 89 -387 178 -346 137 b -207 0 -248 40 -207 0 l -207 0 b -134 88 -206 0 -174 40 b -59 179 -88 144 -61 178 b -46 182 -55 181 -51 182 b -34 179 -42 182 -37 181 b 58 89 -33 178 9 137 b 148 0 107 40 148 0 l 148 0 b 221 88 148 0 181 40 b 296 179 267 144 294 178 b 308 182 300 181 304 182 b 321 179 313 182 317 181 b 485 18 323 177 409 92 l 503 -1 l 533 36 b 581 81 570 81 570 81 l 582 81 b 604 59 594 81 604 71 b 602 50 604 56 603 53 b 414 -179 599 44 418 -176 b 401 -182 410 -181 406 -182 b 388 -178 397 -182 392 -181 b 297 -89 387 -178 346 -137 b 207 0 248 -40 207 0 l 207 0 b 134 -88 206 0 174 -40 b 59 -179 88 -144 61 -178 b 46 -182 55 -181 51 -182 b 34 -178 42 -182 37 -181 b -58 -89 33 -178 -9 -137 b -148 0 -107 -40 -148 0 l -148 0 b -221 -88 -148 0 -181 -40 b -296 -179 -267 -144 -294 -178 b -308 -182 -300 -181 -304 -182 b -321 -178 -313 -182 -317 -181 b -485 -18 -323 -177 -411 -91 l -503 1 l -533 -36 b -581 -81 -570 -81 -570 -81 l -582 -81 b -604 -59 -594 -81 -604 -71 b -602 -50 -604 -56 -603 -53 b -414 179 -599 -44 -418 176 b -409 181 -412 179 -410 181 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            xMin: -419,\n            xMax: 419,\n            yMin: -127,\n            yMax: 255,\n            ha: 381,\n            o: 'm -591 365 b -582 367 -588 366 -585 367 b -561 352 -573 367 -564 361 b -560 176 -560 351 -560 303 l -559 2 l -527 41 b -456 128 -509 63 -477 102 b -414 177 -435 154 -416 176 b -400 182 -411 181 -405 182 b -388 179 -396 182 -392 181 b -296 89 -387 178 -346 137 b -206 0 -247 40 -207 0 b -133 88 -206 0 -173 40 b -59 179 -88 144 -60 178 b -46 182 -55 181 -50 182 b -33 179 -41 182 -37 181 b 58 89 -32 178 9 137 b 148 0 108 40 148 0 l 148 0 b 221 88 149 0 182 40 b 296 179 267 144 295 178 b 309 182 300 181 304 182 b 321 179 313 182 318 181 b 485 18 323 177 410 92 l 503 -1 l 533 36 b 581 81 570 81 571 81 l 582 81 b 604 59 595 81 604 71 b 602 50 604 56 603 53 b 414 -179 599 44 419 -176 b 402 -182 410 -181 406 -182 b 389 -178 397 -182 393 -181 b 297 -89 388 -178 346 -137 b 207 0 248 -40 207 0 l 207 0 b 134 -88 207 0 174 -40 b 59 -179 89 -144 61 -178 b 47 -182 56 -181 51 -182 b 34 -178 42 -182 38 -181 b -58 -89 33 -178 -8 -137 b -148 0 -107 -40 -147 0 b -220 -88 -148 0 -181 -40 b -295 -179 -266 -144 -294 -178 b -308 -182 -299 -181 -303 -182 b -321 -178 -312 -182 -317 -181 b -484 -18 -322 -177 -426 -76 l -503 1 l -535 -38 b -570 -79 -558 -67 -567 -77 b -582 -83 -573 -81 -578 -83 b -602 -70 -590 -83 -598 -78 l -604 -67 l -604 141 l -604 349 l -603 353 b -591 365 -601 358 -596 363 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            xMin: -433,\n            xMax: 433,\n            yMin: -243,\n            yMax: 127,\n            ha: 370,\n            o: 'm -388 181 b -382 182 -386 182 -384 182 b -368 179 -377 182 -372 181 b -277 89 -367 178 -326 137 b -187 0 -227 40 -187 0 l -187 0 b -114 88 -186 0 -153 40 b -39 179 -68 144 -40 178 b -26 182 -35 181 -30 182 b -14 179 -22 182 -17 181 b 78 89 -12 178 29 137 b 168 0 127 40 168 0 b 241 88 169 0 201 40 b 316 179 287 144 314 178 b 329 182 320 181 324 182 b 341 179 333 182 337 181 b 505 18 343 177 430 92 l 523 -1 l 553 36 b 601 81 590 81 590 81 l 602 81 b 624 59 614 81 624 71 b 622 50 624 56 623 53 b 434 -179 619 44 439 -176 b 421 -182 430 -181 426 -182 b 409 -178 417 -182 412 -181 b 317 -89 407 -178 366 -137 b 227 0 268 -40 227 0 b 154 -88 227 0 194 -40 b 79 -179 108 -144 81 -178 b 67 -182 75 -181 71 -182 b 54 -178 62 -182 58 -181 b -38 -89 53 -178 12 -137 b -128 0 -87 -40 -127 0 b -201 -88 -128 0 -161 -40 b -276 -179 -246 -144 -274 -178 b -288 -182 -279 -181 -284 -182 b -301 -178 -293 -182 -297 -181 b -393 -88 -302 -178 -343 -137 b -483 0 -442 -40 -483 0 b -483 0 -483 0 -483 0 b -505 -27 -484 0 -497 -15 b -579 -235 -554 -92 -579 -166 b -567 -315 -579 -263 -575 -290 b -564 -330 -565 -320 -564 -325 b -585 -351 -564 -342 -572 -351 b -610 -326 -598 -351 -604 -345 b -624 -235 -619 -297 -624 -267 b -547 -8 -624 -159 -597 -79 b -492 60 -538 4 -533 10 b -426 140 -472 84 -443 120 b -388 181 -396 176 -394 179 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            xMin: -433,\n            xMax: 433,\n            yMin: -243,\n            yMax: 198,\n            ha: 442,\n            o: 'm 186 284 b 194 285 189 285 192 285 b 215 273 203 285 211 280 b 217 164 216 270 216 269 l 217 59 l 265 118 b 316 179 295 155 314 178 b 329 182 320 181 324 182 b 341 179 333 182 337 181 b 505 18 343 177 430 92 l 523 -1 l 553 36 b 601 81 590 81 590 81 l 602 81 b 624 59 614 81 624 71 b 622 50 624 56 623 53 b 434 -179 619 44 439 -176 b 421 -182 430 -181 426 -182 b 409 -178 417 -182 412 -181 b 317 -89 407 -178 366 -137 b 227 0 268 -40 227 0 b 227 0 227 0 227 0 b 222 -6 227 0 224 -3 l 217 -12 l 217 -152 b 217 -218 217 -179 217 -200 b 210 -303 217 -308 216 -298 b 195 -310 206 -308 201 -310 b 175 -297 187 -310 178 -305 b 173 -180 173 -294 173 -294 l 173 -66 l 127 -121 b 79 -178 99 -156 81 -177 b 67 -182 76 -181 71 -182 b 54 -178 62 -182 58 -181 b -38 -89 53 -178 12 -137 b -128 0 -87 -40 -127 0 b -201 -88 -128 0 -161 -40 b -276 -179 -246 -144 -274 -178 b -288 -182 -279 -181 -284 -182 b -301 -178 -293 -182 -297 -181 b -393 -88 -302 -178 -343 -137 b -483 0 -442 -40 -483 0 b -483 0 -483 0 -483 0 b -505 -27 -484 0 -497 -15 b -579 -235 -554 -92 -579 -166 b -567 -315 -579 -263 -575 -290 b -564 -330 -565 -320 -564 -325 b -586 -351 -564 -342 -572 -351 b -610 -326 -598 -351 -604 -345 b -624 -235 -619 -297 -624 -267 b -547 -8 -624 -159 -597 -79 b -492 60 -538 4 -533 10 b -426 140 -472 84 -443 120 b -393 179 -408 162 -395 178 b -381 182 -390 181 -385 182 b -368 179 -376 182 -372 181 b -277 89 -367 178 -326 137 b -187 0 -227 40 -187 0 l -187 0 b -114 88 -186 0 -153 40 b -39 179 -68 144 -40 178 b -26 182 -35 181 -30 182 b -14 179 -22 182 -17 181 b 150 18 -12 177 81 86 l 168 0 l 171 2 l 173 5 l 173 137 b 174 272 173 267 173 268 b 186 284 176 277 181 282 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            xMin: -433,\n            xMax: 433,\n            yMin: -127,\n            yMax: 244,\n            ha: 370,\n            o: 'm 577 349 b 585 351 580 350 582 351 b 601 345 591 351 597 349 b 624 229 613 332 624 275 b 622 204 624 220 623 211 b 559 27 615 139 595 83 b 492 -60 546 6 541 0 b 426 -140 472 -84 443 -120 b 393 -179 408 -162 395 -178 b 381 -182 390 -181 385 -182 b 368 -178 376 -182 372 -181 b 277 -89 367 -178 326 -137 b 187 0 227 -40 187 0 l 187 0 b 114 -88 186 0 153 -40 b 39 -179 68 -144 40 -178 b 26 -182 35 -181 31 -182 b 13 -178 22 -182 17 -181 b -78 -89 12 -178 -29 -137 b -168 0 -127 -40 -168 0 b -241 -88 -169 0 -201 -40 b -316 -179 -287 -144 -314 -178 b -329 -182 -320 -181 -324 -182 b -341 -178 -333 -182 -337 -181 b -505 -18 -343 -177 -431 -91 l -523 1 l -553 -36 b -601 -81 -590 -81 -590 -81 l -602 -81 b -624 -59 -614 -81 -624 -71 b -622 -50 -624 -56 -623 -53 b -434 179 -619 -44 -439 176 b -421 182 -430 181 -426 182 b -409 179 -417 182 -412 181 b -317 89 -408 178 -366 137 b -227 0 -268 40 -227 0 b -154 88 -227 0 -194 40 b -79 179 -108 144 -81 178 b -66 182 -75 181 -71 182 b -54 179 -62 182 -58 181 b 38 89 -53 178 -12 137 b 128 0 87 40 127 0 b 201 88 128 0 161 40 b 276 179 246 144 274 178 b 288 182 279 181 284 182 b 301 179 293 182 297 181 b 393 88 302 178 343 137 b 483 0 442 40 483 0 b 483 0 483 0 483 0 b 505 27 484 0 497 15 b 579 235 554 92 579 166 b 567 315 579 263 575 290 b 564 330 565 321 564 326 b 577 349 564 339 568 346 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            xMin: -439,\n            xMax: 439,\n            yMin: -127,\n            yMax: 236,\n            ha: 363,\n            o: 'm -564 338 b -555 340 -561 339 -558 340 b -534 318 -544 340 -534 331 b -534 317 -534 318 -534 317 b -541 296 -534 311 -534 311 b -588 116 -572 236 -588 175 b -583 62 -588 98 -586 80 b -554 -21 -578 34 -566 -2 l -552 -24 l -511 26 b -430 126 -488 54 -452 99 b -386 177 -407 153 -388 176 b -372 182 -382 181 -377 182 b -360 179 -368 182 -364 181 b -268 89 -359 178 -318 137 b -178 0 -219 40 -179 0 b -105 88 -178 0 -145 40 b -30 179 -60 144 -32 178 b -18 182 -27 181 -22 182 b -5 179 -13 182 -9 181 b 86 89 -4 178 37 137 b 176 0 136 40 176 0 l 176 0 b 249 88 177 0 210 40 b 324 179 295 144 323 178 b 337 182 328 181 333 182 b 349 179 341 182 346 181 b 513 18 351 177 438 92 l 532 -1 l 562 36 b 610 81 599 81 599 81 l 610 81 b 632 59 623 81 632 71 b 630 50 632 56 631 53 b 442 -179 627 44 447 -176 b 430 -182 438 -181 434 -182 b 417 -178 425 -182 421 -181 b 325 -89 416 -178 375 -137 b 235 0 276 -40 236 0 l 235 0 b 162 -88 235 0 202 -40 b 87 -179 117 -144 89 -178 b 75 -182 84 -181 79 -182 b 62 -178 70 -182 66 -181 b -29 -89 61 -178 20 -137 b -119 0 -79 -40 -119 0 b -192 -88 -120 0 -153 -40 b -267 -179 -238 -144 -266 -178 b -280 -182 -271 -181 -275 -182 b -293 -178 -284 -182 -289 -181 b -456 -18 -294 -177 -398 -76 l -475 1 l -507 -38 b -554 -83 -543 -82 -543 -83 l -554 -83 b -576 -68 -562 -83 -568 -79 b -632 115 -613 -19 -632 46 b -593 292 -632 173 -619 233 b -564 338 -579 323 -571 335 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            xMin: -439,\n            xMax: 439,\n            yMin: -215,\n            yMax: 236,\n            ha: 451,\n            o: 'm -564 338 b -555 340 -561 339 -558 340 b -534 318 -544 340 -534 331 b -534 317 -534 318 -534 317 b -541 296 -534 311 -534 311 b -588 116 -572 236 -588 175 b -583 62 -588 98 -586 80 b -554 -21 -578 34 -566 -2 l -552 -24 l -511 26 b -430 126 -488 54 -452 99 b -386 177 -407 153 -388 176 b -372 182 -382 181 -377 182 b -360 179 -368 182 -364 181 b -268 89 -359 178 -318 137 b -178 0 -219 40 -179 0 b -105 88 -178 0 -145 40 b -30 179 -60 144 -32 178 b -18 182 -27 181 -22 182 b -5 179 -13 182 -9 181 b 158 18 -4 177 89 86 l 177 0 l 179 2 l 181 5 l 181 137 b 183 272 181 267 181 268 b 203 285 186 280 195 285 b 218 279 209 285 214 283 b 225 164 225 273 225 284 l 225 59 l 274 118 b 324 179 304 155 323 178 b 337 182 328 181 333 182 b 349 179 341 182 346 181 b 513 18 351 177 438 92 l 532 -1 l 562 36 b 610 81 599 81 599 81 l 610 81 b 632 59 623 81 632 71 b 630 50 632 56 631 53 b 442 -179 627 44 447 -176 b 430 -182 438 -181 434 -182 b 417 -178 425 -182 421 -181 b 325 -89 416 -178 375 -137 b 235 0 276 -40 236 0 b 235 0 235 0 235 0 b 230 -6 235 0 232 -3 l 225 -12 l 225 -152 b 225 -218 225 -179 225 -200 b 219 -303 225 -308 224 -298 b 203 -310 214 -308 209 -310 b 183 -297 195 -310 187 -305 b 181 -180 182 -294 182 -294 l 181 -66 l 136 -121 b 88 -178 107 -156 89 -177 b 75 -182 84 -181 79 -182 b 62 -178 70 -182 66 -181 b -29 -89 61 -178 20 -137 b -119 0 -79 -40 -119 0 b -192 -88 -120 0 -153 -40 b -267 -179 -238 -144 -266 -178 b -280 -182 -271 -181 -275 -182 b -293 -178 -284 -182 -289 -181 b -456 -18 -294 -177 -398 -76 l -475 1 l -507 -38 b -554 -83 -543 -82 -543 -83 l -554 -83 b -576 -68 -562 -83 -568 -79 b -632 115 -613 -19 -632 46 b -593 292 -632 173 -619 233 b -564 338 -579 323 -571 335 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            xMin: -439,\n            xMax: 439,\n            yMin: -236,\n            yMax: 127,\n            ha: 362,\n            o: 'm -437 181 b -430 182 -435 182 -433 182 b -417 179 -426 182 -420 181 b -325 89 -416 178 -375 137 b -235 0 -276 40 -235 0 l -235 0 b -162 88 -235 0 -202 40 b -87 179 -117 144 -89 178 b -75 182 -84 181 -79 182 b -62 179 -70 182 -66 181 b 29 89 -61 178 -20 137 b 119 0 79 40 119 0 b 192 88 120 0 153 40 b 267 179 238 144 266 178 b 280 182 271 181 276 182 b 292 179 284 182 289 181 b 456 18 294 177 396 77 l 475 -1 l 507 38 b 554 83 543 82 543 83 l 554 83 b 576 68 563 83 568 79 b 632 -116 613 19 632 -46 b 607 -257 632 -162 624 -210 b 571 -334 596 -287 578 -327 b 556 -340 567 -338 561 -340 b 535 -326 547 -340 538 -335 b 533 -319 534 -323 533 -321 b 541 -296 533 -314 536 -308 b 588 -117 572 -236 588 -175 b 579 -40 588 -91 585 -65 b 554 21 573 -19 563 7 l 552 24 l 511 -26 b 430 -126 488 -54 452 -99 b 386 -177 407 -153 388 -176 b 373 -182 382 -181 377 -182 b 360 -178 368 -182 364 -181 b 268 -89 359 -178 318 -137 b 178 0 219 -40 179 0 l 178 0 b 105 -88 178 0 145 -40 b 30 -179 60 -144 32 -178 b 18 -182 27 -181 22 -182 b 5 -178 13 -182 9 -181 b -86 -89 4 -178 -37 -137 b -176 0 -136 -40 -176 0 l -176 0 b -249 -88 -177 0 -210 -40 b -324 -179 -295 -144 -323 -178 b -337 -182 -328 -181 -332 -182 b -349 -178 -341 -182 -346 -181 b -513 -18 -351 -177 -439 -91 l -532 1 l -562 -36 b -610 -81 -599 -81 -599 -81 l -610 -81 b -632 -59 -623 -81 -632 -71 b -630 -50 -632 -56 -631 -53 b -442 179 -627 -44 -447 176 b -437 181 -441 179 -438 181 z',\n        },\n        stringsDownBow: {\n            xMin: -168,\n            xMax: 168,\n            yMin: 0,\n            yMax: 353,\n            ha: 353,\n            o: 'm -228 506 b 3 508 -225 507 -111 508 b 228 506 114 508 225 507 b 240 494 233 504 238 499 b 242 254 241 491 242 373 b 240 14 242 135 241 16 b 220 0 237 5 228 0 b 204 6 214 0 208 2 b 198 89 198 12 198 3 b 198 145 198 104 198 123 l 198 273 l 0 273 l -198 273 l -198 145 b -198 89 -198 123 -198 104 b -204 6 -198 3 -198 12 b -220 0 -208 2 -214 0 b -240 14 -228 0 -237 5 b -242 254 -241 16 -242 135 b -240 494 -242 373 -241 491 b -228 506 -238 499 -233 504 z',\n        },\n        stringsUpBow: {\n            xMin: -110,\n            xMax: 110,\n            yMin: 0,\n            yMax: 277,\n            ha: 277,\n            o: 'm -144 397 b -137 398 -142 398 -140 398 b -117 387 -129 398 -120 394 b -58 234 -116 385 -90 317 b 0 84 -26 152 0 84 b 58 234 0 84 26 152 b 117 387 90 317 116 385 b 136 398 121 395 128 398 b 158 376 147 398 158 390 l 158 370 l 89 191 b 20 11 51 93 20 12 b 0 0 16 4 8 0 b -19 11 -8 0 -16 4 b -158 375 -25 21 -158 370 b -158 376 -158 375 -158 376 b -144 397 -158 386 -153 394 z',\n        },\n        stringsHarmonic: {\n            xMin: -82,\n            xMax: 82,\n            yMin: -82,\n            yMax: 82,\n            ha: 163,\n            o: 'm -19 116 b 1 118 -12 117 -6 118 b 118 0 65 118 118 63 b 114 -30 118 -10 116 -20 b -1 -118 100 -85 50 -118 b -83 -83 -30 -118 -60 -107 b -118 -1 -107 -60 -118 -30 b -19 116 -118 53 -81 105 z m 14 99 b 0 100 9 100 4 100 b -101 0 -57 100 -101 53 b -90 -45 -101 -15 -97 -30 b 0 -100 -71 -82 -36 -100 b 90 -45 36 -100 71 -82 b 101 -1 97 -30 101 -15 b 14 99 101 47 65 92 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            xMin: -110,\n            xMax: 110,\n            yMin: -110,\n            yMax: 205,\n            ha: 315,\n            o: 'm -9 293 b 0 295 -6 294 -3 295 b 20 281 9 295 17 290 b 22 217 22 278 22 276 l 22 157 l 25 157 b 153 40 85 148 138 100 b 158 0 157 26 158 13 b 40 -153 158 -71 111 -135 b 0 -158 26 -157 13 -158 b -154 -40 -71 -158 -136 -111 b -158 -1 -157 -27 -158 -14 b -25 157 -158 76 -102 146 l -22 157 l -22 217 b -21 281 -22 276 -22 278 b -9 293 -19 286 -13 291 z m -22 54 b -23 112 -22 108 -22 112 b -23 112 -23 112 -23 112 b -81 80 -37 111 -65 96 b -114 1 -104 57 -114 29 b 0 -114 -114 -58 -69 -114 b 114 1 68 -114 114 -58 b 80 80 114 29 104 57 b 22 112 65 96 35 112 b 22 54 22 112 22 92 b 20 -8 22 -3 22 -5 b 0 -22 17 -17 9 -22 b -16 -16 -6 -22 -11 -20 b -22 34 -22 -10 -22 -12 b -22 54 -22 40 -22 46 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            xMin: -110,\n            xMax: 110,\n            yMin: -205,\n            yMax: 110,\n            ha: 315,\n            o: 'm 9 -293 b 0 -295 6 -294 3 -295 b -20 -281 -9 -295 -17 -290 b -22 -217 -22 -278 -22 -276 l -22 -157 l -25 -157 b -153 -40 -85 -148 -138 -100 b -158 0 -157 -26 -158 -13 b -40 153 -158 71 -111 135 b 0 158 -26 157 -13 158 b 154 40 71 158 136 111 b 158 1 157 27 158 14 b 25 -157 158 -76 102 -146 l 22 -157 l 22 -217 b 21 -281 22 -276 22 -278 b 9 -293 19 -286 13 -291 z m 22 -54 b 23 -112 22 -108 22 -112 b 23 -112 23 -112 23 -112 b 81 -80 37 -111 65 -96 b 114 -1 104 -57 114 -29 b 0 114 114 58 69 114 b -114 -1 -68 114 -114 58 b -80 -80 -114 -29 -104 -57 b -22 -112 -65 -96 -35 -112 b -22 -54 -22 -112 -22 -92 b -20 8 -22 3 -22 5 b 0 22 -17 17 -9 22 b 16 16 6 22 11 20 b 22 -34 22 10 22 12 b 22 -54 22 -40 22 -46 z',\n        },\n        pluckedLeftHandPizzicato: {\n            xMin: -155,\n            xMax: 155,\n            yMin: -157,\n            yMax: 157,\n            ha: 315,\n            o: 'm -9 225 b 0 227 -6 226 -3 227 b 20 213 9 227 17 221 b 22 116 22 209 22 208 l 22 22 l 114 22 b 152 22 129 22 141 22 b 218 16 218 22 212 21 b 224 0 222 11 224 6 b 210 -20 224 -9 219 -17 b 114 -22 207 -22 205 -22 l 22 -22 l 22 -116 b 22 -154 22 -131 22 -143 b 16 -220 22 -221 21 -214 b 0 -227 11 -225 6 -227 b -20 -213 -9 -227 -17 -222 b -22 -116 -22 -209 -22 -208 l -22 -22 l -114 -22 b -210 -20 -205 -22 -207 -22 b -224 0 -219 -17 -224 -9 b -218 16 -224 6 -222 11 b -152 22 -212 21 -218 22 b -114 22 -141 22 -129 22 l -22 22 l -22 116 b -20 213 -22 208 -22 209 b -9 225 -19 218 -13 223 z',\n        },\n        keyboardPedalPed: {\n            xMin: 0,\n            xMax: 782,\n            yMin: -1,\n            yMax: 500,\n            ha: 501,\n            o: 'm 309 719 b 335 720 318 720 327 720 b 521 650 409 720 473 696 b 582 517 561 610 582 560 b 528 423 582 476 564 441 b 483 411 513 415 498 411 b 392 480 443 411 406 437 b 384 516 386 496 384 508 b 400 535 384 529 389 535 b 417 520 409 535 414 530 b 458 494 421 503 438 494 b 498 507 472 494 486 498 b 520 552 513 517 520 533 b 469 645 520 582 502 619 b 349 687 437 670 389 687 l 344 687 l 335 671 b 286 544 299 609 286 577 b 286 543 286 544 286 543 b 341 449 286 511 298 491 b 371 411 359 430 364 424 b 385 358 380 394 385 377 b 378 317 385 345 383 331 b 302 165 365 271 336 212 b 298 159 300 162 298 159 b 298 159 298 159 298 159 b 305 160 299 159 302 159 b 336 162 315 161 326 162 b 486 106 392 162 445 143 l 492 101 l 512 117 b 533 134 523 126 532 133 b 534 136 534 135 534 135 b 533 144 534 138 534 140 b 530 188 531 159 530 174 b 571 320 530 238 544 283 b 657 390 587 342 634 380 b 686 397 666 395 676 397 b 763 335 721 397 755 372 b 766 315 765 328 766 321 b 740 251 766 291 756 267 b 699 219 736 247 702 221 b 636 172 697 218 662 192 b 614 153 618 158 614 154 b 614 153 614 153 614 153 b 645 91 621 129 636 100 b 694 73 657 78 675 73 b 797 123 728 73 769 91 l 800 127 l 799 134 b 795 176 796 148 795 162 b 947 403 795 266 851 351 b 950 405 949 404 950 405 b 944 414 950 407 948 409 b 659 583 875 496 774 556 b 636 603 641 587 636 591 b 654 620 636 614 642 620 b 666 619 658 620 662 620 b 1113 282 884 577 1062 442 b 1126 198 1122 253 1126 225 b 954 -1 1126 87 1054 -1 b 930 1 946 -1 938 0 b 817 83 883 7 841 37 b 815 87 816 85 815 87 b 808 79 814 87 812 84 b 664 0 772 29 717 0 b 620 7 649 0 634 2 b 546 92 584 19 565 40 l 544 99 l 540 97 b 480 49 539 95 512 74 b 414 1 419 0 420 1 l 414 1 b 396 17 404 1 399 5 b 284 110 381 72 333 110 b 266 108 278 110 272 110 l 258 107 l 247 94 b 164 2 213 53 169 4 b 156 0 161 0 159 0 b 139 17 147 0 139 8 b 140 23 139 19 140 21 b 144 34 141 24 142 29 b 234 137 158 79 189 114 b 260 164 244 143 244 142 b 319 290 300 217 319 259 b 281 349 319 312 313 322 b 223 453 250 376 229 414 b 222 472 223 459 222 466 b 296 673 222 522 246 587 l 303 685 l 300 685 b 290 684 299 685 294 684 b 60 496 171 668 77 591 b 59 477 59 490 59 483 b 76 426 59 453 66 431 b 100 420 84 422 92 420 b 162 487 131 420 160 448 b 179 507 163 502 168 507 b 196 479 192 507 196 501 b 196 478 196 478 196 478 b 88 335 195 397 151 338 b 83 335 86 335 84 335 b 0 443 31 335 0 375 l 0 443 b 309 719 0 583 138 706 z m 981 361 b 976 368 978 366 977 368 b 968 362 974 368 972 366 b 872 175 908 318 872 247 b 877 131 872 160 874 145 b 943 34 887 82 914 43 b 949 34 945 34 947 34 b 1018 127 973 34 1004 75 b 1027 198 1024 151 1027 174 b 981 361 1027 253 1011 309 z m 665 338 b 657 339 662 339 660 339 b 641 336 652 339 647 338 b 614 293 635 333 622 312 b 602 221 607 274 602 246 b 604 198 602 213 603 205 b 606 191 605 193 605 191 b 608 193 606 191 607 192 b 666 238 613 197 642 219 b 695 264 690 256 691 257 b 702 290 700 272 702 281 b 665 338 702 312 688 334 z',\n        },\n        keyboardPedalUp: {\n            xMin: 0,\n            xMax: 435,\n            yMin: 65,\n            yMax: 500,\n            ha: 435,\n            o: 'm 300 719 b 311 720 303 720 307 720 b 332 718 319 720 327 719 b 379 654 361 709 379 685 b 354 601 379 632 374 620 b 331 558 338 585 331 572 b 336 536 331 551 333 544 b 374 512 344 521 358 512 b 389 514 379 512 384 513 b 422 575 414 523 422 538 b 474 646 422 614 441 639 b 489 648 479 647 484 648 b 555 581 527 648 555 615 b 535 535 555 565 549 549 b 479 515 520 520 508 516 b 450 512 462 515 458 514 b 418 468 429 505 418 487 b 438 433 418 455 425 441 b 464 424 447 427 455 424 b 509 449 477 424 491 432 b 557 473 526 466 538 472 b 561 473 558 473 560 473 b 627 407 599 473 627 442 b 620 378 627 397 625 387 b 561 341 609 354 588 341 l 560 341 b 508 365 538 341 527 346 b 465 390 491 383 478 390 b 457 389 462 390 460 390 b 418 347 433 384 418 367 b 424 325 418 340 420 332 b 479 299 433 306 446 300 b 535 279 509 298 520 294 b 555 233 549 266 555 249 b 489 166 555 199 527 166 b 474 167 484 166 480 166 b 422 239 441 175 422 200 b 393 298 422 273 414 289 b 374 302 386 301 380 302 b 332 266 354 302 337 288 b 331 255 331 262 331 258 b 355 213 331 242 338 230 b 379 160 374 193 379 182 l 379 160 b 313 93 379 120 348 93 b 272 108 299 93 285 98 b 247 160 256 121 247 140 b 259 198 247 173 251 187 b 272 213 260 200 266 206 b 296 255 289 230 296 242 b 295 266 296 258 296 262 b 253 302 290 288 273 302 b 234 298 247 302 241 301 b 205 239 213 289 205 273 b 153 167 205 200 186 175 b 138 166 148 166 143 166 b 73 232 101 166 73 197 b 82 267 73 244 76 256 b 148 299 95 289 113 298 b 182 304 168 299 171 300 b 197 315 189 307 192 309 b 209 346 205 325 209 336 b 179 386 209 364 198 379 b 162 390 173 389 167 390 b 119 365 148 390 136 382 b 104 352 113 360 107 354 b 67 341 92 344 79 341 b 2 390 38 341 10 359 b 0 407 1 396 0 401 b 66 473 0 443 30 473 b 83 471 72 473 77 473 b 118 449 96 468 104 463 b 161 424 136 432 149 424 b 163 424 161 424 162 424 b 209 467 191 427 209 445 b 203 489 209 474 207 482 b 148 515 193 509 180 515 b 92 535 119 516 107 520 b 72 581 78 549 72 565 b 138 648 72 615 100 648 b 153 646 143 648 148 647 b 205 575 186 639 205 614 b 238 514 205 538 213 523 b 253 512 243 513 248 512 b 291 536 269 512 283 521 b 296 558 294 544 296 551 b 273 601 296 572 289 584 b 254 624 261 612 258 616 b 247 654 249 634 247 644 b 300 719 247 684 268 712 z m 327 475 b 313 476 322 476 318 476 b 244 407 274 476 244 443 b 252 376 244 396 247 386 b 313 338 265 350 289 338 b 375 376 338 338 362 350 b 383 407 380 386 383 396 b 327 475 383 438 361 468 z',\n        },\n        pictChokeCymbal: {\n            xMin: 0,\n            xMax: 168,\n            yMin: -155,\n            yMax: 155,\n            ha: 311,\n            o: 'm 96 223 b 107 224 100 224 103 224 b 236 104 164 224 218 174 b 242 55 240 88 242 71 b 66 -209 242 -42 175 -144 b 33 -224 48 -219 39 -224 b 25 -219 30 -224 28 -222 b 23 -213 24 -216 23 -215 b 36 -199 23 -208 28 -204 b 130 -56 96 -166 130 -110 b 111 8 130 -34 124 -12 l 110 10 l 100 11 b 6 82 58 12 19 42 b 0 117 2 94 0 105 b 96 223 0 170 40 217 z',\n        },\n        wiggleArpeggiatoUp: {\n            xMin: -8,\n            xMax: 269,\n            yMin: 0,\n            yMax: 126,\n            ha: 126,\n            o: 'm 103 180 b 118 181 108 181 113 181 b 223 126 151 181 184 164 b 299 69 250 100 280 78 b 311 67 303 68 307 67 b 359 90 325 67 342 75 b 376 102 372 101 372 102 l 376 102 b 388 91 383 102 388 96 b 385 84 388 88 387 86 b 322 25 379 76 342 42 b 258 0 301 8 280 0 b 153 56 226 0 192 18 b 78 112 127 81 97 103 b 65 114 74 114 70 114 b 17 91 51 114 35 106 b 1 80 5 80 5 80 l 0 80 b -11 91 -7 80 -11 85 b -9 97 -11 93 -10 95 b 55 156 -3 105 34 140 b 103 180 71 170 88 178 z',\n        },\n        arrowheadBlackUp: {\n            xMin: 11,\n            xMax: 239,\n            yMin: -6,\n            yMax: 269,\n            ha: 275,\n            o: 'm 171 386 b 179 387 174 387 176 387 b 201 378 187 387 196 384 b 212 345 206 372 206 372 b 333 45 237 235 282 123 b 344 19 343 29 344 27 b 317 -8 344 2 332 -8 b 299 -3 312 -8 305 -7 b 180 30 262 19 221 30 b 74 4 144 30 108 21 b 61 -3 70 2 64 -1 b 43 -8 55 -7 48 -8 b 16 19 28 -8 16 2 b 27 45 16 27 17 29 b 148 344 78 123 122 233 b 159 378 155 373 154 372 b 171 386 161 381 167 385 z',\n        },\n        arrowheadBlackDown: {\n            xMin: 11,\n            xMax: 239,\n            yMin: 6,\n            yMax: 281,\n            ha: 275,\n            o: 'm 35 403 b 43 405 37 404 40 405 b 62 398 49 405 55 403 b 79 390 65 396 73 392 b 180 367 111 374 145 367 b 298 398 221 367 262 377 b 318 404 305 402 312 404 b 344 377 332 404 344 394 b 333 351 344 369 343 367 b 212 51 282 273 237 161 b 204 23 207 28 206 26 b 180 8 199 13 189 8 b 156 23 171 8 162 13 b 150 44 154 25 153 28 b 27 351 125 158 80 271 b 16 377 17 367 16 369 b 35 403 16 389 24 400 z',\n        },\n    },\n    fontFamily: 'GonvilleSmufl',\n    resolution: 1000,\n    generatedOn: '2023-04-20T22:11:26.009Z',\n};\n","export const LelandFont = {\n    glyphs: {\n        bracketTop: {\n            xMin: 0,\n            xMax: 491,\n            yMin: 0,\n            yMax: 279,\n            ha: 279,\n            o: 'm 697 399 b 687 402 694 400 690 402 b 671 395 681 402 674 400 b 249 168 668 390 524 168 l 20 168 b 0 150 9 168 0 161 l 0 20 l 0 0 l 176 0 b 706 374 619 0 704 370 b 707 382 706 376 707 379 b 697 399 707 389 703 395 z',\n        },\n        bracketBottom: {\n            xMin: 0,\n            xMax: 491,\n            yMin: -279,\n            yMax: 0,\n            ha: 279,\n            o: 'm 697 -399 b 707 -382 703 -395 707 -389 b 706 -374 707 -379 706 -376 b 176 0 704 -370 619 0 l 0 0 l 0 -20 l 0 -150 b 20 -168 0 -161 9 -168 l 249 -168 b 671 -395 524 -168 668 -390 b 687 -402 674 -400 681 -402 b 697 -399 690 -402 694 -400 z',\n        },\n        segno: {\n            xMin: 0,\n            xMax: 654,\n            yMin: 0,\n            yMax: 869,\n            ha: 869,\n            o: 'm 546 690 l 838 1207 b 841 1215 840 1210 841 1212 b 832 1233 841 1221 837 1230 l 809 1248 b 798 1251 806 1250 801 1251 b 780 1241 792 1251 783 1247 l 487 721 l 217 860 b 99 995 147 897 99 924 b 236 1165 99 1120 179 1165 b 343 1073 288 1165 325 1130 b 454 988 357 1022 405 988 b 477 991 461 988 469 989 b 541 1076 526 1002 541 1045 b 540 1089 541 1080 541 1084 b 294 1225 534 1116 514 1225 b 0 939 72 1225 0 1053 b 125 706 0 825 42 753 l 397 563 l 104 45 b 102 35 102 42 102 37 b 111 19 102 29 107 22 l 132 3 b 144 0 135 1 141 0 b 148 0 145 0 147 0 b 161 10 153 1 158 6 l 456 531 l 704 403 b 842 256 780 361 842 318 b 706 86 842 131 763 86 b 599 177 654 86 616 120 b 488 262 585 228 537 262 b 465 259 481 262 472 261 b 402 177 418 248 402 206 b 403 163 402 171 402 167 b 649 26 409 135 429 26 b 942 312 871 26 942 199 b 821 549 942 426 901 507 z m 52 444 b 118 416 69 426 95 416 b 183 444 141 416 166 426 b 210 508 200 461 210 485 b 183 573 210 531 200 556 b 118 600 166 590 141 600 b 52 573 95 600 69 590 b 24 508 35 556 24 531 b 52 444 24 485 35 461 z m 760 730 b 825 703 778 713 802 703 b 890 730 848 703 873 713 b 917 795 907 747 917 772 b 890 861 917 818 907 844 b 825 888 873 878 848 888 b 760 861 802 888 778 878 b 733 795 743 844 733 818 b 760 730 733 772 743 747 z',\n        },\n        coda: {\n            xMin: 0,\n            xMax: 745,\n            yMin: -113,\n            yMax: 735,\n            ha: 848,\n            o: 'm 924 467 b 560 896 916 697 757 881 l 560 1038 b 540 1058 560 1050 552 1058 l 524 1058 b 505 1038 513 1058 505 1050 l 505 896 b 150 467 311 877 158 693 l 20 467 b 0 446 9 467 0 458 l 0 432 b 20 412 0 420 9 412 l 150 412 b 505 0 166 193 317 17 l 505 -143 b 524 -163 505 -154 513 -163 l 540 -163 b 560 -143 552 -163 560 -154 l 560 0 b 923 412 753 13 907 190 l 1054 412 b 1073 432 1066 412 1073 420 l 1073 446 b 1054 467 1073 458 1066 467 z m 560 467 l 560 852 b 773 467 716 837 773 671 z m 505 467 l 301 467 b 505 851 301 668 357 831 z m 505 412 l 505 45 b 301 412 366 65 301 219 z m 560 412 l 772 412 b 560 45 772 215 706 60 z',\n        },\n        gClef: {\n            xMin: 0,\n            xMax: 640,\n            yMin: -666,\n            yMax: 1112,\n            ha: 1778,\n            o: 'm 809 -30 b 665 -279 809 -132 768 -238 b 586 186 635 -107 596 122 b 809 -30 716 186 809 98 z m 605 -297 b 521 -305 576 -302 549 -305 b 140 56 315 -305 140 -161 b 390 498 140 232 264 389 b 459 562 415 520 438 540 b 492 357 472 484 482 416 b 272 45 361 318 272 180 b 467 -194 272 -56 351 -194 b 491 -176 478 -194 491 -189 b 459 -144 491 -163 477 -156 b 372 -1 403 -109 372 -72 b 521 177 372 86 436 157 z m 478 1184 b 632 1392 491 1241 557 1392 b 688 1223 654 1392 688 1322 b 478 863 688 1073 577 960 b 462 1037 469 920 462 976 b 478 1184 462 1090 467 1139 z m 176 -739 b 444 -959 176 -834 249 -959 b 622 -910 511 -959 570 -942 b 720 -670 700 -855 720 -760 b 697 -467 720 -613 711 -549 b 675 -338 693 -438 684 -395 b 922 3 816 -292 922 -145 b 557 367 922 220 768 367 b 516 619 543 454 528 539 b 773 1188 668 779 773 959 b 710 1477 773 1319 733 1426 b 608 1601 675 1551 634 1601 b 505 1528 598 1601 553 1584 b 387 1113 413 1418 387 1234 b 419 804 387 1035 395 965 b 312 701 418 802 343 726 b 0 117 181 579 0 405 b 503 -364 0 -153 235 -364 b 616 -354 544 -364 583 -360 b 660 -670 644 -492 660 -593 b 438 -899 660 -819 583 -899 b 370 -891 403 -899 373 -891 b 366 -887 369 -890 366 -888 b 373 -881 366 -884 369 -883 b 508 -721 441 -871 508 -814 b 341 -562 508 -644 449 -562 b 176 -739 240 -562 176 -644 z',\n        },\n        cClef: {\n            xMin: 0,\n            xMax: 627,\n            yMin: -480,\n            yMax: 482,\n            ha: 962,\n            o: 'm 19 675 b 0 657 9 675 0 667 l 0 -654 b 19 -672 0 -664 9 -672 l 122 -672 b 141 -654 132 -672 141 -664 l 141 657 b 122 675 141 667 132 675 z m 903 -376 b 619 -58 903 -197 808 -58 b 505 -95 586 -58 562 -60 b 426 1 503 -89 474 -32 b 505 98 474 35 503 92 b 641 60 560 65 579 60 b 903 379 816 60 903 223 b 580 694 903 580 755 694 b 318 517 472 694 318 649 b 438 400 318 446 367 400 b 546 510 501 400 546 446 b 425 615 546 589 494 615 b 547 651 458 638 503 651 b 723 400 698 651 723 530 b 593 128 723 289 720 128 b 438 279 467 128 441 265 b 418 300 438 281 438 300 b 396 279 397 300 396 281 b 264 29 383 200 344 62 l 264 657 b 246 675 264 667 256 675 b 228 657 236 675 228 667 l 228 -654 b 246 -672 228 -664 236 -672 b 264 -654 256 -672 264 -664 l 264 -26 b 396 -278 348 -60 380 -197 b 418 -297 396 -279 397 -297 b 438 -278 438 -297 438 -279 b 593 -125 441 -262 467 -125 b 723 -397 720 -125 723 -287 b 547 -648 723 -527 698 -648 b 425 -612 503 -648 458 -635 b 441 -613 426 -612 432 -613 b 546 -507 504 -613 546 -569 b 438 -397 546 -444 501 -397 b 318 -514 367 -397 318 -444 b 580 -691 318 -647 472 -691 b 903 -376 755 -691 903 -577 z',\n        },\n        fClef: {\n            xMin: 0,\n            xMax: 664,\n            yMin: -617,\n            yMax: 251,\n            ha: 868,\n            o: 'm 366 361 b 167 298 256 361 168 298 b 37 112 84 236 50 163 b 27 36 30 86 27 60 b 46 -58 27 1 33 -30 b 140 -138 63 -96 96 -124 b 194 -147 157 -144 176 -147 b 287 -122 226 -147 259 -138 b 359 10 331 -98 359 -46 b 289 134 359 60 333 107 b 206 160 259 154 230 160 b 160 153 189 160 173 157 b 109 122 145 147 121 132 b 147 215 114 150 131 192 b 219 279 163 238 194 266 b 351 308 255 300 301 308 b 570 -52 498 308 570 190 b 477 -399 570 -186 520 -314 b 310 -635 429 -494 366 -585 b 17 -837 160 -772 19 -837 b 0 -864 17 -837 0 -847 b 1 -871 0 -867 1 -868 b 27 -888 6 -886 19 -888 b 35 -887 29 -888 33 -887 b 331 -717 36 -887 200 -819 b 528 -544 405 -664 471 -606 b 661 -367 580 -488 625 -428 b 760 -50 724 -259 760 -147 b 670 239 760 69 729 168 b 366 361 602 320 500 361 z m 818 179 b 887 107 818 138 850 107 b 956 179 924 107 956 138 b 887 252 956 219 924 252 b 818 179 850 252 818 219 z m 818 -177 b 887 -251 818 -217 850 -251 b 956 -177 924 -251 956 -217 b 887 -104 956 -137 924 -104 b 818 -177 850 -104 818 -137 z',\n        },\n        unpitchedPercussionClef1: {\n            xMin: 0,\n            xMax: 352,\n            yMin: -252,\n            yMax: 252,\n            ha: 504,\n            o: 'm 19 363 b 0 344 9 363 0 354 l 0 -344 b 19 -363 0 -354 9 -363 l 177 -363 b 196 -344 187 -363 196 -354 l 196 344 b 177 363 196 354 187 363 z m 330 363 b 311 344 320 363 311 354 l 311 -344 b 330 -363 311 -354 320 -363 l 488 -363 b 507 -344 498 -363 507 -354 l 507 344 b 488 363 507 354 498 363 z',\n        },\n        '6stringTabClef': {\n            xMin: 0,\n            xMax: 439,\n            yMin: -743,\n            yMax: 746,\n            ha: 1489,\n            o: 'm 52 1074 l 52 958 l 249 958 l 249 419 l 387 419 l 387 958 l 583 958 l 583 1074 z m 0 -333 l 145 -333 l 192 -196 l 436 -196 l 481 -333 l 632 -333 l 396 334 l 238 334 z m 315 181 l 400 -81 l 229 -81 z m 566 -474 b 393 -402 531 -428 475 -403 l 71 -402 l 71 -1070 l 372 -1070 b 374 -1070 373 -1070 373 -1070 b 465 -1061 405 -1070 435 -1067 b 541 -1027 494 -1056 520 -1043 b 588 -975 560 -1012 575 -995 b 618 -868 608 -943 618 -907 b 592 -770 618 -829 609 -798 b 514 -711 575 -743 549 -724 b 566 -674 537 -700 554 -688 b 596 -576 586 -649 596 -616 b 566 -474 596 -536 586 -503 z m 348 -518 b 428 -528 380 -518 408 -521 b 464 -590 452 -539 464 -559 b 436 -649 464 -619 455 -638 b 366 -665 418 -661 395 -665 l 203 -665 l 203 -518 z m 367 -776 b 435 -788 396 -776 419 -780 b 477 -858 464 -801 477 -824 b 433 -942 477 -900 462 -927 b 366 -953 418 -949 395 -953 l 203 -953 l 203 -776 z',\n        },\n        timeSig0: {\n            xMin: 15,\n            xMax: 389,\n            yMin: -254,\n            yMax: 255,\n            ha: 509,\n            o: 'm 291 367 b 22 0 138 367 22 209 b 291 -366 22 -209 138 -366 b 560 0 444 -366 560 -209 b 291 367 560 209 444 367 z m 376 -200 b 291 -308 376 -252 353 -308 b 206 -200 229 -308 206 -252 l 206 200 b 291 308 206 252 229 308 b 376 200 353 308 376 252 z',\n        },\n        timeSig1: {\n            xMin: 15,\n            xMax: 336,\n            yMin: -243,\n            yMax: 245,\n            ha: 488,\n            o: 'm 359 -284 l 359 336 b 341 353 359 346 351 353 l 199 353 b 190 350 196 353 193 351 b 184 344 189 348 186 346 l 23 65 b 22 56 22 62 22 59 b 30 42 22 50 26 45 l 58 26 b 66 23 60 24 63 23 b 81 32 72 23 78 27 l 183 207 l 183 -284 l 73 -284 b 56 -301 63 -284 56 -291 l 56 -333 b 73 -350 56 -343 63 -350 l 468 -350 b 484 -333 478 -350 484 -343 l 484 -301 b 468 -284 484 -291 478 -284 z',\n        },\n        timeSig2: {\n            xMin: 15,\n            xMax: 377,\n            yMin: -243,\n            yMax: 245,\n            ha: 488,\n            o: 'm 492 -56 b 382 -192 481 -88 452 -192 b 190 -134 288 -192 268 -134 b 153 -138 179 -134 167 -135 b 341 -36 153 -138 189 -84 b 533 173 494 12 533 86 b 288 353 533 233 505 353 b 30 156 71 353 30 222 b 138 49 30 96 79 49 b 245 156 197 49 245 96 b 179 255 245 196 216 240 b 168 271 174 256 168 264 b 202 297 168 279 176 289 b 251 304 209 300 229 304 b 311 288 271 304 294 300 b 348 180 338 271 348 245 b 65 -150 348 12 148 -24 b 22 -278 65 -150 22 -210 b 73 -350 22 -346 56 -350 b 121 -305 96 -350 121 -331 b 117 -287 121 -300 120 -294 b 105 -239 108 -266 105 -251 b 107 -226 105 -235 105 -230 b 154 -203 108 -217 120 -203 b 238 -289 196 -203 212 -252 b 350 -350 264 -327 304 -350 b 484 -264 396 -350 458 -317 b 543 -63 510 -210 543 -102 b 518 -36 543 -45 531 -36 b 492 -56 508 -36 498 -42 z',\n        },\n        timeSig3: {\n            xMin: 15,\n            xMax: 364,\n            yMin: -244,\n            yMax: 244,\n            ha: 488,\n            o: 'm 392 23 b 514 168 507 68 514 143 b 514 176 514 171 514 174 b 262 351 514 189 510 351 b 22 176 14 351 22 176 l 23 176 l 22 173 b 115 81 22 121 63 81 b 207 173 167 81 207 121 b 135 264 207 215 176 255 b 140 268 137 265 138 266 b 215 289 160 282 187 289 b 340 176 275 289 340 253 b 255 69 340 85 272 72 b 140 60 238 66 157 60 b 121 40 122 60 121 40 l 121 12 b 140 -6 121 12 124 -4 b 243 -14 164 -7 197 -7 b 340 -167 307 -23 340 -66 b 215 -289 340 -264 275 -289 b 121 -266 174 -289 137 -278 b 207 -174 168 -264 207 -222 b 115 -81 207 -122 167 -81 b 22 -174 63 -81 22 -122 b 22 -180 22 -174 22 -177 b 78 -298 22 -199 26 -251 b 236 -351 134 -350 204 -351 b 524 -147 374 -351 524 -304 b 389 23 524 -42 452 3 z',\n        },\n        timeSig4: {\n            xMin: 14,\n            xMax: 442,\n            yMin: -248,\n            yMax: 249,\n            ha: 497,\n            o: 'm 300 -183 l 300 -289 l 180 -289 b 160 -310 170 -289 160 -298 l 160 -337 b 180 -357 160 -348 170 -357 l 616 -357 b 636 -337 628 -357 636 -348 l 636 -310 b 616 -289 636 -298 628 -289 l 487 -289 l 487 -183 l 616 -183 b 636 -161 628 -183 636 -173 l 636 -134 b 616 -114 636 -124 628 -114 l 487 -114 l 487 115 b 477 134 487 124 482 131 l 459 143 b 452 144 456 144 455 144 b 449 144 451 144 451 144 b 436 140 445 144 439 143 l 305 20 b 300 4 301 16 300 10 l 300 -114 l 132 -114 b 464 287 132 -114 294 59 b 471 307 469 294 471 301 b 467 321 471 314 468 320 l 435 353 b 420 359 431 356 426 359 b 206 359 412 359 217 359 b 187 341 196 359 189 350 b 143 118 187 341 180 235 b 24 -124 105 1 62 -71 b 20 -140 24 -124 20 -131 b 22 -148 20 -143 20 -145 b 36 -174 26 -158 36 -174 b 52 -183 36 -174 39 -183 z',\n        },\n        timeSig5: {\n            xMin: 15,\n            xMax: 362,\n            yMin: -244,\n            yMax: 246,\n            ha: 490,\n            o: 'm 39 314 b 46 170 39 314 46 245 b 46 151 46 164 46 157 b 39 -24 45 71 39 -24 b 39 -29 39 -24 39 -26 b 49 -48 39 -35 40 -46 b 99 -59 62 -50 92 -58 b 107 -59 102 -59 104 -59 b 121 -49 112 -59 118 -58 b 235 45 128 -30 144 45 b 356 -112 337 45 356 -43 b 238 -292 356 -184 333 -288 b 226 -292 233 -292 230 -292 b 166 -282 193 -292 174 -288 b 158 -274 161 -281 158 -276 b 164 -264 158 -269 160 -266 b 222 -168 177 -255 222 -239 b 117 -71 222 -98 173 -71 b 22 -171 60 -71 22 -122 b 111 -318 22 -220 36 -275 b 252 -351 147 -338 199 -351 b 456 -275 325 -351 405 -328 b 521 -109 503 -228 521 -167 b 433 79 521 -32 487 43 b 271 124 397 104 336 124 b 131 84 223 124 173 112 b 125 82 130 82 127 82 b 115 92 120 82 115 86 l 115 183 b 131 199 115 192 122 199 l 132 199 b 252 192 154 197 202 192 b 372 209 295 192 340 196 b 474 320 439 236 462 289 b 477 334 475 324 477 330 b 451 354 477 346 469 354 b 431 351 445 354 439 353 b 252 328 360 334 305 328 b 88 343 200 328 150 334 b 71 344 88 343 81 344 b 39 320 56 344 39 340 b 39 314 39 317 39 315 z',\n        },\n        timeSig6: {\n            xMin: 15,\n            xMax: 387,\n            yMin: -244,\n            yMax: 245,\n            ha: 489,\n            o: 'm 356 69 b 216 22 268 69 236 43 b 209 98 212 52 209 75 b 216 167 209 121 212 141 b 338 287 225 220 261 287 b 410 259 374 287 396 275 b 356 174 380 246 356 207 b 448 82 356 122 396 82 b 541 174 500 82 541 122 l 541 177 b 541 179 541 177 541 177 b 533 225 541 192 539 213 b 310 353 514 276 454 353 b 58 163 180 353 86 229 b 22 -23 43 128 22 58 b 131 -285 22 -111 46 -210 b 318 -351 215 -348 268 -351 b 557 -125 369 -351 557 -292 b 356 69 557 16 446 69 z m 302 -291 b 216 -145 255 -291 216 -226 b 302 1 216 -65 255 1 b 390 -145 350 1 390 -65 b 302 -291 390 -226 350 -291 z',\n        },\n        timeSig7: {\n            xMin: 15,\n            xMax: 366,\n            yMin: -250,\n            yMax: 251,\n            ha: 501,\n            o: 'm 233 -177 b 160 -336 202 -225 160 -282 b 180 -360 160 -351 164 -360 b 264 -351 203 -360 217 -354 b 278 -350 268 -351 274 -350 b 369 -360 320 -350 359 -360 b 405 -331 382 -360 406 -344 b 405 -327 405 -330 405 -328 b 396 -226 405 -324 396 -279 b 408 -130 396 -196 399 -161 b 503 151 425 -62 471 60 b 527 308 518 196 527 275 b 526 341 527 321 527 327 b 510 361 524 356 518 361 b 484 361 503 361 491 361 b 467 341 477 361 467 356 b 406 228 467 327 464 228 b 235 351 346 228 328 351 b 86 252 145 351 91 261 l 86 321 b 71 337 86 330 79 337 l 37 337 b 22 321 29 337 22 330 l 22 55 b 37 39 22 46 29 39 l 71 39 b 86 55 79 39 86 46 l 86 101 b 158 179 86 134 108 179 b 328 124 209 179 213 124 b 425 143 357 124 410 128 b 233 -177 413 120 266 -130 z',\n        },\n        timeSig8: {\n            xMin: 15,\n            xMax: 393,\n            yMin: -248,\n            yMax: 246,\n            ha: 494,\n            o: 'm 467 26 b 547 166 514 62 547 108 b 294 354 547 269 433 354 b 40 166 154 354 40 269 b 122 13 40 108 55 56 b 22 -147 58 -24 22 -78 b 294 -357 22 -264 144 -357 b 566 -147 444 -357 566 -264 b 467 26 566 -78 541 -13 z m 294 -276 b 122 -145 202 -276 122 -226 b 197 -26 122 -49 197 -26 b 435 -187 295 -59 435 -108 b 294 -276 435 -226 384 -276 z m 386 65 b 180 209 288 96 180 144 b 294 288 180 265 232 288 b 444 180 383 288 444 246 b 386 65 444 111 412 78 z',\n        },\n        timeSig9: {\n            xMin: 15,\n            xMax: 387,\n            yMin: -244,\n            yMax: 245,\n            ha: 489,\n            o: 'm 223 -68 b 363 -20 311 -68 343 -42 b 370 -96 367 -50 370 -73 b 363 -166 370 -120 367 -140 b 240 -285 354 -219 318 -285 b 168 -258 204 -285 183 -274 b 223 -173 199 -245 223 -206 b 131 -81 223 -121 183 -81 b 37 -173 79 -81 37 -121 l 37 -176 b 37 -177 37 -176 37 -176 b 46 -223 37 -190 40 -212 b 269 -351 65 -275 125 -351 b 521 -161 399 -351 492 -228 b 557 24 536 -127 557 -56 b 448 287 557 112 533 212 b 261 353 364 350 311 353 b 22 127 210 353 22 294 b 223 -68 22 -14 132 -68 z m 276 294 b 363 147 324 294 363 228 b 276 1 363 66 324 1 b 189 147 229 1 189 66 b 276 294 189 228 229 294 z',\n        },\n        timeSigCommon: {\n            xMin: 0,\n            xMax: 463,\n            yMin: -256,\n            yMax: 258,\n            ha: 514,\n            o: 'm 468 258 b 406 147 432 235 406 193 b 408 130 406 141 406 135 b 521 17 415 71 462 24 b 537 17 526 17 533 17 b 667 147 609 17 667 75 b 667 156 667 147 667 151 b 664 177 667 161 665 171 b 350 372 651 239 595 372 b 0 17 36 372 0 111 b 382 -369 0 -154 22 -369 b 641 -131 524 -369 635 -285 b 629 -120 641 -124 636 -120 l 611 -120 b 599 -131 605 -120 599 -125 b 382 -323 593 -251 508 -323 b 196 -128 256 -323 196 -255 l 196 147 b 356 320 196 228 228 320 b 469 271 423 320 454 295 b 471 264 471 268 471 266 b 468 258 471 262 471 259 z',\n        },\n        timeSigCutCommon: {\n            xMin: 0,\n            xMax: 463,\n            yMin: -376,\n            yMax: 388,\n            ha: 764,\n            o: 'm 611 -120 b 599 -131 605 -120 599 -125 b 382 -323 593 -251 508 -323 b 369 -323 377 -323 373 -323 l 369 320 b 469 269 428 317 455 292 b 471 264 471 266 471 265 b 468 258 471 261 471 259 b 406 147 432 235 406 193 b 408 130 406 141 406 135 b 523 17 415 71 464 24 b 537 17 527 17 533 17 b 667 147 609 17 667 75 b 667 156 667 147 667 151 b 664 177 667 161 665 171 b 369 370 651 236 598 364 l 369 543 b 353 559 369 552 361 559 l 314 559 b 298 543 305 559 298 552 l 298 369 b 0 17 32 341 0 105 b 298 -364 0 -140 17 -334 l 298 -526 b 314 -541 298 -534 305 -541 l 353 -541 b 369 -526 361 -541 369 -534 l 369 -369 b 382 -369 373 -369 377 -369 b 641 -131 524 -369 635 -285 b 629 -120 641 -124 636 -120 z m 196 147 b 298 312 196 215 216 289 l 298 -310 b 196 -128 229 -285 196 -223 z',\n        },\n        timeSigPlus: {\n            xMin: 0,\n            xMax: 408,\n            yMin: -204,\n            yMax: 204,\n            ha: 408,\n            o: 'm 327 33 l 327 275 b 308 294 327 285 318 294 l 279 294 b 261 275 269 294 261 285 l 261 33 l 19 33 b 0 14 9 33 0 24 l 0 -13 b 19 -33 0 -23 9 -33 l 261 -33 l 261 -274 b 279 -294 261 -284 269 -294 l 308 -294 b 327 -274 318 -294 327 -284 l 327 -33 l 567 -33 b 588 -13 577 -33 588 -23 l 588 14 b 567 33 588 24 577 33 z',\n        },\n        noteheadDoubleWhole: {\n            xMin: 0,\n            xMax: 538,\n            yMin: -178,\n            yMax: 179,\n            ha: 357,\n            o: 'm 33 258 b 20 258 27 258 26 258 b 0 238 9 258 0 249 b 0 -236 0 226 0 -226 b 20 -256 0 -246 9 -256 b 33 -256 26 -256 27 -256 b 53 -236 43 -256 53 -245 b 53 238 53 -228 53 226 b 33 258 53 249 45 258 z m 649 258 b 636 258 644 258 642 258 b 616 238 625 258 616 249 b 616 125 616 235 616 187 b 389 196 573 167 500 196 b 160 125 276 196 203 167 b 160 238 160 187 160 235 b 140 258 160 249 151 258 b 127 258 134 258 132 258 b 107 238 115 258 107 249 b 107 -236 107 226 107 -226 b 127 -256 107 -246 115 -256 b 140 -256 132 -256 134 -256 b 160 -236 150 -256 160 -245 b 160 -122 160 -233 160 -186 b 389 -194 203 -166 276 -194 b 616 -122 500 -194 573 -166 b 616 -236 616 -186 616 -233 b 636 -256 616 -246 625 -256 b 649 -256 642 -256 644 -256 b 670 -236 660 -256 670 -245 b 670 238 670 -228 670 226 b 649 258 670 249 661 258 z m 462 -140 b 400 -148 445 -144 422 -148 b 314 -101 360 -148 333 -135 b 268 68 295 -65 269 29 b 268 76 268 71 268 73 b 314 141 268 109 282 130 b 377 150 331 145 354 150 b 462 102 416 150 442 140 b 510 -66 482 63 510 -29 b 462 -140 510 -104 497 -128 z m 755 258 b 742 258 749 258 747 258 b 721 238 730 258 721 249 b 721 -236 721 226 721 -226 b 742 -256 721 -246 730 -256 b 755 -256 747 -256 749 -256 b 775 -236 765 -256 775 -245 b 775 238 775 -228 775 226 b 755 258 775 249 766 258 z',\n        },\n        noteheadWhole: {\n            xMin: 0,\n            xMax: 373,\n            yMin: -134,\n            yMax: 136,\n            ha: 270,\n            o: 'm 269 196 b 0 1 71 196 0 95 b 269 -193 0 -92 71 -193 b 537 1 468 -193 537 -92 b 269 196 537 95 468 196 z m 343 -138 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 148 68 176 -63 150 29 b 194 141 145 107 160 130 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 389 -65 363 63 389 -29 b 343 -138 389 -102 377 -128 z',\n        },\n        noteheadHalf: {\n            xMin: 0,\n            xMax: 325,\n            yMin: -133,\n            yMax: 132,\n            ha: 265,\n            o: 'm 307 190 b 0 -60 167 190 0 73 b 161 -192 0 -122 45 -192 b 468 58 311 -192 468 -69 b 307 190 468 143 396 190 z m 268 -63 b 108 -124 264 -66 158 -124 b 50 -72 60 -124 50 -85 b 200 62 50 -12 194 59 b 360 122 206 65 308 122 b 418 71 395 122 418 102 b 268 -63 418 9 272 -60 z',\n        },\n        noteheadBlack: {\n            xMin: 0,\n            xMax: 325,\n            yMin: -133,\n            yMax: 132,\n            ha: 265,\n            o: 'm 0 -60 b 161 -192 0 -122 45 -192 b 468 58 311 -192 468 -69 b 307 190 468 143 396 190 b 0 -60 167 190 0 72 z',\n        },\n        noteheadXBlack: {\n            xMin: 0,\n            xMax: 325,\n            yMin: -132,\n            yMax: 132,\n            ha: 264,\n            o: 'm 461 138 b 468 153 465 141 468 147 l 468 154 b 462 167 468 160 465 164 l 445 184 b 431 190 441 187 436 190 b 418 186 426 190 420 189 l 235 40 l 50 186 b 37 190 48 189 42 190 b 24 184 32 190 29 187 l 6 167 b 0 153 3 164 0 158 b 7 138 0 147 3 141 l 183 0 l 7 -138 b 0 -153 3 -141 0 -147 b 6 -166 0 -157 3 -163 l 23 -184 b 37 -190 26 -189 32 -190 b 50 -186 42 -190 48 -189 l 235 -40 l 418 -186 b 431 -190 420 -189 426 -190 b 445 -184 436 -190 442 -189 l 462 -166 b 468 -153 465 -163 468 -157 b 461 -138 468 -147 465 -141 l 285 0 z',\n        },\n        noteheadCircleX: {\n            xMin: 0,\n            xMax: 325,\n            yMin: -162,\n            yMax: 163,\n            ha: 325,\n            o: 'm 265 0 l 395 105 b 426 0 415 75 426 39 b 387 -115 426 -43 412 -84 z m 233 -27 l 360 -145 b 235 -192 327 -174 282 -192 b 99 -137 183 -192 134 -171 z m 202 1 l 73 -105 b 42 0 53 -75 42 -39 b 81 115 42 43 56 84 z m 235 29 l 108 145 b 233 193 141 174 186 193 b 369 138 285 193 334 173 z m 233 235 b 0 0 104 235 0 130 b 233 -233 0 -130 104 -233 b 468 0 363 -233 468 -130 b 233 235 468 130 363 235 z',\n        },\n        noteheadDoubleWholeSquare: {\n            xMin: 0,\n            xMax: 432,\n            yMin: -179,\n            yMax: 177,\n            ha: 356,\n            o: 'm 590 255 b 570 235 579 255 570 246 l 570 203 l 53 203 l 53 235 b 33 255 53 246 45 255 l 20 255 b 0 235 9 255 0 246 l 0 -230 b 20 -251 0 -242 9 -251 l 33 -251 b 53 -230 45 -251 53 -242 l 53 -200 l 570 -200 l 570 -238 b 590 -258 570 -249 579 -258 l 603 -258 b 622 -238 615 -258 622 -249 l 622 235 b 603 255 622 246 615 255 z m 570 -101 l 53 -101 l 53 105 l 570 105 z',\n        },\n        noteheadSquareWhite: {\n            xMin: 0,\n            xMax: 310,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 395 128 l 395 -128 l 52 -128 l 52 128 z m 446 180 l 0 180 l 0 -180 l 446 -180 z',\n        },\n        noteheadSquareBlack: {\n            xMin: 0,\n            xMax: 310,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 446 180 l 0 180 l 0 -180 l 446 -180 z',\n        },\n        noteheadTriangleUpBlack: {\n            xMin: 0,\n            xMax: 310,\n            yMin: -136,\n            yMax: 122,\n            ha: 258,\n            o: 'm 223 176 l 0 -196 l 446 -196 z',\n        },\n        noteheadSlashedDoubleWhole1: {\n            xMin: -66,\n            xMax: 456,\n            yMin: -213,\n            yMax: 212,\n            ha: 425,\n            o: 'm 652 298 b 638 305 649 304 644 305 b 626 301 634 305 629 304 l 560 248 b 543 256 557 253 550 256 b 530 256 537 256 536 256 b 510 236 518 256 510 248 b 510 204 510 235 510 223 l 455 161 b 281 194 413 181 356 194 b 53 124 168 194 96 166 b 53 236 53 186 53 233 b 29 256 53 253 42 256 b 20 256 26 256 23 256 b 0 236 9 256 0 248 b 0 -204 0 228 0 -98 l -88 -272 b -95 -288 -92 -276 -95 -282 b -91 -300 -95 -291 -94 -295 b -76 -307 -86 -304 -82 -307 b -65 -302 -72 -307 -68 -305 l 3 -248 b 20 -258 6 -253 12 -258 b 53 -238 33 -258 52 -255 b 53 -206 53 -236 53 -225 l 107 -161 b 281 -196 148 -183 206 -196 b 510 -124 393 -196 465 -166 b 510 -238 510 -187 510 -235 b 530 -258 510 -248 518 -258 b 563 -238 543 -258 563 -255 b 563 204 563 -229 563 98 l 649 272 b 657 288 655 276 657 282 b 652 298 657 291 655 295 z m 160 75 b 269 148 160 138 219 148 b 356 101 310 148 334 140 b 363 85 357 96 360 91 l 189 -56 b 160 66 174 -14 161 40 b 160 75 160 69 160 72 z m 53 -163 b 53 -124 53 -151 53 -138 b 76 -144 60 -131 68 -138 z m 402 -68 b 292 -148 402 -138 351 -148 b 207 -101 252 -150 226 -137 b 199 -84 204 -96 202 -91 l 373 56 b 402 -68 389 13 402 -40 z m 510 124 b 485 144 503 131 494 137 l 510 163 b 510 124 510 151 510 137 z',\n        },\n        noteheadSlashedWhole1: {\n            xMin: -75,\n            xMax: 448,\n            yMin: -211,\n            yMax: 214,\n            ha: 425,\n            o: 'm 641 301 b 625 308 636 305 631 308 b 613 304 621 307 618 307 l 439 160 b 269 196 399 181 343 196 b 0 1 71 196 0 95 b 69 -138 0 -49 20 -101 l -101 -271 b -108 -287 -105 -275 -108 -281 b -104 -298 -107 -291 -107 -294 b -88 -304 -99 -302 -94 -304 b -76 -301 -85 -304 -81 -304 l 98 -157 b 269 -193 138 -179 194 -193 b 537 1 468 -193 537 -92 b 468 141 537 52 517 104 l 638 274 b 645 289 642 278 645 284 b 641 301 644 292 644 297 z m 148 68 b 148 78 148 72 148 75 b 194 141 148 111 163 131 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 350 86 346 98 348 92 l 177 -55 b 148 68 163 -12 150 42 z m 389 -65 b 343 -138 389 -102 377 -128 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 187 -82 192 -95 190 -89 l 279 -6 l 361 58 b 389 -65 376 16 389 -39 z',\n        },\n        noteheadSlashedHalf1: {\n            xMin: -98,\n            xMax: 424,\n            yMin: -213,\n            yMax: 212,\n            ha: 425,\n            o: 'm 606 298 b 592 305 602 302 598 305 b 580 301 588 305 583 304 l 412 163 b 307 190 383 180 347 190 b 153 148 258 190 204 176 b 0 -60 58 98 0 13 b 14 -120 0 -81 4 -101 b 32 -143 20 -128 26 -135 l -134 -274 b -141 -288 -138 -276 -141 -282 b -137 -300 -141 -292 -140 -297 b -122 -307 -134 -304 -128 -307 b -111 -302 -118 -307 -114 -305 l 56 -164 b 161 -192 85 -181 121 -192 b 315 -151 210 -192 264 -179 b 468 58 410 -101 468 -16 b 454 117 468 78 464 98 b 436 141 449 125 444 134 l 603 272 b 611 287 608 275 611 281 b 606 298 611 291 609 295 z m 56 -98 b 49 -73 52 -91 49 -82 b 75 -23 49 -58 59 -39 b 199 60 99 1 147 32 b 337 118 251 89 302 111 b 359 121 344 120 351 121 b 361 121 360 121 360 121 l 225 9 l 69 -114 b 56 -98 65 -109 60 -104 z m 410 94 b 416 69 415 86 416 78 b 392 19 416 53 408 36 b 266 -65 367 -6 318 -36 b 128 -122 215 -94 163 -115 b 107 -125 121 -124 114 -125 b 104 -125 107 -125 105 -125 l 245 -9 l 396 111 b 410 94 402 107 408 101 z',\n        },\n        noteheadSlashedBlack1: {\n            xMin: -98,\n            xMax: 424,\n            yMin: -213,\n            yMax: 212,\n            ha: 425,\n            o: 'm 606 298 b 592 305 602 302 598 305 b 580 301 588 305 583 304 l 412 161 b 307 190 383 180 347 190 b 0 -60 167 190 0 72 b 32 -144 0 -89 10 -120 l -134 -274 b -141 -288 -138 -278 -141 -284 b -137 -301 -141 -292 -140 -297 b -122 -307 -134 -305 -128 -307 b -111 -304 -118 -307 -114 -307 l 56 -164 b 161 -192 82 -181 117 -192 b 468 58 311 -192 468 -71 b 436 141 468 91 456 120 l 603 271 b 611 285 608 275 611 281 b 606 298 611 289 609 294 z',\n        },\n        noteheadSlashedDoubleWhole2: {\n            xMin: -66,\n            xMax: 456,\n            yMin: -213,\n            yMax: 212,\n            ha: 425,\n            o: 'm 563 -204 b 563 236 563 -98 563 228 b 543 256 563 249 554 256 b 530 256 537 256 536 256 b 510 236 518 256 510 248 b 510 124 510 233 510 187 b 281 194 467 166 393 194 b 107 161 207 194 150 181 l 53 204 b 53 236 53 223 53 235 b 33 256 53 249 45 256 b 20 256 27 256 26 256 b 3 246 12 256 6 253 l -63 301 b -76 305 -68 304 -72 305 b -91 298 -81 305 -86 304 b -95 287 -94 295 -95 291 b -88 272 -95 281 -92 276 l 0 204 b 0 -238 0 98 0 -229 b 20 -258 0 -248 9 -258 b 33 -258 26 -258 27 -258 b 53 -238 43 -258 53 -246 b 53 -124 53 -235 53 -187 b 281 -196 96 -166 170 -196 b 456 -161 356 -196 413 -183 l 510 -206 b 510 -238 510 -225 510 -236 b 530 -258 510 -248 518 -258 b 543 -258 536 -258 537 -258 b 560 -246 549 -258 556 -252 l 626 -302 b 638 -307 631 -305 634 -307 b 654 -300 645 -307 649 -304 b 657 -288 655 -295 657 -292 b 651 -272 657 -282 655 -276 z m 207 140 b 269 148 225 144 248 148 b 356 101 310 148 336 140 b 402 -68 376 62 402 -30 b 402 -78 402 -71 402 -75 l 292 9 l 168 109 b 207 140 176 124 189 134 z m 78 144 b 53 124 69 137 60 131 b 53 163 53 137 53 150 z m 356 -141 b 294 -148 338 -145 315 -148 b 207 -101 253 -148 226 -137 b 161 66 189 -66 163 27 b 160 72 161 69 160 71 b 161 78 160 75 160 76 l 271 -9 l 395 -109 b 356 -141 387 -124 374 -134 z m 485 -144 b 510 -124 494 -138 503 -131 b 510 -163 510 -138 510 -151 z',\n        },\n        noteheadSlashedWhole2: {\n            xMin: -75,\n            xMax: 448,\n            yMin: -212,\n            yMax: 214,\n            ha: 426,\n            o: 'm 468 -138 b 537 1 517 -101 537 -49 b 269 196 537 95 468 196 b 98 160 196 196 140 181 l -76 304 b -88 308 -81 307 -84 307 b -104 301 -94 308 -99 305 b -108 289 -107 297 -107 292 b -101 274 -108 284 -105 278 l 69 141 b 0 1 20 104 0 52 b 269 -193 0 -92 71 -193 b 441 -157 343 -193 399 -179 l 613 -301 b 625 -305 618 -304 622 -305 b 641 -298 631 -305 636 -302 b 645 -287 644 -294 644 -291 b 638 -271 645 -281 642 -275 z m 194 141 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 389 -65 363 63 389 -29 b 389 -76 389 -69 389 -73 l 279 10 l 156 112 b 194 141 163 125 176 135 z m 343 -138 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 148 68 176 -63 150 29 b 148 76 148 71 148 73 b 148 81 148 78 148 79 l 258 -6 l 382 -108 b 343 -138 374 -122 361 -132 z',\n        },\n        noteheadSlashedHalf2: {\n            xMin: -98,\n            xMax: 424,\n            yMin: -213,\n            yMax: 212,\n            ha: 425,\n            o: 'm 386 -102 b 468 58 438 -55 468 4 b 454 117 468 78 464 98 b 307 190 428 164 373 190 b 153 148 258 190 204 176 b 108 120 137 140 122 130 l -111 301 b -122 305 -114 304 -118 305 b -137 298 -128 305 -134 302 b -141 287 -140 295 -141 291 b -134 272 -141 281 -138 275 l 85 101 b 0 -60 32 53 0 -7 b 14 -120 0 -81 4 -101 b 161 -192 40 -167 95 -192 b 315 -151 210 -192 264 -179 b 361 -122 333 -143 347 -132 l 580 -302 b 592 -307 583 -305 588 -307 b 606 -300 598 -307 602 -304 b 611 -288 609 -297 611 -292 b 603 -274 611 -282 608 -276 z m 199 60 b 337 118 251 89 302 111 b 359 121 344 120 351 121 b 410 94 382 121 400 112 b 416 69 415 86 416 78 b 392 19 416 53 408 36 b 308 -42 374 0 343 -20 l 245 7 l 189 55 b 199 60 192 56 196 58 z m 266 -65 b 128 -122 215 -94 163 -115 b 107 -125 121 -124 114 -125 b 56 -98 84 -125 66 -117 b 49 -73 52 -91 49 -82 b 75 -23 49 -58 59 -39 b 163 39 94 -4 125 17 l 225 -9 l 282 -56 b 266 -65 276 -59 272 -62 z',\n        },\n        noteheadSlashedBlack2: {\n            xMin: -98,\n            xMax: 424,\n            yMin: -213,\n            yMax: 212,\n            ha: 425,\n            o: 'm 384 -102 b 468 58 435 -58 468 0 b 307 190 468 143 396 190 b 108 121 239 190 167 163 l -111 301 b -124 305 -115 304 -120 305 b -138 298 -128 305 -134 302 b -141 289 -140 295 -141 292 b -141 287 -141 288 -143 288 b -135 272 -141 281 -140 275 l 84 101 b 0 -60 35 56 0 0 b 161 -192 0 -122 45 -192 b 361 -122 232 -192 304 -164 l 579 -302 b 590 -307 583 -305 588 -307 b 606 -300 596 -307 602 -304 b 611 -288 609 -297 611 -292 b 603 -274 609 -282 608 -276 z',\n        },\n        noteheadDiamondDoubleWhole: {\n            xMin: 0,\n            xMax: 373,\n            yMin: -178,\n            yMax: 179,\n            ha: 357,\n            o: 'm 504 258 b 484 238 494 258 484 248 l 484 46 b 282 187 415 95 285 186 b 268 192 279 190 275 192 b 255 187 262 192 258 190 l 52 45 l 52 238 b 33 258 52 248 43 258 l 20 258 b 0 238 9 258 0 248 l 0 -236 b 20 -256 0 -248 9 -256 l 33 -256 b 52 -236 43 -256 52 -248 l 52 -45 l 249 -181 b 268 -190 258 -189 264 -190 b 282 -186 274 -190 279 -189 b 484 -43 285 -184 413 -94 l 484 -236 b 504 -256 484 -248 494 -256 l 517 -256 b 537 -236 528 -256 537 -248 l 537 238 b 517 258 537 248 528 258 z m 220 -115 l 102 -33 l 317 117 l 435 35 z',\n        },\n        noteheadDiamondWhole: {\n            xMin: 0,\n            xMax: 373,\n            yMin: -133,\n            yMax: 132,\n            ha: 265,\n            o: 'm 282 -187 b 530 -13 285 -186 530 -13 b 537 0 534 -10 537 -6 b 530 13 537 4 534 10 b 282 186 530 13 287 183 b 268 190 279 189 275 190 b 255 186 262 190 258 189 l 7 12 b 0 -1 3 9 0 4 b 4 -13 0 -6 1 -10 l 249 -183 b 268 -192 258 -190 264 -192 b 282 -187 274 -192 279 -190 z m 220 -117 l 102 -35 l 317 115 l 435 33 z',\n        },\n        noteheadDiamondHalf: {\n            xMin: 0,\n            xMax: 335,\n            yMin: -132,\n            yMax: 133,\n            ha: 265,\n            o: 'm 475 -13 b 482 0 480 -10 482 -6 b 475 13 482 4 480 10 l 253 187 b 240 192 251 190 246 192 b 229 187 236 192 232 190 l 7 13 b 0 0 3 10 0 6 b 7 -13 0 -4 3 -10 l 229 -186 b 240 -190 232 -189 236 -190 b 253 -186 246 -190 251 -189 z m 284 -115 l 92 33 l 199 117 l 390 -33 z',\n        },\n        noteheadDiamondBlack: {\n            xMin: 0,\n            xMax: 335,\n            yMin: -132,\n            yMax: 133,\n            ha: 265,\n            o: 'm 475 -14 b 482 -1 480 -10 482 -6 b 475 13 482 4 480 10 l 253 187 b 240 192 251 190 246 192 b 229 187 236 192 232 190 l 7 13 b 0 0 3 10 0 4 b 7 -14 0 -6 3 -10 l 229 -186 b 240 -190 232 -189 236 -190 b 253 -186 246 -190 251 -189 z',\n        },\n        noteheadParenthesisRight: {\n            xMin: 0,\n            xMax: 75,\n            yMin: -209,\n            yMax: 212,\n            ha: 421,\n            o: 'm 10 305 b 4 302 7 304 6 304 b 0 295 1 301 0 298 b 1 289 0 294 0 292 b 68 -10 1 288 68 160 b 1 -288 68 -95 50 -192 b 0 -292 0 -289 0 -291 b 4 -300 0 -295 1 -298 b 12 -301 7 -301 9 -302 b 17 -298 14 -301 16 -300 b 108 0 22 -292 108 -174 b 17 301 108 174 22 295 b 10 305 16 304 13 305 z',\n        },\n        noteheadParenthesisLeft: {\n            xMin: 0,\n            xMax: 75,\n            yMin: -212,\n            yMax: 209,\n            ha: 421,\n            o: 'm 98 -305 b 104 -302 101 -304 102 -304 b 108 -295 107 -301 108 -298 b 107 -289 108 -294 108 -292 b 40 10 107 -288 40 -160 b 107 288 40 95 58 192 b 108 292 108 289 108 291 b 104 300 108 295 107 298 b 96 301 101 301 99 302 b 91 298 94 301 92 300 b 0 0 86 292 0 174 b 91 -301 0 -174 86 -295 b 98 -305 92 -304 95 -305 z',\n        },\n        noteheadMoonBlack: {\n            xMin: 0,\n            xMax: 310,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 0 180 l 0 0 b 223 -180 0 -99 99 -180 b 446 0 347 -180 446 -99 l 446 180 z',\n        },\n        noteheadTriangleLeftBlack: {\n            xMin: 0,\n            xMax: 339,\n            yMin: -136,\n            yMax: 122,\n            ha: 258,\n            o: 'm 0 176 l 0 -196 l 488 -196 z',\n        },\n        noteheadTriangleRightBlack: {\n            xMin: 0,\n            xMax: 339,\n            yMin: -136,\n            yMax: 122,\n            ha: 258,\n            o: 'm 488 176 l 0 -196 l 488 -196 z',\n        },\n        noteheadTriangleRoundDownBlack: {\n            xMin: 0,\n            xMax: 310,\n            yMin: -136,\n            yMax: 122,\n            ha: 258,\n            o: 'm 226 -196 l 446 63 b 226 176 446 63 384 176 b 0 63 68 176 0 63 z',\n        },\n        augmentationDot: {\n            xMin: 0,\n            xMax: 100,\n            yMin: -50,\n            yMax: 50,\n            ha: 100,\n            o: 'm 0 0 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 b 72 72 144 40 112 72 b 0 0 32 72 0 40 z',\n        },\n        tremolo1: {\n            xMin: 0,\n            xMax: 290,\n            yMin: -93,\n            yMax: 96,\n            ha: 189,\n            o: 'm 0 48 l 0 -134 l 418 -43 l 418 138 z',\n        },\n        flag8thUp: {\n            xMin: 0,\n            xMax: 289,\n            yMin: -817,\n            yMax: 12,\n            ha: 829,\n            o: 'm 0 -327 b 12 -343 0 -331 1 -338 b 291 -600 73 -363 197 -441 b 359 -827 317 -645 359 -707 b 294 -1140 359 -930 331 -1037 b 289 -1162 291 -1149 288 -1156 b 297 -1175 289 -1168 291 -1172 b 304 -1176 300 -1176 302 -1176 b 327 -1161 314 -1176 321 -1171 b 416 -798 395 -1041 418 -888 b 416 -780 416 -791 416 -786 b 302 -458 409 -595 302 -458 b 131 -220 307 -458 170 -281 b 50 -50 78 -138 53 -56 b 36 6 49 -46 36 6 b 19 17 35 12 27 17 b 0 -1 9 17 0 9 z',\n        },\n        flag8thDown: {\n            xMin: 0,\n            xMax: 309,\n            yMin: -12,\n            yMax: 817,\n            ha: 829,\n            o: 'm 0 1 b 19 -17 0 -9 9 -17 b 36 -6 26 -17 35 -12 b 50 50 36 -4 49 46 b 117 196 52 56 65 111 b 331 458 173 289 259 357 b 445 780 402 559 445 654 b 338 1161 445 912 415 1021 b 317 1176 334 1171 325 1176 b 310 1175 314 1176 311 1176 b 300 1158 302 1172 300 1166 b 304 1140 300 1153 301 1146 b 384 827 361 1007 384 930 b 317 600 384 707 343 645 b 12 343 223 441 72 363 b 0 327 1 338 0 331 z',\n        },\n        flag16thUp: {\n            xMin: 0,\n            xMax: 279,\n            yMin: -820,\n            yMax: 12,\n            ha: 832,\n            o: 'm 301 -681 b 148 -514 262 -631 219 -585 b 56 -372 92 -458 66 -409 b 52 -343 55 -364 53 -354 b 271 -510 125 -343 219 -442 b 340 -696 327 -583 340 -641 b 337 -739 340 -710 338 -724 b 301 -681 325 -716 312 -697 z m 0 -549 b 22 -563 0 -553 12 -559 b 258 -776 59 -576 171 -648 b 318 -950 307 -850 318 -901 b 317 -975 318 -959 318 -966 b 285 -1140 317 -1009 307 -1083 b 279 -1164 284 -1148 279 -1156 b 289 -1179 279 -1169 282 -1175 b 297 -1181 292 -1181 294 -1181 b 318 -1161 307 -1181 312 -1169 b 382 -962 344 -1120 382 -1043 b 374 -855 382 -920 379 -886 b 402 -678 389 -802 402 -749 b 333 -471 402 -603 382 -536 b 137 -228 265 -382 192 -307 b 42 0 82 -148 42 0 b 22 17 39 10 37 17 b 0 0 4 17 0 10 z',\n        },\n        flag16thDown: {\n            xMin: 0,\n            xMax: 309,\n            yMin: -26,\n            yMax: 803,\n            ha: 829,\n            o: 'm 53 346 b 56 363 55 353 56 359 b 163 517 66 399 78 452 b 384 732 246 582 346 662 b 317 503 382 621 354 552 b 53 346 229 395 122 364 z m 0 -14 b 22 -37 0 -26 10 -37 b 43 -14 33 -37 40 -26 b 167 232 65 134 109 177 b 445 683 243 305 445 416 b 432 837 445 730 441 783 b 441 919 438 855 441 881 b 327 1149 441 1032 374 1112 b 304 1156 321 1153 312 1156 b 287 1152 298 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1135 b 382 930 344 1076 382 1027 b 374 876 382 912 380 893 l 373 871 b 373 871 373 871 373 871 b 327 789 366 842 350 815 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z',\n        },\n        flag32ndUp: {\n            xMin: 0,\n            xMax: 279,\n            yMin: -821,\n            yMax: 186,\n            ha: 1007,\n            o: 'm 301 -683 b 148 -516 262 -632 219 -588 b 56 -373 92 -459 66 -410 b 50 -343 55 -366 53 -354 b 271 -500 125 -343 219 -432 b 340 -687 327 -575 340 -632 b 337 -739 340 -704 338 -721 b 301 -683 325 -716 312 -698 z m 271 -259 b 340 -446 327 -333 340 -392 b 338 -469 340 -455 338 -462 b 333 -461 337 -467 334 -464 b 91 -192 265 -372 145 -271 b 50 -92 69 -160 58 -124 b 271 -259 124 -92 219 -192 z m 0 -550 b 22 -564 0 -554 12 -560 b 258 -778 59 -577 171 -649 b 318 -952 307 -851 318 -903 b 317 -976 318 -960 318 -968 b 285 -1142 317 -1011 307 -1084 b 279 -1165 284 -1149 279 -1158 b 289 -1181 279 -1171 282 -1176 b 297 -1182 292 -1182 294 -1182 b 318 -1162 307 -1182 312 -1171 b 382 -963 344 -1122 382 -1044 b 374 -857 382 -922 379 -887 b 402 -668 389 -802 402 -740 b 386 -563 402 -632 396 -596 b 402 -441 395 -526 402 -487 b 402 -428 402 -436 402 -432 b 333 -220 402 -353 382 -285 b 137 23 265 -131 192 -56 b 42 251 82 102 42 251 b 22 268 39 261 37 268 b 0 251 4 268 0 261 z',\n        },\n        flag32ndDown: {\n            xMin: 0,\n            xMax: 309,\n            yMin: -216,\n            yMax: 803,\n            ha: 1019,\n            o: 'm 50 73 b 91 171 58 105 71 141 b 347 402 145 251 272 317 b 384 454 361 418 374 435 b 324 239 384 347 361 287 b 50 73 235 130 122 94 z m 163 517 b 366 693 248 589 327 642 b 382 716 372 700 377 708 b 383 693 383 708 383 700 b 314 505 383 621 359 562 b 53 343 258 436 179 390 b 56 363 55 351 56 359 b 163 517 66 400 81 449 z m 0 -288 b 22 -311 0 -298 10 -311 b 43 -288 33 -311 40 -300 b 167 -40 65 -138 109 -95 b 445 409 243 32 445 143 b 431 577 445 462 439 520 b 441 651 435 602 439 626 b 441 675 441 658 441 667 b 441 687 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 305 1156 321 1153 314 1156 b 287 1152 300 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1136 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z',\n        },\n        flag64thUp: {\n            xMin: 0,\n            xMax: 279,\n            yMin: -822,\n            yMax: 373,\n            ha: 1195,\n            o: 'm 333 -461 b 91 -192 265 -372 145 -271 b 50 -92 69 -161 58 -125 b 271 -251 125 -92 219 -183 b 340 -438 327 -324 340 -383 b 338 -469 340 -448 338 -459 b 333 -461 337 -467 334 -464 z m 301 -683 b 148 -517 262 -632 219 -588 b 56 -374 92 -461 66 -410 b 50 -343 55 -366 53 -356 b 271 -501 125 -343 219 -433 b 340 -688 327 -575 340 -634 b 337 -739 340 -706 338 -721 b 301 -683 325 -717 312 -698 z m 271 10 b 340 -176 327 -63 340 -121 b 337 -217 340 -190 338 -204 b 333 -212 336 -216 334 -213 b 91 65 265 -122 145 -16 b 48 177 66 101 53 143 l 50 177 b 271 10 124 177 217 78 z m 0 -552 b 22 -564 0 -554 12 -562 b 258 -778 59 -579 171 -649 b 318 -952 307 -851 317 -903 b 317 -976 318 -960 318 -968 b 285 -1142 317 -1012 307 -1084 b 279 -1165 284 -1149 279 -1158 b 289 -1181 279 -1172 282 -1178 b 297 -1184 292 -1182 295 -1184 b 318 -1164 307 -1182 312 -1172 b 382 -963 344 -1122 382 -1044 b 374 -857 382 -923 379 -887 b 402 -668 389 -804 402 -740 b 386 -563 402 -632 396 -596 b 402 -432 395 -523 402 -480 b 402 -418 402 -428 402 -423 b 383 -304 402 -379 396 -341 b 402 -170 393 -264 402 -222 b 402 -158 402 -166 402 -163 b 333 49 402 -84 382 -16 b 137 292 265 138 192 213 b 42 520 82 372 42 520 b 22 537 39 530 37 537 b 0 520 4 537 0 530 z',\n        },\n        flag64thDown: {\n            xMin: 0,\n            xMax: 309,\n            yMin: -403,\n            yMax: 804,\n            ha: 1207,\n            o: 'm 52 -196 b 91 -102 59 -166 71 -131 b 347 128 145 -23 272 45 b 384 180 361 145 374 163 b 324 -30 384 76 361 16 b 52 -196 235 -140 124 -176 z m 163 517 b 366 693 248 589 327 644 b 382 717 372 701 377 708 b 383 693 383 708 383 701 b 314 505 383 621 359 562 b 53 343 258 438 179 390 b 56 363 55 351 56 359 b 163 517 66 400 81 449 z m 314 232 b 50 69 258 163 179 117 b 91 171 56 102 69 140 b 347 402 145 251 272 318 b 382 449 360 416 372 432 b 383 420 383 439 383 429 b 314 232 383 348 359 288 z m 0 -557 b 22 -580 0 -567 10 -580 b 43 -557 33 -580 40 -567 b 167 -310 65 -408 109 -364 b 445 140 243 -238 445 -125 b 431 307 445 192 439 249 b 441 377 436 331 439 354 b 441 406 441 387 441 397 b 441 418 441 410 441 413 b 423 546 441 464 432 507 b 441 651 432 582 438 618 b 441 675 441 660 441 667 b 441 688 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 305 1158 321 1153 314 1156 b 287 1152 300 1158 292 1156 b 279 1145 281 1151 279 1148 b 294 1129 279 1140 288 1136 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 563 z',\n        },\n        flag128thUp: {\n            xMin: 0,\n            xMax: 279,\n            yMin: -821,\n            yMax: 573,\n            ha: 1394,\n            o: 'm 0 -550 b 22 -563 0 -553 12 -560 b 258 -776 59 -576 171 -648 b 318 -950 307 -850 318 -901 b 317 -975 318 -959 318 -966 b 285 -1140 317 -1011 307 -1083 b 279 -1164 284 -1148 279 -1156 b 289 -1179 279 -1171 282 -1176 b 297 -1182 292 -1181 294 -1181 b 318 -1162 307 -1182 312 -1169 b 382 -962 344 -1120 382 -1043 b 374 -857 382 -922 379 -887 b 402 -668 389 -802 402 -740 b 383 -554 402 -629 396 -590 b 402 -399 396 -503 402 -452 b 382 -284 402 -359 396 -321 b 402 -125 396 -230 402 -180 b 383 -14 402 -86 396 -49 b 402 130 396 35 402 81 b 333 348 402 204 382 284 b 137 592 265 438 192 513 b 42 808 82 671 46 793 b 22 825 39 818 37 825 b 0 808 4 825 0 818 z m 271 310 b 340 111 328 235 340 170 b 338 73 340 98 338 86 b 333 81 336 76 334 79 b 91 357 265 170 145 276 b 48 469 66 393 53 435 l 50 469 b 271 310 124 469 217 377 z m 301 -681 b 148 -523 262 -631 219 -593 b 56 -383 92 -465 66 -420 b 49 -343 55 -374 52 -359 l 50 -343 b 271 -500 124 -343 217 -432 b 340 -688 327 -575 340 -634 b 337 -737 340 -706 338 -721 b 301 -681 325 -716 312 -697 z m 333 -461 b 91 -192 265 -372 145 -271 b 48 -73 66 -154 53 -111 l 48 -73 l 50 -73 b 271 -232 124 -73 217 -163 b 340 -419 327 -305 340 -364 b 337 -468 340 -435 338 -452 b 333 -461 336 -465 334 -464 z m 333 -192 b 91 84 265 -102 145 4 b 48 200 65 121 53 164 l 48 200 l 50 200 b 271 42 124 200 217 109 b 340 -147 327 -32 340 -92 b 337 -197 340 -164 338 -181 b 333 -192 336 -196 334 -194 z',\n        },\n        flag128thDown: {\n            xMin: 0,\n            xMax: 309,\n            yMin: -591,\n            yMax: 803,\n            ha: 1394,\n            o: 'm 0 -828 b 22 -851 0 -838 10 -851 b 43 -828 33 -851 40 -840 b 167 -580 65 -678 109 -635 b 445 -131 243 -508 445 -397 b 431 36 445 -79 439 -22 b 441 108 436 60 439 85 b 441 137 441 117 441 127 b 441 147 441 140 441 144 b 423 275 441 193 432 236 b 441 377 433 310 438 344 b 441 406 441 387 441 396 b 441 418 441 410 441 413 b 423 546 441 464 432 507 b 441 649 432 582 438 616 b 441 675 441 658 441 667 b 441 687 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 304 1156 321 1153 312 1156 b 287 1152 298 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1135 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z m 314 -37 b 50 -200 258 -107 179 -153 b 91 -102 58 -168 71 -132 b 347 128 145 -23 272 45 b 382 176 360 143 372 160 b 383 151 383 167 383 160 b 314 -37 383 79 359 19 z m 314 232 b 50 69 258 163 179 117 b 91 171 56 101 69 138 b 347 402 145 251 272 317 b 382 449 360 416 372 432 b 383 420 383 439 383 429 b 314 232 383 347 359 288 z m 163 517 b 366 693 248 589 327 642 b 382 716 372 700 377 708 b 383 693 383 708 383 700 b 314 505 382 621 359 560 b 53 343 258 436 179 390 b 56 363 55 350 56 357 b 163 517 66 399 81 449 z m 52 -467 b 91 -372 59 -435 71 -402 b 347 -141 145 -292 272 -225 b 384 -89 361 -125 374 -108 b 324 -301 382 -194 361 -255 b 52 -467 235 -410 122 -446 z',\n        },\n        accidentalFlat: {\n            xMin: 0,\n            xMax: 203,\n            yMin: -176,\n            yMax: 453,\n            ha: 629,\n            o: 'm 289 114 b 173 223 281 170 246 223 b 52 170 101 223 59 179 l 58 632 b 37 652 58 644 49 652 l 20 652 b 0 632 9 652 0 644 l 7 -233 b 27 -253 7 -245 16 -253 b 39 -251 30 -253 36 -252 b 216 -114 45 -248 138 -202 b 292 78 271 -52 292 19 b 289 114 292 91 291 102 z m 190 58 b 148 -85 190 36 184 -30 b 48 -183 124 -122 75 -161 l 52 98 b 134 153 55 111 76 153 b 190 73 186 153 190 104 b 190 58 190 66 190 62 z',\n        },\n        accidentalNatural: {\n            xMin: 0,\n            xMax: 171,\n            yMin: -323,\n            yMax: 325,\n            ha: 648,\n            o: 'm 239 264 b 228 268 236 266 232 268 b 222 266 226 268 223 266 l 40 216 l 40 468 l 0 468 l 0 -245 b 20 -264 0 -256 9 -264 b 26 -264 22 -264 24 -264 l 207 -213 l 207 -465 l 246 -465 b 246 248 246 -226 246 1 b 239 264 246 253 243 261 z m 40 -140 l 40 96 l 207 144 l 207 -94 z',\n        },\n        accidentalSharp: {\n            xMin: 0,\n            xMax: 244,\n            yMin: -333,\n            yMax: 334,\n            ha: 667,\n            o: 'm 336 151 b 351 171 344 153 351 163 l 351 256 b 331 276 351 268 343 276 b 328 276 330 276 330 276 l 281 266 l 281 481 l 240 481 l 240 258 l 112 232 l 112 435 l 72 435 l 72 223 l 16 212 b 0 192 7 210 0 200 l 0 189 l 0 105 l 0 108 b 20 88 0 96 9 88 b 24 88 22 88 23 88 l 72 98 l 72 -140 l 16 -151 b 0 -171 7 -153 0 -163 l 0 -255 b 20 -275 0 -266 9 -275 b 24 -275 22 -275 23 -275 l 72 -265 l 72 -480 l 112 -480 l 112 -256 l 240 -230 l 240 -433 l 281 -433 l 281 -222 l 336 -212 b 351 -192 344 -210 351 -200 l 351 -107 b 331 -86 351 -95 343 -86 b 328 -86 330 -86 330 -86 l 281 -96 l 281 141 z m 112 107 l 240 132 l 240 -105 l 112 -132 z',\n        },\n        accidentalDoubleSharp: {\n            xMin: 0,\n            xMax: 275,\n            yMin: -137,\n            yMax: 138,\n            ha: 275,\n            o: 'm 360 73 l 376 73 b 396 94 387 73 396 82 l 396 179 b 376 199 396 190 387 199 l 291 199 b 271 179 279 199 271 190 l 271 161 l 271 102 l 200 30 l 196 30 l 124 102 l 124 179 b 105 199 124 190 117 199 l 20 199 b 0 179 9 199 0 190 l 0 94 b 20 73 0 82 9 73 l 35 73 l 36 73 l 96 73 l 167 3 l 167 -1 l 96 -73 l 36 -73 l 35 -73 l 20 -73 b 0 -92 9 -73 0 -81 l 0 -177 b 20 -197 0 -189 9 -197 l 105 -197 b 124 -177 117 -197 124 -189 l 124 -101 l 196 -32 l 200 -32 l 271 -101 l 271 -161 l 271 -163 l 271 -177 b 291 -197 271 -189 279 -197 l 376 -197 b 396 -177 387 -197 396 -189 l 396 -92 b 376 -73 396 -81 387 -73 l 361 -73 l 360 -73 l 300 -73 l 228 -1 l 228 1 l 300 73 z',\n        },\n        accidentalDoubleFlat: {\n            xMin: 0,\n            xMax: 371,\n            yMin: -176,\n            yMax: 453,\n            ha: 629,\n            o: 'm 531 115 b 415 223 523 171 488 223 b 294 171 343 223 301 180 l 300 632 b 279 652 300 644 291 652 l 262 652 b 242 632 251 652 242 644 l 246 199 b 173 223 228 213 204 223 b 52 170 101 223 59 179 l 58 632 b 37 652 58 644 49 652 l 20 652 b 0 632 9 652 0 644 l 7 -233 b 27 -253 7 -245 16 -253 b 39 -249 30 -253 36 -251 b 216 -114 45 -246 138 -202 b 248 -69 226 -102 239 -82 l 249 -233 b 269 -253 249 -245 258 -253 b 281 -249 272 -253 278 -251 b 458 -112 287 -246 380 -200 b 534 79 513 -50 534 20 b 531 115 534 92 533 104 z m 190 58 b 148 -85 190 36 184 -30 b 48 -183 124 -122 75 -161 l 52 98 b 134 153 55 111 76 153 b 190 73 186 153 190 104 b 190 58 190 66 190 62 z m 432 58 b 390 -85 432 36 426 -30 b 289 -183 366 -122 317 -161 l 294 98 b 376 153 297 111 318 153 b 432 73 428 153 432 104 b 432 58 432 66 432 62 z',\n        },\n        accidentalParensLeft: {\n            xMin: 0,\n            xMax: 75,\n            yMin: -212,\n            yMax: 209,\n            ha: 421,\n            o: 'm 98 -305 b 104 -302 101 -304 102 -304 b 108 -295 107 -301 108 -298 b 107 -289 108 -294 108 -292 b 40 10 107 -288 40 -160 b 107 288 40 95 58 192 b 108 292 108 289 108 291 b 104 300 108 295 107 298 b 96 301 101 301 99 302 b 91 298 94 301 92 300 b 0 0 86 292 0 174 b 91 -301 0 -174 86 -295 b 98 -305 92 -304 95 -305 z',\n        },\n        accidentalParensRight: {\n            xMin: 0,\n            xMax: 75,\n            yMin: -209,\n            yMax: 212,\n            ha: 421,\n            o: 'm 10 305 b 4 302 7 304 6 304 b 0 295 1 301 0 298 b 1 289 0 294 0 292 b 68 -10 1 288 68 160 b 1 -288 68 -95 50 -192 b 0 -292 0 -289 0 -291 b 4 -300 0 -295 1 -298 b 12 -301 7 -301 9 -302 b 17 -298 14 -301 16 -300 b 108 0 22 -292 108 -174 b 17 301 108 174 22 295 b 10 305 16 304 13 305 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            xMin: 0,\n            xMax: 193,\n            yMin: -176,\n            yMax: 452,\n            ha: 628,\n            o: 'm 0 84 b 107 -145 0 -26 65 -105 b 245 -249 166 -202 245 -249 b 253 -253 248 -251 249 -253 b 272 -235 264 -253 272 -245 l 278 632 b 259 651 278 642 269 651 l 248 651 b 229 632 238 651 229 642 l 232 174 b 125 217 223 186 192 217 b 0 84 53 217 0 173 z m 148 154 b 232 102 212 154 232 115 b 233 107 232 99 233 102 l 235 -179 b 134 -72 207 -156 160 -111 b 92 58 98 -17 92 36 b 92 75 92 62 92 68 b 148 154 92 105 96 154 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            xMin: 0,\n            xMax: 422,\n            yMin: -176,\n            yMax: 452,\n            ha: 628,\n            o: 'm 608 84 b 482 217 608 173 554 217 b 376 174 416 217 384 186 l 379 632 b 360 651 379 642 370 651 l 348 651 b 330 632 338 651 330 642 l 336 -235 b 354 -253 336 -245 344 -253 b 363 -249 359 -253 360 -251 b 501 -145 363 -249 442 -202 b 608 84 543 -105 608 -26 z m 459 154 b 516 75 511 154 516 105 b 516 58 516 68 516 62 b 474 -72 516 36 510 -17 b 373 -179 448 -111 400 -156 l 374 107 b 376 102 374 102 376 99 b 459 154 376 115 396 154 z m 0 84 b 107 -145 0 -26 65 -105 b 245 -249 166 -202 245 -249 b 253 -253 248 -251 249 -253 b 272 -235 264 -253 272 -245 l 278 632 b 259 651 278 642 269 651 l 248 651 b 229 632 238 651 229 642 l 232 174 b 125 217 223 186 192 217 b 0 84 53 217 0 173 z m 148 154 b 232 102 212 154 232 115 b 233 107 232 99 233 102 l 235 -179 b 134 -72 207 -156 160 -111 b 92 58 98 -17 92 36 b 92 75 92 62 92 68 b 148 154 92 105 96 154 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            xMin: 0,\n            xMax: 180,\n            yMin: -316,\n            yMax: 320,\n            ha: 636,\n            o: 'm 243 144 b 259 164 252 145 259 156 l 259 249 b 239 269 259 261 251 269 b 235 268 238 269 236 268 l 150 251 l 150 461 l 109 461 l 109 242 l 16 222 b 0 203 7 220 0 212 l 0 120 b 20 99 0 108 9 99 b 24 99 22 99 23 99 l 109 117 l 109 -121 l 16 -141 b 0 -160 7 -143 0 -151 l 0 -243 b 20 -264 0 -255 9 -264 b 24 -264 22 -264 23 -264 l 109 -246 l 109 -455 l 150 -455 l 150 -238 l 243 -219 b 259 -199 252 -217 259 -207 l 259 -114 b 239 -95 259 -102 251 -95 b 235 -95 238 -95 236 -95 l 150 -112 l 150 125 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            xMin: 0,\n            xMax: 290,\n            yMin: -328,\n            yMax: 339,\n            ha: 667,\n            o: 'm 400 158 b 416 179 409 160 416 170 l 416 264 b 397 284 416 275 409 284 b 393 284 396 284 395 284 l 348 274 l 348 488 l 308 488 l 308 265 l 223 248 l 223 465 l 184 465 l 184 240 l 108 225 l 108 442 l 69 442 l 69 216 l 16 204 b 0 186 7 203 0 194 l 0 102 b 20 82 0 91 9 82 b 24 82 22 82 23 82 l 69 92 l 69 -147 l 16 -158 b 0 -177 7 -160 0 -168 l 0 -261 b 20 -281 0 -272 9 -281 b 24 -281 22 -281 23 -281 l 69 -272 l 69 -472 l 108 -472 l 108 -264 l 184 -248 l 184 -451 l 223 -451 l 223 -240 l 308 -223 l 308 -426 l 348 -426 l 348 -215 l 400 -204 b 418 -184 409 -203 418 -193 l 418 -99 b 397 -79 418 -88 409 -79 b 393 -79 396 -79 395 -79 l 348 -89 l 348 148 z m 184 -122 l 108 -138 l 108 99 l 184 115 z m 223 122 l 308 140 l 308 -98 l 223 -115 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            xMin: 0,\n            xMax: 277,\n            yMin: -176,\n            yMax: 454,\n            ha: 630,\n            o: 'm 396 115 b 279 225 387 173 354 225 b 158 171 204 225 164 179 l 160 317 l 336 419 l 336 482 l 161 380 l 161 488 l 336 590 l 336 654 l 163 552 l 164 634 b 144 654 164 645 156 654 l 127 654 b 107 634 115 654 107 645 l 108 520 l 0 456 l 0 393 l 108 456 l 109 350 l 0 285 l 0 222 l 109 287 l 114 -235 b 134 -253 114 -246 122 -253 b 145 -251 138 -253 141 -252 b 323 -114 145 -251 242 -204 b 399 79 377 -52 399 20 b 396 115 399 92 397 104 z m 297 58 b 255 -85 297 36 291 -30 b 154 -184 230 -122 181 -163 l 158 96 b 240 153 161 109 181 153 b 297 73 292 153 297 104 b 297 58 297 66 297 62 z',\n        },\n        accidentalBuyukMucennebSharp: {\n            xMin: 0,\n            xMax: 348,\n            yMin: -332,\n            yMax: 334,\n            ha: 666,\n            o: 'm 494 121 b 482 125 491 122 485 125 b 478 125 481 125 480 125 l 354 91 l 354 148 l 412 164 b 425 183 419 166 425 176 l 425 268 b 408 287 425 278 418 287 b 402 285 406 287 403 285 l 354 272 l 354 481 l 317 481 l 317 262 l 186 226 l 186 436 l 148 436 l 148 216 l 89 200 b 76 183 82 199 76 190 l 76 98 b 84 84 76 92 79 86 b 95 81 86 82 92 81 b 99 81 96 81 98 81 l 148 94 l 148 35 l 14 -1 b 0 -20 7 -3 0 -13 l 0 -104 b 7 -118 0 -109 3 -115 b 19 -122 10 -120 16 -122 b 23 -121 20 -122 22 -121 l 148 -88 l 148 -147 l 89 -163 b 76 -180 82 -164 76 -173 l 76 -181 l 76 -265 b 95 -282 76 -275 85 -282 b 99 -282 96 -282 98 -282 l 148 -269 l 148 -478 l 186 -478 l 186 -259 l 317 -225 l 317 -433 l 354 -433 l 354 -215 l 412 -199 b 425 -181 419 -197 425 -189 l 425 -95 b 418 -81 425 -89 422 -84 b 406 -76 415 -79 409 -76 b 402 -78 405 -76 403 -78 l 354 -91 l 354 -32 l 488 4 b 501 22 495 6 501 14 l 501 107 b 494 121 501 112 498 118 z m 317 138 l 317 81 l 186 45 l 186 104 z m 186 -137 l 186 -78 l 317 -42 l 317 -101 z',\n        },\n        accidentalBakiyeFlat: {\n            xMin: 0,\n            xMax: 277,\n            yMin: -176,\n            yMax: 454,\n            ha: 630,\n            o: 'm 396 115 b 279 225 387 173 354 225 b 158 171 204 225 164 179 l 161 348 l 336 452 l 336 516 l 161 413 l 164 634 b 144 654 164 645 156 654 l 127 654 b 107 634 115 654 107 645 l 109 382 l 0 318 l 0 255 l 109 318 l 114 -235 b 134 -253 114 -246 122 -253 b 145 -251 138 -253 143 -252 b 323 -114 145 -251 242 -204 b 399 79 377 -52 399 20 b 396 115 399 92 397 104 z m 297 58 b 255 -85 297 36 291 -30 b 156 -184 230 -122 183 -163 l 158 96 b 240 153 161 109 181 153 b 297 73 292 153 297 104 b 297 58 297 66 297 62 z',\n        },\n        accidentalKucukMucennebSharp: {\n            xMin: 0,\n            xMax: 348,\n            yMin: -316,\n            yMax: 318,\n            ha: 634,\n            o: 'm 494 121 b 482 125 491 124 487 125 b 478 124 481 125 480 124 l 269 68 l 269 127 l 412 164 b 425 181 420 167 425 173 l 425 266 b 418 282 425 272 422 279 b 406 285 415 285 410 285 b 402 285 405 285 403 285 l 269 249 l 269 458 l 232 458 l 232 239 l 89 200 b 76 181 81 197 76 190 l 76 98 b 84 84 76 92 79 86 b 95 79 86 81 91 79 b 99 81 96 79 98 81 l 232 115 l 232 58 l 14 -3 b 0 -20 6 -6 0 -12 l 0 -104 b 7 -118 0 -109 3 -115 b 19 -122 10 -121 14 -122 b 23 -122 20 -122 22 -122 l 232 -66 l 232 -124 l 89 -163 b 76 -180 81 -166 76 -171 l 76 -264 b 84 -279 76 -269 79 -276 b 95 -282 86 -282 91 -282 b 99 -282 96 -282 98 -282 l 232 -246 l 232 -455 l 269 -455 l 269 -236 l 412 -199 b 425 -180 420 -196 425 -189 l 425 -95 b 418 -81 425 -89 422 -84 b 406 -76 415 -78 410 -76 b 402 -78 405 -76 403 -78 l 269 -114 l 269 -55 l 487 4 b 501 22 495 7 501 13 l 501 107 b 494 121 501 112 498 118 z',\n        },\n        articAccentAbove: {\n            xMin: 0,\n            xMax: 361,\n            yMin: 0,\n            yMax: 235,\n            ha: 235,\n            o: 'm 26 337 b 20 338 24 337 22 338 b 0 318 9 338 0 330 l 0 285 b 14 266 0 276 7 269 l 323 170 l 14 72 b 0 53 7 69 0 62 l 0 20 b 20 0 0 9 9 0 b 26 1 22 0 24 1 l 505 150 b 520 170 513 153 520 161 b 505 189 520 179 513 186 z',\n        },\n        articAccentBelow: {\n            xMin: 0,\n            xMax: 361,\n            yMin: -235,\n            yMax: 0,\n            ha: 235,\n            o: 'm 26 -1 b 20 0 24 -1 22 0 b 0 -20 9 0 0 -9 l 0 -53 b 14 -72 0 -62 7 -69 l 323 -168 l 14 -266 b 0 -285 7 -269 0 -276 l 0 -318 b 20 -338 0 -330 9 -338 b 26 -337 22 -338 24 -337 l 505 -189 b 520 -168 513 -186 520 -177 b 505 -150 520 -160 513 -153 z',\n        },\n        articTenutoAbove: {\n            xMin: 0,\n            xMax: 316,\n            yMin: 0,\n            yMax: 46,\n            ha: 46,\n            o: 'm 20 66 b 0 46 9 66 0 58 l 0 20 b 20 0 0 9 9 0 l 435 0 b 455 20 446 0 455 9 l 455 46 b 435 66 455 58 446 66 z',\n        },\n        articTenutoBelow: {\n            xMin: 0,\n            xMax: 316,\n            yMin: -46,\n            yMax: 0,\n            ha: 46,\n            o: 'm 20 0 b 0 -20 9 0 0 -9 l 0 -46 b 20 -66 0 -58 9 -66 l 435 -66 b 455 -46 446 -66 455 -58 l 455 -20 b 435 0 455 -9 446 0 z',\n        },\n        articStaccatoAbove: {\n            xMin: 0,\n            xMax: 78,\n            yMin: 0,\n            yMax: 78,\n            ha: 78,\n            o: 'm 16 16 b 96 16 39 -6 73 -6 b 96 95 118 39 118 73 b 16 95 73 118 39 118 b 16 16 -6 73 -6 39 z',\n        },\n        articStaccatoBelow: {\n            xMin: 0,\n            xMax: 78,\n            yMin: -78,\n            yMax: 0,\n            ha: 78,\n            o: 'm 16 -96 b 96 -96 39 -118 73 -118 b 96 -17 118 -73 118 -39 b 16 -17 73 6 39 6 b 16 -96 -6 -39 -6 -73 z',\n        },\n        articStaccatissimoAbove: {\n            xMin: 0,\n            xMax: 127,\n            yMin: 0,\n            yMax: 248,\n            ha: 248,\n            o: 'm 163 357 b 150 353 154 357 150 353 l 99 300 b 92 295 96 297 95 295 b 85 300 89 295 88 297 l 35 353 b 22 357 35 353 30 357 b 0 338 13 357 0 351 b 73 22 0 323 73 22 b 92 0 75 16 78 0 b 111 22 107 0 109 16 b 183 338 111 22 183 323 b 163 357 183 351 171 357 z',\n        },\n        articStaccatissimoBelow: {\n            xMin: 0,\n            xMax: 127,\n            yMin: -248,\n            yMax: 0,\n            ha: 248,\n            o: 'm 20 -357 b 33 -353 29 -357 33 -353 l 84 -300 b 91 -295 86 -297 88 -295 b 98 -300 94 -295 95 -297 l 148 -353 b 161 -357 148 -353 153 -357 b 183 -338 170 -357 183 -351 b 109 -22 183 -323 109 -22 b 91 0 108 -16 105 0 b 72 -22 76 0 73 -16 b 0 -338 72 -22 0 -323 b 20 -357 0 -351 12 -357 z',\n        },\n        articMarcatoAbove: {\n            xMin: 1,\n            xMax: 296,\n            yMin: 0,\n            yMax: 253,\n            ha: 253,\n            o: 'm 36 10 l 173 239 l 298 10 b 317 0 301 4 310 0 l 408 0 b 426 20 419 0 426 9 b 425 30 426 23 426 27 l 230 356 b 213 364 226 361 222 363 b 196 356 207 364 199 361 l 1 30 z',\n        },\n        articMarcatoBelow: {\n            xMin: 0,\n            xMax: 295,\n            yMin: -253,\n            yMax: 0,\n            ha: 253,\n            o: 'm 390 -10 l 253 -239 l 128 -10 b 109 0 125 -4 117 0 l 19 0 b 0 -20 7 0 0 -9 b 1 -30 0 -23 0 -27 l 196 -356 b 213 -364 200 -361 204 -363 b 230 -356 219 -364 228 -361 l 425 -30 z',\n        },\n        fermataAbove: {\n            xMin: 0,\n            xMax: 622,\n            yMin: 0,\n            yMax: 368,\n            ha: 368,\n            o: 'm 778 374 b 448 530 642 521 523 530 b 120 374 373 530 255 521 b 0 65 49 297 0 143 b 20 19 0 37 6 19 b 161 265 60 19 40 143 b 445 373 268 372 410 373 b 448 373 446 373 446 373 b 451 373 449 373 449 373 b 734 265 485 373 628 372 b 876 19 855 143 835 19 b 896 65 890 19 896 36 b 778 374 896 143 848 298 z m 348 99 b 448 0 348 45 393 0 b 547 99 503 0 547 45 b 448 199 547 154 503 199 b 348 99 393 199 348 154 z',\n        },\n        fermataBelow: {\n            xMin: 0,\n            xMax: 622,\n            yMin: -368,\n            yMax: 0,\n            ha: 368,\n            o: 'm 778 -374 b 896 -65 848 -298 896 -143 b 876 -19 896 -36 890 -19 b 734 -265 835 -19 855 -143 b 451 -373 628 -372 485 -373 b 448 -373 449 -373 449 -373 b 445 -373 446 -373 446 -373 b 161 -265 410 -373 268 -372 b 20 -19 40 -143 60 -19 b 0 -65 6 -19 0 -37 b 120 -374 0 -143 49 -297 b 448 -530 255 -521 373 -530 b 778 -374 523 -530 642 -521 z m 348 -99 b 448 -199 348 -154 393 -199 b 547 -99 503 -199 547 -154 b 448 0 547 -45 503 0 b 348 -99 393 0 348 -45 z',\n        },\n        fermataLongAbove: {\n            xMin: 0,\n            xMax: 623,\n            yMin: 0,\n            yMax: 368,\n            ha: 368,\n            o: 'm 40 0 l 40 399 l 858 399 l 858 0 l 897 0 l 897 510 b 877 530 897 521 888 530 l 20 530 b 0 510 9 530 0 521 l 0 0 z m 350 148 b 449 49 350 94 395 49 b 547 148 504 49 547 94 b 449 248 547 203 504 248 b 350 148 395 248 350 203 z',\n        },\n        fermataLongBelow: {\n            xMin: 0,\n            xMax: 623,\n            yMin: -368,\n            yMax: 0,\n            ha: 368,\n            o: 'm 0 -510 b 20 -530 0 -521 9 -530 l 877 -530 b 897 -510 888 -530 897 -521 l 897 0 l 858 0 l 858 -399 l 40 -399 l 40 0 l 0 0 z m 350 -148 b 449 -248 350 -203 395 -248 b 547 -148 504 -248 547 -203 b 449 -49 547 -94 504 -49 b 350 -148 395 -49 350 -94 z',\n        },\n        fermataVeryLongAbove: {\n            xMin: 0,\n            xMax: 842,\n            yMin: 0,\n            yMax: 549,\n            ha: 549,\n            o: 'm 276 0 l 276 399 l 936 399 l 936 0 l 976 0 l 976 510 b 956 530 976 521 968 530 l 256 530 b 236 510 245 530 236 521 l 236 0 z m 507 148 b 606 49 507 94 552 49 b 706 148 661 49 706 94 b 606 248 706 203 661 248 b 507 148 552 248 507 203 z m 40 0 l 40 661 l 1172 661 l 1172 0 l 1212 0 l 1212 772 b 1192 791 1212 783 1204 791 l 20 791 b 0 772 9 791 0 783 l 0 0 z',\n        },\n        fermataVeryLongBelow: {\n            xMin: 0,\n            xMax: 842,\n            yMin: -549,\n            yMax: 0,\n            ha: 549,\n            o: 'm 236 -510 b 256 -530 236 -521 245 -530 l 956 -530 b 976 -510 968 -530 976 -521 l 976 0 l 936 0 l 936 -399 l 276 -399 l 276 0 l 236 0 z m 507 -148 b 606 -248 507 -203 552 -248 b 706 -148 661 -248 706 -203 b 606 -49 706 -94 661 -49 b 507 -148 552 -49 507 -94 z m 0 -772 b 20 -791 0 -783 9 -791 l 1192 -791 b 1212 -772 1204 -791 1212 -783 l 1212 0 l 1172 0 l 1172 -661 l 40 -661 l 40 0 l 0 0 z',\n        },\n        fermataShortAbove: {\n            xMin: 0,\n            xMax: 642,\n            yMin: 0,\n            yMax: 454,\n            ha: 454,\n            o: 'm 363 148 b 462 49 363 94 408 49 b 562 148 517 49 562 94 b 462 248 562 203 517 248 b 363 148 408 248 363 203 z m 477 645 b 461 654 474 649 467 654 b 445 645 455 654 448 649 l 4 32 b 0 20 3 29 0 23 b 20 0 0 9 9 0 l 82 0 b 98 9 88 0 95 4 l 461 514 l 827 9 b 842 0 829 4 837 0 l 904 0 b 924 20 916 0 924 9 b 920 32 924 23 922 29 z',\n        },\n        fermataShortBelow: {\n            xMin: 0,\n            xMax: 642,\n            yMin: -454,\n            yMax: 0,\n            ha: 454,\n            o: 'm 363 -148 b 462 -248 363 -203 408 -248 b 562 -148 517 -248 562 -203 b 462 -49 562 -94 517 -49 b 363 -148 408 -49 363 -94 z m 920 -32 b 924 -20 922 -29 924 -23 b 904 0 924 -9 916 0 l 842 0 b 827 -9 837 0 829 -4 l 461 -514 l 98 -9 b 82 0 95 -4 88 0 l 20 0 b 0 -20 9 0 0 -9 b 4 -32 0 -23 3 -29 l 445 -645 b 461 -654 448 -649 455 -654 b 477 -645 467 -654 474 -649 z',\n        },\n        breathMarkComma: {\n            xMin: 0,\n            xMax: 191,\n            yMin: 0,\n            yMax: 321,\n            ha: 321,\n            o: 'm 82 0 b 275 285 215 92 275 183 b 115 462 275 396 212 462 b 0 356 46 462 0 413 b 115 246 0 294 53 246 b 181 258 157 246 177 256 b 192 261 184 259 189 261 b 199 259 194 261 196 261 b 203 245 202 258 203 253 b 48 43 203 183 147 112 z',\n        },\n        caesura: {\n            xMin: 0,\n            xMax: 380,\n            yMin: 0,\n            yMax: 490,\n            ha: 490,\n            o: 'm 285 706 b 285 706 285 706 285 706 b 271 696 279 706 274 701 l 1 22 b 0 16 0 20 0 17 b 16 0 0 7 7 0 l 50 0 b 65 10 56 0 62 4 l 334 684 b 336 690 334 685 336 688 b 320 706 336 698 328 706 z m 213 22 b 212 16 213 20 212 17 b 228 0 212 7 219 0 l 262 0 b 276 10 268 0 274 4 l 546 684 b 547 690 547 685 547 688 b 531 706 547 698 540 706 l 497 706 b 482 696 491 706 485 701 z',\n        },\n        caesuraCurved: {\n            xMin: 0,\n            xMax: 368,\n            yMin: 0,\n            yMax: 491,\n            ha: 491,\n            o: 'm 262 707 b 245 693 253 707 246 701 b 1 26 233 603 177 348 b 0 17 0 23 0 20 b 16 0 0 9 6 0 b 30 7 22 0 27 3 b 318 687 259 341 304 602 b 318 690 318 688 318 688 b 301 707 318 698 310 707 z m 474 707 b 458 693 465 707 459 701 b 213 26 446 603 389 348 b 212 19 212 23 212 20 b 229 0 212 9 219 0 b 243 7 235 0 240 3 b 530 687 472 341 516 602 b 530 690 530 688 530 688 b 514 707 530 698 523 707 z',\n        },\n        restMaxima: {\n            xMin: 0,\n            xMax: 450,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 158 -360 b 180 -338 170 -360 180 -350 l 180 338 b 158 360 180 350 170 360 l 22 360 b 0 338 9 360 0 350 l 0 -338 b 22 -360 0 -350 9 -360 z m 626 -360 b 648 -338 638 -360 648 -350 l 648 338 b 626 360 648 350 638 360 l 490 360 b 468 338 477 360 468 350 l 468 -338 b 490 -360 468 -350 477 -360 z',\n        },\n        restDoubleWhole: {\n            xMin: 0,\n            xMax: 125,\n            yMin: -11,\n            yMax: 262,\n            ha: 273,\n            o: 'm 158 -16 b 180 6 171 -16 180 -6 l 180 356 b 158 377 180 367 171 377 l 22 377 b 0 356 10 377 0 367 l 0 6 b 22 -16 0 -6 10 -16 z',\n        },\n        restWhole: {\n            xMin: 0,\n            xMax: 325,\n            yMin: -131,\n            yMax: 5,\n            ha: 136,\n            o: 'm 20 7 b 0 -13 9 7 0 -1 l 0 -168 b 20 -189 0 -180 9 -189 l 448 -189 b 468 -168 459 -189 468 -180 l 468 -13 b 448 7 468 -1 459 7 z',\n        },\n        restWholeLegerLine: {\n            xMin: -139,\n            xMax: 464,\n            yMin: -122,\n            yMax: 14,\n            ha: 136,\n            o: 'm 449 20 l 19 20 l -200 20 l -200 -20 l 0 -20 l 0 -156 b 19 -176 0 -167 7 -176 l 449 -176 b 468 -156 461 -176 468 -167 l 468 -20 l 668 -20 l 668 20 z',\n        },\n        restHalf: {\n            xMin: 0,\n            xMax: 325,\n            yMin: -4,\n            yMax: 132,\n            ha: 136,\n            o: 'm 0 14 b 20 -6 0 -6 0 -6 l 448 -6 b 468 14 468 -6 468 -6 l 468 170 b 448 190 468 190 468 190 l 20 190 b 0 170 0 190 0 190 z',\n        },\n        restHalfLegerLine: {\n            xMin: -139,\n            xMax: 464,\n            yMin: -14,\n            yMax: 122,\n            ha: 136,\n            o: 'm 668 20 l 468 20 l 468 156 b 449 176 468 167 461 176 l 19 176 b 0 156 7 176 0 167 l 0 20 l -200 20 l -200 -20 l 19 -20 l 449 -20 l 668 -20 z',\n        },\n        restQuarter: {\n            xMin: 0,\n            xMax: 235,\n            yMin: -331,\n            yMax: 401,\n            ha: 732,\n            o: 'm 331 -239 b 323 -229 330 -238 327 -235 l 157 -24 b 154 -16 156 -23 154 -19 b 157 -3 154 -12 156 -6 l 304 219 b 307 229 305 222 307 226 l 307 242 b 302 253 307 246 305 251 l 69 569 b 55 577 69 569 63 577 b 43 573 50 577 48 576 b 36 559 37 569 36 563 b 40 543 36 550 40 543 l 150 393 b 154 376 153 389 154 383 b 150 359 154 370 153 363 l 4 137 b 1 125 3 134 1 128 l 1 112 b 6 101 1 108 3 104 l 167 -99 b 131 -95 161 -98 148 -95 b 49 -124 107 -95 75 -101 b 0 -229 17 -153 0 -193 b 16 -285 0 -249 4 -269 b 154 -468 46 -331 154 -468 b 171 -477 154 -468 161 -477 b 180 -474 174 -477 177 -477 b 190 -456 187 -468 190 -462 b 186 -444 190 -451 187 -446 b 135 -353 181 -436 135 -353 b 125 -307 135 -353 125 -333 b 150 -246 125 -288 131 -265 b 206 -223 167 -229 187 -223 b 252 -236 225 -223 240 -229 l 308 -272 b 320 -275 308 -272 314 -275 b 334 -268 325 -275 330 -274 b 338 -255 337 -262 338 -259 b 334 -243 338 -251 337 -248 z',\n        },\n        rest8th: {\n            xMin: 0,\n            xMax: 276,\n            yMin: -255,\n            yMax: 204,\n            ha: 459,\n            o: 'm 384 292 b 379 294 383 292 380 294 b 360 282 370 294 363 289 b 245 141 354 274 310 189 b 180 112 226 127 203 117 b 206 181 196 131 206 154 b 104 284 206 238 160 284 b 0 181 46 284 0 238 b 65 85 0 137 27 101 b 144 68 86 75 115 68 b 269 109 186 68 230 81 b 320 157 287 122 304 140 l 156 -356 l 194 -367 l 396 268 b 397 275 397 269 397 272 b 384 292 397 282 393 288 z',\n        },\n        rest16th: {\n            xMin: 1,\n            xMax: 344,\n            yMin: -507,\n            yMax: 204,\n            ha: 711,\n            o: 'm 494 268 b 495 275 495 271 495 272 b 482 292 495 282 491 289 b 475 294 480 294 477 294 b 456 282 467 294 461 289 b 285 115 422 213 364 135 b 310 184 302 135 310 158 b 203 284 310 240 259 284 b 104 177 145 281 104 233 b 171 84 105 134 134 98 b 252 69 197 72 225 69 b 423 164 324 72 380 108 l 423 164 l 359 -65 b 183 -245 338 -132 256 -226 b 207 -176 199 -225 207 -200 b 102 -76 207 -118 158 -76 b 1 -183 45 -76 1 -125 b 69 -275 1 -226 32 -262 b 150 -289 96 -287 121 -289 b 321 -194 222 -287 278 -251 l 174 -720 l 213 -730 z',\n        },\n        rest32nd: {\n            xMin: 0,\n            xMax: 391,\n            yMin: -507,\n            yMax: 460,\n            ha: 967,\n            o: 'm 217 71 b 408 171 348 71 402 161 l 354 -46 b 184 -240 323 -121 268 -217 b 204 -171 200 -220 204 -197 b 102 -76 204 -114 158 -76 b 0 -177 46 -76 0 -120 b 140 -288 0 -252 63 -288 b 320 -186 216 -288 276 -246 l 189 -721 l 228 -730 l 562 638 b 563 644 563 639 563 642 b 549 661 563 652 557 658 b 543 662 547 662 544 662 b 524 649 534 662 528 657 b 361 487 497 589 431 504 b 383 556 379 508 383 530 b 282 652 383 611 338 652 b 179 549 226 652 179 609 b 249 451 179 505 210 464 b 311 439 268 444 288 441 b 330 441 317 439 323 439 b 498 541 400 445 458 485 l 442 310 b 271 117 413 238 351 137 b 292 186 288 138 292 160 b 189 282 292 243 245 282 b 88 180 132 282 88 238 b 217 71 88 112 153 71 z',\n        },\n        rest64th: {\n            xMin: 0,\n            xMax: 423,\n            yMin: -758,\n            yMax: 464,\n            ha: 1222,\n            o: 'm 207 -1083 l 246 -1092 b 608 644 282 -919 605 634 b 609 649 608 647 609 648 b 595 667 609 658 603 665 b 589 668 593 668 592 668 b 569 654 577 668 575 664 b 474 521 563 644 530 573 b 412 487 456 505 435 494 b 432 546 425 503 432 526 b 328 649 432 606 382 649 b 226 546 275 649 226 608 b 360 438 226 465 300 438 b 501 492 419 438 474 465 b 546 546 527 518 533 526 l 547 547 l 500 323 b 399 161 491 300 452 209 b 337 125 382 144 360 132 b 357 184 350 143 357 134 b 253 288 357 235 317 288 b 151 187 190 288 151 236 b 285 76 151 138 183 76 b 471 184 412 76 465 173 l 423 -45 b 324 -204 413 -69 374 -158 b 262 -240 305 -222 284 -233 b 281 -180 274 -223 281 -212 b 177 -78 281 -147 258 -78 b 75 -180 98 -78 75 -153 b 209 -289 75 -207 88 -289 b 395 -181 330 -289 389 -193 l 350 -397 b 248 -564 337 -449 285 -530 b 186 -599 229 -580 207 -592 b 204 -540 197 -583 204 -563 b 102 -438 204 -501 174 -438 b 0 -540 29 -438 0 -501 b 132 -648 0 -579 24 -648 b 320 -540 266 -648 315 -552 z',\n        },\n        rest128th: {\n            xMin: -1,\n            xMax: 475,\n            yMin: -759,\n            yMax: 717,\n            ha: 1476,\n            o: 'm 677 1028 b 664 1032 672 1031 667 1032 b 644 1018 654 1032 649 1028 b 549 886 638 1008 605 937 b 487 851 531 870 510 858 b 507 910 500 868 507 890 b 403 1014 507 971 456 1014 b 301 910 350 1014 301 972 b 435 802 301 829 374 802 b 576 857 494 802 549 829 b 621 910 602 883 608 890 l 622 912 l 575 687 b 474 526 566 664 527 573 b 412 490 456 508 435 497 b 432 549 425 507 432 498 b 328 652 432 599 392 652 b 226 552 265 652 226 600 b 360 441 226 503 258 441 b 546 549 487 441 540 537 l 498 320 b 399 160 488 295 449 207 b 337 125 380 143 359 131 b 356 184 348 141 356 153 b 252 287 356 217 333 287 b 150 184 173 287 150 212 b 284 76 150 157 163 76 b 469 183 405 76 464 171 l 425 -33 b 323 -200 412 -85 360 -166 b 261 -235 304 -216 282 -228 b 279 -176 272 -219 279 -199 b 177 -72 279 -137 249 -72 b 75 -176 104 -72 75 -137 b 207 -284 75 -215 99 -284 b 395 -176 341 -284 390 -187 l 347 -409 b 248 -566 330 -461 282 -533 b 186 -600 229 -582 207 -593 b 204 -541 197 -583 204 -564 b 102 -438 204 -501 174 -438 b -1 -541 29 -438 -1 -503 b 132 -649 -1 -580 24 -649 b 318 -546 256 -649 307 -567 l 206 -1084 l 245 -1093 b 683 1008 281 -920 680 996 b 684 1015 683 1009 684 1014 b 677 1028 684 1020 683 1024 z',\n        },\n        dynamicPiano: {\n            xMin: -95,\n            xMax: 317,\n            yMin: -163,\n            yMax: 263,\n            ha: 426,\n            o: 'm 186 -235 l 186 -206 l 78 -206 l 161 26 l 166 16 b 229 -29 166 16 180 -16 b 256 -32 238 -32 248 -32 b 445 166 336 -32 415 49 b 456 246 454 197 456 223 b 374 373 456 343 396 367 b 356 376 369 374 361 376 b 242 314 311 376 266 338 l 238 310 l 235 315 b 154 377 235 315 204 370 b 138 379 148 377 144 379 b 0 226 91 379 42 346 l 26 213 b 63 301 32 232 46 278 b 102 328 72 314 89 325 b 108 328 104 328 107 328 b 120 325 112 328 117 327 b 127 304 125 321 127 314 b 94 192 127 269 101 206 l -49 -206 l -137 -206 l -137 -235 z m 226 17 b 215 19 223 17 217 17 b 187 81 193 27 187 53 b 204 180 187 125 203 177 b 297 317 217 235 259 295 b 324 325 307 323 315 325 b 336 324 328 325 333 325 b 350 311 341 323 347 317 b 356 278 354 302 356 291 b 333 161 356 239 341 187 b 242 20 314 105 278 37 b 226 17 238 17 230 17 z',\n        },\n        dynamicMezzo: {\n            xMin: -7,\n            xMax: 374,\n            yMin: -2,\n            yMax: 251,\n            ha: 253,\n            o: 'm 488 63 b 467 48 481 50 474 48 b 459 49 464 48 462 48 b 449 65 452 52 449 58 b 461 112 449 76 455 94 b 474 157 464 121 471 150 b 492 281 482 183 492 242 b 491 301 492 288 492 295 b 436 359 484 340 467 359 b 340 307 399 359 359 331 l 337 301 l 334 308 b 272 359 334 308 311 359 b 177 310 232 359 202 343 l 173 304 l 171 311 b 117 360 171 311 153 353 b 96 361 109 361 102 361 b 29 328 60 361 39 340 b -10 252 20 318 0 284 l 12 240 b 68 318 12 240 36 318 b 75 317 71 318 72 318 b 86 295 84 314 86 307 b 59 194 86 275 75 240 b 1 20 59 193 6 33 b 0 13 1 17 0 16 b 3 4 0 10 1 7 b 14 -1 6 1 9 -1 l 36 -1 b 91 -1 58 -1 86 -1 b 107 22 94 -1 101 -1 b 127 99 114 53 121 79 b 235 310 132 121 186 310 b 243 305 238 310 242 308 b 248 289 246 302 248 297 b 216 160 248 265 233 219 b 173 22 194 89 173 22 b 173 16 173 20 173 19 b 176 3 173 12 173 6 b 187 -1 179 0 183 -1 l 266 -1 b 282 16 272 -1 279 0 b 284 26 282 17 284 22 b 392 302 312 228 359 288 b 396 304 393 302 395 304 l 397 304 b 400 302 399 304 399 302 b 408 289 403 301 408 297 b 369 140 408 275 399 217 b 356 75 360 117 356 95 b 370 23 356 55 360 37 b 428 -3 382 6 408 -3 b 536 99 492 -3 517 49 b 539 108 537 102 537 105 l 514 120 b 488 63 514 120 498 81 z',\n        },\n        dynamicForte: {\n            xMin: -137,\n            xMax: 334,\n            yMin: -193,\n            yMax: 421,\n            ha: 614,\n            o: 'm -122 -86 b -197 -161 -161 -86 -197 -122 b -81 -278 -197 -236 -147 -278 b 35 -228 -35 -278 -1 -264 b 202 173 98 -164 167 50 b 238 297 215 219 228 264 l 238 300 l 341 300 b 356 314 350 300 356 305 l 356 346 b 341 360 356 354 350 360 l 256 360 l 256 364 b 330 554 297 511 308 537 b 359 566 341 563 351 566 b 366 564 361 566 364 564 b 380 553 373 563 377 559 b 382 546 382 550 382 549 b 373 528 382 539 379 531 b 351 478 359 517 351 498 b 354 458 351 471 353 465 b 384 426 359 445 370 432 b 410 420 390 423 400 420 b 445 431 420 420 432 423 b 478 472 459 438 474 456 b 481 497 481 480 481 488 b 467 550 481 514 477 533 b 376 605 455 572 422 598 b 351 606 369 606 360 606 b 225 553 317 606 272 595 b 122 363 187 520 154 456 l 122 360 l 13 360 b -1 346 4 360 -1 354 l -1 314 b 13 300 -1 305 4 300 l 102 300 l 102 294 b 66 140 88 236 76 187 b 24 -35 55 86 42 32 l 20 -52 b -53 -235 -10 -170 -19 -212 b -78 -242 -60 -239 -69 -242 b -98 -235 -85 -242 -92 -239 b -105 -222 -102 -232 -105 -228 b -105 -219 -105 -220 -105 -220 b -94 -204 -104 -213 -101 -207 b -58 -144 -66 -193 -58 -167 b -122 -86 -58 -124 -71 -86 z',\n        },\n        dynamicRinforzando: {\n            xMin: -12,\n            xMax: 230,\n            yMin: 0,\n            yMax: 254,\n            ha: 254,\n            o: 'm 272 364 b 200 341 239 364 212 348 b 168 310 187 333 177 321 l 164 304 b 109 363 164 304 151 353 b 88 366 102 364 95 366 b 22 331 52 366 32 343 b -17 255 13 321 -7 287 l 4 243 b 60 321 4 243 29 321 b 68 320 63 321 65 321 b 78 297 75 317 78 308 b 49 180 78 272 65 230 l 0 23 b 0 17 0 22 0 20 b 3 4 0 13 0 7 b 14 0 6 1 10 0 l 94 0 b 109 17 99 0 107 1 b 111 27 109 19 111 23 b 209 302 140 230 186 279 b 225 311 215 308 220 311 b 229 310 226 311 228 311 b 233 304 233 307 233 305 b 233 301 233 302 233 301 b 216 268 220 291 216 279 b 225 243 216 259 219 249 b 262 229 235 232 249 229 b 304 242 279 229 295 235 b 331 308 320 255 331 275 b 272 364 331 341 304 364 z',\n        },\n        dynamicSforzando: {\n            xMin: 0,\n            xMax: 208,\n            yMin: -5,\n            yMax: 263,\n            ha: 268,\n            o: 'm 242 328 b 217 289 222 317 217 300 b 258 249 217 274 230 249 b 298 284 285 249 295 269 b 300 295 300 287 300 291 b 189 379 300 328 272 379 b 49 259 92 379 49 315 b 99 173 49 229 59 196 b 164 137 117 163 140 151 b 194 88 189 122 194 102 b 124 24 194 73 177 24 b 72 46 82 24 72 39 b 73 49 72 48 72 49 b 96 96 78 52 96 62 b 50 150 96 134 72 150 b 0 91 29 150 0 134 b 124 -7 0 26 49 -7 b 282 111 199 -7 282 24 b 171 239 282 197 207 219 b 128 292 135 259 128 268 b 193 347 128 317 156 347 b 242 328 230 347 242 328 z',\n        },\n        dynamicZ: {\n            xMin: -42,\n            xMax: 239,\n            yMin: -1,\n            yMax: 258,\n            ha: 259,\n            o: 'm 229 292 b 235 288 232 292 233 291 b 236 284 236 285 236 285 b 233 278 236 281 235 279 b -42 55 232 276 -4 85 b -60 24 -56 43 -60 33 b -50 4 -60 12 -50 4 b -35 0 -45 1 -40 0 b 9 29 -14 0 1 19 b 50 69 17 43 26 69 b 89 35 75 69 81 50 b 170 -1 104 10 137 -1 b 243 22 197 -1 223 6 b 304 147 288 56 304 118 b 264 196 304 176 294 196 b 226 156 239 196 226 174 b 251 117 226 128 249 122 b 251 108 251 114 251 111 b 243 79 251 98 249 88 b 212 56 236 68 223 56 b 202 59 209 56 204 56 b 163 92 194 63 186 75 b 108 122 140 109 114 120 b 105 125 105 124 105 124 b 107 128 105 127 107 128 b 312 304 107 128 302 294 b 341 340 324 315 336 327 b 344 347 343 341 344 346 l 344 356 b 333 369 343 367 336 369 l 331 369 l 262 363 b 217 361 245 361 230 361 b 156 366 193 361 174 363 b 114 372 147 367 125 372 b 107 370 111 372 108 370 b 86 344 98 367 89 360 b 37 222 72 265 42 232 b 37 219 37 220 37 220 b 50 207 37 213 43 207 l 66 207 b 81 225 75 207 76 215 b 108 291 85 235 105 285 b 118 297 111 297 112 297 b 167 289 125 295 144 291 b 181 289 171 289 177 289 b 229 292 202 289 222 291 z',\n        },\n        ornamentTrill: {\n            xMin: -12,\n            xMax: 383,\n            yMin: 0,\n            yMax: 383,\n            ha: 383,\n            o: 'm 464 396 b 376 359 408 396 376 359 l 364 370 b 346 377 357 377 346 377 l 197 377 l 246 528 b 246 531 246 530 246 531 b 226 552 246 541 236 552 l 213 552 b 199 544 209 552 202 547 b 124 482 196 541 130 487 b 117 471 118 478 117 471 b 84 377 117 471 102 431 l 3 377 b -17 360 -14 377 -17 360 l -17 341 b 3 324 -17 325 3 324 l 66 324 b 0 85 35 229 0 117 b 92 0 0 16 48 0 b 186 35 137 0 186 35 b 194 13 186 35 190 24 b 212 0 199 1 212 0 l 276 0 b 298 16 295 0 298 16 l 298 43 b 321 147 298 75 321 147 l 382 284 b 412 325 382 284 396 311 b 446 341 425 336 438 341 b 452 340 448 341 451 341 b 428 288 432 327 428 305 b 485 233 428 271 446 233 b 552 308 534 233 552 264 b 464 396 552 353 520 396 z m 222 143 b 147 78 210 104 171 78 b 137 79 143 78 140 78 b 121 115 125 85 121 99 b 137 190 121 148 137 190 l 180 324 l 275 324 b 279 320 279 324 279 320 b 222 143 279 320 235 187 z',\n        },\n        ornamentTurn: {\n            xMin: 0,\n            xMax: 456,\n            yMin: 0,\n            yMax: 232,\n            ha: 232,\n            o: 'm 527 334 b 442 269 488 334 442 312 b 501 204 442 228 468 204 b 570 226 533 204 540 226 b 613 164 598 226 613 204 l 613 163 b 550 98 613 127 586 98 b 448 143 508 98 485 109 l 328 255 l 298 284 b 174 334 262 317 223 334 b 0 170 92 334 0 278 b 131 0 0 68 58 0 b 215 65 170 0 215 22 b 156 130 215 107 189 130 b 86 108 124 130 117 108 b 43 170 59 108 43 130 l 43 171 b 108 236 43 207 72 236 b 209 192 150 236 171 225 l 328 79 l 360 50 b 482 0 396 17 433 0 b 657 164 564 0 657 56 b 527 334 657 266 600 334 z',\n        },\n        ornamentTurnSlash: {\n            xMin: 0,\n            xMax: 456,\n            yMin: -80,\n            yMax: 313,\n            ha: 393,\n            o: 'm 527 334 b 442 269 488 334 442 312 b 501 204 442 228 468 204 b 570 226 533 204 540 226 b 613 164 598 226 613 204 l 613 163 b 550 98 613 127 586 98 b 448 143 508 98 485 109 l 354 230 l 354 431 b 336 451 354 442 347 451 l 323 451 b 302 431 311 451 302 442 l 302 279 l 298 284 b 174 334 262 317 223 334 b 0 170 92 334 0 278 b 131 0 0 68 58 0 b 215 65 170 0 215 22 b 156 130 215 107 189 130 b 86 108 124 130 117 108 b 43 170 59 108 43 130 l 43 171 b 108 236 43 207 72 236 b 209 192 150 236 171 225 l 302 104 l 302 -96 b 323 -115 302 -108 311 -115 l 336 -115 b 354 -96 347 -115 354 -108 l 354 55 l 360 50 b 482 0 396 17 433 0 b 657 164 564 0 657 56 b 527 334 657 266 600 334 z',\n        },\n        ornamentMordent: {\n            xMin: 0,\n            xMax: 473,\n            yMin: -77,\n            yMax: 316,\n            ha: 393,\n            o: 'm 647 302 l 562 166 l 446 347 b 429 357 444 353 435 357 b 413 347 423 357 416 353 l 363 262 l 363 435 b 343 455 363 446 354 455 l 331 455 b 311 435 320 455 311 446 l 311 173 l 310 171 l 203 347 b 186 357 200 353 192 357 b 168 347 180 357 171 353 l 0 69 l 35 48 l 120 189 l 226 10 b 243 0 229 4 238 0 b 261 10 249 0 258 4 l 311 95 l 311 -91 b 331 -111 311 -102 320 -111 l 343 -111 b 363 -91 354 -111 363 -102 l 363 184 l 366 189 l 478 10 b 495 0 481 4 490 0 b 513 10 501 0 510 4 l 681 281 z',\n        },\n        ornamentShortTrill: {\n            xMin: 0,\n            xMax: 473,\n            yMin: 0,\n            yMax: 248,\n            ha: 248,\n            o: 'm 647 302 l 562 166 l 446 347 b 431 357 444 353 436 357 b 413 347 425 357 416 353 l 310 171 l 203 347 b 186 357 200 353 192 357 b 168 347 180 357 173 353 l 0 69 l 35 48 l 120 189 l 226 10 b 243 0 229 4 238 0 b 261 10 249 0 258 4 l 366 189 l 478 9 b 495 0 481 3 490 0 b 513 10 501 0 510 4 l 681 281 z',\n        },\n        ornamentTremblement: {\n            xMin: 0,\n            xMax: 654,\n            yMin: 0,\n            yMax: 248,\n            ha: 248,\n            o: 'm 907 302 l 822 166 l 708 348 b 691 357 704 354 701 357 b 674 347 685 357 677 353 l 648 302 l 563 166 l 449 348 b 432 357 446 354 438 357 b 415 347 426 357 418 353 l 415 346 l 311 171 l 203 348 b 186 357 200 354 192 357 b 168 348 177 357 171 354 l 168 347 l 0 69 l 35 48 l 120 190 l 226 10 b 243 0 229 4 238 0 l 245 0 b 261 10 251 0 258 4 l 367 189 l 480 10 b 497 0 482 4 491 0 b 513 10 503 0 510 4 l 625 192 l 739 10 b 756 0 742 4 750 0 b 772 10 762 0 769 4 l 942 282 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            xMin: 0,\n            xMax: 680,\n            yMin: 0,\n            yMax: 388,\n            ha: 388,\n            o: 'm 860 170 l 746 353 b 729 361 743 359 737 361 b 713 351 723 361 716 357 l 685 307 l 600 170 l 487 353 b 481 359 485 356 484 357 b 469 361 478 360 472 361 b 452 351 464 361 455 357 l 348 176 l 240 353 b 223 361 238 359 229 361 b 206 353 215 361 209 359 l 40 76 l 40 541 b 20 559 39 552 30 559 b 0 541 10 559 1 552 l 0 26 b 19 1 0 16 9 4 b 26 0 20 1 24 0 b 48 13 35 0 43 6 l 72 52 l 157 194 l 265 14 b 282 4 268 9 276 4 b 298 14 288 4 295 9 l 405 193 l 517 14 b 534 4 520 9 528 4 b 550 14 540 4 547 9 l 664 196 l 776 14 b 793 4 779 9 788 4 b 811 14 799 4 808 9 l 979 287 l 945 307 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            xMin: 0,\n            xMax: 662,\n            yMin: -158,\n            yMax: 248,\n            ha: 406,\n            o: 'm 834 166 l 720 348 b 704 357 717 354 713 357 b 687 348 697 357 690 353 l 661 302 l 660 302 l 575 166 l 461 348 b 455 354 459 350 456 353 b 444 357 452 356 448 357 b 428 347 438 357 431 353 l 323 171 l 215 347 b 213 350 215 348 215 350 b 213 350 213 350 213 350 l 213 351 l 212 351 l 212 353 l 210 353 l 210 353 l 209 354 b 207 354 209 354 207 354 b 197 357 206 356 200 357 b 197 357 197 357 197 357 b 194 357 196 357 196 357 b 180 347 187 357 183 353 l 180 346 l 69 164 b 0 -50 23 88 0 17 b 49 -219 0 -108 16 -163 b 66 -228 52 -223 59 -228 b 76 -225 69 -228 73 -226 b 86 -207 82 -222 86 -215 b 84 -197 86 -204 85 -200 b 40 -52 55 -150 40 -102 b 104 143 40 10 62 73 l 131 190 l 239 10 b 256 0 242 4 249 0 l 256 0 b 272 10 262 0 269 4 l 379 189 l 491 10 b 508 0 494 4 503 0 b 508 0 508 0 508 0 l 508 0 b 526 10 514 0 521 4 l 638 192 l 750 10 b 768 0 755 4 762 0 l 768 0 b 785 10 773 0 782 4 l 785 10 l 953 282 l 919 302 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            xMin: 0,\n            xMax: 662,\n            yMin: -158,\n            yMax: 321,\n            ha: 479,\n            o: 'm 834 166 l 720 348 b 704 357 716 354 713 357 b 687 348 698 357 690 354 l 660 304 l 660 302 l 632 259 l 632 442 b 612 462 632 454 624 462 l 599 462 b 579 442 588 462 579 454 l 579 173 l 575 166 l 461 348 b 455 356 459 351 458 354 b 445 359 452 357 448 359 b 428 348 439 359 431 354 l 323 171 l 215 347 b 213 350 215 348 213 350 l 213 351 l 212 353 l 210 353 l 210 354 l 207 354 b 197 357 204 356 200 357 b 180 348 189 357 183 354 l 179 346 l 69 164 b 0 -49 23 88 0 19 b 49 -217 0 -107 17 -163 b 66 -228 52 -223 60 -228 b 76 -225 69 -228 73 -226 b 86 -207 82 -222 86 -213 b 84 -197 86 -204 85 -200 b 42 -50 56 -148 42 -101 b 104 144 42 12 62 75 l 131 190 l 239 10 b 256 0 242 4 251 0 b 274 10 262 0 271 4 l 379 190 l 491 10 b 508 0 494 4 503 0 b 526 10 514 0 523 4 l 579 98 l 579 -84 b 599 -104 579 -95 588 -104 l 612 -104 b 632 -84 624 -104 632 -95 l 632 183 l 638 192 l 750 10 b 768 0 753 4 762 0 b 785 10 773 0 782 4 l 953 282 l 919 302 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            xMin: 0,\n            xMax: 662,\n            yMin: 0,\n            yMax: 406,\n            ha: 406,\n            o: 'm 904 575 b 887 585 901 580 893 585 b 877 582 884 585 880 583 b 867 564 871 579 867 570 b 870 554 867 562 868 557 b 912 408 897 505 912 458 b 850 213 912 346 891 282 l 822 167 l 714 348 b 697 357 711 354 703 357 b 680 348 691 357 683 354 l 575 168 l 462 348 b 445 357 459 354 451 357 b 428 348 439 357 431 354 l 315 167 l 203 348 b 186 357 200 354 192 357 b 168 348 180 357 171 354 l 0 76 l 35 55 l 120 192 l 233 10 b 249 0 238 4 240 0 b 266 10 255 0 264 4 l 294 55 l 379 192 l 492 9 b 498 3 494 6 495 4 b 508 0 501 1 505 0 b 526 10 514 0 523 4 l 631 186 l 737 13 b 746 3 739 10 743 4 b 756 0 749 1 753 0 b 773 9 762 0 770 3 l 884 193 b 953 406 930 269 953 338 b 904 575 953 464 936 520 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            xMin: 0,\n            xMax: 857,\n            yMin: 0,\n            yMax: 248,\n            ha: 248,\n            o: 'm 383 140 b 413 189 399 166 412 187 b 520 10 423 171 516 16 b 537 0 523 4 530 0 b 554 10 543 0 550 4 b 660 189 557 16 649 171 b 772 10 671 173 766 19 b 791 0 778 1 785 0 b 806 10 796 0 802 4 b 919 192 809 16 907 174 l 1031 10 b 1048 0 1035 4 1043 0 l 1048 0 b 1066 10 1054 1 1063 4 l 1066 10 l 1234 282 l 1200 302 l 1115 166 l 1002 348 b 985 357 998 354 994 357 b 968 348 978 357 971 353 l 855 166 b 742 348 845 183 746 341 b 726 357 737 354 732 357 b 708 348 719 357 711 354 b 603 171 704 341 613 189 b 495 348 593 189 498 343 b 478 357 492 353 487 357 b 461 348 469 357 464 353 b 357 173 459 346 393 235 b 213 79 320 111 284 79 b 66 176 143 79 95 112 b 40 279 43 228 40 275 b 20 300 40 291 30 300 b 0 278 9 300 0 289 b 29 161 0 276 3 219 b 213 39 65 81 130 39 b 383 140 297 39 346 73 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            xMin: 0,\n            xMax: 565,\n            yMin: -171,\n            yMax: 249,\n            ha: 420,\n            o: 'm 347 168 l 235 348 b 217 359 230 354 226 359 b 200 348 209 359 203 353 b 3 30 197 344 6 35 b 0 20 0 26 0 24 b 22 0 0 9 10 0 b 37 9 27 0 35 3 l 151 192 b 265 10 161 174 262 13 b 281 0 268 6 272 0 b 298 10 289 0 295 3 l 403 186 l 511 10 b 528 0 516 4 521 0 b 546 10 537 0 541 4 l 698 265 b 775 22 744 202 775 112 b 700 -215 775 -60 752 -144 b 696 -226 697 -219 696 -222 b 704 -243 696 -232 700 -239 b 717 -246 708 -246 713 -246 b 733 -239 723 -246 729 -243 b 814 20 789 -160 814 -69 b 711 312 814 132 773 242 b 696 320 707 317 700 320 b 680 310 691 320 684 318 b 595 168 671 297 602 181 l 488 348 b 471 359 484 354 478 359 b 454 348 464 359 456 353 b 347 168 449 343 357 186 z',\n        },\n        brassMuteClosed: {\n            xMin: 0,\n            xMax: 312,\n            yMin: 0,\n            yMax: 312,\n            ha: 312,\n            o: 'm 22 256 b 0 225 7 256 0 240 b 22 193 0 209 7 193 l 193 193 l 193 22 b 225 0 193 7 209 0 b 256 22 240 0 256 7 l 256 193 l 428 193 b 449 225 442 193 449 209 b 428 256 449 240 442 256 l 256 256 l 256 428 b 225 449 256 442 240 449 b 193 428 209 449 193 442 l 193 256 z',\n        },\n        brassMuteOpen: {\n            xMin: 0,\n            xMax: 280,\n            yMin: 0,\n            yMax: 280,\n            ha: 280,\n            o: 'm 202 403 b 0 202 91 403 0 312 b 202 0 0 91 91 0 b 403 202 312 0 403 91 b 202 403 403 312 312 403 z m 202 40 b 40 202 112 40 40 112 b 202 363 40 291 112 363 b 363 202 291 363 363 291 b 202 40 363 112 291 40 z',\n        },\n        stringsDownBow: {\n            xMin: 0,\n            xMax: 315,\n            yMin: 0,\n            yMax: 293,\n            ha: 293,\n            o: 'm 40 0 l 40 291 l 413 291 l 413 0 l 454 0 l 454 402 b 433 422 454 413 445 422 l 20 422 b 0 402 9 422 0 402 l 0 0 z',\n        },\n        stringsUpBow: {\n            xMin: 0,\n            xMax: 262,\n            yMin: 0,\n            yMax: 343,\n            ha: 343,\n            o: 'm 374 485 b 357 494 372 490 363 494 l 337 494 b 318 481 330 494 321 488 l 189 118 l 59 481 b 40 494 56 488 48 494 l 20 494 b 0 474 9 494 0 485 b 1 467 0 472 1 468 l 170 13 b 189 0 173 6 181 0 b 207 13 196 0 204 6 l 376 467 b 377 474 376 468 377 472 b 374 485 377 477 376 482 z',\n        },\n        stringsHarmonic: {\n            xMin: 0,\n            xMax: 181,\n            yMin: 0,\n            yMax: 181,\n            ha: 181,\n            o: 'm 131 220 b 220 131 181 220 220 181 b 131 40 220 81 181 40 b 40 131 81 40 40 81 b 131 220 40 181 81 220 z m 131 261 b 0 131 59 261 0 203 b 131 0 0 59 59 0 b 261 131 203 0 261 59 b 131 261 261 203 203 261 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            xMin: 0,\n            xMax: 269,\n            yMin: 0,\n            yMax: 389,\n            ha: 389,\n            o: 'm 213 540 b 194 560 213 552 204 560 b 174 540 183 560 174 552 l 174 386 b 0 193 76 376 0 294 b 194 0 0 86 86 0 b 387 193 301 0 387 86 b 213 386 387 294 311 376 z m 194 40 b 40 193 109 40 40 109 b 174 346 40 271 98 336 l 174 193 b 194 173 174 183 183 173 b 213 193 204 173 213 183 l 213 346 b 347 193 289 336 347 271 b 194 40 347 109 278 40 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            xMin: 0,\n            xMax: 269,\n            yMin: 0,\n            yMax: 389,\n            ha: 389,\n            o: 'm 213 174 b 387 367 311 184 387 266 b 193 560 387 474 301 560 b 0 367 86 560 0 474 b 174 174 0 266 76 184 l 174 20 b 194 0 174 9 183 0 b 213 20 204 0 213 9 z m 194 520 b 347 367 278 520 347 452 b 213 215 347 289 289 225 l 213 367 b 194 387 213 377 204 387 b 174 367 183 387 174 377 l 174 215 b 40 367 98 225 40 289 b 194 520 40 452 109 520 z',\n        },\n        keyboardPedalPed: {\n            xMin: 0,\n            xMax: 981,\n            yMin: -10,\n            yMax: 545,\n            ha: 555,\n            o: 'm 1354 12 b 1413 78 1385 12 1413 42 b 1354 145 1413 115 1385 145 b 1293 78 1320 145 1293 115 b 1354 12 1293 42 1320 12 z m 1092 88 b 1080 86 1089 86 1084 86 b 1004 203 1037 86 1004 137 b 1107 376 1004 360 1097 374 b 1149 209 1129 336 1149 287 b 1092 88 1149 117 1130 95 z m 752 393 b 795 344 779 393 795 372 b 770 285 795 325 788 304 b 693 203 737 249 697 207 b 688 264 690 225 688 245 b 752 393 688 347 714 393 z m 245 507 b 220 544 245 533 235 544 b 217 544 219 544 219 544 b 186 510 206 546 192 537 b 143 464 179 478 163 464 b 134 465 140 464 137 464 b 102 516 117 467 102 487 b 141 613 102 541 112 576 b 347 721 212 711 315 721 b 356 721 351 721 354 721 b 275 560 344 701 297 616 b 259 495 274 557 259 528 b 272 452 259 480 264 465 b 373 323 297 416 350 354 b 387 284 382 311 387 298 b 350 222 387 265 376 245 b 230 140 301 180 252 154 b 128 39 215 130 128 92 b 134 12 128 30 130 22 b 173 -14 144 -7 157 -14 b 264 40 204 -14 243 17 b 333 98 281 58 302 98 b 389 39 357 98 373 60 b 478 -10 416 1 435 -10 b 622 96 527 -10 559 43 b 740 -10 626 86 667 -10 b 929 95 827 -10 917 85 b 1086 -12 950 37 1018 -12 b 1120 -7 1097 -12 1109 -10 b 1264 213 1212 17 1264 111 b 1263 248 1264 225 1263 236 b 815 664 1228 544 907 647 b 785 668 805 665 795 668 b 779 668 783 668 782 668 b 757 654 769 668 760 665 b 757 649 757 652 757 651 b 786 618 759 629 783 619 b 818 606 796 613 808 611 b 1071 435 1007 534 1066 445 b 909 181 930 386 909 256 b 910 141 909 164 909 151 b 786 78 899 127 844 78 b 708 151 726 78 710 144 b 799 230 711 154 742 181 b 864 350 845 271 864 312 b 757 456 864 410 815 456 b 599 222 644 456 599 328 b 609 141 599 192 602 164 b 563 104 608 140 595 122 b 540 98 556 99 549 98 b 459 140 513 98 480 118 b 397 184 413 189 399 184 b 475 279 403 189 454 226 b 482 311 480 289 482 300 b 449 410 482 359 452 405 b 361 533 442 419 383 503 b 354 560 356 541 354 550 b 386 651 353 588 372 622 b 429 713 405 693 426 710 b 557 592 521 688 557 628 b 549 569 557 582 554 573 b 523 559 540 562 531 559 b 459 592 495 559 469 583 b 425 613 451 600 438 613 b 409 608 419 613 415 612 b 399 586 402 602 399 595 b 399 583 397 585 399 585 b 409 552 399 573 405 562 b 541 458 441 487 492 458 b 608 480 564 458 588 465 b 648 572 632 497 648 531 b 429 778 648 649 589 749 b 351 785 402 782 376 785 b 0 507 130 785 0 615 b 127 366 0 399 68 366 b 245 507 186 366 245 429 z',\n        },\n        keyboardPedalUp: {\n            xMin: 0,\n            xMax: 473,\n            yMin: 0,\n            yMax: 473,\n            ha: 473,\n            o: 'm 99 99 b 164 69 120 79 143 69 b 199 82 177 69 190 73 b 210 114 206 89 210 102 b 206 137 210 122 209 130 b 200 160 203 145 200 154 b 210 179 200 166 203 171 l 245 215 b 285 213 255 225 272 219 l 287 213 l 288 212 b 318 183 301 206 318 196 l 318 134 b 291 102 318 112 308 112 b 258 58 274 92 258 76 b 340 0 258 26 294 0 b 423 58 386 0 423 26 b 390 102 423 76 408 92 b 361 134 373 112 361 112 l 361 183 b 392 212 361 196 379 206 b 395 213 393 212 393 213 b 436 215 408 219 426 225 l 471 179 b 480 161 478 171 480 167 b 474 137 480 154 477 147 b 471 115 472 130 471 122 b 482 82 471 102 474 91 b 517 69 491 73 504 69 b 582 99 539 69 562 79 b 612 164 602 120 612 143 b 599 199 612 177 608 190 b 567 210 592 206 579 210 b 544 206 559 210 552 209 b 521 200 536 203 528 200 b 501 210 514 200 508 203 l 467 245 b 468 285 456 255 462 272 l 468 287 b 469 288 468 287 469 287 b 498 318 475 301 485 318 l 547 318 b 579 291 569 318 569 308 b 624 258 589 274 605 258 b 681 340 655 258 681 294 b 624 423 681 386 655 423 b 579 390 605 423 589 408 b 547 361 569 373 569 361 l 498 361 b 469 392 485 361 475 379 b 468 395 469 393 468 393 b 467 436 462 408 456 426 l 501 471 b 520 480 508 478 514 480 b 544 474 527 480 534 477 b 566 471 552 472 559 471 b 599 482 579 471 590 474 b 612 516 608 491 612 503 b 582 580 612 536 602 560 b 516 612 562 600 537 612 b 482 599 503 612 491 608 b 471 566 474 590 471 579 b 474 544 471 559 472 552 b 480 520 477 534 480 527 b 471 501 480 514 478 508 l 436 467 b 395 468 426 456 408 462 b 392 469 393 468 393 469 b 361 498 379 475 361 485 l 361 547 b 390 579 361 569 373 569 b 423 624 408 589 423 605 b 340 681 423 655 386 681 b 258 624 294 681 258 655 b 291 579 258 605 274 589 b 318 547 308 569 318 569 l 318 498 b 288 469 318 485 301 475 l 287 468 l 285 468 b 245 467 272 462 255 456 l 210 501 b 200 521 203 508 200 514 b 206 544 200 528 203 536 b 210 567 209 552 210 559 b 199 599 210 579 206 592 b 164 612 190 608 177 612 b 99 582 143 612 120 602 b 69 517 79 562 69 539 b 82 482 69 504 73 491 b 115 471 91 474 102 471 b 137 474 122 471 130 472 b 161 480 147 477 154 480 b 180 471 167 480 173 478 l 215 436 b 213 395 225 426 219 408 b 212 392 213 393 212 393 b 183 361 206 379 196 361 l 134 361 b 102 390 112 361 112 373 b 58 423 92 408 76 423 b 0 340 26 423 0 386 b 58 258 0 294 26 258 b 102 291 76 258 92 274 b 134 318 112 308 112 318 l 183 318 b 212 288 196 318 206 301 b 213 287 212 287 213 288 l 213 285 b 215 245 219 272 225 255 l 179 210 b 160 200 171 203 166 200 b 137 206 154 200 145 203 b 114 210 130 209 122 210 b 82 199 102 210 89 206 b 69 164 73 190 69 177 b 99 99 69 143 79 120 z m 276 276 b 249 340 262 291 249 320 b 340 432 249 390 289 432 b 432 340 390 432 432 390 b 405 276 432 320 419 291 b 340 249 390 262 360 249 b 276 276 320 249 291 262 z',\n        },\n        wiggleArpeggiatoUp: {\n            xMin: -22,\n            xMax: 242,\n            yMin: 0,\n            yMax: 164,\n            ha: 164,\n            o: 'm 343 122 b 323 143 343 122 334 132 b 308 148 318 147 312 148 b 298 144 304 148 301 147 b 282 128 295 141 291 137 b 274 124 279 125 276 124 b 265 128 268 124 265 128 b 158 220 265 128 173 207 b 112 236 143 232 127 236 b 43 206 82 236 55 219 l -26 137 b -32 125 -30 132 -32 130 b -26 112 -32 118 -26 112 b -6 92 -26 112 -17 102 b 7 86 -1 88 3 86 b 17 91 12 86 14 88 b 33 107 20 94 24 98 b 42 111 36 109 39 111 b 52 107 48 111 52 107 b 158 16 52 107 144 29 b 204 0 174 4 190 0 b 274 30 235 0 262 17 l 343 99 b 348 111 347 104 348 108 b 343 122 348 118 343 122 z',\n        },\n        repeat1Bar: {\n            xMin: 0,\n            xMax: 481,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 693 -181 b 602 -91 693 -131 651 -91 b 511 -181 552 -91 511 -131 b 602 -272 511 -232 552 -272 b 693 -181 651 -272 693 -232 z',\n        },\n        repeat2Bars: {\n            xMin: 0,\n            xMax: 735,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 1058 -181 b 968 -91 1058 -131 1017 -91 b 877 -181 917 -91 877 -131 b 968 -272 877 -232 917 -272 b 1058 -181 1017 -272 1058 -232 z m 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 1058 360 l 877 360 l 366 -360 l 547 -360 z',\n        },\n        repeat4Bars: {\n            xMin: 0,\n            xMax: 1243,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 1058 360 l 877 360 l 366 -360 l 547 -360 z m 1424 360 l 1243 360 l 732 -360 l 913 -360 z m 1790 360 l 1608 360 l 1097 -360 l 1279 -360 z m 1790 -181 b 1699 -91 1790 -131 1748 -91 b 1608 -181 1649 -91 1608 -131 b 1699 -272 1608 -232 1649 -272 b 1790 -181 1748 -272 1790 -232 z',\n        },\n        repeatBarSlash: {\n            xMin: 0,\n            xMax: 481,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 693 360 l 511 360 l 0 -360 l 181 -360 z',\n        },\n        csymDiminished: {\n            xMin: 0,\n            xMax: 501,\n            yMin: 0,\n            yMax: 501,\n            ha: 501,\n            o: 'm 361 721 b 0 361 161 721 0 560 b 361 0 0 161 161 0 b 721 361 560 0 721 161 b 361 721 721 560 560 721 z m 557 164 b 361 82 505 111 435 82 b 164 164 287 82 216 111 b 82 361 111 216 82 287 b 164 557 82 436 111 505 b 361 639 216 611 287 639 b 557 557 436 639 505 611 b 639 361 611 505 639 436 b 557 164 639 287 609 216 z',\n        },\n        csymHalfDiminished: {\n            xMin: -1,\n            xMax: 502,\n            yMin: -1,\n            yMax: 502,\n            ha: 503,\n            o: 'm 723 684 l 684 723 l 596 634 b 361 721 533 688 451 721 b 0 361 161 721 0 560 b 88 125 0 271 33 189 l -1 36 l 36 -1 l 125 88 b 361 0 189 33 271 0 b 721 361 560 0 721 161 b 634 596 721 451 688 533 z m 82 361 b 164 557 82 436 111 505 b 361 639 216 611 287 639 b 537 576 426 639 488 616 l 145 184 b 82 361 105 233 82 295 z m 639 361 b 557 164 639 287 609 216 b 361 82 505 111 435 82 b 184 145 295 82 233 105 l 576 537 b 639 361 616 488 639 426 z',\n        },\n        csymAugmented: {\n            xMin: 1,\n            xMax: 321,\n            yMin: 90,\n            yMax: 410,\n            ha: 320,\n            o: 'm 462 400 l 272 400 l 272 590 l 192 590 l 192 400 l 1 400 l 1 320 l 192 320 l 192 130 l 272 130 l 272 320 l 462 320 z',\n        },\n        csymMajorSeventh: {\n            xMin: 0,\n            xMax: 500,\n            yMin: 10,\n            yMax: 490,\n            ha: 480,\n            o: 'm 360 528 l 585 96 l 135 96 z m 360 706 l 0 14 l 720 14 z',\n        },\n        accidentalNarrowReversedFlat: {\n            xMin: 0,\n            xMax: 160,\n            yMin: -176,\n            yMax: 452,\n            ha: 628,\n            o: 'm 0 84 b 101 -153 0 -26 65 -107 b 196 -249 153 -217 196 -249 b 206 -253 199 -251 202 -253 b 225 -235 216 -253 225 -245 l 230 632 b 212 651 230 642 222 651 l 199 651 b 180 632 189 651 180 642 l 184 204 b 125 217 184 204 171 217 b 0 84 53 217 0 173 z m 145 154 b 184 107 181 154 184 120 l 187 -179 b 114 -72 167 -158 132 -112 b 82 58 86 -13 82 36 b 145 154 82 79 82 154 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            xMin: 0,\n            xMax: 416,\n            yMin: -176,\n            yMax: 452,\n            ha: 628,\n            o: 'm 462 217 b 330 174 374 217 338 181 l 334 632 b 315 651 334 642 325 651 l 302 651 b 284 632 292 651 284 642 l 289 -235 b 308 -253 289 -245 298 -253 b 320 -249 312 -253 317 -251 b 492 -138 320 -249 433 -194 b 599 84 534 -98 599 -26 b 462 217 599 173 534 217 z m 501 58 b 459 -72 501 36 498 -19 b 327 -179 431 -111 359 -164 l 330 85 l 330 91 b 422 154 330 125 359 154 b 501 58 503 154 501 79 z m 0 84 b 101 -153 0 -26 65 -107 b 196 -249 153 -217 196 -249 b 206 -253 199 -251 202 -253 b 225 -235 216 -253 225 -245 l 230 632 b 212 651 230 642 222 651 l 199 651 b 180 632 189 651 180 642 l 184 204 b 125 217 184 204 171 217 b 0 84 53 217 0 173 z m 145 154 b 184 107 181 154 184 120 l 187 -179 b 114 -72 167 -158 132 -112 b 82 58 86 -13 82 36 b 145 154 82 79 82 154 z',\n        },\n    },\n    fontFamily: 'Leland',\n    resolution: 1000,\n    generatedOn: '2022-12-19T23:52:37.756Z',\n};\n","export const PetalumaFont = {\n    glyphs: {\n        bracketTop: {\n            xMin: 0,\n            xMax: 508,\n            yMin: 0,\n            yMax: 370,\n            ha: 370,\n            o: 'm 22 0 b 122 0 55 1 89 0 l 157 0 b 713 376 425 0 622 137 b 732 467 724 406 732 436 b 726 514 732 482 730 498 b 711 533 723 528 719 533 b 693 526 707 533 700 530 b 674 498 683 520 678 508 b 635 406 662 467 652 435 b 310 164 560 281 458 193 b 154 151 258 154 206 151 b 39 154 117 151 78 154 b 1 120 17 154 4 145 b 0 84 0 108 0 96 b 0 20 0 63 1 40 b 22 0 0 4 7 0 z',\n        },\n        bracketBottom: {\n            xMin: 0,\n            xMax: 496,\n            yMin: -393,\n            yMax: 0,\n            ha: 393,\n            o: 'm 696 -566 b 711 -539 713 -566 708 -549 b 714 -521 713 -533 714 -527 b 713 -508 714 -517 713 -513 b 661 -327 706 -445 688 -384 b 392 -42 603 -203 513 -109 b 206 0 331 -7 266 0 b 160 -1 190 0 174 -1 b 26 -1 107 -1 66 -3 b 0 -19 12 -1 0 -4 l 0 -23 b 3 -50 1 -32 3 -42 b 1 -86 3 -62 1 -73 b 4 -118 1 -96 1 -108 b 45 -151 10 -145 23 -154 b 180 -143 89 -144 135 -145 b 621 -419 392 -135 523 -236 b 662 -539 641 -456 655 -497 b 696 -566 667 -557 680 -566 z',\n        },\n        barlineTick: {\n            xMin: 0,\n            xMax: 56,\n            yMin: 877,\n            yMax: 1122,\n            ha: 245,\n            o: 'm 42 1263 b 66 1287 62 1261 66 1272 b 81 1583 65 1387 72 1485 b 35 1614 82 1610 53 1610 b 14 1591 17 1619 16 1604 b 0 1408 7 1525 0 1459 l 0 1292 b 42 1263 1 1263 23 1266 z',\n        },\n        breathMarkTick: {\n            xMin: 0,\n            xMax: 568,\n            yMin: 0,\n            yMax: 621,\n            ha: 621,\n            o: 'm 258 0 b 278 39 276 0 274 24 b 279 56 279 45 279 50 l 279 73 b 278 117 279 88 278 102 b 281 148 278 127 279 138 b 536 600 312 330 387 487 b 744 719 600 651 670 690 b 815 779 775 730 808 740 b 818 824 818 793 818 808 b 815 868 818 838 818 852 b 796 894 814 881 808 894 b 779 888 791 894 786 893 b 719 864 760 878 739 871 b 372 602 580 806 459 724 b 229 252 298 498 251 383 b 220 268 225 262 222 264 b 209 302 217 279 213 291 b 75 527 181 387 143 467 b 16 563 58 543 39 573 b 0 539 3 557 0 549 b 12 492 0 524 9 507 b 56 400 19 459 22 425 b 163 269 104 367 138 323 b 238 36 197 194 216 115 b 258 0 242 22 243 0 z',\n        },\n        segno: {\n            xMin: 0,\n            xMax: 798,\n            yMin: -65,\n            yMax: 806,\n            ha: 871,\n            o: 'm 16 -94 b 66 -69 39 -92 53 -85 b 177 59 102 -26 138 17 b 543 456 298 192 420 324 b 726 300 615 420 680 373 b 753 217 744 271 753 243 b 655 112 753 170 719 131 b 599 104 636 107 618 104 b 461 173 544 104 495 128 b 432 190 454 183 444 190 b 409 179 425 190 418 187 b 359 118 390 160 373 141 b 341 72 347 101 341 86 b 373 24 341 56 351 40 b 409 6 384 17 396 10 b 550 -13 454 -12 501 -14 b 599 -6 566 -12 583 -10 b 864 213 720 27 806 104 b 886 300 878 242 886 271 b 857 395 886 331 877 363 b 799 467 840 420 821 445 b 648 572 755 513 704 546 b 1110 1083 802 743 955 914 b 1140 1129 1123 1097 1136 1110 b 1149 1148 1142 1135 1149 1142 b 1145 1153 1149 1149 1148 1152 b 1123 1161 1139 1158 1130 1161 b 1109 1156 1119 1161 1113 1159 b 1089 1138 1102 1151 1094 1145 b 946 988 1040 1089 989 1041 b 595 602 834 855 711 732 l 590 598 l 549 615 b 432 793 462 647 432 723 b 534 888 432 851 474 888 b 671 834 588 888 631 864 b 710 818 684 824 696 818 b 724 821 714 818 719 819 b 809 883 757 834 788 852 b 816 901 814 890 816 896 b 802 923 816 910 812 916 b 706 984 770 945 742 971 b 593 1011 668 998 631 1011 b 516 991 567 1011 541 1005 b 333 799 433 949 380 876 b 302 693 312 765 302 729 b 330 589 302 658 311 624 b 469 488 360 533 415 511 b 485 482 475 487 480 485 b 266 249 412 405 338 327 b 121 88 217 196 170 141 b 9 -65 78 40 37 -7 b 0 -85 4 -72 0 -79 b 16 -94 0 -91 4 -94 z m 861 536 b 927 575 890 539 909 557 b 965 628 952 598 965 613 b 926 680 965 644 952 658 b 865 713 900 701 883 713 b 805 667 845 713 828 698 b 768 611 791 649 770 631 b 812 564 766 589 798 582 b 861 536 824 550 840 537 z m 251 350 b 363 436 285 348 353 403 b 354 456 366 448 360 452 b 271 518 327 477 298 497 b 243 528 261 526 252 528 b 210 513 232 528 222 523 b 157 454 190 494 176 472 b 141 428 147 444 141 436 b 158 406 141 420 147 413 b 216 361 180 393 197 376 b 245 350 225 356 235 350 z',\n        },\n        coda: {\n            xMin: 0,\n            xMax: 1380,\n            yMin: -196,\n            yMax: 1037,\n            ha: 1233,\n            o: 'm 1028 -282 b 1057 -245 1045 -282 1053 -261 b 1060 -203 1060 -232 1060 -217 b 1063 9 1060 -132 1061 -62 b 1390 194 1192 22 1303 81 b 1531 543 1467 298 1512 415 b 1532 556 1531 547 1532 552 b 1904 559 1656 557 1780 559 b 1950 582 1920 559 1941 569 b 1987 674 1970 609 1987 638 b 1984 698 1987 681 1986 690 b 1950 700 1973 698 1961 700 l 1941 700 l 1545 696 b 1535 776 1545 723 1541 749 b 1103 1113 1477 996 1326 1107 b 1080 1115 1096 1115 1087 1115 b 1081 1322 1080 1184 1080 1253 b 1079 1467 1083 1371 1081 1418 b 1061 1493 1079 1476 1080 1493 l 1060 1493 b 1028 1467 1044 1490 1031 1485 b 1020 1403 1025 1446 1020 1424 b 1017 1110 1020 1305 1018 1208 l 962 1106 b 569 914 808 1087 671 1035 b 451 683 510 844 472 766 l 161 678 b 118 680 148 678 132 680 b 79 670 101 680 86 678 b 0 544 48 636 29 592 l 37 544 l 429 549 b 428 518 428 539 428 528 b 488 285 428 435 458 360 b 681 81 526 192 593 124 b 946 9 763 40 854 19 b 1008 6 966 7 988 6 b 1005 -137 1008 -42 1005 -89 b 1012 -243 1005 -173 1005 -209 b 1028 -282 1015 -258 1011 -282 z m 1074 690 b 1079 935 1077 772 1077 852 b 1326 855 1166 932 1250 909 b 1446 694 1385 814 1426 759 b 1269 693 1387 694 1328 693 b 1074 690 1204 693 1139 691 z m 577 684 b 766 874 618 763 678 828 b 989 932 837 912 913 923 b 1015 933 998 932 1007 933 b 1014 822 1015 896 1014 860 b 1011 688 1012 791 1012 743 z m 1067 184 b 1071 553 1070 307 1068 429 b 1439 556 1194 553 1316 554 b 1437 554 1439 554 1437 554 b 1341 337 1413 478 1387 402 b 1119 192 1286 261 1211 212 b 1067 184 1102 189 1084 186 z m 1008 180 b 660 264 886 181 770 212 b 524 471 570 305 524 374 b 528 524 524 488 526 505 l 533 549 b 792 552 619 550 706 550 b 1009 553 865 553 937 552 b 1008 180 1009 428 1008 288 z',\n        },\n        gClef: {\n            xMin: 0,\n            xMax: 664,\n            yMin: -559,\n            yMax: 1009,\n            ha: 1568,\n            o: 'm 343 -805 b 366 -801 350 -805 357 -804 b 409 -773 383 -795 397 -786 b 582 -328 528 -648 577 -497 b 583 -294 582 -315 583 -294 b 612 -279 583 -294 603 -282 b 747 -197 660 -256 706 -230 b 949 143 857 -109 920 10 b 956 206 955 164 956 186 b 791 384 956 297 906 363 b 704 393 762 390 733 393 b 498 336 632 393 563 374 b 481 325 490 331 481 325 l 444 465 b 442 485 442 472 442 485 b 609 880 442 485 589 746 b 619 996 616 919 619 958 b 613 1084 619 1027 618 1056 b 534 1387 599 1188 560 1286 b 482 1453 527 1417 517 1453 b 422 1407 456 1453 438 1428 b 305 1063 348 1305 312 1188 b 304 1002 304 1043 304 1022 b 338 654 304 886 323 769 b 343 629 338 645 341 636 b 144 356 278 537 206 451 b 23 144 101 288 53 220 b 0 20 7 107 0 63 b 82 -210 0 -69 30 -160 b 207 -288 112 -239 160 -271 b 410 -328 274 -312 340 -328 b 474 -324 431 -328 452 -327 l 491 -321 b 491 -341 491 -321 492 -334 b 402 -585 475 -428 454 -513 b 294 -668 374 -622 348 -664 b 271 -693 278 -670 271 -680 b 274 -708 271 -698 272 -703 b 302 -775 282 -730 292 -753 b 343 -805 311 -795 325 -805 z m 400 717 b 382 922 389 786 382 854 b 481 1286 382 1047 408 1169 b 507 1125 498 1233 507 1179 b 500 1040 507 1097 504 1068 b 400 717 481 927 455 818 z m 252 -135 b 196 -121 232 -134 215 -127 b 117 -69 158 -108 127 -94 b 111 -32 112 -58 111 -45 b 117 19 111 -16 114 1 b 130 56 118 27 127 52 b 324 337 186 156 253 246 l 384 416 l 395 384 b 416 291 406 348 416 291 b 350 213 416 291 376 239 b 243 -42 278 143 243 55 b 251 -117 243 -66 246 -91 b 252 -135 252 -122 252 -127 z m 563 -91 b 510 168 552 3 530 78 b 513 192 508 179 508 186 b 624 202 550 199 586 202 b 730 192 660 202 694 199 b 850 141 773 183 816 176 b 858 134 852 138 855 135 b 595 -121 801 19 716 -68 l 569 -131 z m 410 -160 b 311 -147 360 -160 311 -147 b 307 -98 311 -147 307 -127 b 314 -33 307 -79 308 -56 b 429 131 328 36 377 85 b 441 138 433 135 438 138 b 449 122 446 138 448 132 b 490 -131 462 37 484 -46 b 490 -153 491 -140 490 -153 b 410 -160 490 -153 452 -163 z',\n        },\n        cClef: {\n            xMin: 0,\n            xMax: 731,\n            yMin: -543,\n            yMax: 543,\n            ha: 1086,\n            o: 'm 131 -782 b 141 -755 138 -782 140 -773 b 147 -490 143 -667 145 -577 b 160 207 150 -258 153 -24 b 168 618 164 344 158 481 b 81 768 173 690 132 732 b 45 782 66 778 55 782 b 3 740 26 782 13 768 b 0 724 1 736 0 730 l 1 710 b 4 596 4 672 4 634 l 4 382 b 9 102 4 288 4 196 b 17 -301 13 -32 10 -166 l 17 -672 b 50 -736 17 -701 27 -720 b 109 -772 69 -749 91 -759 b 131 -782 120 -778 127 -782 z m 615 -770 b 881 -684 710 -770 801 -739 b 1020 -395 986 -612 1020 -510 b 1017 -334 1020 -374 1018 -354 b 769 -62 1007 -209 896 -75 b 746 -60 762 -60 755 -60 b 639 -73 710 -60 675 -69 b 524 -109 598 -79 560 -92 b 528 -36 526 -85 528 -60 b 527 -4 528 -26 528 -14 b 528 39 527 10 528 24 b 526 99 528 59 527 79 b 592 94 549 95 570 94 b 648 99 611 94 629 95 b 912 157 744 94 844 117 b 1053 377 1009 215 1053 284 b 1050 425 1053 393 1053 409 b 914 665 1037 521 986 602 b 717 753 855 717 791 753 b 626 734 688 753 658 747 l 462 665 b 347 500 374 628 347 580 b 350 449 347 484 348 468 b 392 419 353 428 367 416 b 492 438 425 425 459 428 b 541 498 524 448 541 468 b 540 514 541 503 541 508 b 537 546 537 524 537 536 b 573 639 537 580 550 611 b 606 657 582 649 593 657 l 609 657 b 716 622 647 652 684 647 b 834 372 801 556 834 469 b 831 323 834 356 832 338 b 743 187 825 266 795 217 b 710 176 732 180 720 176 b 694 179 704 176 700 177 b 527 223 638 193 582 206 b 495 229 516 228 505 229 b 454 220 481 229 468 225 b 395 189 432 213 415 200 b 363 180 384 186 374 181 b 348 168 356 179 348 176 b 340 161 343 167 340 164 b 347 150 340 157 343 154 b 356 147 348 148 353 147 b 364 92 361 130 363 111 b 369 -37 367 49 369 6 b 363 -154 369 -76 367 -115 b 357 -236 360 -183 357 -210 b 376 -264 357 -253 361 -259 b 456 -289 402 -284 429 -289 b 521 -282 478 -289 500 -285 b 549 -255 537 -279 546 -271 b 598 -177 556 -225 577 -202 b 622 -164 605 -168 613 -164 b 636 -167 626 -164 631 -166 b 749 -225 678 -177 714 -199 b 848 -405 814 -276 848 -337 b 824 -507 848 -436 840 -471 b 657 -657 792 -582 730 -625 b 608 -668 638 -664 622 -668 b 534 -602 572 -668 547 -645 b 513 -575 530 -589 523 -575 b 507 -576 510 -575 508 -575 b 478 -582 497 -580 488 -582 b 405 -570 454 -582 428 -570 b 389 -572 399 -570 395 -570 l 363 -572 b 321 -575 348 -572 333 -569 l 321 631 b 323 662 323 641 323 652 b 315 716 323 681 321 698 b 304 736 314 723 317 736 l 302 736 b 281 716 294 734 285 729 b 275 665 276 700 275 683 l 275 382 b 276 99 275 288 275 193 b 279 -170 278 10 276 -81 b 284 -399 282 -246 284 -323 b 282 -629 284 -475 282 -553 b 289 -721 282 -660 289 -690 b 300 -736 289 -727 291 -736 b 312 -724 307 -736 310 -730 b 321 -667 323 -706 321 -687 l 321 -632 l 328 -644 l 340 -657 b 510 -757 386 -707 445 -740 b 615 -770 546 -766 580 -770 z',\n        },\n        fClef: {\n            xMin: 0,\n            xMax: 776,\n            yMin: -496,\n            yMax: 216,\n            ha: 712,\n            o: 'm 402 -706 b 804 -405 592 -678 716 -566 b 876 -53 861 -298 874 -183 b 868 33 876 -32 873 1 b 560 311 845 217 723 311 b 524 310 549 311 536 311 b 131 134 373 297 239 242 b 17 -29 84 86 37 39 b 9 -89 12 -50 9 -71 b 112 -238 9 -154 43 -206 b 124 -243 117 -239 120 -242 b 186 -261 145 -255 166 -261 b 268 -228 215 -261 242 -249 b 351 -59 325 -181 351 -124 b 343 10 351 -36 348 -13 b 340 36 341 19 340 27 b 409 105 340 75 363 102 b 441 107 420 107 431 107 b 624 36 510 107 573 86 b 744 -200 688 -27 724 -109 b 747 -230 747 -210 747 -222 b 717 -323 747 -264 736 -292 b 608 -445 688 -370 654 -410 b 307 -541 518 -513 415 -541 l 213 -541 b 39 -521 154 -541 96 -539 b 0 -552 17 -514 0 -531 b 1 -564 0 -556 0 -560 b 17 -611 6 -580 10 -596 b 101 -694 35 -648 50 -684 b 288 -714 164 -707 225 -714 b 402 -706 325 -714 363 -711 z m 1018 92 b 1080 118 1041 91 1068 96 b 1117 219 1099 150 1117 180 b 1113 252 1117 229 1116 240 b 1045 288 1102 297 1068 276 b 1017 262 1028 297 1024 274 b 984 124 989 220 996 170 b 1008 91 979 108 986 91 z m 972 -281 b 1070 -148 1024 -279 1070 -210 b 1025 -105 1070 -105 1045 -112 b 989 -127 1004 -96 998 -114 b 949 -249 963 -164 963 -209 b 969 -281 943 -265 949 -281 z',\n        },\n        unpitchedPercussionClef1: {\n            xMin: 0,\n            xMax: 379,\n            yMin: -250,\n            yMax: 250,\n            ha: 500,\n            o: 'm 481 -360 b 507 -357 491 -360 500 -360 b 546 -295 541 -346 547 -325 b 536 79 543 -170 540 -46 b 523 311 533 157 534 235 b 475 359 518 340 508 359 b 425 360 459 359 442 360 b 400 359 416 360 409 360 b 337 294 348 353 340 347 l 337 -73 b 336 -264 337 -137 337 -200 b 343 -294 336 -274 338 -284 b 481 -360 359 -330 431 -360 z m 144 -341 b 207 -320 167 -341 189 -331 b 217 -301 215 -315 217 -308 b 210 -262 217 -289 210 -275 b 228 187 212 -112 209 37 b 228 287 228 220 229 253 b 174 353 228 336 222 343 b 120 359 157 357 138 359 b 48 357 96 359 72 356 b 17 323 29 357 19 344 b 7 120 16 255 9 187 b 6 -109 6 43 6 -33 l 6 -204 b 0 -251 6 -220 0 -235 b 3 -269 0 -256 0 -262 b 127 -340 24 -330 79 -328 b 144 -341 132 -341 138 -341 z',\n        },\n        '6stringTabClef': {\n            xMin: 0,\n            xMax: 438,\n            yMin: -768,\n            yMax: 767,\n            ha: 1535,\n            o: 'm 369 438 b 374 439 370 438 372 438 b 384 462 383 444 384 452 l 384 474 b 390 697 386 547 390 622 b 373 1002 390 799 390 901 l 533 1002 b 560 1001 541 1004 552 1001 b 573 1007 567 1001 572 1002 b 546 1050 579 1025 559 1038 b 536 1056 543 1053 539 1053 b 324 1104 472 1102 397 1104 b 72 1090 238 1104 154 1099 b 55 1093 66 1090 60 1092 b 37 1073 46 1093 37 1089 b 60 1045 37 1061 48 1051 b 203 1001 105 1022 151 1001 b 233 1004 213 1001 223 1002 b 246 1005 238 1004 243 1005 b 272 975 264 1005 272 996 l 272 965 b 258 596 264 842 265 719 b 315 474 253 540 272 504 l 343 455 b 369 438 351 448 357 438 z m 114 -320 b 127 -304 120 -320 124 -315 b 171 -174 141 -261 158 -219 b 222 -135 179 -147 196 -137 b 426 -122 289 -131 359 -128 b 498 -164 462 -120 482 -127 b 628 -301 521 -226 575 -264 b 631 -288 631 -295 631 -291 b 628 -269 631 -281 629 -276 b 569 -134 616 -220 589 -179 b 408 225 514 -14 462 107 b 314 357 384 274 351 318 b 278 380 298 372 288 379 b 251 351 268 380 261 372 b 4 -209 156 171 75 -17 b 0 -228 1 -215 0 -222 b 19 -258 0 -240 7 -249 b 102 -314 45 -279 75 -294 b 114 -320 107 -318 111 -320 z m 425 6 b 360 20 403 17 382 20 b 274 14 331 20 302 14 l 246 14 l 340 206 b 425 6 369 137 395 75 z m 245 -1106 b 281 -1104 256 -1106 269 -1106 b 511 -888 400 -1094 511 -1035 b 454 -688 511 -814 504 -744 b 448 -678 449 -685 448 -681 b 454 -667 448 -675 449 -671 b 504 -497 503 -619 507 -559 b 324 -288 500 -383 436 -308 b 295 -287 314 -287 304 -287 l 282 -287 b 115 -330 223 -287 168 -307 b 94 -366 102 -336 94 -348 l 94 -370 b 96 -435 96 -392 96 -413 b 73 -858 89 -576 71 -717 b 78 -919 73 -878 78 -899 b 72 -950 78 -930 76 -940 b 63 -992 66 -965 63 -978 b 66 -1015 63 -999 65 -1008 b 173 -1104 84 -1106 84 -1106 b 245 -1106 197 -1104 220 -1104 z m 161 -622 b 147 -618 156 -622 151 -621 b 140 -600 141 -612 140 -606 b 144 -564 140 -589 144 -575 b 143 -554 144 -560 144 -557 l 143 -546 b 220 -451 144 -467 143 -465 b 278 -445 239 -446 259 -444 b 418 -497 328 -445 376 -461 b 429 -516 426 -504 429 -510 b 415 -533 429 -521 423 -527 b 219 -608 357 -579 287 -590 b 215 -609 217 -608 216 -609 b 161 -622 197 -609 177 -622 z m 154 -953 b 130 -933 135 -953 130 -948 l 130 -865 l 128 -865 b 135 -788 130 -838 124 -808 b 203 -769 145 -769 180 -776 b 259 -762 223 -765 242 -762 b 441 -852 330 -762 386 -805 b 449 -867 446 -858 449 -863 b 436 -884 449 -874 444 -878 b 318 -942 402 -914 363 -935 b 154 -953 264 -950 209 -953 z',\n        },\n        timeSig0: {\n            xMin: 20,\n            xMax: 513,\n            yMin: -358,\n            yMax: 359,\n            ha: 717,\n            o: 'm 341 -516 b 420 -510 367 -516 395 -514 b 675 -338 533 -494 622 -448 b 737 -92 716 -256 734 -171 b 739 -35 739 -73 739 -53 b 680 305 739 86 720 207 b 400 517 622 449 537 517 b 337 514 380 517 359 517 b 289 507 321 511 305 513 b 91 317 192 477 127 412 b 29 9 50 212 29 108 b 217 -458 29 -157 88 -312 b 341 -516 251 -494 291 -518 z m 412 -452 b 359 -425 393 -452 376 -444 b 187 14 242 -301 179 -158 b 268 334 193 127 212 235 b 387 448 295 383 330 428 b 406 452 395 451 400 452 b 428 444 413 452 420 449 b 517 324 471 413 497 372 b 586 -29 560 222 586 86 b 556 -271 586 -112 585 -193 b 468 -422 536 -327 508 -377 b 412 -452 449 -442 431 -452 z',\n        },\n        timeSig1: {\n            xMin: 20,\n            xMax: 283,\n            yMin: -364,\n            yMax: 366,\n            ha: 730,\n            o: 'm 264 -524 b 357 -510 297 -524 325 -516 b 374 -490 369 -508 374 -501 b 380 -438 376 -472 380 -455 l 406 246 b 408 301 408 265 408 282 b 400 445 408 348 405 396 b 288 527 395 491 338 527 b 253 520 276 527 264 526 b 240 508 249 517 245 513 b 49 409 192 445 127 413 b 29 396 33 408 29 403 b 32 380 29 392 30 386 b 59 363 36 366 49 364 b 164 348 95 356 130 348 b 222 357 183 348 203 351 b 238 361 228 360 233 360 b 252 334 248 361 252 353 b 243 59 252 242 249 150 b 219 -490 229 -124 233 -307 b 264 -524 217 -516 232 -524 z',\n        },\n        timeSig2: {\n            xMin: 20,\n            xMax: 660,\n            yMin: -379,\n            yMax: 382,\n            ha: 761,\n            o: 'm 99 -543 b 130 -533 111 -550 121 -540 b 255 -448 168 -501 213 -475 b 338 -425 282 -431 310 -425 b 392 -431 356 -425 374 -426 b 485 -462 423 -438 454 -451 b 648 -497 540 -482 595 -497 b 834 -441 711 -497 773 -480 b 950 -242 906 -395 958 -334 b 942 -210 950 -230 950 -215 b 912 -220 932 -204 920 -213 b 861 -264 894 -235 877 -248 b 775 -317 835 -289 808 -305 b 675 -334 742 -328 708 -334 b 510 -295 619 -334 563 -318 b 372 -264 465 -278 420 -264 b 305 -272 350 -264 328 -266 b 331 -242 318 -256 324 -249 b 490 -73 386 -187 438 -131 b 675 340 595 43 664 180 b 677 369 677 350 677 360 b 556 536 677 461 638 508 b 468 550 526 546 497 550 b 297 508 409 550 353 533 b 111 354 220 475 168 412 b 29 197 65 308 29 261 b 32 164 29 187 29 176 b 29 140 33 157 29 147 b 43 125 29 132 32 125 b 73 147 55 125 65 138 b 86 163 79 153 82 158 b 238 320 134 219 183 272 b 425 389 292 367 360 389 b 575 341 480 389 531 373 b 606 298 590 330 606 317 b 600 278 606 292 603 285 b 501 107 576 217 544 158 b 304 -104 439 33 372 -35 b 111 -356 230 -180 167 -265 b 84 -446 92 -386 84 -415 b 86 -481 84 -458 85 -469 b 88 -514 88 -491 88 -503 b 99 -543 89 -526 91 -537 z',\n        },\n        timeSig3: {\n            xMin: 20,\n            xMax: 540,\n            yMin: -392,\n            yMax: 392,\n            ha: 784,\n            o: 'm 216 -540 b 354 -564 264 -556 310 -564 b 605 -465 445 -564 530 -530 b 729 -161 697 -383 729 -275 b 724 -82 729 -135 727 -108 b 589 95 716 -1 670 62 b 523 114 567 102 546 108 b 750 418 606 213 677 315 b 778 503 769 444 778 472 b 773 540 778 514 776 527 b 750 564 769 557 762 564 b 736 562 746 564 742 563 b 641 552 704 553 672 552 b 402 554 562 552 481 554 l 346 554 b 84 546 258 554 170 554 b 36 501 55 543 40 531 b 29 412 30 472 32 442 b 52 384 27 393 32 384 l 56 384 b 210 392 107 389 158 392 l 602 392 b 354 108 523 285 445 192 b 246 -65 300 58 246 12 b 252 -108 246 -78 248 -92 l 252 -111 b 264 -141 251 -122 251 -135 b 291 -132 274 -145 284 -140 b 425 -72 328 -95 377 -84 b 475 -65 442 -68 459 -65 b 592 -108 517 -65 557 -79 b 645 -179 615 -125 645 -147 b 642 -194 645 -184 644 -189 b 485 -376 616 -278 569 -344 b 361 -399 444 -392 402 -399 b 151 -340 289 -399 219 -376 b 88 -275 122 -323 98 -310 b 71 -249 86 -268 85 -249 b 63 -251 68 -249 66 -249 b 36 -288 48 -255 36 -266 b 55 -423 33 -336 45 -377 b 101 -482 60 -448 78 -468 b 216 -540 138 -504 174 -526 z',\n        },\n        timeSig4: {\n            xMin: 20,\n            xMax: 633,\n            yMin: -490,\n            yMax: 491,\n            ha: 981,\n            o: 'm 608 -704 b 641 -684 622 -708 634 -696 b 667 -602 660 -660 662 -631 b 685 -190 683 -465 680 -327 l 685 -176 b 831 -127 736 -166 783 -148 b 912 0 901 -94 913 -76 b 886 53 912 36 904 52 b 848 40 877 53 864 49 l 838 36 b 687 -13 789 14 739 -3 b 681 177 687 50 684 114 b 672 338 678 230 677 285 b 654 373 671 350 672 373 b 622 340 636 373 624 361 b 615 262 621 314 613 288 b 619 -22 616 167 619 72 b 569 -22 602 -23 585 -23 b 305 -3 481 -16 395 -1 b 210 -9 274 -3 242 -4 b 301 163 242 52 268 108 b 513 552 377 288 459 412 b 536 652 526 585 536 618 b 533 683 536 662 534 672 b 520 707 531 691 531 707 b 487 693 508 708 494 704 b 474 668 482 684 477 677 b 384 490 454 603 418 547 b 253 281 343 419 295 351 b 73 -13 194 181 145 78 b 29 -108 50 -42 29 -72 b 37 -147 29 -121 32 -134 b 50 -186 43 -160 50 -173 b 68 -216 52 -207 56 -215 b 92 -207 73 -216 82 -213 b 288 -166 156 -180 220 -166 b 556 -186 377 -166 467 -180 b 586 -189 566 -187 576 -187 b 616 -186 596 -189 606 -189 b 606 -432 613 -268 612 -350 b 596 -625 603 -495 596 -559 b 598 -670 596 -641 596 -655 b 608 -704 598 -683 596 -700 z',\n        },\n        timeSig5: {\n            xMin: 20,\n            xMax: 583,\n            yMin: -389,\n            yMax: 389,\n            ha: 778,\n            o: 'm 132 -536 b 249 -560 168 -553 209 -559 b 507 -462 351 -560 454 -514 b 677 -183 588 -384 642 -289 b 694 -85 688 -150 694 -117 b 540 138 694 12 642 94 b 422 173 501 154 462 167 b 400 187 408 174 400 177 b 405 202 400 190 402 196 b 428 284 416 228 426 255 b 469 312 431 307 442 312 b 757 372 569 312 662 343 b 840 490 821 392 840 432 b 812 560 840 540 834 560 b 763 546 801 560 785 556 b 757 543 762 546 759 544 b 465 484 665 505 570 484 b 396 484 452 484 425 487 b 353 454 377 482 366 474 b 281 300 323 405 304 351 b 245 164 262 255 245 212 b 246 144 245 158 246 151 b 233 63 249 115 243 89 b 225 35 228 50 225 40 b 264 14 225 22 236 19 b 445 -26 325 7 387 0 b 569 -151 501 -52 547 -89 b 575 -180 573 -161 575 -170 b 527 -275 575 -217 547 -245 b 347 -367 484 -334 419 -367 b 261 -351 318 -367 289 -363 b 95 -300 206 -333 154 -307 b 55 -321 73 -297 65 -302 b 29 -468 29 -367 40 -419 b 56 -505 26 -482 36 -500 b 132 -536 82 -514 108 -524 z',\n        },\n        timeSig6: {\n            xMin: 20,\n            xMax: 565,\n            yMin: -363,\n            yMax: 363,\n            ha: 726,\n            o: 'm 390 -518 b 621 -458 469 -507 549 -494 b 814 -134 753 -390 814 -281 b 652 59 814 -16 750 58 b 580 48 629 59 606 55 b 233 -334 392 -9 276 -138 b 115 -228 181 -314 143 -278 b 98 -160 104 -206 98 -183 b 107 -109 98 -144 101 -127 b 167 37 124 -59 145 -12 b 508 340 236 189 347 292 b 575 353 530 347 553 353 b 648 327 600 353 625 346 b 665 320 654 321 661 320 b 687 336 674 320 681 325 b 703 405 697 359 703 382 b 684 472 703 429 697 451 b 593 523 664 504 631 521 b 576 521 588 523 582 523 b 297 403 472 508 380 465 b 115 177 217 344 164 264 b 29 -121 60 82 29 -17 b 53 -278 29 -173 36 -225 b 226 -497 82 -374 131 -454 b 347 -523 265 -514 305 -523 b 390 -518 361 -523 376 -521 z m 351 -357 b 312 -351 337 -356 320 -363 b 325 -315 304 -340 320 -327 b 543 -120 373 -222 448 -158 b 622 -104 570 -108 596 -102 b 717 -132 655 -104 687 -112 b 740 -167 732 -143 740 -153 b 730 -196 740 -176 737 -184 b 563 -321 690 -258 634 -300 b 359 -357 497 -341 428 -354 z',\n        },\n        timeSig7: {\n            xMin: 20,\n            xMax: 592,\n            yMin: -345,\n            yMax: 345,\n            ha: 690,\n            o: 'm 253 -497 b 318 -485 276 -497 297 -487 b 366 -441 348 -482 360 -468 b 487 -104 390 -323 433 -210 b 835 403 580 82 701 246 b 852 436 847 416 852 428 b 815 467 852 451 840 461 b 762 474 798 471 779 474 b 674 445 732 474 701 465 b 603 410 652 431 628 420 b 383 360 533 379 459 360 b 200 435 315 360 249 382 b 88 494 168 469 131 485 b 66 497 81 495 73 497 b 33 484 52 497 39 492 b 50 436 22 469 39 451 b 295 310 114 360 199 324 b 406 301 331 304 369 301 b 593 324 468 301 530 308 b 585 307 589 314 588 310 b 265 -249 451 137 338 -46 b 207 -442 242 -312 223 -377 b 204 -462 206 -449 204 -456 b 253 -497 204 -487 220 -497 z',\n        },\n        timeSig8: {\n            xMin: 20,\n            xMax: 504,\n            yMin: -428,\n            yMax: 428,\n            ha: 856,\n            o: 'm 265 -616 b 289 -615 274 -616 281 -616 b 710 -271 492 -592 657 -485 b 726 -148 721 -229 727 -187 b 585 108 726 -48 687 42 b 572 127 576 114 573 120 b 576 144 572 132 575 138 b 598 301 590 196 598 249 b 586 413 598 338 593 376 b 356 616 559 531 467 616 b 233 582 317 616 275 606 b 29 233 101 505 29 384 b 104 9 29 153 46 72 b 189 -48 127 -16 160 -27 b 92 -158 141 -73 114 -114 b 37 -343 63 -217 50 -279 b 33 -390 35 -359 33 -374 b 265 -616 33 -524 148 -616 z m 258 105 b 124 148 215 105 167 117 b 96 196 105 163 96 177 b 99 217 96 202 96 209 b 197 384 120 281 151 337 b 350 451 242 429 297 451 b 516 364 412 451 472 422 b 530 331 523 354 530 343 l 530 327 l 530 320 b 468 151 520 261 507 200 b 419 122 455 135 442 125 b 258 105 370 117 320 105 z m 328 -438 b 158 -276 233 -436 160 -359 b 166 -239 158 -264 161 -252 b 230 -157 176 -203 202 -179 b 367 -72 274 -125 320 -98 b 448 -49 396 -56 423 -49 b 562 -118 491 -49 528 -72 b 611 -251 590 -157 611 -199 b 569 -341 611 -288 595 -318 b 328 -438 500 -402 416 -432 z',\n        },\n        timeSig9: {\n            xMin: 20,\n            xMax: 494,\n            yMin: -421,\n            yMax: 421,\n            ha: 842,\n            o: 'm 235 -606 b 361 -564 275 -606 318 -593 b 619 -229 487 -482 566 -366 b 706 127 664 -114 694 4 b 711 233 708 163 711 197 b 700 346 711 271 708 308 b 389 606 658 517 530 606 b 351 605 376 606 364 606 b 56 272 171 586 56 441 b 96 98 56 216 69 156 b 334 -53 144 -3 238 -53 b 544 36 408 -53 484 -24 b 652 176 586 78 622 124 b 631 71 645 141 639 105 b 467 -302 599 -63 562 -196 b 271 -442 412 -364 354 -422 b 225 -448 255 -446 239 -448 b 95 -305 148 -448 98 -395 b 89 -255 95 -288 94 -271 b 73 -233 86 -246 85 -233 b 52 -248 65 -233 56 -239 b 29 -317 42 -271 30 -291 b 49 -448 29 -361 40 -405 b 235 -606 69 -541 144 -606 z m 340 104 b 144 209 264 108 194 141 b 127 258 132 225 127 240 b 137 297 127 271 130 284 b 366 449 184 396 269 449 b 517 408 415 449 467 436 b 595 348 546 392 572 372 b 616 305 608 336 616 321 b 609 281 616 298 613 289 b 340 104 557 184 477 104 z',\n        },\n        timeSigCommon: {\n            xMin: 20,\n            xMax: 585,\n            yMin: -298,\n            yMax: 294,\n            ha: 592,\n            o: 'm 444 -405 b 829 -45 626 -346 740 -207 b 842 26 842 -23 842 1 b 821 58 842 39 841 58 b 795 40 811 58 802 48 b 765 3 785 29 773 16 b 469 -223 690 -104 596 -183 b 354 -242 431 -235 392 -242 b 180 -177 292 -242 235 -223 b 135 -99 154 -157 140 -131 b 132 -59 134 -85 132 -72 b 141 7 132 -37 135 -16 b 449 274 189 160 297 243 b 477 278 459 276 468 276 b 546 203 517 278 539 253 b 517 157 550 177 533 166 b 485 143 507 153 497 143 l 482 143 b 467 148 478 143 472 144 b 374 183 438 170 406 181 b 264 118 333 183 292 161 b 238 48 246 92 238 69 b 261 -9 238 29 245 10 b 383 -73 287 -39 337 -73 b 412 -68 392 -73 402 -72 b 631 164 526 -27 586 59 b 649 252 644 193 649 222 b 636 328 649 278 645 304 b 504 423 615 400 579 429 b 242 318 408 415 317 387 b 29 -158 104 190 29 33 b 30 -176 29 -164 29 -170 b 115 -364 42 -246 52 -315 b 307 -429 177 -410 240 -429 b 444 -405 351 -429 397 -420 z',\n        },\n        timeSigCutCommon: {\n            xMin: 20,\n            xMax: 695,\n            yMin: -687,\n            yMax: 687,\n            ha: 1374,\n            o: 'm 564 -989 b 595 -945 585 -991 589 -963 l 599 -922 b 605 -628 600 -824 603 -726 l 609 -399 b 878 -251 706 -363 798 -320 b 996 -85 932 -204 976 -153 b 1001 -63 998 -78 1001 -71 b 989 -46 1001 -56 998 -49 b 978 -43 985 -45 982 -43 b 950 -59 968 -43 959 -49 b 733 -216 894 -132 815 -177 b 611 -259 694 -235 652 -249 b 616 -20 612 -179 615 -99 b 680 29 642 -7 665 9 b 698 43 685 36 690 40 b 870 251 792 82 840 160 b 877 294 874 265 877 279 b 818 410 877 338 855 382 b 683 458 779 442 730 448 b 625 468 664 462 644 465 l 625 514 b 638 958 626 662 636 811 b 626 989 638 979 635 989 b 603 981 621 989 613 986 b 422 840 534 945 481 888 b 412 805 412 832 413 818 b 426 713 410 773 420 743 b 445 678 429 690 435 678 b 474 691 452 678 461 683 b 563 755 503 710 530 732 b 564 724 564 740 564 733 b 559 469 563 639 560 554 b 462 454 526 469 494 464 b 112 143 302 399 199 281 b 33 -94 66 71 45 -10 b 29 -148 30 -112 29 -131 b 105 -351 29 -223 52 -291 b 359 -455 171 -426 258 -451 b 517 -431 409 -451 464 -446 l 539 -422 l 539 -477 b 533 -739 536 -563 539 -651 b 530 -824 531 -768 530 -795 b 546 -948 530 -865 533 -907 b 564 -989 552 -962 543 -989 z m 410 -288 b 193 -197 328 -288 253 -264 b 141 -60 160 -161 141 -108 b 157 6 141 -35 147 -12 b 259 158 189 58 217 112 b 438 291 311 215 364 266 b 528 305 468 301 498 305 b 554 304 537 305 546 304 b 553 212 554 274 554 242 b 426 115 498 199 446 164 b 416 68 419 99 416 84 b 425 12 416 49 420 30 b 474 -39 432 -17 448 -32 b 513 -43 487 -42 498 -43 b 547 -40 524 -43 536 -42 l 543 -272 b 461 -285 516 -278 488 -281 b 410 -288 444 -287 426 -288 z m 694 197 b 668 203 685 197 677 199 b 621 216 654 210 638 215 b 622 294 622 242 622 268 b 706 268 651 287 678 278 b 746 235 721 261 734 249 b 752 222 749 230 752 226 b 743 213 752 219 749 215 b 694 197 727 206 711 197 z',\n        },\n        timeSigPlus: {\n            xMin: 0,\n            xMax: 661,\n            yMin: -358,\n            yMax: 358,\n            ha: 716,\n            o: 'm 605 -516 b 629 -490 624 -516 629 -507 b 628 -475 629 -485 628 -481 b 613 -131 624 -405 616 -174 b 612 -96 612 -114 612 -96 l 647 -98 b 897 -115 730 -99 814 -109 b 940 -89 919 -117 935 -109 b 952 -24 946 -69 952 -46 b 948 9 952 -14 950 -3 b 912 39 942 26 933 37 b 609 60 822 48 609 60 b 616 392 609 60 608 291 b 567 488 619 436 605 467 b 511 516 550 498 531 514 b 498 511 507 516 503 514 b 478 446 475 501 480 469 b 467 150 474 348 469 249 b 465 59 465 121 465 59 l 372 49 b 73 14 272 36 173 24 b 49 13 65 13 56 13 b 0 -33 9 13 0 6 b 60 -141 0 -117 6 -140 b 112 -135 73 -141 91 -140 b 413 -102 213 -125 314 -112 b 464 -98 441 -99 464 -98 l 464 -145 b 477 -456 464 -249 468 -353 b 526 -510 478 -488 491 -507 b 589 -513 546 -511 569 -510 b 605 -516 595 -514 600 -516 z',\n        },\n        timeSigPlusSmall: {\n            xMin: 0,\n            xMax: 418,\n            yMin: -197,\n            yMax: 199,\n            ha: 396,\n            o: 'm 301 -284 b 330 -238 320 -284 324 -255 b 348 -46 350 -176 341 -111 b 374 -20 351 -27 356 -23 b 481 -17 409 -16 445 -17 b 566 -9 510 -17 537 -16 b 602 3 579 -7 602 -16 b 566 29 602 19 582 24 b 526 33 553 32 539 33 b 384 39 478 36 432 39 b 356 62 363 39 356 42 l 356 68 b 359 177 359 104 359 141 l 359 251 b 341 287 359 264 361 285 b 311 255 324 287 314 272 b 310 228 311 246 310 236 l 301 69 b 275 39 301 49 295 39 l 271 39 b 210 40 251 40 230 40 b 167 39 196 40 181 40 b 89 40 141 37 115 40 b 24 30 68 40 46 37 b 0 17 17 27 0 30 l 0 13 b 27 -17 3 0 7 -13 b 91 -22 49 -22 71 -22 b 153 -22 115 -22 137 -20 l 275 -22 b 295 -40 289 -22 295 -27 l 295 -48 b 288 -235 288 -109 287 -171 b 287 -264 288 -243 287 -253 b 301 -284 287 -275 289 -284 z',\n        },\n        timeSigMinus: {\n            xMin: 0,\n            xMax: 662,\n            yMin: -54,\n            yMax: 55,\n            ha: 109,\n            o: 'm 39 -78 b 49 -76 42 -78 45 -76 b 452 -75 94 -75 272 -75 b 861 -76 632 -75 814 -76 b 953 -20 927 -79 953 -66 b 948 27 953 -7 950 9 b 946 37 948 30 948 35 b 896 79 940 63 929 79 b 471 78 827 78 648 78 l 42 78 b 0 37 14 78 0 69 b 23 -66 0 0 17 -32 b 39 -78 24 -75 32 -76 z',\n        },\n        timeSigParensRight: {\n            xMin: 0,\n            xMax: 274,\n            yMin: -723,\n            yMax: 725,\n            ha: 1448,\n            o: 'm 37 -1038 b 69 -1031 48 -1044 59 -1038 b 88 -1015 76 -1027 82 -1021 b 164 -886 120 -976 147 -933 b 333 -351 233 -711 292 -534 b 395 118 366 -204 399 -59 b 389 245 392 144 392 194 b 120 996 369 521 265 766 b 68 1044 99 1030 84 1044 b 19 988 50 1044 36 1024 b 0 922 7 965 0 945 b 20 858 0 901 6 881 b 259 215 141 660 236 449 b 271 -1 266 143 271 71 b 252 -239 271 -82 265 -161 b 148 -667 228 -384 183 -524 b 39 -1009 120 -785 66 -893 b 33 -1031 37 -1017 33 -1024 b 37 -1038 33 -1034 35 -1037 z',\n        },\n        timeSigParensRightSmall: {\n            xMin: 0,\n            xMax: 154,\n            yMin: -422,\n            yMax: 422,\n            ha: 844,\n            o: 'm 43 -608 b 60 -598 48 -608 53 -605 b 117 -511 82 -572 102 -543 b 222 23 193 -350 219 -177 b 213 166 225 55 216 109 b 115 531 206 294 174 416 b 45 603 99 562 76 588 b 30 608 39 606 35 608 b 10 598 23 608 17 603 b 0 546 3 590 0 570 b 23 451 0 507 9 458 b 102 351 66 429 84 390 b 167 42 150 252 167 148 b 163 -49 167 12 166 -19 b 35 -449 151 -192 121 -330 b 14 -504 22 -467 14 -485 b 17 -527 14 -511 16 -520 l 30 -590 b 43 -608 33 -603 37 -608 z',\n        },\n        timeSigParensLeft: {\n            xMin: 1,\n            xMax: 400,\n            yMin: -728,\n            yMax: 728,\n            ha: 1456,\n            o: 'm 562 -1048 b 573 -1043 566 -1048 570 -1047 b 553 -988 582 -1025 564 -1004 b 472 -884 527 -952 497 -920 b 210 -354 366 -717 275 -541 b 148 -6 170 -240 148 -124 b 160 148 148 45 153 96 b 315 678 189 331 242 508 b 431 901 350 755 380 834 b 459 950 451 926 461 939 b 435 995 459 962 451 972 b 364 1048 405 1034 383 1048 b 305 996 343 1048 325 1028 b 127 624 226 881 174 753 b 1 30 56 432 9 235 b 1 -32 1 9 0 -12 b 180 -629 13 -245 92 -438 b 363 -936 230 -739 298 -835 b 526 -1041 402 -995 448 -1041 b 562 -1048 537 -1040 552 -1048 z',\n        },\n        timeSigParensLeftSmall: {\n            xMin: 0,\n            xMax: 173,\n            yMin: -405,\n            yMax: 404,\n            ha: 809,\n            o: 'm 197 -583 b 222 -553 212 -582 219 -566 b 229 -497 226 -534 229 -516 b 213 -425 229 -472 225 -448 b 102 -177 173 -344 132 -262 b 62 30 78 -111 58 -42 b 91 183 66 82 75 134 b 215 426 118 271 156 356 b 249 552 246 465 252 505 b 230 582 249 563 246 582 b 197 563 219 582 206 576 b 71 356 144 500 105 429 b 0 50 26 259 3 158 b 13 -112 4 -3 7 -58 b 176 -559 29 -275 105 -416 b 196 -583 180 -569 186 -583 z',\n        },\n        noteheadDoubleWhole: {\n            xMin: 0,\n            xMax: 614,\n            yMin: -223,\n            yMax: 223,\n            ha: 446,\n            o: 'm 35 -321 b 62 -266 58 -318 58 -288 l 62 -194 b 63 50 62 -114 63 -32 b 60 189 63 96 63 143 b 43 300 59 226 60 265 b 29 321 40 308 39 321 l 26 321 b 0 292 13 318 0 310 b 0 248 0 278 -1 262 b 6 147 4 215 6 181 b 4 48 6 114 4 81 b 6 0 4 32 6 16 b 7 -36 7 -12 7 -24 l 7 -52 b 6 -156 7 -86 6 -121 b 19 -275 6 -196 9 -236 b 35 -321 23 -291 16 -323 z m 847 -314 b 871 -288 860 -315 867 -300 b 884 -187 881 -255 886 -222 b 876 115 878 -86 876 14 b 877 255 876 161 876 209 b 868 291 877 268 873 279 b 855 304 867 301 863 304 b 844 301 852 304 848 304 b 822 265 825 292 822 278 b 824 251 822 259 822 255 b 822 170 822 225 822 197 l 822 -20 b 835 -284 827 -86 825 -186 b 847 -314 837 -295 835 -311 z m 757 -291 b 793 -171 796 -255 792 -212 b 795 -49 795 -131 795 -91 b 786 207 795 36 791 121 b 779 240 786 217 783 229 b 766 258 776 246 776 258 b 762 256 765 258 763 256 b 739 236 752 253 740 252 b 733 177 737 216 732 197 b 737 20 737 125 739 73 l 737 -107 b 740 -202 737 -138 739 -170 b 757 -291 740 -230 743 -261 z m 128 -261 b 144 -251 135 -264 141 -256 b 158 -203 156 -236 157 -220 b 161 -137 161 -181 161 -158 b 157 30 161 -81 157 -26 b 158 76 157 45 157 60 l 158 101 b 156 225 158 141 158 183 b 137 253 156 235 154 253 l 134 253 b 109 222 120 251 109 242 b 104 91 108 179 104 134 b 108 -58 104 42 109 -9 b 107 -105 108 -73 108 -89 b 105 -127 107 -112 107 -120 b 118 -245 105 -167 114 -204 b 128 -261 118 -252 121 -259 z m 488 -242 b 693 -79 595 -249 685 -166 l 693 -55 b 690 0 693 -36 691 -17 b 540 187 684 84 621 164 b 449 200 508 196 480 200 b 210 104 363 200 282 163 b 186 56 196 92 186 76 b 207 -82 186 9 192 -37 b 300 -204 225 -132 248 -181 b 488 -242 356 -229 415 -240 z m 490 -88 b 449 -86 477 -88 464 -88 b 287 -56 399 -85 341 -78 b 258 -33 275 -52 258 -48 b 282 -7 258 -20 272 -13 b 458 43 340 23 399 43 b 580 14 497 43 537 35 b 618 -20 606 1 619 -9 b 592 -58 618 -30 609 -42 b 490 -88 562 -82 528 -88 z',\n        },\n        noteheadWhole: {\n            xMin: 0,\n            xMax: 380,\n            yMin: -186,\n            yMax: 165,\n            ha: 351,\n            o: 'm 547 40 b 223 -268 543 -151 367 -259 b 102 -233 180 -271 143 -248 l 62 -216 b 0 -127 22 -197 0 -166 b 6 -91 0 -115 1 -104 b 122 141 33 -9 69 71 b 327 238 170 204 249 238 b 514 158 397 238 467 212 b 547 40 544 125 549 84 z m 248 -107 b 384 -63 295 -102 341 -88 b 426 -23 402 -53 415 -40 b 435 3 432 -14 435 -6 b 413 32 435 14 428 24 b 301 73 376 49 343 73 b 272 69 291 73 282 72 b 121 -35 207 53 157 20 b 111 -58 117 -42 111 -50 b 125 -75 111 -65 115 -71 b 248 -107 164 -89 202 -107 z',\n        },\n        noteheadHalf: {\n            xMin: 0,\n            xMax: 334,\n            yMin: -174,\n            yMax: 175,\n            ha: 349,\n            o: 'm 480 56 b 167 -251 478 -115 331 -251 b 94 -242 143 -251 118 -248 b 9 -141 43 -229 20 -192 b 0 -68 3 -115 0 -91 b 284 249 0 95 127 200 b 304 252 289 251 297 252 b 481 78 374 252 481 170 b 480 56 481 71 481 63 z m 213 -102 b 399 6 274 -81 341 -48 b 402 17 400 7 402 13 b 399 27 402 22 400 26 b 311 94 373 53 353 88 b 292 95 305 95 300 95 b 130 27 230 95 181 55 b 69 -62 98 9 62 -29 b 161 -98 76 -98 128 -91 b 213 -102 174 -101 186 -101 z',\n        },\n        noteheadBlack: {\n            xMin: 0,\n            xMax: 334,\n            yMin: -164,\n            yMax: 164,\n            ha: 328,\n            o: 'm 112 -233 b 141 -236 122 -235 131 -236 b 481 104 279 -236 485 -48 b 403 222 477 141 478 192 b 334 236 382 232 359 236 b 1 -59 180 236 13 59 b 0 -85 1 -68 0 -76 b 112 -233 0 -157 32 -215 z',\n        },\n        noteheadXDoubleWhole: {\n            xMin: 0,\n            xMax: 730,\n            yMin: -266,\n            yMax: 267,\n            ha: 533,\n            o: 'm 1018 -373 b 1032 -361 1025 -376 1028 -367 b 1051 -287 1047 -338 1051 -314 b 1050 -252 1051 -276 1051 -264 b 1030 186 1031 -107 1037 40 b 1031 266 1028 213 1031 239 b 1018 363 1031 300 1028 331 b 1005 384 1015 373 1017 384 l 1004 384 b 984 363 992 384 986 373 b 982 343 982 356 982 348 b 981 235 982 307 981 271 b 996 -285 981 60 986 -112 b 1009 -360 998 -311 1005 -336 b 1018 -373 1011 -364 1014 -373 z m 16 -383 b 49 -328 39 -367 48 -350 b 69 56 58 -202 62 -73 b 75 212 72 107 72 160 b 78 278 76 233 78 255 b 59 382 78 312 73 347 b 29 328 33 372 29 350 b 13 -29 29 209 23 88 b 3 -222 7 -95 10 -157 b 0 -265 1 -236 0 -252 b 16 -383 0 -304 6 -343 z m 923 -314 b 955 -240 948 -289 952 -265 b 965 -65 962 -181 965 -125 b 963 0 965 -45 965 -22 b 962 111 960 37 962 73 b 953 240 962 154 960 197 b 939 275 952 253 952 275 b 913 239 924 274 913 258 b 913 173 914 217 913 194 b 914 135 913 160 913 147 b 920 27 919 98 920 63 b 909 -128 920 -26 917 -78 b 906 -179 906 -147 906 -163 b 923 -314 906 -223 913 -266 z m 121 -301 b 143 -272 134 -301 138 -284 b 147 -255 145 -268 145 -261 b 173 160 161 -117 166 22 b 173 233 173 184 174 209 b 157 264 171 243 171 264 b 137 235 143 264 138 249 b 132 207 135 226 132 216 b 121 43 128 153 124 96 b 105 -186 117 -36 105 -111 b 111 -269 105 -215 107 -242 b 121 -301 114 -281 104 -300 z m 210 -238 b 376 -193 274 -239 327 -226 b 471 -134 406 -173 439 -154 b 534 -94 491 -120 513 -107 b 671 -192 579 -127 624 -161 b 733 -226 691 -204 708 -228 b 746 -225 737 -228 742 -226 b 845 -204 782 -226 814 -213 b 868 -194 854 -203 865 -203 b 852 -173 871 -183 860 -179 b 661 -40 789 -128 724 -84 b 642 -27 654 -36 648 -32 b 861 114 716 17 791 63 b 886 132 870 120 886 121 l 886 137 b 852 164 883 151 867 161 b 776 176 827 170 801 176 b 685 145 744 176 714 168 b 530 45 638 107 583 76 b 403 132 487 73 444 101 b 279 176 364 161 324 171 b 223 160 259 176 229 176 b 258 115 215 141 242 127 b 431 -17 314 71 372 26 b 173 -196 341 -73 253 -130 b 157 -209 168 -200 157 -203 b 158 -215 157 -212 157 -215 b 183 -236 166 -223 168 -235 b 210 -238 194 -236 206 -239 z m 768 -207 b 533 -40 687 -150 609 -94 b 321 -173 462 -85 392 -130 b 261 -194 304 -184 287 -196 b 239 -193 253 -196 246 -194 b 387 -95 294 -157 340 -125 b 505 -20 426 -71 465 -45 l 484 -4 b 353 89 441 27 396 56 b 320 115 341 96 330 107 b 297 141 311 124 297 132 b 300 148 297 144 298 145 b 336 135 311 164 324 143 b 528 -4 400 89 464 42 l 723 121 b 770 140 737 131 753 138 b 792 132 779 140 789 141 b 778 115 795 122 783 120 b 586 -6 714 75 651 35 b 557 -24 576 -13 567 -19 b 726 -147 613 -66 670 -109 b 768 -207 744 -161 765 -173 z',\n        },\n        noteheadXWhole: {\n            xMin: 0,\n            xMax: 506,\n            yMin: -143,\n            yMax: 144,\n            ha: 287,\n            o: 'm 53 -206 b 219 -163 117 -207 170 -196 b 314 -102 249 -141 282 -122 b 377 -63 334 -89 356 -76 b 514 -161 422 -96 468 -128 b 576 -196 534 -174 552 -196 b 589 -193 580 -196 585 -196 b 688 -174 625 -194 657 -181 b 711 -158 698 -171 711 -173 b 696 -143 711 -151 701 -147 b 503 -9 632 -98 567 -52 l 485 4 b 704 145 559 49 634 95 b 729 164 711 150 729 151 l 729 168 b 696 196 726 183 710 193 b 621 207 671 202 645 207 b 528 177 589 207 557 200 b 373 76 480 140 426 108 b 246 164 330 104 287 132 b 122 206 207 193 167 203 b 66 192 102 207 72 207 b 99 147 58 173 85 158 b 274 14 157 102 215 58 b 16 -164 184 -42 96 -98 b 0 -179 12 -168 0 -170 b 1 -183 0 -180 0 -183 b 26 -204 6 -193 12 -204 b 53 -206 37 -206 49 -206 z m 611 -177 b 376 -9 530 -118 452 -63 l 164 -143 b 104 -164 147 -154 130 -164 b 82 -161 96 -164 89 -164 b 230 -65 137 -125 183 -95 l 347 12 b 327 26 341 16 334 22 l 196 121 b 163 147 184 128 173 137 b 140 173 154 154 140 163 b 143 180 140 176 141 177 b 179 166 154 194 167 174 l 372 27 l 566 153 b 613 171 580 161 596 170 b 635 160 624 171 635 174 b 621 147 635 153 626 150 l 429 24 b 400 6 419 19 409 13 b 569 -117 456 -35 513 -75 b 611 -177 588 -130 608 -143 z',\n        },\n        noteheadXHalf: {\n            xMin: 0,\n            xMax: 421,\n            yMin: -146,\n            yMax: 151,\n            ha: 297,\n            o: 'm 490 -209 b 539 -207 505 -207 521 -207 b 606 -209 560 -207 583 -209 b 598 -196 602 -203 600 -199 l 406 -19 l 540 130 b 547 144 546 135 547 140 b 536 156 547 148 543 153 b 488 192 518 166 503 176 b 416 217 471 209 444 217 b 323 180 380 217 344 204 l 264 115 b 239 138 256 122 248 131 b 33 197 180 196 108 200 b 3 186 23 197 6 193 b 19 154 -1 174 10 163 b 171 12 69 107 120 59 b 19 -157 120 -45 69 -101 b 0 -177 14 -163 0 -166 b 1 -181 0 -179 0 -180 b 39 -203 9 -197 22 -203 l 186 -203 b 197 -202 190 -202 193 -200 l 213 -202 b 262 -180 228 -202 246 -199 l 314 -122 b 490 -209 363 -170 412 -216 z m 435 -148 b 291 -30 379 -112 337 -69 l 213 -118 b 190 -137 207 -125 202 -137 b 145 -111 173 -130 154 -127 b 160 -79 137 -98 151 -88 b 238 16 184 -48 212 -16 b 141 99 204 43 173 72 l 124 117 b 115 132 121 121 115 127 b 118 137 115 134 117 137 b 141 132 127 147 135 138 l 253 36 b 347 150 285 75 315 112 b 370 164 354 160 363 163 b 403 145 382 164 393 156 b 416 127 412 140 416 132 b 405 102 416 118 412 111 l 307 -10 b 413 -105 343 -42 379 -73 b 435 -148 425 -115 436 -125 z',\n        },\n        noteheadXBlack: {\n            xMin: 0,\n            xMax: 289,\n            yMin: -156,\n            yMax: 157,\n            ha: 313,\n            o: 'm 23 -225 b 69 -204 40 -223 56 -219 b 137 -131 92 -180 115 -157 l 209 -50 b 377 -197 264 -101 321 -148 b 403 -210 384 -203 393 -210 l 408 -210 b 416 -192 416 -207 416 -199 l 416 -186 b 403 -148 416 -171 413 -158 b 344 -81 384 -125 367 -101 b 252 -1 312 -55 282 -29 b 377 157 297 49 340 101 b 402 202 387 170 402 187 b 395 217 402 207 400 213 b 376 226 389 223 382 226 b 334 192 360 226 346 204 b 206 42 289 143 248 94 b 96 161 167 81 131 120 b 60 193 86 174 76 189 b 33 206 52 196 42 206 b 22 199 29 206 26 204 b 10 173 14 190 10 181 b 22 147 10 166 14 157 b 148 7 62 98 104 52 b 164 -7 154 1 158 -3 b 10 -189 111 -66 55 -122 b 0 -212 6 -197 0 -203 b 1 -217 0 -213 0 -216 b 23 -225 4 -226 14 -222 z',\n        },\n        noteheadCircleXDoubleWhole: {\n            xMin: 0,\n            xMax: 437,\n            yMin: -220,\n            yMax: 219,\n            ha: 439,\n            o: 'm 10 -304 b 40 -206 43 -275 37 -239 b 55 168 48 -81 50 45 b 53 269 56 202 55 236 b 33 315 52 287 46 314 b 3 269 9 317 4 291 b 0 239 1 259 0 249 l 0 -196 b 10 -304 1 -232 7 -268 z m 592 -317 b 621 -220 619 -287 621 -253 b 622 -121 622 -187 622 -154 b 625 -20 622 -88 622 -55 b 629 101 628 20 629 60 b 628 220 629 141 628 181 b 618 253 628 232 625 243 b 608 275 613 259 616 274 b 602 272 606 275 603 275 b 575 249 590 269 575 266 l 575 246 b 573 222 575 239 573 230 l 573 -50 b 592 -317 575 -137 570 -225 z m 79 -285 b 114 -6 96 -261 109 -131 b 117 -63 114 -24 114 -45 b 249 -242 124 -151 166 -212 b 324 -256 275 -252 300 -256 b 504 -137 406 -256 478 -209 b 505 -265 504 -180 505 -222 b 513 -282 505 -269 510 -275 b 533 -248 526 -272 528 -261 b 540 -174 539 -223 540 -199 l 540 -127 b 553 207 546 -16 549 95 b 543 232 553 216 554 232 b 518 207 530 233 518 222 b 511 118 520 177 510 148 l 511 92 b 330 216 488 174 420 223 b 301 215 320 216 311 216 b 122 65 202 204 151 163 b 114 9 117 46 114 27 b 115 75 114 32 115 53 b 101 248 115 157 109 228 b 76 206 78 242 76 225 l 76 91 b 75 -26 76 52 76 13 b 69 -189 72 -81 66 -134 b 79 -285 71 -219 76 -249 z m 317 4 b 219 109 285 40 252 75 l 209 120 b 331 153 248 141 289 151 b 420 137 360 153 390 147 b 446 120 435 131 442 127 l 436 108 l 328 -7 z m 215 -131 b 216 -101 215 -122 215 -114 b 219 -45 217 -82 219 -63 b 197 94 219 3 213 49 l 197 95 b 199 94 199 95 199 94 l 310 -27 b 233 -108 285 -55 259 -81 z m 442 -141 b 432 -122 441 -134 436 -128 l 344 -26 l 426 58 l 445 81 b 444 75 445 78 444 76 b 428 -13 433 46 428 16 b 446 -104 428 -45 433 -75 b 452 -122 449 -111 452 -117 b 442 -141 452 -131 448 -137 z m 323 -190 b 272 -180 305 -187 288 -184 b 217 -158 239 -173 225 -168 l 327 -45 b 330 -48 328 -46 328 -48 b 432 -150 363 -82 393 -121 b 323 -190 400 -174 364 -189 z',\n        },\n        noteheadCircleXWhole: {\n            xMin: 0,\n            xMax: 323,\n            yMin: -190,\n            yMax: 184,\n            ha: 374,\n            o: 'm 156 -258 b 240 -274 184 -268 213 -274 b 455 -101 347 -274 441 -202 b 465 19 462 -60 465 -22 b 464 71 465 36 465 52 b 246 265 455 194 370 274 b 216 264 236 265 226 264 b 12 94 102 251 45 203 b 0 13 3 66 1 40 b 4 -55 0 -10 3 -32 b 156 -258 14 -154 60 -222 z m 245 10 b 233 23 242 14 238 19 b 121 144 196 65 158 104 l 109 154 b 249 192 156 179 202 192 b 351 174 284 192 317 186 b 380 154 366 168 376 163 b 379 153 380 154 380 153 b 369 141 376 148 372 145 b 245 10 327 98 287 53 z m 115 -131 b 118 -96 117 -121 117 -111 b 121 -27 120 -73 121 -50 b 98 124 121 24 115 75 b 96 127 96 125 98 125 b 99 125 98 127 98 125 b 225 -12 140 79 181 33 l 138 -105 b 115 -131 131 -114 122 -121 z m 376 -143 b 363 -121 374 -134 369 -128 b 265 -12 331 -85 298 -48 l 357 85 b 379 111 364 94 372 101 b 377 102 379 108 377 105 b 359 4 364 71 359 37 b 382 -99 359 -32 366 -66 b 387 -121 384 -108 386 -115 b 376 -143 387 -130 382 -135 z m 239 -197 b 181 -187 220 -194 200 -192 b 121 -161 145 -177 128 -173 b 243 -33 161 -118 203 -75 l 248 -36 b 364 -153 285 -75 320 -118 b 239 -197 327 -180 287 -197 z',\n        },\n        noteheadCircleXHalf: {\n            xMin: 0,\n            xMax: 309,\n            yMin: -179,\n            yMax: 179,\n            ha: 358,\n            o: 'm 232 -258 b 435 -94 328 -258 412 -196 b 445 6 444 -60 445 -27 b 444 69 445 27 445 48 b 258 258 439 170 374 258 l 230 258 l 207 256 b 14 107 111 248 45 202 b 0 12 4 75 0 43 b 12 -82 0 -20 4 -50 b 144 -242 27 -160 69 -212 b 232 -258 174 -252 203 -258 z m 192 60 b 115 141 166 88 141 115 l 108 150 b 226 189 141 173 186 189 b 253 186 236 189 245 187 b 305 180 271 183 288 183 b 192 60 268 140 229 101 z m 56 -78 b 45 6 43 -56 45 -23 b 65 84 49 39 50 45 b 85 121 72 96 78 107 b 95 124 88 124 92 127 b 171 39 120 95 145 68 z m 360 -132 b 348 -112 359 -124 353 -118 l 300 -58 l 387 37 b 410 63 397 48 405 56 b 413 26 412 52 413 40 b 360 -132 413 -42 393 -95 z m 232 -183 b 184 -177 217 -183 202 -181 l 281 -78 b 348 -143 301 -101 323 -122 b 232 -183 318 -168 279 -183 z',\n        },\n        noteheadCircleX: {\n            xMin: 0,\n            xMax: 344,\n            yMin: -179,\n            yMax: 175,\n            ha: 354,\n            o: 'm 99 -210 b 236 -258 137 -242 186 -258 b 418 -183 305 -258 374 -230 b 495 33 475 -120 495 -48 b 494 66 495 45 494 55 b 302 252 487 183 405 256 b 181 243 262 249 222 248 b 46 171 128 236 79 219 b 0 19 14 127 0 73 b 99 -210 0 -68 35 -156 z m 245 42 l 124 156 b 200 176 145 166 170 173 b 337 183 245 181 291 184 b 377 176 351 183 364 180 b 245 42 333 131 288 86 z m 392 -99 l 285 3 l 400 121 b 418 154 409 131 418 140 b 465 50 448 130 465 94 b 405 -112 462 -17 439 -73 z m 89 -120 b 48 0 56 -82 48 -42 b 89 112 48 35 59 76 b 109 101 96 111 102 108 l 210 7 l 187 -17 b 89 -120 151 -53 125 -82 z m 176 -183 b 127 -163 158 -179 141 -171 l 252 -32 l 372 -144 b 233 -189 334 -173 285 -189 b 176 -183 215 -189 196 -187 z',\n        },\n        noteheadCircledDoubleWhole: {\n            xMin: 0,\n            xMax: 672,\n            yMin: -291,\n            yMax: 291,\n            ha: 582,\n            o: 'm 27 -419 b 43 -369 37 -403 43 -387 b 49 -82 45 -272 49 -177 b 50 370 50 69 50 219 b 30 419 50 389 50 419 b 7 369 7 419 7 389 b 0 -284 4 151 1 -66 b 16 -418 0 -328 10 -373 z m 945 -374 b 968 -282 963 -343 968 -312 b 966 -245 968 -269 968 -258 b 958 -45 959 -179 962 -111 b 948 262 949 56 952 160 b 936 377 946 301 946 340 b 922 399 933 386 933 399 l 919 397 b 897 374 909 396 899 389 b 894 308 897 353 893 331 b 904 120 899 246 903 183 b 913 -111 907 43 909 -35 b 927 -297 916 -173 919 -235 b 945 -374 930 -320 927 -347 z m 95 -347 b 120 -292 115 -325 117 -310 b 124 -223 122 -269 124 -246 b 122 -141 124 -196 122 -168 b 121 -85 121 -122 121 -104 b 462 -297 170 -209 300 -297 b 727 -219 543 -294 639 -271 b 828 -118 773 -190 808 -157 b 842 -268 831 -168 834 -219 b 851 -288 844 -275 840 -287 b 865 -272 861 -289 863 -279 b 873 -225 871 -256 873 -240 b 873 -171 873 -207 871 -190 b 858 196 868 -48 863 75 b 848 295 857 229 854 262 b 840 315 848 301 850 315 l 837 315 b 816 295 827 314 816 307 b 809 216 815 268 808 243 b 815 102 812 179 814 140 b 672 295 780 176 733 240 b 500 370 621 340 566 370 b 436 361 480 370 459 367 b 120 95 288 321 183 233 l 120 256 b 115 287 120 266 118 276 b 104 305 112 292 115 305 l 101 305 b 82 284 91 304 82 297 b 76 216 81 262 76 239 b 84 -253 78 59 79 -96 b 95 -347 84 -282 89 -311 z m 780 -33 b 779 -24 780 -30 779 -27 b 704 92 766 22 743 62 b 544 173 655 128 599 147 b 400 206 497 194 448 204 b 307 193 369 206 338 202 b 202 118 264 181 226 153 b 235 168 212 135 222 151 b 505 337 302 262 396 312 b 523 338 511 337 517 338 b 611 288 559 338 586 312 b 763 62 678 225 733 151 b 780 -33 776 26 782 -4 z m 435 -88 b 337 -23 387 -88 354 -65 b 333 6 334 -14 333 -6 b 366 86 333 35 344 66 b 456 122 390 111 423 121 b 602 27 517 122 582 88 b 606 1 605 19 606 10 b 575 -49 606 -20 596 -36 b 435 -88 530 -76 481 -82 z m 441 -269 b 194 -96 327 -262 249 -194 b 167 1 176 -62 167 -30 b 177 59 167 22 171 42 b 174 39 176 52 174 46 b 266 -104 174 -27 210 -73 b 511 -151 346 -148 435 -144 l 552 -151 b 740 -104 616 -145 683 -141 b 776 -66 756 -94 769 -81 b 700 -174 766 -105 740 -140 b 441 -269 632 -232 533 -268 z',\n        },\n        noteheadCircledWhole: {\n            xMin: -50,\n            xMax: 472,\n            yMin: -231,\n            yMax: 232,\n            ha: 463,\n            o: 'm 289 -333 b 553 -255 370 -330 465 -307 b 680 -62 635 -206 680 -138 b 662 22 680 -36 674 -7 b 500 259 626 112 573 193 b 327 334 448 304 393 334 b 264 325 307 334 287 331 b -59 49 111 284 4 193 b -72 -19 -68 26 -72 4 b 289 -333 -72 -192 84 -334 z m 608 -69 b 605 -60 606 -66 606 -63 b 530 56 592 -14 570 26 b 372 137 482 92 425 111 b 228 170 324 158 275 168 b 134 157 196 170 166 166 b 29 82 91 145 53 117 b 60 132 37 99 49 115 b 333 301 128 226 223 276 b 350 302 338 301 344 302 b 438 252 386 302 413 276 b 590 26 505 189 560 115 b 608 -69 603 -10 608 -40 z m 262 -124 b 164 -59 215 -124 180 -101 b 160 -32 161 -50 160 -42 b 193 50 160 -3 171 30 b 284 86 217 75 251 85 b 429 -9 344 86 409 52 b 433 -36 432 -17 433 -26 b 402 -85 433 -56 423 -72 b 262 -124 357 -112 307 -118 z m 268 -305 b 22 -132 154 -298 76 -230 b -6 -33 3 -98 -6 -65 b 3 23 -6 -14 -3 6 b 1 3 1 16 1 10 b 94 -140 1 -63 37 -109 b 338 -187 173 -184 261 -180 l 379 -187 b 566 -140 444 -181 510 -177 b 602 -102 582 -130 595 -117 b 526 -210 592 -141 567 -176 b 268 -305 459 -268 360 -304 z',\n        },\n        noteheadCircledHalf: {\n            xMin: -50,\n            xMax: 393,\n            yMin: -175,\n            yMax: 175,\n            ha: 350,\n            o: 'm 540 39 b 408 187 503 94 464 148 b 259 252 356 223 301 252 b 35 192 160 252 95 229 b -68 50 -17 160 -53 112 b -72 13 -71 37 -72 24 b 69 -204 -72 -79 -1 -161 b 246 -252 125 -238 186 -252 b 500 -164 336 -252 426 -219 b 566 -42 543 -132 566 -88 b 540 39 566 -14 557 14 z m 9 -42 b 12 -68 10 -50 10 -59 b -7 6 3 -46 -4 -22 b 131 189 1 98 55 153 b 243 220 167 206 204 215 b 261 222 249 222 255 222 b 377 161 308 222 341 189 b 435 89 402 141 420 117 b 431 92 433 89 432 91 b 346 120 402 102 372 107 b 253 143 314 135 282 143 b 85 79 193 143 138 115 b 9 -42 45 52 10 13 z m 356 39 b 343 1 356 24 351 12 b 206 -111 304 -46 259 -84 b 181 -118 196 -115 189 -118 b 156 -71 163 -118 154 -102 b 238 35 164 -22 199 9 b 324 66 264 52 294 59 b 356 39 348 71 356 62 z m 488 -78 b 392 -176 471 -125 433 -154 b 246 -225 346 -200 297 -217 b 230 -226 240 -226 235 -226 b 157 -204 203 -226 180 -215 b 78 -154 128 -190 101 -174 b 232 -184 128 -171 180 -184 b 344 -161 269 -184 307 -179 b 491 -39 405 -135 455 -94 b 500 -23 495 -33 497 -29 b 488 -78 500 -40 494 -59 z',\n        },\n        noteheadCircledBlack: {\n            xMin: -70,\n            xMax: 326,\n            yMin: -168,\n            yMax: 192,\n            ha: 360,\n            o: 'm 176 -239 b 190 -242 180 -240 186 -240 b 262 -232 213 -242 238 -235 b 469 -19 384 -225 469 -131 b 467 22 469 -6 468 9 b 383 194 455 86 436 151 b 183 276 315 249 251 275 b 32 236 134 276 85 264 b -94 88 -30 207 -75 160 b -101 30 -98 69 -101 49 b 176 -239 -101 -107 9 -251 z m 177 -212 b -30 -27 81 -213 -13 -131 b -33 17 -33 -13 -33 3 b 127 226 -33 111 14 187 b 194 239 151 233 173 238 b 301 203 232 239 266 226 b 364 134 330 184 350 160 b 233 181 341 160 279 180 b 192 171 216 181 202 179 b 13 1 117 131 46 86 b 3 -48 6 -17 3 -33 b 60 -115 3 -79 20 -101 b 203 -135 105 -131 151 -138 b 229 -138 212 -137 220 -137 b 295 -122 251 -138 274 -135 b 400 -33 337 -99 373 -71 b 228 -206 393 -125 330 -192 b 177 -212 209 -209 192 -213 z',\n        },\n        noteheadDoubleWholeSquare: {\n            xMin: 0,\n            xMax: 474,\n            yMin: -209,\n            yMax: 211,\n            ha: 420,\n            o: 'm 648 -301 b 668 -287 658 -304 665 -295 b 683 -209 678 -262 683 -235 b 677 258 681 -55 678 102 b 672 284 677 266 677 276 b 661 304 670 291 672 304 l 658 304 b 635 279 647 301 635 297 b 629 240 635 266 629 252 l 629 236 b 631 225 629 232 631 228 b 583 194 631 197 611 194 l 528 194 b 125 207 393 194 259 202 b 89 207 114 209 101 206 b 63 210 79 207 71 207 b 52 229 55 213 52 220 b 55 258 52 238 55 248 b 53 266 55 261 55 264 b 36 298 48 276 53 298 l 35 298 b 4 264 14 298 7 284 b 0 187 0 238 0 213 b 4 50 0 143 3 96 b 6 -10 6 30 6 10 b 4 -130 6 -50 4 -91 b 12 -268 4 -176 6 -222 b 19 -287 13 -275 10 -284 b 35 -275 26 -288 30 -281 b 52 -220 50 -261 48 -239 b 75 -199 55 -206 58 -199 l 141 -197 l 274 -197 l 634 -197 b 639 -281 635 -219 636 -251 b 648 -301 641 -288 638 -300 z m 72 -66 b 55 -56 59 -69 55 -65 l 55 -50 b 53 53 55 -16 55 20 b 69 73 53 69 60 72 l 79 72 b 330 65 163 66 246 63 l 592 65 b 634 81 606 65 618 71 b 635 -30 634 39 635 6 b 605 -58 635 -49 628 -58 b 451 -60 553 -60 503 -60 b 219 -59 373 -60 295 -59 l 166 -59 b 72 -66 134 -59 104 -60 z',\n        },\n        noteheadSquareWhite: {\n            xMin: 0,\n            xMax: 350,\n            yMin: -131,\n            yMax: 131,\n            ha: 262,\n            o: 'm 468 -189 b 485 -187 474 -189 480 -189 b 500 -176 495 -187 500 -183 b 498 -168 500 -174 498 -171 b 497 -166 498 -167 497 -167 l 498 -164 b 504 -154 503 -163 504 -158 b 503 -138 504 -150 503 -144 l 503 -135 l 503 -94 b 492 66 500 -45 494 10 b 488 135 492 89 488 112 b 484 150 488 141 485 145 b 482 154 482 151 482 153 b 429 189 472 177 456 189 b 53 184 304 186 179 186 l 39 184 b 33 181 36 183 35 183 b 12 160 20 181 12 177 b 0 -109 9 71 4 -19 b 19 -137 0 -125 7 -134 b 23 -151 19 -141 20 -145 b 85 -187 37 -173 55 -187 b 468 -189 212 -187 340 -187 z m 246 -125 l 63 -125 b 66 -111 65 -122 66 -117 b 73 72 69 -50 71 10 l 73 130 b 88 128 78 128 82 128 b 148 130 108 130 128 130 b 271 128 190 130 230 128 l 271 130 l 420 130 b 428 20 425 92 425 56 l 436 -127 l 246 -127 z',\n        },\n        noteheadSquareBlack: {\n            xMin: 0,\n            xMax: 342,\n            yMin: -130,\n            yMax: 132,\n            ha: 262,\n            o: 'm 217 190 b 439 186 304 190 372 190 b 467 180 448 184 458 183 b 492 145 484 176 492 167 b 490 -124 490 56 490 -33 b 488 -141 490 -130 488 -135 b 456 -170 488 -163 478 -168 b 118 -183 344 -176 230 -181 b 29 -184 89 -183 60 -192 b 0 -148 4 -180 0 -168 b 1 29 1 -89 1 -30 l 1 156 b 36 190 3 187 4 190 b 217 190 102 192 168 190 z',\n        },\n        noteheadTriangleDownDoubleWhole: {\n            xMin: 0,\n            xMax: 510,\n            yMin: -213,\n            yMax: 213,\n            ha: 426,\n            o: 'm 16 -307 b 30 -289 26 -307 29 -297 b 43 -236 36 -272 42 -253 l 65 219 b 59 285 62 240 69 264 b 46 307 55 294 58 307 l 43 307 b 19 279 30 304 20 295 b 13 184 17 248 14 216 b 1 -125 9 81 7 -23 b 0 -163 0 -138 0 -150 b 6 -287 0 -204 4 -245 b 16 -307 6 -295 7 -305 z m 707 -294 b 734 -213 733 -271 734 -242 b 729 245 733 -60 730 92 b 719 285 729 259 724 272 b 707 298 716 291 714 298 l 703 298 b 685 284 696 297 687 292 b 683 253 683 274 683 264 b 691 -181 685 108 685 -36 b 707 -294 693 -217 690 -256 z m 108 -238 b 125 -203 125 -238 121 -216 b 127 -190 127 -199 127 -194 b 120 -138 127 -173 120 -156 l 120 -66 b 114 167 120 12 118 89 l 118 161 b 314 -153 184 58 248 -48 b 350 -184 327 -173 338 -184 b 387 -154 361 -184 374 -174 b 567 108 449 -68 508 20 b 626 193 588 137 608 164 b 615 -132 622 85 619 -24 l 615 -166 b 619 -207 615 -180 615 -194 b 638 -226 622 -217 629 -225 b 651 -209 648 -226 649 -216 b 658 -177 655 -199 658 -187 l 658 -171 b 667 49 655 -98 667 -23 b 665 88 667 62 667 75 b 665 220 665 135 667 179 b 641 265 664 238 660 265 b 626 243 629 265 626 255 b 628 222 626 236 628 228 b 612 225 624 223 619 225 b 384 223 537 223 461 223 l 384 225 l 170 225 b 131 215 157 225 144 222 b 112 200 122 210 117 206 b 88 266 111 225 108 249 b 75 239 76 259 75 249 b 73 147 75 207 73 179 b 82 -189 73 35 79 -78 b 84 -203 82 -194 82 -199 b 108 -238 86 -219 91 -238 z m 361 -79 b 295 78 336 -26 314 26 b 284 151 287 101 284 125 b 310 177 284 171 291 177 b 419 176 346 176 383 174 l 423 176 b 445 153 441 176 445 168 l 445 147 b 361 -79 442 65 415 -10 z',\n        },\n        noteheadTriangleDownWhole: {\n            xMin: 0,\n            xMax: 366,\n            yMin: -145,\n            yMax: 138,\n            ha: 283,\n            o: 'm 242 -209 b 279 -180 253 -209 266 -200 b 459 84 341 -92 400 -4 b 520 170 480 112 501 141 b 527 189 524 177 527 183 b 504 199 527 196 520 199 l 55 199 b 23 190 45 199 33 196 b 0 161 9 181 0 173 b 10 135 0 154 3 145 b 206 -177 76 32 140 -73 b 242 -209 219 -199 230 -209 z m 253 -105 b 187 52 228 -52 206 0 b 176 127 179 76 176 101 b 197 151 176 144 181 151 l 202 151 b 256 150 220 151 238 150 b 311 151 275 150 294 151 b 337 128 331 151 337 144 l 337 122 b 253 -105 334 39 307 -35 z',\n        },\n        noteheadTriangleDownHalf: {\n            xMin: 0,\n            xMax: 341,\n            yMin: -159,\n            yMax: 159,\n            ha: 318,\n            o: 'm 266 -229 b 282 -215 274 -229 278 -225 b 487 153 350 -92 418 30 b 491 170 490 158 491 164 b 480 189 491 177 487 183 b 425 215 464 202 448 213 b 33 226 297 217 168 222 b 13 229 29 223 22 229 b 1 222 9 229 4 228 b 14 184 -4 207 7 196 b 210 -176 81 65 145 -56 b 253 -225 222 -194 230 -213 b 266 -229 259 -226 264 -228 z m 134 22 b 147 43 138 27 141 37 b 206 163 174 79 179 127 b 213 170 209 166 212 167 l 340 167 b 193 -75 287 89 251 1 b 190 -82 192 -76 190 -79 z',\n        },\n        noteheadTriangleDownBlack: {\n            xMin: 0,\n            xMax: 346,\n            yMin: -149,\n            yMax: 149,\n            ha: 298,\n            o: 'm 229 -215 b 259 -202 238 -215 248 -210 b 284 -173 269 -194 278 -184 l 482 173 b 498 209 488 184 498 194 b 481 215 492 215 487 215 b 63 213 343 215 203 213 b 12 197 45 213 29 206 b 0 180 4 193 0 187 b 3 168 0 177 1 173 b 13 150 6 163 9 156 l 196 -189 b 229 -215 206 -206 216 -215 z',\n        },\n        noteheadTriangleUpDoubleWhole: {\n            xMin: 0,\n            xMax: 510,\n            yMin: -213,\n            yMax: 213,\n            ha: 426,\n            o: 'm 16 -307 b 30 -289 26 -307 29 -297 b 43 -236 36 -272 42 -253 l 65 219 b 59 285 62 240 69 264 b 46 307 55 294 58 307 l 43 307 b 19 279 30 304 20 295 b 13 184 17 248 14 216 b 1 -125 9 81 7 -23 b 0 -163 0 -138 0 -150 b 6 -287 0 -204 4 -245 b 16 -307 6 -295 7 -305 z m 707 -298 b 734 -217 733 -275 734 -246 b 729 240 733 -65 730 88 b 719 281 729 255 724 268 b 707 294 716 287 714 294 l 703 294 b 685 279 696 292 687 288 b 683 249 683 269 683 259 b 691 -186 685 104 685 -40 b 707 -298 693 -222 690 -261 z m 88 -266 b 112 -200 108 -249 111 -225 b 131 -215 117 -206 122 -210 b 170 -225 144 -222 157 -225 l 384 -225 l 384 -223 b 612 -225 461 -223 537 -223 b 628 -222 619 -225 624 -223 b 641 -265 628 -238 622 -265 b 665 -220 660 -265 664 -238 b 665 -88 667 -179 665 -135 b 667 -49 667 -75 667 -62 b 658 171 667 23 655 98 b 651 209 660 184 655 197 b 638 226 649 216 648 226 b 619 207 629 225 622 217 b 615 166 615 194 615 180 l 615 132 b 626 -193 619 24 622 -85 b 567 -108 608 -164 588 -137 b 387 154 508 -20 449 68 b 350 184 374 174 361 184 b 314 153 338 184 327 173 b 118 -161 248 48 184 -58 l 114 -167 b 120 66 118 -89 120 -12 l 120 138 b 127 190 120 156 127 173 b 125 203 127 194 127 199 b 108 238 121 216 125 238 b 84 203 91 238 86 219 b 82 189 82 199 82 194 b 73 -147 79 78 73 -35 b 75 -239 73 -179 75 -207 b 88 -266 75 -249 76 -259 z m 310 -177 b 284 -151 291 -177 284 -171 b 295 -78 284 -125 287 -101 b 361 79 314 -26 336 26 b 445 -147 415 10 442 -65 b 423 -176 446 -166 442 -176 l 419 -176 b 310 -177 383 -174 346 -176 z',\n        },\n        noteheadTriangleUpWhole: {\n            xMin: 0,\n            xMax: 366,\n            yMin: -145,\n            yMax: 138,\n            ha: 283,\n            o: 'm 504 -209 b 527 -199 520 -209 527 -206 b 520 -180 527 -193 524 -187 b 459 -94 501 -151 480 -122 b 279 170 400 -6 341 82 b 242 199 266 190 253 199 b 206 167 230 199 219 189 b 10 -145 140 63 76 -42 b 0 -171 3 -156 0 -164 b 23 -200 0 -183 9 -192 b 55 -209 33 -206 45 -209 z m 202 -161 b 176 -137 183 -163 176 -156 b 187 -62 176 -111 179 -86 b 253 95 206 -10 228 42 b 337 -132 307 24 334 -49 b 311 -161 338 -153 334 -161 b 256 -160 294 -161 275 -160 b 202 -161 238 -160 220 -161 z',\n        },\n        noteheadTriangleUpHalf: {\n            xMin: 0,\n            xMax: 341,\n            yMin: -159,\n            yMax: 159,\n            ha: 318,\n            o: 'm 458 -226 b 478 -229 462 -223 469 -229 b 490 -222 482 -229 487 -228 b 477 -184 495 -207 484 -196 b 281 176 410 -65 346 56 b 238 225 269 194 261 213 b 225 229 232 226 228 228 b 209 215 217 229 213 225 b 4 -153 141 92 73 -30 b 0 -170 1 -158 0 -164 b 12 -189 0 -177 4 -183 b 66 -215 27 -202 43 -213 b 458 -226 194 -217 323 -222 z m 151 -167 b 298 75 204 -89 240 -1 b 301 82 300 76 301 79 l 357 -22 b 344 -43 353 -27 350 -37 b 285 -163 317 -79 312 -127 b 278 -170 282 -166 279 -167 z',\n        },\n        noteheadTriangleUpBlack: {\n            xMin: 0,\n            xMax: 346,\n            yMin: -149,\n            yMax: 149,\n            ha: 298,\n            o: 'm 481 -215 b 498 -209 487 -215 492 -215 b 482 -173 498 -194 488 -184 l 284 173 b 259 202 278 184 269 194 b 229 215 248 210 238 215 b 196 189 216 215 206 206 l 13 -150 b 3 -168 9 -156 6 -163 b 0 -180 1 -173 0 -177 b 12 -197 0 -187 4 -193 b 63 -213 29 -206 45 -213 b 481 -215 203 -213 343 -215 z',\n        },\n        noteheadSlashedDoubleWhole1: {\n            xMin: 0,\n            xMax: 697,\n            yMin: -290,\n            yMax: 290,\n            ha: 580,\n            o: 'm 20 -418 b 42 -376 40 -418 37 -392 b 43 -356 45 -370 43 -363 l 43 -348 b 50 -197 43 -298 49 -248 b 78 317 58 -24 69 147 b 72 387 75 343 82 366 b 52 418 68 397 69 418 l 49 416 b 24 380 33 413 24 399 b 19 235 23 333 20 284 b 7 -82 14 130 10 24 b 0 -264 6 -143 0 -203 b 10 -382 0 -302 1 -343 b 20 -418 13 -393 6 -418 z m 976 -344 b 991 -331 985 -346 988 -337 b 1004 -271 999 -312 1004 -292 l 1004 -194 b 996 184 1004 -68 1001 59 b 996 281 996 216 998 249 b 984 379 995 314 991 347 b 971 397 981 392 976 396 b 952 386 965 397 959 392 b 943 361 943 380 945 370 b 937 288 939 337 937 312 b 945 158 937 245 942 203 b 959 -248 950 23 953 -112 b 966 -325 960 -274 963 -300 b 976 -344 966 -334 968 -344 z m 102 -331 b 124 -272 120 -314 122 -294 b 135 -278 127 -276 131 -278 l 141 -278 b 320 -199 206 -262 272 -252 b 348 -171 328 -189 338 -180 b 482 -199 392 -190 436 -199 b 704 -173 576 -199 641 -187 b 847 -82 760 -158 809 -130 l 855 -69 l 855 -73 b 863 -229 857 -125 860 -177 b 876 -255 863 -239 863 -255 b 893 -233 886 -255 888 -242 b 900 -189 899 -219 900 -203 l 900 66 b 900 192 899 108 900 150 b 893 301 900 228 899 265 b 877 325 890 310 893 325 l 876 325 b 855 301 865 324 855 315 b 850 202 852 268 847 235 b 854 50 854 151 854 101 b 821 99 847 68 835 85 b 733 167 795 127 765 148 b 831 253 766 196 799 225 b 851 265 837 258 844 261 b 829 282 840 275 835 279 b 772 295 815 291 795 295 b 685 271 739 295 704 287 b 624 215 665 252 645 233 l 566 232 b 527 239 553 236 540 239 b 490 228 514 239 501 236 b 451 219 475 217 467 219 b 275 176 389 219 331 200 b 184 53 216 150 184 105 b 199 -14 184 32 189 10 b 262 -108 215 -52 236 -82 l 125 -230 b 134 225 130 -78 132 73 b 135 269 134 239 135 255 b 121 330 135 291 132 311 b 95 287 99 323 95 307 b 92 124 94 233 95 179 b 85 -143 88 36 85 -53 b 89 -300 85 -196 86 -248 b 102 -331 89 -311 89 -323 z m 367 -14 b 350 43 359 3 351 22 b 392 122 350 82 363 107 b 544 171 439 150 492 160 b 572 168 554 174 563 171 z m 564 -132 b 467 -105 528 -138 497 -121 b 442 -89 458 -101 449 -95 l 658 101 b 690 30 677 82 690 59 b 688 10 690 24 690 17 b 564 -132 678 -45 611 -127 z',\n        },\n        noteheadSlashedWhole1: {\n            xMin: -76,\n            xMax: 498,\n            yMin: -168,\n            yMax: 168,\n            ha: 336,\n            o: 'm -79 -242 b 55 -202 -32 -236 14 -228 l 145 -143 b 333 -171 203 -166 265 -171 b 429 -164 361 -174 395 -168 b 582 -130 481 -158 534 -154 b 657 -20 631 -105 657 -65 b 619 68 657 9 644 40 b 552 120 599 89 577 107 b 582 138 562 127 572 132 b 717 226 625 167 668 194 b 638 242 688 236 662 242 b 543 213 603 242 573 232 b 455 154 514 194 484 174 b 325 199 412 167 367 179 b 233 215 298 210 265 215 b 75 156 173 215 124 186 b 0 27 24 122 0 76 b 66 -98 0 -17 22 -63 b 72 -102 69 -99 71 -101 b -89 -209 17 -137 -36 -173 b -109 -225 -95 -213 -109 -216 b -108 -229 -109 -226 -108 -228 b -85 -242 -104 -239 -95 -242 z m 181 -29 b 167 14 171 -13 167 1 b 187 62 167 30 173 46 b 301 137 217 99 258 118 b 312 138 304 138 308 138 l 317 138 b 389 109 340 125 364 118 l 383 105 z m 337 -109 b 239 -82 301 -107 268 -99 l 468 65 b 482 24 477 53 482 40 b 480 4 482 19 481 12 b 337 -109 467 -56 399 -111 z',\n        },\n        noteheadSlashedHalf1: {\n            xMin: -79,\n            xMax: 471,\n            yMin: -184,\n            yMax: 184,\n            ha: 368,\n            o: 'm -112 -251 b -94 -265 -107 -261 -101 -264 b -52 -242 -79 -265 -63 -249 l 89 -148 b 212 -180 125 -170 167 -179 b 238 -177 220 -180 229 -179 l 262 -180 b 346 -171 289 -180 318 -176 b 576 -91 431 -166 507 -140 b 641 4 619 -60 641 -29 b 592 96 641 35 625 65 l 583 104 b 533 147 567 121 550 134 l 613 200 b 678 261 636 216 664 232 b 658 265 671 264 664 265 b 611 248 641 265 625 258 l 491 171 b 337 204 444 194 392 204 b 281 200 318 204 300 204 b 27 62 180 187 92 145 b -1 -19 9 37 -1 10 b 36 -107 -1 -50 12 -82 b 52 -121 42 -112 46 -117 l -72 -203 b -112 -251 -91 -216 -122 -233 z m 161 -49 b 158 -29 160 -42 158 -35 b 183 33 158 -7 167 16 b 395 137 239 95 311 122 b 420 125 405 134 413 130 z m 276 -128 b 261 -131 271 -130 266 -131 b 181 -86 233 -131 203 -114 l 454 94 l 468 72 b 481 36 477 60 481 49 b 469 1 481 26 477 14 b 276 -128 422 -66 354 -105 z',\n        },\n        noteheadSlashedBlack1: {\n            xMin: -110,\n            xMax: 452,\n            yMin: -190,\n            yMax: 190,\n            ha: 380,\n            o: 'm -131 -274 b -102 -262 -121 -272 -111 -266 b 7 -186 -65 -239 -29 -212 b 50 -157 22 -176 36 -166 b 105 -176 65 -166 84 -173 b 207 -183 140 -181 173 -183 b 239 -184 219 -184 229 -184 b 428 -91 327 -184 377 -150 b 487 43 461 -52 487 -7 b 482 76 487 53 485 65 b 459 128 478 95 469 112 b 507 161 475 138 491 150 l 651 262 b 622 274 641 271 632 274 b 605 271 616 274 611 272 b 514 233 573 262 541 252 l 422 167 b 317 203 392 190 354 203 b 271 196 301 203 285 200 b 168 157 236 186 200 173 b 6 -16 94 120 33 68 b -1 -62 1 -32 -1 -48 b 17 -125 -1 -86 4 -108 b -81 -196 -16 -148 -48 -173 b -145 -242 -102 -212 -128 -219 b -158 -256 -150 -246 -158 -251 b -157 -261 -158 -258 -157 -259 b -131 -274 -153 -269 -141 -274 z',\n        },\n        noteheadSlashedDoubleWhole2: {\n            xMin: 0,\n            xMax: 697,\n            yMin: -295,\n            yMax: 295,\n            ha: 590,\n            o: 'm 870 -338 b 891 -315 884 -341 887 -325 b 906 -183 907 -274 903 -228 b 914 186 912 -60 904 62 b 914 240 914 203 916 222 b 916 276 913 251 916 265 b 899 300 916 289 913 300 b 871 253 874 300 871 274 b 858 -168 871 111 858 -27 b 860 -235 858 -190 860 -213 l 736 -131 b 834 -20 799 -111 834 -69 b 789 85 834 13 819 49 b 683 160 760 118 723 140 b 383 216 589 209 487 215 b 330 213 364 217 347 216 b 228 300 295 242 261 271 b 86 347 184 337 138 348 b 58 343 76 347 63 350 l 58 360 b 35 425 58 384 53 423 b 6 382 9 425 6 403 l 6 131 b 0 -164 6 33 4 -66 b 24 -327 -1 -216 6 -271 b 50 -262 46 -305 50 -284 l 50 -154 b 52 -45 50 -118 50 -81 b 58 325 55 79 58 202 b 73 310 60 320 68 315 b 94 294 79 304 86 298 b 89 271 89 287 89 278 l 89 94 b 104 -194 101 -20 88 -108 b 118 -245 107 -213 104 -248 b 140 -190 140 -243 140 -212 l 140 -62 b 132 258 140 46 138 153 l 132 259 l 235 173 b 193 132 219 161 204 148 b 153 26 167 101 153 63 b 164 -35 153 7 157 -16 b 341 -170 196 -114 261 -158 b 433 -177 372 -174 403 -177 b 619 -157 497 -177 559 -170 l 706 -230 b 799 -276 736 -258 765 -276 b 818 -274 806 -276 812 -276 l 861 -274 b 863 -312 861 -287 863 -300 b 870 -338 864 -321 858 -337 z m 966 -425 b 986 -397 979 -425 982 -408 b 991 -373 989 -390 989 -382 b 995 -239 991 -328 995 -284 b 1004 334 1001 -49 1002 143 b 995 380 1005 350 1005 367 b 982 402 989 386 992 402 l 978 400 b 949 374 965 396 950 390 b 948 333 948 360 948 346 l 948 -37 b 949 -84 949 -52 949 -68 b 946 -248 949 -132 946 -189 b 953 -396 946 -297 948 -346 b 966 -425 955 -408 950 -425 z m 624 -36 b 416 140 554 22 485 81 b 482 156 439 150 461 154 b 625 81 537 156 588 124 b 647 27 639 63 647 46 b 624 -36 647 7 638 -14 z m 469 -117 b 320 14 386 -118 320 -60 b 343 81 320 37 327 60 l 547 -95 b 469 -117 521 -105 494 -111 z',\n        },\n        noteheadSlashedWhole2: {\n            xMin: -83,\n            xMax: 510,\n            yMin: -201,\n            yMax: 198,\n            ha: 399,\n            o: 'm 734 -289 b 696 -245 726 -266 710 -256 b 586 -164 660 -217 622 -192 l 589 -161 b 654 -50 631 -135 654 -94 b 616 40 654 -19 641 13 b 305 174 536 127 420 174 b 171 151 261 174 215 167 b 166 150 170 151 168 150 b 86 209 140 170 112 189 b -94 284 32 249 -22 289 l -108 285 b -120 274 -114 285 -120 284 b -104 251 -120 266 -112 258 b 71 124 -46 209 12 166 l 85 114 b 36 72 66 102 50 89 b 0 -30 12 40 0 4 b 122 -186 0 -96 45 -160 b 343 -222 194 -210 268 -222 b 514 -197 410 -220 467 -213 l 554 -228 b 734 -289 609 -268 668 -275 z m 477 -82 b 268 73 408 -30 338 22 l 301 91 b 336 101 314 96 324 101 b 370 88 347 101 359 96 b 459 9 405 66 436 43 b 481 -56 474 -13 481 -35 b 477 -82 481 -65 480 -73 z m 310 -161 b 216 -143 276 -161 246 -156 b 166 -72 181 -128 166 -105 b 168 -46 166 -65 167 -55 b 206 26 176 -16 189 7 b 436 -140 282 -29 360 -84 b 382 -158 420 -150 402 -157 b 310 -161 357 -161 333 -161 z',\n        },\n        noteheadSlashedHalf2: {\n            xMin: -73,\n            xMax: 454,\n            yMin: -188,\n            yMax: 188,\n            ha: 376,\n            o: 'm 654 -271 b 603 -202 649 -233 625 -217 b 481 -115 563 -173 523 -144 b 564 -60 510 -101 539 -82 b 615 40 596 -33 615 4 b 609 69 615 50 613 60 b 505 167 590 120 554 151 b 336 190 451 184 392 190 b 124 134 259 190 189 171 l -42 248 b -88 271 -56 256 -75 271 b -101 265 -94 271 -98 269 b -105 252 -104 259 -105 255 b -66 210 -105 235 -82 222 l 85 107 b 0 -24 42 73 0 35 b 183 -183 0 -118 75 -184 b 262 -176 206 -180 233 -177 b 438 -135 324 -171 383 -158 b 570 -228 482 -166 527 -197 b 654 -271 595 -243 621 -259 z m 393 -53 l 311 4 l 225 65 b 392 134 274 102 331 122 b 455 50 425 141 455 101 b 439 -3 455 35 451 14 b 393 -53 425 -22 409 -37 z m 287 -121 b 246 -130 272 -127 259 -130 b 171 -89 215 -130 189 -115 b 156 -40 161 -73 156 -58 b 186 29 156 -17 166 7 l 192 35 l 359 -82 b 287 -121 337 -98 312 -111 z',\n        },\n        noteheadSlashedBlack2: {\n            xMin: -84,\n            xMax: 405,\n            yMin: -189,\n            yMax: 189,\n            ha: 378,\n            o: 'm 557 -265 b 573 -272 562 -268 567 -272 b 583 -261 577 -272 580 -269 b 575 -242 580 -253 579 -248 b 524 -190 563 -220 544 -204 b 405 -99 485 -160 445 -130 b 497 50 449 -60 482 -9 b 500 72 498 58 500 65 b 478 122 500 91 492 107 b 331 186 438 167 387 186 b 120 131 258 186 186 167 l 107 124 b -52 242 53 163 1 203 b -89 265 -63 251 -76 259 b -107 272 -95 268 -101 272 b -117 266 -109 272 -114 271 b -121 251 -120 262 -121 256 b -114 235 -121 245 -120 239 b -60 186 -96 217 -81 199 b 63 95 -20 156 22 125 b -1 -35 26 66 -1 27 b 137 -183 -1 -130 46 -183 b 174 -180 148 -183 161 -181 l 245 -171 b 366 -128 289 -166 331 -150 l 426 -171 b 557 -265 469 -203 514 -233 z',\n        },\n        noteheadDiamondDoubleWhole: {\n            xMin: 0,\n            xMax: 429,\n            yMin: -221,\n            yMax: 221,\n            ha: 442,\n            o: 'm 22 -318 b 42 -294 33 -318 37 -302 b 46 -266 45 -285 45 -275 b 50 -219 49 -249 50 -233 b 48 -153 50 -197 49 -176 b 43 120 43 -62 43 29 l 43 253 b 37 298 43 269 45 284 b 26 318 35 305 35 318 l 24 318 b 1 295 13 317 3 308 b 0 268 0 285 0 276 l 0 -121 b 10 -291 0 -177 1 -235 b 22 -318 12 -301 10 -318 z m 593 -312 b 618 -256 611 -294 616 -276 l 618 -186 b 611 253 618 -40 612 108 b 605 276 611 261 608 268 b 589 295 600 284 600 297 b 567 272 577 294 569 285 l 567 251 b 575 -197 573 102 575 -48 b 593 -312 575 -233 579 -271 z m 99 -268 b 114 -256 107 -269 111 -262 b 127 -196 124 -238 125 -217 b 128 -144 128 -179 128 -161 b 122 -9 128 -99 125 -55 l 135 -19 b 344 -179 206 -71 276 -122 b 370 -190 354 -186 363 -190 b 395 -173 379 -190 386 -184 b 492 -33 426 -127 459 -79 b 491 -86 491 -50 491 -68 b 507 -251 491 -138 495 -193 b 534 -184 530 -228 533 -206 b 541 144 537 -75 539 35 b 530 204 541 164 539 186 b 520 220 528 210 528 220 b 500 203 511 219 503 213 b 498 192 498 200 498 194 l 498 176 b 494 7 497 120 497 63 l 490 12 l 287 176 b 258 190 279 181 274 190 b 212 153 239 186 225 168 l 127 40 b 121 32 124 37 122 35 b 118 114 120 59 118 86 b 102 249 117 158 122 206 b 75 219 85 246 79 236 b 72 187 72 209 72 197 b 76 117 72 164 75 141 b 85 -151 79 27 79 -62 b 91 -251 86 -184 91 -217 b 99 -268 91 -258 92 -266 z m 392 -128 b 374 -122 387 -134 380 -127 l 180 29 b 170 45 173 35 170 39 b 176 56 170 48 173 52 b 236 122 204 101 219 122 b 308 76 252 122 272 107 l 433 -26 b 449 -50 439 -32 449 -36 b 392 -128 432 -75 413 -102 z',\n        },\n        noteheadDiamondWhole: {\n            xMin: 0,\n            xMax: 271,\n            yMin: -132,\n            yMax: 132,\n            ha: 264,\n            o: 'm 230 -177 b 256 -190 240 -186 249 -190 b 281 -173 265 -190 272 -184 b 382 -29 314 -124 347 -76 b 390 -10 387 -22 390 -14 b 376 12 390 -3 386 4 b 173 177 308 66 240 121 b 144 190 166 183 160 190 b 98 153 127 186 112 170 b 13 40 69 115 42 76 b 0 13 4 29 0 20 b 22 -19 0 3 7 -9 b 230 -177 92 -69 163 -122 z m 279 -128 b 261 -122 274 -134 266 -127 l 66 30 b 56 45 59 35 56 39 b 62 56 56 48 59 52 b 122 122 91 101 105 122 b 194 76 138 122 158 107 l 320 -26 b 336 -50 325 -32 336 -35 b 279 -128 318 -75 300 -102 z',\n        },\n        noteheadDiamondHalf: {\n            xMin: 0,\n            xMax: 295,\n            yMin: -148,\n            yMax: 148,\n            ha: 296,\n            o: 'm 228 -207 b 245 -213 235 -210 240 -213 b 264 -203 252 -213 258 -210 b 415 -46 314 -150 364 -98 b 425 -27 420 -40 425 -35 b 416 -10 425 -22 422 -16 b 217 200 350 60 284 131 b 194 213 212 207 204 213 b 170 196 181 213 177 203 b 14 33 118 143 68 86 b 0 7 4 23 0 16 b 17 -20 0 -1 6 -10 b 118 -114 52 -50 82 -85 b 228 -207 156 -144 184 -184 z m 209 -157 b 134 -69 177 -138 141 -115 b 130 -26 131 -55 130 -40 b 215 148 130 42 160 99 b 225 156 217 151 220 156 b 230 153 226 156 228 156 b 323 -26 276 104 321 55 b 298 -75 324 -42 315 -59 b 265 -109 287 -86 276 -99 b 209 -157 245 -125 228 -167 z',\n        },\n        noteheadDiamondBlack: {\n            xMin: 0,\n            xMax: 310,\n            yMin: -146,\n            yMax: 146,\n            ha: 292,\n            o: 'm 266 -210 b 289 -194 278 -209 284 -200 b 406 -76 330 -156 367 -115 b 446 -23 433 -49 446 -36 b 412 29 446 -10 435 3 b 405 36 409 30 408 33 b 252 196 354 89 304 143 b 225 210 243 204 235 210 b 204 202 219 210 212 209 b 10 24 141 141 75 82 b 0 9 4 19 0 14 b 9 -6 0 4 3 0 l 232 -192 b 266 -210 242 -200 256 -204 z',\n        },\n        noteheadParenthesis: {\n            xMin: -70,\n            xMax: 329,\n            yMin: -196,\n            yMax: 201,\n            ha: 397,\n            o: 'm 344 -279 b 382 -262 361 -288 370 -272 b 405 -233 390 -255 399 -245 b 474 9 455 -158 468 -73 b 416 228 474 78 448 174 b 364 282 403 249 387 271 b 344 289 359 285 350 288 b 331 279 338 289 333 287 b 325 248 328 269 325 258 b 338 225 325 238 328 229 b 412 138 379 207 396 174 b 445 1 433 92 445 45 b 346 -217 445 -81 410 -154 b 336 -252 340 -223 336 -238 b 344 -279 336 -265 338 -276 z m 19 -274 b 35 -282 24 -279 30 -281 b 49 -265 42 -282 46 -275 b 52 -243 50 -256 52 -249 b 36 -210 52 -230 49 -220 b -60 -59 -16 -173 -35 -114 b -73 9 -69 -39 -73 -16 b 33 223 -73 92 -24 189 b 50 265 43 229 50 249 b 33 288 50 278 46 289 b 4 272 23 288 14 275 b -9 261 0 269 -4 265 b -101 23 -58 193 -105 124 b -37 -206 -104 -52 -75 -130 b 19 -274 -23 -232 -6 -255 z',\n        },\n        noteheadParenthesisRight: {\n            xMin: -30,\n            xMax: 82,\n            yMin: -199,\n            yMax: 206,\n            ha: 405,\n            o: 'm -17 -282 b 24 -264 -6 -297 12 -272 b 60 -219 40 -253 52 -236 b 117 1 96 -150 112 -75 b 118 16 118 6 118 12 b 109 73 118 36 112 55 b 4 279 99 154 68 226 b -23 297 -4 287 -13 297 b -37 289 -27 297 -32 294 b -43 266 -42 285 -43 276 b -32 225 -43 251 -37 229 b 84 -7 48 170 84 82 b 32 -184 84 -69 65 -132 b -10 -222 22 -200 4 -209 b -24 -258 -20 -232 -24 -245 b -17 -282 -24 -266 -22 -276 z',\n        },\n        noteheadParenthesisLeft: {\n            xMin: 0,\n            xMax: 106,\n            yMin: -197,\n            yMax: 197,\n            ha: 394,\n            o: 'm 134 -284 b 138 -281 135 -284 137 -284 b 145 -268 144 -278 145 -274 l 144 -253 b 107 -180 138 -225 121 -204 b 42 13 71 -120 42 -56 b 49 73 42 32 43 52 b 137 210 62 128 95 171 b 153 255 147 219 153 239 b 145 278 153 265 151 274 b 130 284 140 281 135 284 b 98 259 117 284 108 268 b 0 37 35 203 1 131 b 118 -268 9 -69 53 -173 b 134 -284 121 -274 127 -284 z',\n        },\n        noteheadMoonBlack: {\n            xMin: 0,\n            xMax: 328,\n            yMin: -125,\n            yMax: 125,\n            ha: 250,\n            o: 'm 353 -160 b 465 -40 412 -140 451 -102 b 472 30 471 -17 472 6 b 469 124 472 60 469 92 b 406 179 469 170 459 177 l 128 179 b 37 180 98 179 68 179 b 0 141 7 180 0 170 b 3 -20 3 88 3 33 b 69 -134 3 -72 26 -109 b 240 -180 125 -164 181 -180 b 353 -160 278 -180 315 -174 z',\n        },\n        noteheadTriangleLeftBlack: {\n            xMin: 0,\n            xMax: 391,\n            yMin: -142,\n            yMax: 142,\n            ha: 284,\n            o: 'm 138 -204 b 318 -197 197 -199 258 -197 l 431 -197 b 544 -192 469 -196 507 -193 b 563 -184 552 -190 560 -193 b 553 -167 564 -177 559 -171 l 540 -157 b 232 60 436 -85 334 -12 l 50 190 b 20 204 42 197 32 204 b 10 202 17 204 14 204 b 0 184 1 197 0 192 b 1 164 0 177 1 170 b 6 -150 3 59 6 -45 b 39 -193 7 -176 17 -186 b 138 -204 72 -204 105 -204 z',\n        },\n        noteheadTriangleRightBlack: {\n            xMin: 0,\n            xMax: 398,\n            yMin: -139,\n            yMax: 140,\n            ha: 279,\n            o: 'm 543 -200 b 573 -176 566 -200 573 -194 l 573 -168 b 554 141 566 -66 560 37 b 520 197 553 167 546 187 b 495 202 511 200 504 202 b 454 184 481 202 467 196 l 35 -137 b 0 -171 22 -147 -4 -154 b 52 -199 6 -193 33 -193 b 69 -199 58 -200 63 -199 z',\n        },\n        noteheadTriangleRoundDownBlack: {\n            xMin: 0,\n            xMax: 334,\n            yMin: -134,\n            yMax: 136,\n            ha: 270,\n            o: 'm 252 -192 b 285 -176 269 -196 276 -187 b 468 52 346 -99 406 -23 b 481 79 477 62 481 71 b 465 104 481 88 475 95 b 441 124 456 109 449 117 b 249 196 380 174 314 194 b 13 104 157 196 69 154 b 0 86 6 98 0 92 b 7 69 0 82 3 76 b 202 -164 73 -7 137 -85 b 252 -192 216 -181 235 -186 z',\n        },\n        augmentationDot: {\n            xMin: 0,\n            xMax: 96,\n            yMin: -57,\n            yMax: 57,\n            ha: 114,\n            o: 'm 13 -82 b 16 -81 14 -82 14 -82 b 105 -73 46 -76 75 -76 b 131 -48 121 -72 131 -60 b 138 26 134 -24 138 0 b 137 48 138 33 138 40 b 108 82 134 71 125 82 b 95 81 104 82 99 82 b 33 71 75 78 53 75 b 4 46 20 68 6 62 b 0 -66 1 9 0 -29 b 13 -82 0 -73 1 -82 z',\n        },\n        tremolo1: {\n            xMin: -158,\n            xMax: 156,\n            yMin: -88,\n            yMax: 88,\n            ha: 176,\n            o: 'm -206 -127 b -194 -125 -203 -127 -199 -127 b 173 -36 -72 -94 50 -65 b 220 16 202 -29 215 -12 b 225 50 223 30 225 45 b 216 107 226 76 222 91 b 194 127 210 120 204 127 b 183 124 192 127 189 127 l -192 33 b -226 -9 -213 27 -222 14 b -228 -32 -226 -16 -228 -23 b -222 -108 -228 -58 -222 -82 b -206 -127 -222 -120 -217 -127 z',\n        },\n        flag8thUp: {\n            xMin: 0,\n            xMax: 261,\n            yMin: -819,\n            yMax: 0,\n            ha: 819,\n            o: 'm 265 -1171 b 351 -1035 301 -1130 336 -1087 b 376 -867 369 -979 376 -923 b 367 -755 376 -829 373 -792 b 233 -422 350 -632 311 -520 b 131 -291 199 -379 166 -334 b 65 -125 91 -239 66 -192 b 62 -75 65 -112 62 -91 b 42 0 62 -49 52 -24 l 35 0 b 0 -63 6 -13 0 -36 l 0 -144 b 96 -445 0 -255 29 -356 b 177 -547 124 -478 150 -514 b 308 -831 246 -629 298 -721 b 317 -890 310 -851 317 -871 b 311 -919 317 -900 315 -910 b 256 -1005 297 -950 282 -984 b 228 -1068 233 -1024 228 -1045 b 230 -1106 228 -1080 229 -1093 b 240 -1162 232 -1125 239 -1143 b 251 -1179 242 -1174 246 -1179 b 265 -1171 255 -1179 259 -1176 z',\n        },\n        flag8thDown: {\n            xMin: 0,\n            xMax: 261,\n            yMin: 0,\n            yMax: 819,\n            ha: 819,\n            o: 'm 265 1171 b 251 1179 259 1176 255 1179 b 240 1162 246 1179 242 1174 b 230 1106 239 1143 232 1125 b 228 1068 229 1093 228 1080 b 256 1005 228 1045 233 1024 b 311 919 282 984 297 950 b 317 890 315 910 317 900 b 308 831 317 871 310 851 b 177 547 298 721 246 629 b 96 445 150 514 124 478 b 0 144 29 356 0 255 l 0 63 b 35 0 0 36 6 13 l 42 0 b 62 75 52 24 62 49 b 59 117 62 91 59 104 b 131 291 60 183 91 239 b 233 422 166 334 199 379 b 367 755 311 520 350 632 b 376 867 373 792 376 829 b 351 1035 376 923 369 979 b 265 1171 336 1087 301 1130 z',\n        },\n        flag16thUp: {\n            xMin: 0,\n            xMax: 327,\n            yMin: -819,\n            yMax: 0,\n            ha: 819,\n            o: 'm 415 -1179 b 435 -1168 423 -1182 429 -1174 b 451 -1138 442 -1159 446 -1149 b 465 -1020 464 -1102 467 -1064 b 461 -962 464 -1004 464 -984 b 471 -821 467 -916 472 -870 b 465 -721 472 -791 467 -756 b 415 -520 459 -651 441 -585 b 200 -245 370 -408 284 -327 b 96 -114 160 -206 118 -168 b 75 -24 84 -85 85 -53 b 59 0 72 -16 72 0 b 53 -1 58 0 56 -1 b 27 -32 40 -6 27 -10 b 29 -68 27 -43 29 -55 b 10 -79 20 -69 13 -72 b 1 -109 6 -89 1 -99 b 0 -170 0 -130 0 -148 b 35 -410 0 -252 12 -333 b 258 -793 76 -557 156 -681 b 409 -1158 350 -896 410 -1014 b 415 -1179 409 -1165 405 -1175 z m 413 -816 b 331 -681 392 -769 364 -723 b 145 -420 266 -596 189 -521 b 86 -281 125 -374 102 -330 b 156 -370 105 -312 128 -343 b 318 -539 210 -425 269 -478 b 413 -816 383 -621 420 -713 z',\n        },\n        flag16thDown: {\n            xMin: 0,\n            xMax: 327,\n            yMin: 0,\n            yMax: 819,\n            ha: 819,\n            o: 'm 59 0 b 75 24 72 0 72 16 b 96 114 85 53 84 85 b 200 245 118 168 160 206 b 415 520 284 327 370 408 b 465 721 441 585 459 651 b 471 821 467 756 472 791 b 461 962 472 870 467 916 b 465 1020 464 984 464 1004 b 451 1138 467 1064 464 1102 b 435 1168 446 1149 442 1159 b 418 1179 431 1172 425 1179 l 415 1179 b 408 1169 409 1176 408 1174 b 409 1158 408 1165 409 1161 b 258 793 410 1014 350 896 b 35 410 156 681 76 557 b 0 170 12 333 0 252 l 0 88 b 29 7 0 71 6 23 b 59 0 33 4 58 0 z m 86 281 b 145 420 102 330 125 374 b 331 681 189 521 266 596 b 413 816 364 723 392 769 b 415 791 413 808 415 799 b 318 539 415 698 377 613 b 156 370 269 478 210 425 b 86 281 128 343 105 312 z',\n        },\n        flag32ndUp: {\n            xMin: 0,\n            xMax: 268,\n            yMin: -849,\n            yMax: 149,\n            ha: 999,\n            o: 'm 323 -1223 b 351 -1198 337 -1227 344 -1210 b 359 -1184 354 -1194 356 -1188 b 386 -999 377 -1122 387 -1060 b 341 -783 386 -927 372 -855 b 330 -736 334 -769 330 -753 b 333 -708 330 -727 330 -717 b 344 -621 340 -678 344 -649 b 341 -579 344 -608 343 -593 b 328 -500 338 -553 328 -526 b 331 -475 328 -491 328 -484 b 347 -370 343 -438 348 -402 b 151 27 348 -212 288 -56 b 53 176 98 59 50 102 b 45 197 53 183 48 192 b 33 215 40 203 40 216 l 30 215 b 6 194 22 212 9 209 b 0 120 3 170 -1 145 b 0 -43 4 65 0 13 b 0 -98 0 -60 1 -79 b 4 -276 0 -157 6 -216 b 7 -456 4 -337 7 -397 b 66 -638 7 -523 22 -585 b 158 -724 94 -671 127 -697 b 318 -1011 246 -801 295 -899 b 321 -1044 321 -1021 321 -1032 b 312 -1152 321 -1080 312 -1116 b 317 -1192 312 -1165 314 -1179 b 323 -1223 320 -1202 311 -1220 z m 285 -376 b 121 -180 249 -289 173 -245 b 91 -105 104 -158 92 -135 b 288 -354 181 -144 288 -269 b 285 -376 288 -363 287 -370 z m 275 -657 b 111 -492 226 -589 163 -547 b 65 -376 78 -456 66 -418 b 71 -323 65 -360 68 -341 b 275 -657 164 -418 265 -504 z',\n        },\n        flag32ndDown: {\n            xMin: -3,\n            xMax: 268,\n            yMin: -169,\n            yMax: 829,\n            ha: 999,\n            o: 'm 323 1194 b 317 1164 311 1191 320 1174 b 312 1123 314 1151 312 1136 b 321 1015 312 1087 321 1051 b 318 982 321 1004 321 992 b 158 696 295 870 246 772 b 66 609 127 668 94 642 b 7 428 22 556 7 494 b 4 248 7 369 4 308 b -1 78 6 187 -10 137 b 0 14 0 59 0 32 l 0 -148 b 6 -223 0 -174 3 -199 b 30 -243 9 -238 22 -240 l 33 -243 b 45 -226 40 -245 40 -232 b 53 -204 48 -220 53 -212 b 151 -56 50 -131 98 -88 b 347 341 288 27 348 183 b 331 446 348 373 343 409 b 328 471 328 455 328 462 b 341 550 328 497 338 524 b 344 592 343 564 344 579 b 333 680 344 621 340 649 b 330 707 330 688 330 698 b 341 755 330 724 334 740 b 386 971 372 827 386 899 b 359 1155 387 1031 377 1093 b 351 1169 356 1159 354 1165 b 323 1194 344 1181 337 1198 z m 275 628 b 71 294 265 475 164 389 b 65 347 68 312 65 331 b 111 464 66 389 78 428 b 275 628 163 518 226 560 z m 285 347 b 288 325 287 341 288 334 b 91 76 288 240 181 115 b 121 151 92 107 104 130 b 285 347 173 216 249 261 z',\n        },\n        flag64thUp: {\n            xMin: -4,\n            xMax: 282,\n            yMin: -824,\n            yMax: 347,\n            ha: 1171,\n            o: 'm 350 -1185 b 380 -1162 364 -1189 374 -1175 b 406 -1022 399 -1119 406 -1071 b 359 -798 406 -945 384 -871 b 348 -756 353 -785 348 -772 b 350 -744 348 -753 350 -749 b 363 -621 356 -704 363 -664 b 360 -580 363 -608 363 -593 b 359 -560 359 -573 359 -567 b 373 -490 359 -536 366 -513 b 393 -346 386 -444 393 -395 b 387 -269 393 -320 390 -294 b 348 -127 382 -219 348 -173 b 351 -104 348 -120 348 -111 b 353 -65 351 -91 353 -78 b 341 37 353 -26 348 6 b 226 215 323 108 278 164 b 86 336 181 258 127 288 b 62 395 72 353 62 370 b 42 481 62 423 55 454 b 27 500 37 488 36 500 b 24 498 26 500 26 500 b -1 480 14 497 1 492 b -6 444 -4 467 -6 455 l -6 435 b -1 341 -1 403 -1 372 l -1 266 b 6 156 -1 230 0 193 b 13 35 12 117 13 75 l 13 -35 b 14 -85 13 -52 14 -68 b 29 -276 19 -150 33 -213 b 20 -448 24 -334 20 -392 b 24 -534 20 -477 22 -505 b 114 -708 30 -605 59 -664 b 197 -780 143 -732 171 -755 b 344 -1153 301 -884 341 -1011 b 343 -1172 344 -1159 343 -1166 b 350 -1185 343 -1176 344 -1182 z m 287 -88 b 62 193 186 -17 79 48 b 229 52 121 144 174 98 b 289 -33 256 29 274 -3 b 295 -56 294 -42 295 -49 b 287 -88 295 -66 292 -76 z m 298 -410 b 118 -235 238 -351 176 -295 b 76 -88 82 -197 78 -147 b 268 -252 137 -153 203 -202 b 330 -360 304 -279 330 -315 b 323 -402 330 -373 327 -387 b 311 -418 318 -413 315 -418 b 298 -410 307 -418 302 -415 z m 300 -691 b 117 -508 243 -616 168 -575 b 82 -408 94 -480 82 -448 b 84 -379 82 -397 82 -387 b 259 -553 135 -451 206 -492 b 301 -667 287 -583 301 -619 b 300 -691 301 -674 301 -683 z',\n        },\n        flag64thDown: {\n            xMin: -5,\n            xMax: 281,\n            yMin: -375,\n            yMax: 796,\n            ha: 1171,\n            o: 'm 348 1145 b 341 1132 343 1142 341 1136 b 343 1113 341 1126 343 1119 b 196 740 340 971 300 844 b 112 668 170 714 141 691 b 23 494 58 624 29 564 b 19 408 20 465 19 436 b 27 236 19 351 23 294 b 13 45 32 173 17 109 b 12 -6 13 27 12 12 l 12 -75 b 4 -196 12 -115 10 -157 b -3 -307 -1 -233 -3 -271 l -3 -382 b -7 -475 -3 -412 -3 -444 l -7 -484 b -3 -520 -7 -495 -6 -507 b 23 -539 0 -533 13 -537 b 26 -540 24 -540 24 -540 b 40 -521 35 -540 36 -528 b 60 -435 53 -494 60 -464 b 85 -376 60 -410 71 -393 b 225 -255 125 -328 180 -298 b 340 -78 276 -204 321 -148 b 351 24 347 -46 351 -14 b 350 63 351 37 350 50 b 347 86 347 71 347 79 b 386 229 347 132 380 179 b 392 305 389 253 392 279 b 372 449 392 354 384 403 b 357 520 364 472 357 495 b 359 540 357 527 357 533 b 361 580 361 553 361 567 b 348 704 361 624 354 664 b 347 716 348 708 347 713 b 357 757 347 732 351 744 b 405 982 383 831 405 904 b 379 1122 405 1031 397 1079 b 348 1145 373 1135 363 1149 z m 298 651 b 300 626 300 642 300 634 b 258 513 300 579 285 543 b 82 338 204 452 134 410 b 81 367 81 347 81 357 b 115 468 81 408 92 439 b 298 651 167 534 242 576 z m 297 370 b 310 377 301 374 305 377 b 321 361 314 377 317 373 b 328 320 325 347 328 333 b 266 212 328 275 302 239 b 75 48 202 161 135 112 b 117 194 76 107 81 157 b 297 370 174 255 236 311 z m 285 48 b 294 16 291 36 294 26 b 288 -7 294 9 292 1 b 228 -92 272 -37 255 -69 b 60 -233 173 -138 120 -184 b 285 48 78 -88 184 -23 z',\n        },\n        flag128thUp: {\n            xMin: 0,\n            xMax: 252,\n            yMin: -804,\n            yMax: 530,\n            ha: 1334,\n            o: 'm 298 -1158 b 328 -1126 312 -1158 320 -1139 b 330 -1116 330 -1123 330 -1119 b 347 -996 343 -1076 347 -1037 b 328 -837 347 -943 338 -890 b 320 -778 324 -816 320 -798 b 330 -733 320 -763 323 -749 b 340 -665 338 -714 337 -688 b 341 -645 340 -660 341 -652 b 333 -534 341 -609 333 -572 b 343 -471 333 -513 334 -492 b 361 -366 356 -436 361 -402 b 331 -202 361 -311 348 -256 b 328 -187 330 -197 328 -193 b 331 -179 328 -184 328 -181 b 363 -55 353 -137 363 -96 b 337 79 363 -12 351 33 b 327 114 333 92 327 104 b 344 144 327 124 331 132 b 359 174 353 150 357 163 b 361 228 360 193 361 210 b 243 517 361 337 325 435 b 147 596 213 546 179 569 b 75 708 111 626 75 655 b 62 744 75 723 68 733 b 50 763 58 752 58 763 b 46 762 49 763 48 762 b 17 742 36 757 22 757 b 0 697 14 726 0 711 b 1 595 0 662 3 631 b 0 469 0 552 0 511 b 1 429 0 456 0 442 b 22 289 6 382 22 337 b 24 128 22 238 24 184 b 22 66 24 108 23 86 b 19 -19 20 37 19 10 b 20 -132 19 -56 20 -95 b 13 -276 20 -180 19 -229 b 9 -359 10 -304 9 -330 b 12 -487 9 -402 12 -445 b 56 -582 12 -526 29 -554 b 197 -742 107 -632 160 -681 b 288 -1100 265 -851 276 -976 b 288 -1122 288 -1107 287 -1115 b 287 -1145 289 -1129 287 -1138 b 298 -1158 287 -1153 288 -1158 z m 304 150 b 75 475 229 256 112 334 b 304 150 233 357 305 287 z m 271 -73 b 127 72 233 -14 179 26 b 81 167 96 98 81 127 b 84 194 81 176 82 184 b 271 -73 148 102 242 39 z m 279 -396 b 132 -223 233 -330 180 -279 b 81 -112 104 -192 81 -156 b 82 -91 81 -105 81 -98 b 279 -396 167 -125 269 -281 z m 249 -609 b 69 -357 197 -520 88 -471 b 249 -609 131 -441 229 -498 z',\n        },\n        flag128thDown: {\n            xMin: -1,\n            xMax: 252,\n            yMin: -580,\n            yMax: 754,\n            ha: 1334,\n            o: 'm 298 1086 b 287 1073 288 1086 287 1081 b 288 1050 287 1066 289 1057 b 288 1028 287 1043 288 1035 b 197 670 276 904 265 779 b 56 510 160 609 107 560 b 12 415 29 482 12 454 b 9 287 12 373 9 330 b 13 204 9 258 10 232 b 20 60 19 157 20 108 b 19 -53 20 23 19 -16 b 22 -138 19 -82 20 -109 b 24 -200 23 -158 24 -180 b 22 -361 24 -256 22 -310 b 1 -501 22 -409 6 -454 b 0 -541 0 -514 0 -528 b 0 -667 0 -583 -3 -624 b 0 -809 0 -675 -3 -791 b 46 -834 4 -825 36 -829 b 50 -835 48 -834 49 -835 b 62 -816 58 -835 58 -824 b 75 -780 68 -805 75 -795 b 147 -668 75 -727 111 -698 b 243 -589 179 -641 213 -618 b 361 -300 325 -507 361 -409 b 359 -246 361 -282 360 -265 b 344 -216 357 -235 353 -222 b 327 -186 331 -204 327 -196 b 337 -151 327 -176 333 -164 b 363 -17 351 -105 363 -60 b 331 107 363 24 353 65 b 328 115 328 109 328 112 b 331 130 328 121 330 125 b 361 294 348 184 361 239 b 343 399 361 330 356 364 b 333 462 334 420 333 441 b 341 573 333 500 341 537 b 340 593 341 580 340 588 b 330 661 337 616 338 642 b 320 706 323 677 320 691 b 328 765 320 726 324 744 b 347 924 338 818 347 871 b 330 1044 347 965 343 1004 b 328 1054 330 1047 330 1051 b 298 1086 320 1067 312 1086 z m 249 537 b 69 285 229 426 131 369 b 249 537 88 399 197 448 z m 279 324 b 82 19 269 209 167 53 b 81 40 81 26 81 33 b 132 151 81 84 104 120 b 279 324 180 207 233 258 z m 271 1 b 84 -266 242 -111 148 -174 b 81 -239 82 -256 81 -248 b 127 -144 81 -199 96 -170 b 271 1 179 -98 233 -58 z m 304 -222 b 75 -547 305 -359 233 -429 b 304 -222 112 -406 229 -328 z',\n        },\n        accidentalFlat: {\n            xMin: 1,\n            xMax: 209,\n            yMin: -208,\n            yMax: 472,\n            ha: 680,\n            o: 'm 29 -300 b 46 -289 33 -300 39 -297 b 107 -243 65 -274 86 -258 b 301 127 233 -153 301 -30 b 298 186 301 147 301 166 b 190 297 291 256 251 297 b 147 289 177 297 163 294 b 86 265 127 284 107 274 l 85 264 l 85 301 b 91 465 85 356 88 410 b 94 559 91 497 94 527 b 84 651 94 589 91 621 b 66 680 81 661 81 680 l 65 680 b 37 645 49 678 37 665 b 33 523 36 605 32 563 l 33 478 b 26 223 33 393 29 308 b 1 -141 22 101 1 -19 b 17 -287 1 -189 4 -239 b 29 -300 20 -295 23 -300 z m 68 -105 b 76 12 71 -68 72 -29 b 81 107 79 43 81 75 l 86 109 b 171 135 114 121 141 135 b 204 128 181 135 193 132 b 238 92 228 120 239 108 b 230 63 238 84 236 75 b 68 -105 193 -10 132 -59 z',\n        },\n        accidentalNatural: {\n            xMin: 0,\n            xMax: 214,\n            yMin: -456,\n            yMax: 462,\n            ha: 918,\n            o: 'm 255 -657 b 281 -624 271 -657 275 -636 b 285 -599 282 -615 285 -608 b 292 -300 288 -500 289 -400 b 289 -161 292 -253 289 -207 b 300 128 292 -65 297 32 b 304 168 300 128 302 150 l 304 173 l 305 190 l 305 199 l 307 225 b 304 259 307 229 310 246 b 272 298 297 274 302 305 b 63 266 204 279 134 272 b 72 514 68 348 72 432 b 71 595 72 541 72 567 b 56 665 71 619 66 642 b 17 579 9 651 17 608 b 3 144 19 433 7 289 b 0 -7 1 94 0 43 b 3 -134 0 -50 1 -92 b 7 -219 3 -163 7 -192 b 35 -251 7 -243 17 -251 b 49 -249 39 -251 43 -251 l 223 -223 l 230 -222 l 230 -359 b 223 -516 230 -410 223 -464 b 236 -619 223 -550 226 -585 b 255 -657 240 -634 236 -657 z m 58 -63 b 55 81 56 -14 53 33 l 56 99 b 85 99 65 99 75 98 b 232 108 134 104 183 107 l 240 109 l 236 66 b 232 -48 235 29 232 -10 b 58 -81 174 -63 115 -73 z',\n        },\n        accidentalSharp: {\n            xMin: -22,\n            xMax: 390,\n            yMin: -384,\n            yMax: 383,\n            ha: 767,\n            o: 'm 202 -553 b 219 -526 213 -552 216 -536 b 226 -471 225 -507 226 -488 b 225 -425 226 -455 225 -441 b 226 -392 225 -415 225 -402 b 233 -305 229 -363 232 -334 l 297 -292 b 331 -469 300 -353 311 -412 b 347 -485 333 -477 338 -485 b 363 -469 356 -487 359 -477 b 374 -418 373 -454 374 -435 b 376 -382 376 -405 376 -393 b 372 -276 376 -347 373 -311 l 455 -259 b 550 -156 534 -243 544 -232 b 550 -109 550 -137 552 -124 b 526 -78 549 -91 541 -78 l 523 -78 b 507 -79 517 -78 513 -78 b 403 -101 474 -88 438 -95 l 379 -105 b 382 -42 380 -85 380 -63 b 384 96 383 4 384 50 b 503 131 425 107 464 118 b 549 173 524 138 543 150 b 562 249 554 199 562 223 b 554 294 562 264 560 279 b 536 315 549 308 544 315 l 533 315 b 517 312 528 315 523 315 b 382 266 472 294 428 279 l 377 344 b 359 531 374 406 372 469 b 348 552 356 539 357 552 l 347 552 l 343 552 b 315 528 331 549 317 544 l 315 501 b 320 249 315 416 318 333 l 243 232 b 239 361 243 275 242 318 b 226 425 238 383 238 403 b 199 359 194 409 199 382 b 193 223 196 312 194 268 b 72 202 153 215 112 209 b 4 118 13 192 4 183 b 10 66 0 102 12 84 b 33 29 7 39 14 30 b 48 32 37 29 42 30 b 187 55 95 39 141 46 l 183 -75 b 176 -145 181 -99 179 -122 b 16 -179 122 -156 69 -166 b -32 -232 -14 -186 -32 -197 b -17 -331 -32 -266 -19 -298 b -1 -356 -17 -347 -13 -354 b 12 -353 1 -356 6 -354 b 167 -320 63 -341 115 -331 b 166 -377 166 -338 166 -357 b 189 -526 166 -428 171 -477 b 202 -553 192 -536 189 -553 z m 240 -132 b 243 -37 242 -101 242 -69 b 245 65 245 -3 245 30 b 315 79 269 69 292 73 b 301 -120 308 13 305 -53 z',\n        },\n        accidentalDoubleSharp: {\n            xMin: 0,\n            xMax: 287,\n            yMin: -159,\n            yMax: 159,\n            ha: 318,\n            o: 'm 84 -229 b 107 -216 91 -229 98 -225 b 200 -125 138 -186 167 -154 b 232 -95 212 -115 222 -105 b 347 -189 271 -125 310 -157 b 370 -200 356 -196 363 -200 b 396 -179 380 -200 389 -192 b 412 -102 410 -154 406 -125 b 377 -27 410 -69 400 -46 l 325 14 b 402 91 350 42 374 68 b 413 127 410 96 413 107 b 382 200 409 148 397 176 b 350 229 370 220 360 229 b 314 210 340 229 328 223 b 274 174 300 199 285 187 b 212 104 252 151 232 128 b 92 187 173 132 132 161 b 78 193 86 192 82 193 b 68 190 75 193 72 193 b 48 179 62 186 53 187 b 40 137 43 168 40 154 b 81 16 40 92 56 32 b 107 -3 89 10 98 4 b 14 -94 76 -32 45 -62 b 0 -124 6 -102 0 -114 b 12 -154 0 -134 3 -144 b 62 -215 26 -176 48 -193 b 84 -229 69 -225 76 -229 z',\n        },\n        accidentalDoubleFlat: {\n            xMin: 0,\n            xMax: 359,\n            yMin: -220,\n            yMax: 446,\n            ha: 666,\n            o: 'm 43 -317 b 72 -301 55 -317 63 -310 b 160 -186 108 -268 134 -226 b 236 -60 186 -145 212 -102 b 233 -131 235 -85 233 -108 b 239 -220 233 -161 235 -190 b 259 -246 240 -233 239 -240 b 301 -228 284 -252 291 -238 b 465 -7 369 -163 416 -85 b 517 173 500 48 517 108 b 451 307 517 229 505 284 b 409 315 436 312 422 315 b 331 287 382 315 356 305 b 311 274 324 282 320 274 l 310 274 l 310 566 b 305 621 310 585 312 603 b 294 642 301 628 305 642 l 292 642 b 264 622 282 641 266 636 b 253 575 259 606 256 590 b 246 418 248 523 246 471 b 248 243 246 360 248 302 l 248 187 b 164 238 220 225 193 238 b 85 213 140 238 112 226 b 84 229 85 220 84 225 b 86 315 85 258 86 287 b 81 528 86 386 82 458 b 71 582 81 547 78 566 b 56 603 66 590 68 603 l 53 603 b 23 580 40 600 26 598 b 19 537 20 566 19 552 b 20 514 19 530 19 521 b 26 390 24 472 26 432 b 14 66 26 282 16 174 b 0 -168 13 -12 0 -91 b 12 -279 0 -206 3 -242 b 30 -314 16 -294 14 -308 b 43 -317 35 -317 39 -317 z m 301 -72 b 302 7 302 -45 302 -19 l 302 86 b 351 158 304 121 321 145 b 383 166 361 163 373 166 b 435 143 402 166 419 157 b 445 127 441 138 445 132 b 441 114 445 122 444 118 b 301 -72 397 49 354 -14 z m 75 -147 b 73 30 75 -86 75 -29 b 118 82 73 62 92 76 b 132 84 124 84 128 84 b 190 52 156 84 174 69 b 193 40 192 49 193 45 b 192 33 193 37 193 35 b 75 -147 157 -30 125 -95 z',\n        },\n        accidentalParensLeft: {\n            xMin: 0,\n            xMax: 130,\n            yMin: -270,\n            yMax: 268,\n            ha: 538,\n            o: 'm 107 -389 b 127 -374 114 -389 120 -384 b 141 -347 132 -367 137 -357 b 151 -294 148 -330 151 -311 b 122 -207 151 -265 141 -236 b 63 -65 94 -164 72 -117 b 59 -10 60 -46 59 -27 b 145 223 59 78 94 153 b 187 354 176 262 189 305 b 177 384 187 364 190 380 b 143 373 166 387 153 383 b 124 354 137 367 130 361 b 0 -35 33 240 0 108 l 0 -92 b 85 -372 4 -193 27 -287 b 107 -389 92 -383 99 -389 z',\n        },\n        accidentalParensRight: {\n            xMin: 0,\n            xMax: 139,\n            yMin: -275,\n            yMax: 277,\n            ha: 552,\n            o: 'm 58 -396 b 96 -354 75 -396 85 -370 b 200 13 168 -238 200 -111 b 153 268 200 109 184 190 b 49 392 131 320 101 364 b 26 399 40 397 33 399 b 0 366 10 399 0 387 b 0 318 -1 350 0 334 l 0 291 b 27 238 -3 266 7 253 b 143 9 105 180 143 98 b 141 -20 143 -1 143 -10 b 63 -225 135 -92 108 -164 b 36 -307 45 -251 36 -278 b 40 -344 36 -320 37 -331 b 42 -356 42 -347 42 -351 b 58 -396 42 -374 37 -396 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            xMin: 0,\n            xMax: 208,\n            yMin: -240,\n            yMax: 440,\n            ha: 680,\n            o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            xMin: 0,\n            xMax: 422,\n            yMin: -240,\n            yMax: 440,\n            ha: 680,\n            o: 'm 272 -346 b 284 -333 278 -346 281 -341 b 300 -187 297 -285 300 -235 b 275 177 300 -65 279 55 b 268 432 272 262 268 347 l 268 477 b 264 599 269 517 265 559 b 236 634 264 619 252 632 l 235 634 b 217 605 220 634 220 615 b 207 513 210 575 207 543 b 210 419 207 481 210 451 b 216 255 213 364 216 310 l 216 217 l 215 219 b 154 243 194 228 174 238 b 111 251 138 248 124 251 b 3 140 50 251 10 210 b 0 81 0 120 0 101 b 194 -289 0 -76 68 -199 b 255 -336 215 -304 236 -320 b 272 -346 262 -343 268 -346 z m 336 -346 b 353 -336 340 -346 346 -343 b 413 -289 372 -320 393 -304 b 608 81 540 -199 608 -76 b 605 140 608 101 608 120 b 497 251 598 210 557 251 b 454 243 484 251 469 248 b 393 219 433 238 413 228 l 392 217 l 392 255 b 397 419 392 310 395 364 b 400 513 397 451 400 481 b 390 605 400 543 397 575 b 373 634 387 615 387 634 l 372 634 b 344 599 356 632 344 619 b 340 477 343 559 338 517 l 340 432 b 333 177 340 347 336 262 b 308 -187 328 55 308 -65 b 324 -333 308 -235 311 -285 b 336 -346 327 -341 330 -346 z m 233 -151 b 71 17 168 -105 108 -56 b 63 46 65 29 63 37 b 96 82 62 62 73 73 b 130 89 108 86 120 89 b 215 63 160 89 187 75 l 220 60 b 225 -35 220 29 222 -3 b 233 -151 229 -75 230 -114 z m 374 -151 b 383 -35 377 -114 379 -75 b 387 60 386 -3 387 29 l 393 63 b 478 89 420 75 448 89 b 511 82 488 89 500 86 b 544 46 534 73 546 62 b 537 17 544 37 543 29 b 374 -151 500 -56 439 -105 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            xMin: 0,\n            xMax: 300,\n            yMin: -338,\n            yMax: 351,\n            ha: 689,\n            o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            xMin: -23,\n            xMax: 388,\n            yMin: -373,\n            yMax: 445,\n            ha: 818,\n            o: 'm 114 -537 b 138 -475 137 -518 138 -495 b 147 -292 138 -413 144 -353 b 212 -278 168 -287 190 -282 b 243 -444 215 -333 225 -389 b 261 -467 248 -454 251 -465 b 281 -446 272 -469 276 -455 b 292 -347 292 -416 288 -384 b 288 -262 289 -320 288 -291 l 374 -245 b 376 -311 374 -266 374 -288 b 390 -456 379 -357 379 -405 b 416 -396 412 -436 415 -418 b 423 -287 420 -360 423 -323 b 422 -235 423 -269 423 -252 b 451 -229 432 -233 441 -232 b 547 -98 524 -215 547 -199 l 547 -89 b 521 -49 546 -59 540 -49 b 497 -52 516 -49 507 -49 b 418 -68 469 -56 444 -63 b 423 52 419 -29 422 12 b 426 140 425 81 425 109 b 495 160 449 145 472 153 b 552 219 526 170 546 189 b 559 279 557 240 553 262 b 530 341 559 324 552 341 b 490 331 520 341 507 338 b 432 311 471 324 452 318 b 449 552 436 392 442 471 b 452 588 451 563 452 575 b 446 622 452 599 451 611 b 436 641 444 629 448 641 b 418 628 428 641 420 636 b 409 602 413 621 410 611 b 386 297 396 501 390 399 b 297 274 356 288 327 281 b 291 403 295 317 294 360 b 274 550 288 452 284 501 b 259 569 271 564 265 569 b 240 559 253 569 248 563 b 230 537 232 554 230 546 l 230 488 b 233 369 230 448 232 409 b 236 261 236 333 238 297 b 156 245 210 255 183 251 b 154 396 154 295 154 346 b 150 416 154 403 153 410 b 140 438 145 423 150 438 l 138 438 b 118 413 128 436 118 428 b 112 354 118 393 114 374 b 109 238 109 315 109 276 b 49 226 89 233 69 230 b 3 163 16 222 3 202 b 7 91 3 138 9 114 b 29 62 7 69 13 62 b 39 63 32 62 35 63 b 104 73 60 66 82 71 b 101 -10 104 46 102 17 l 92 -132 l 10 -150 b -33 -204 -19 -157 -33 -170 b -19 -310 -32 -240 -19 -274 b -6 -324 -19 -321 -13 -324 b 6 -323 -1 -324 1 -324 b 82 -307 32 -317 58 -311 b 81 -376 82 -330 81 -353 b 114 -537 81 -431 94 -484 z m 294 -92 b 297 -37 295 -73 295 -56 b 300 49 300 -9 300 20 l 300 108 b 379 127 325 114 353 120 b 374 -76 376 59 374 -9 b 294 -92 347 -82 320 -86 z m 154 -120 b 157 20 154 -73 156 -26 b 158 82 158 40 158 62 b 230 95 183 86 206 89 b 225 0 229 63 226 32 b 217 -107 223 -35 220 -71 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            xMin: 2,\n            xMax: 287,\n            yMin: -248,\n            yMax: 432,\n            ha: 680,\n            o: 'm 410 128 b 302 239 403 199 363 239 b 259 232 289 239 275 236 b 199 207 239 226 219 216 l 197 206 l 197 243 l 197 251 b 347 317 248 272 298 295 b 376 347 360 324 372 334 b 389 435 387 376 393 405 b 348 454 384 462 377 465 b 202 387 300 432 251 409 b 203 408 203 395 203 402 l 203 431 b 347 490 252 451 300 469 b 376 517 360 495 372 505 b 389 599 387 546 393 572 b 348 616 384 625 377 628 l 203 556 b 196 593 202 569 199 582 b 179 622 193 603 193 622 l 177 622 b 150 588 161 621 150 608 b 147 533 150 570 148 552 b 29 488 108 517 69 503 b 3 455 12 482 3 472 b 12 353 1 422 9 389 b 145 408 56 372 101 389 b 145 363 145 392 145 377 l 29 315 b 3 281 12 310 3 298 b 12 170 1 245 9 209 l 141 226 b 138 166 140 206 138 186 b 114 -199 134 43 115 -76 b 130 -344 114 -246 117 -297 b 141 -357 132 -353 135 -357 b 158 -347 145 -357 151 -354 b 219 -301 177 -331 199 -315 b 413 69 346 -210 413 -88 b 410 128 413 89 413 108 z m 350 35 b 343 6 350 26 348 17 b 180 -163 308 -69 245 -117 b 189 -46 183 -125 184 -86 b 193 49 192 -14 193 17 l 199 52 b 284 78 226 63 253 78 b 317 71 294 78 305 75 b 350 35 340 62 351 50 z',\n        },\n        accidentalBuyukMucennebSharp: {\n            xMin: -1,\n            xMax: 467,\n            yMin: -460,\n            yMax: 350,\n            ha: 810,\n            o: 'm 230 -662 b 256 -615 249 -647 255 -631 b 264 -495 261 -575 264 -534 b 261 -361 264 -451 262 -406 b 415 -324 312 -348 363 -336 b 416 -445 415 -364 416 -405 b 431 -593 416 -492 419 -541 b 458 -533 454 -573 456 -554 b 464 -418 462 -494 464 -455 b 459 -314 464 -383 462 -348 b 531 -298 484 -308 508 -304 b 570 -259 554 -292 566 -278 b 579 -192 575 -236 579 -215 b 576 -164 579 -183 577 -173 b 556 -143 573 -147 567 -143 b 543 -144 553 -143 549 -143 b 459 -164 516 -151 487 -157 b 462 -102 459 -144 461 -122 l 608 -76 b 667 -24 639 -71 660 -53 b 672 19 671 -9 671 9 l 672 46 b 641 108 668 94 662 108 b 605 101 632 108 621 105 l 580 96 b 469 72 544 88 507 79 b 471 131 469 91 471 111 b 521 141 488 135 504 138 b 573 197 550 148 570 167 b 577 271 576 222 577 246 b 553 300 577 291 567 300 b 537 297 549 300 543 298 b 480 285 517 292 498 288 b 491 410 482 327 485 369 b 494 445 492 422 494 433 b 488 482 494 458 492 469 b 477 504 487 490 491 504 b 455 484 467 504 458 495 b 451 464 452 478 452 471 b 433 275 442 402 438 338 b 282 246 383 265 333 255 l 291 346 b 294 382 292 359 294 370 b 287 418 294 395 292 406 b 276 435 284 423 289 435 b 259 423 269 435 264 429 b 251 397 255 416 252 406 b 235 239 242 346 239 292 b 166 228 212 235 189 232 b 118 170 134 223 112 207 b 120 140 120 160 120 150 b 120 84 120 121 118 102 b 131 69 120 75 122 69 b 138 71 132 69 135 71 b 226 85 168 75 197 81 b 223 30 226 66 225 49 l 223 17 l 45 -22 b -1 -92 13 -29 -1 -48 b 1 -171 -1 -118 3 -145 b 12 -187 0 -184 4 -187 b 22 -186 14 -187 17 -187 b 115 -164 53 -179 84 -170 b 217 -145 150 -158 183 -153 b 215 -225 216 -173 216 -199 l 203 -229 b 132 -275 141 -246 132 -249 b 134 -315 132 -285 134 -298 b 135 -382 134 -336 132 -359 b 144 -396 135 -386 134 -396 b 151 -395 145 -396 148 -396 b 215 -376 171 -387 193 -382 b 216 -516 215 -422 215 -468 b 230 -662 217 -563 219 -611 z m 271 27 b 274 94 272 50 274 72 b 425 122 324 102 374 112 l 425 101 b 422 62 423 88 423 75 z m 262 -177 b 264 -137 264 -164 264 -151 b 418 -109 315 -128 366 -120 b 415 -174 416 -131 416 -153 b 262 -213 364 -186 312 -199 z',\n        },\n        accidentalBakiyeFlat: {\n            xMin: 2,\n            xMax: 287,\n            yMin: -236,\n            yMax: 444,\n            ha: 680,\n            o: 'm 141 -340 b 158 -330 145 -340 151 -337 b 219 -284 177 -314 199 -298 b 413 86 346 -193 413 -71 b 410 145 413 107 413 125 b 302 256 403 216 363 256 b 259 249 289 256 275 253 b 199 225 239 243 219 233 l 197 223 l 197 261 b 199 334 197 285 199 310 b 347 406 249 357 298 382 b 376 439 360 413 372 425 b 390 516 384 465 390 490 b 389 537 390 523 390 530 b 372 564 384 556 382 564 b 348 557 367 564 359 562 b 204 487 300 537 253 510 b 206 518 206 497 206 507 b 196 611 206 549 203 580 b 179 639 193 621 193 639 l 177 639 b 150 605 161 638 150 625 b 145 482 148 564 144 523 l 145 458 b 29 405 107 439 68 420 b 3 366 12 397 3 386 b 12 243 1 325 9 287 b 143 307 56 265 99 285 l 138 183 b 114 -181 134 60 114 -59 b 130 -327 114 -229 117 -279 b 141 -340 132 -336 135 -340 z m 180 -145 b 189 -29 183 -108 184 -69 b 193 66 192 3 193 35 l 199 69 b 284 95 226 81 253 95 b 317 88 294 95 305 92 b 350 52 340 79 351 68 b 343 23 350 43 348 35 b 180 -145 305 -50 245 -99 z',\n        },\n        accidentalKomaSharp: {\n            xMin: 0,\n            xMax: 300,\n            yMin: -338,\n            yMax: 351,\n            ha: 689,\n            o: 'm 194 -487 b 225 -432 215 -469 223 -452 b 238 -232 229 -366 236 -298 b 377 -199 285 -220 331 -209 b 418 -164 397 -193 410 -181 b 432 -88 428 -138 432 -114 b 412 -42 432 -55 428 -42 b 389 -46 406 -42 399 -43 l 235 -85 b 233 -20 235 -63 233 -42 b 233 105 232 22 233 63 b 312 121 259 111 285 117 b 406 226 390 134 400 145 b 373 284 409 268 402 284 b 344 281 364 284 356 282 b 232 258 307 276 269 266 b 230 308 232 275 232 291 b 210 505 229 374 232 441 b 183 471 189 501 184 490 b 180 406 181 449 180 428 b 184 246 180 353 184 300 b 48 222 140 236 94 228 b 0 168 6 216 0 209 b 7 86 1 141 4 114 b 27 66 9 73 13 66 l 35 66 b 184 94 85 66 135 84 b 187 -1 184 62 186 30 b 190 -96 189 -33 190 -65 l 112 -114 b 35 -213 27 -132 35 -132 b 33 -253 35 -226 35 -240 b 49 -276 33 -269 37 -276 b 62 -275 52 -276 56 -276 l 186 -245 l 186 -256 b 179 -387 180 -300 177 -343 b 194 -487 180 -419 179 -454 z',\n        },\n        accidentalKucukMucennebSharp: {\n            xMin: 0,\n            xMax: 359,\n            yMin: -420,\n            yMax: 343,\n            ha: 763,\n            o: 'm 236 -605 b 262 -543 256 -583 261 -564 b 269 -423 268 -503 269 -464 b 266 -340 269 -396 268 -367 l 361 -318 b 405 -276 384 -312 399 -298 b 413 -189 412 -248 416 -219 b 395 -164 412 -171 409 -164 b 382 -166 392 -164 387 -164 b 264 -193 343 -176 304 -184 b 269 -102 265 -163 268 -132 b 454 -62 331 -89 392 -78 b 501 -23 477 -58 494 -45 b 517 62 511 6 517 33 b 487 112 517 95 513 112 b 471 111 482 112 477 112 b 274 66 406 95 340 81 b 276 138 275 91 276 114 b 350 154 301 144 325 148 b 402 203 377 160 396 176 b 412 284 408 230 412 258 b 392 311 412 302 406 311 b 372 308 386 311 379 310 b 287 291 343 301 314 297 l 295 405 b 298 441 297 416 298 428 b 292 475 298 452 297 464 b 282 494 289 482 294 494 b 264 481 274 494 266 490 b 255 455 259 474 256 464 b 239 282 248 397 243 340 b 148 268 209 278 179 274 b 62 164 62 252 62 253 l 62 132 b 79 108 60 117 65 108 l 86 108 l 230 130 b 229 92 230 118 229 105 b 228 56 228 79 228 68 b 66 20 173 43 120 32 b 0 -59 6 7 3 1 l 0 -138 b 14 -160 -1 -156 4 -160 b 27 -158 19 -160 23 -160 b 222 -112 92 -141 157 -127 b 220 -203 220 -143 220 -173 b 147 -217 196 -207 171 -213 b 89 -288 92 -228 89 -229 b 95 -347 85 -305 96 -325 b 112 -374 92 -366 98 -374 b 125 -373 117 -374 121 -374 l 220 -351 b 222 -458 220 -386 220 -422 b 236 -605 223 -504 225 -552 z',\n        },\n        accidentalKoron: {\n            xMin: 0,\n            xMax: 303,\n            yMin: -462,\n            yMax: 180,\n            ha: 642,\n            o: 'm 59 -665 b 72 -649 69 -662 72 -657 b 69 -626 72 -642 69 -634 b 69 -622 69 -625 69 -624 l 69 -600 b 55 -156 60 -456 68 -311 b 86 -170 66 -166 76 -170 b 112 -163 95 -170 104 -166 b 390 -35 204 -120 298 -78 b 436 -1 409 -27 436 -27 b 396 46 436 22 413 33 l 382 55 b 46 243 271 121 157 179 b 12 259 29 253 17 259 b 0 219 1 259 0 248 b 3 -372 0 22 3 -176 b 6 -616 3 -454 6 -536 b 59 -665 6 -638 40 -671 z m 55 199 b 363 24 156 141 258 84 b 55 -118 259 -24 160 -69 z',\n        },\n        accidentalSori: {\n            xMin: 0,\n            xMax: 434,\n            yMin: -295,\n            yMax: 325,\n            ha: 620,\n            o: 'm 194 -425 b 196 -409 194 -418 196 -413 b 194 -194 196 -337 196 -266 b 364 -127 251 -171 308 -150 b 361 -321 363 -192 364 -256 b 410 -387 360 -357 373 -377 b 413 -373 412 -382 413 -377 b 418 -114 418 -287 418 -200 l 418 -105 b 595 -35 477 -82 536 -59 b 625 0 612 -27 625 -22 b 593 48 624 23 618 39 l 419 117 b 423 370 419 202 423 285 b 426 403 423 382 426 393 b 418 436 426 415 425 426 b 384 468 409 449 399 468 b 369 448 370 468 369 459 b 369 436 369 444 369 441 l 369 428 l 369 423 b 367 138 369 328 367 233 l 353 143 l 192 207 l 192 367 b 173 406 192 383 184 396 b 151 422 167 413 160 422 b 144 420 148 422 147 422 b 137 403 138 416 137 410 l 137 392 l 137 229 b 33 271 102 243 68 256 b 13 276 26 274 19 276 b 0 262 6 276 0 272 b 35 199 1 239 0 212 l 138 160 b 140 -148 138 58 138 -45 b 56 -181 111 -158 84 -170 b 24 -215 35 -189 24 -199 b 29 -235 24 -220 26 -228 b 49 -253 35 -249 42 -253 b 78 -240 59 -253 69 -243 b 140 -216 98 -233 120 -225 l 140 -356 b 194 -425 140 -406 141 -406 z m 194 -125 b 193 138 194 -37 193 50 b 315 89 233 122 275 107 b 366 71 333 84 350 76 b 364 -58 366 27 366 -16 b 194 -125 308 -81 251 -104 z m 419 49 l 526 7 l 485 -10 l 419 -36 z',\n        },\n        articAccentAbove: {\n            xMin: 0,\n            xMax: 425,\n            yMin: 0,\n            yMax: 326,\n            ha: 326,\n            o: 'm 27 1 b 78 12 46 0 62 6 b 347 112 168 45 253 91 b 521 184 409 128 459 167 b 608 259 557 194 589 220 b 612 274 611 265 612 271 b 598 292 612 281 608 287 b 477 347 559 312 518 331 b 176 465 374 384 275 425 b 156 469 168 468 161 469 b 125 456 145 469 137 465 b 53 370 96 432 78 399 b 45 353 48 363 45 357 b 68 333 45 344 52 337 b 360 225 166 298 262 261 b 192 154 302 203 249 171 b 13 36 120 132 53 105 b 0 13 9 29 0 22 l 0 9 b 16 0 3 1 10 0 l 26 0 b 27 1 27 0 27 0 z',\n        },\n        articAccentBelow: {\n            xMin: 0,\n            xMax: 425,\n            yMin: -326,\n            yMax: 0,\n            ha: 326,\n            o: 'm 26 -469 l 27 -469 b 78 -458 46 -469 62 -464 b 347 -357 168 -426 253 -380 b 521 -285 409 -341 459 -302 b 608 -210 557 -276 589 -249 b 612 -196 611 -204 612 -200 b 598 -179 612 -189 608 -183 b 477 -122 559 -157 518 -138 b 176 -4 374 -85 275 -45 b 156 0 168 -1 161 0 b 125 -13 145 0 137 -4 b 53 -99 96 -37 78 -71 b 45 -117 48 -107 45 -112 b 68 -137 45 -125 52 -132 b 360 -245 166 -171 262 -209 b 192 -315 302 -266 249 -300 b 13 -433 120 -337 53 -366 b 0 -456 9 -442 0 -448 l 0 -461 b 16 -469 3 -468 10 -469 z',\n        },\n        articTenutoAbove: {\n            xMin: 0,\n            xMax: 471,\n            yMin: 0,\n            yMax: 56,\n            ha: 56,\n            o: 'm 137 0 b 197 1 156 0 179 1 b 409 6 268 1 338 6 b 482 4 432 6 459 6 b 556 0 508 3 534 0 b 651 10 588 0 621 3 b 678 27 662 12 678 10 b 654 59 680 45 672 53 b 511 75 606 73 560 73 b 255 81 426 78 341 81 b 160 79 222 81 193 79 l 36 79 b 1 71 24 78 7 85 b 19 32 -3 56 9 43 b 45 16 26 24 36 20 b 137 0 76 3 108 0 z',\n        },\n        articTenutoBelow: {\n            xMin: 0,\n            xMax: 471,\n            yMin: -59,\n            yMax: -3,\n            ha: 56,\n            o: 'm 137 -85 b 197 -84 156 -85 179 -84 b 409 -79 268 -84 338 -79 b 482 -81 432 -79 459 -79 b 556 -85 508 -82 534 -85 b 651 -75 588 -85 621 -82 b 678 -58 662 -73 678 -75 b 654 -26 680 -40 672 -32 b 511 -10 606 -12 560 -12 b 255 -4 426 -7 341 -4 b 160 -6 222 -4 193 -6 l 36 -6 b 1 -14 24 -7 7 0 b 19 -53 -3 -29 9 -42 b 45 -69 26 -60 36 -65 b 137 -85 76 -82 108 -85 z',\n        },\n        articStaccatoAbove: {\n            xMin: 1,\n            xMax: 112,\n            yMin: 0,\n            yMax: 156,\n            ha: 156,\n            o: 'm 98 0 b 132 23 109 0 122 7 b 161 112 150 50 161 79 b 158 148 161 124 161 137 b 125 186 154 167 131 167 b 63 225 117 215 85 216 b 23 197 45 222 30 219 b 3 91 12 163 12 127 b 19 66 0 79 4 69 b 65 27 40 62 53 46 b 98 0 76 9 88 0 z',\n        },\n        articStaccatoBelow: {\n            xMin: 1,\n            xMax: 112,\n            yMin: -156,\n            yMax: 0,\n            ha: 156,\n            o: 'm 132 -202 b 161 -112 151 -174 163 -145 b 158 -76 161 -101 161 -88 b 125 -39 153 -58 131 -58 b 63 0 115 -10 85 -9 b 23 -27 45 -3 30 -6 b 3 -134 12 -62 10 -98 b 19 -158 0 -145 4 -156 b 65 -197 40 -164 53 -179 b 98 -225 75 -216 88 -225 b 132 -202 109 -225 122 -217 z',\n        },\n        articStaccatissimoAbove: {\n            xMin: 0,\n            xMax: 139,\n            yMin: 0,\n            yMax: 411,\n            ha: 411,\n            o: 'm 104 0 b 144 115 143 29 138 75 b 197 423 158 217 180 320 b 200 454 199 433 200 444 b 181 540 200 482 193 513 b 112 592 167 573 141 592 b 55 567 92 592 72 585 b 0 490 32 546 3 527 l 0 484 b 27 279 14 416 14 347 b 84 20 43 193 52 104 b 96 0 86 13 92 6 z',\n        },\n        articStaccatissimoBelow: {\n            xMin: 0,\n            xMax: 139,\n            yMin: -411,\n            yMax: 0,\n            ha: 411,\n            o: 'm 88 -592 b 145 -567 108 -592 128 -585 b 200 -490 168 -546 197 -527 l 200 -484 b 173 -279 186 -416 186 -347 b 117 -20 157 -193 148 -104 b 104 0 114 -13 108 -6 l 96 0 b 56 -115 58 -29 62 -75 b 3 -423 42 -217 20 -320 b 0 -454 1 -433 0 -444 b 19 -540 0 -482 7 -513 b 88 -592 33 -573 59 -592 z',\n        },\n        articMarcatoAbove: {\n            xMin: 0,\n            xMax: 396,\n            yMin: 0,\n            yMax: 328,\n            ha: 328,\n            o: 'm 477 0 b 510 13 488 0 500 6 b 570 124 546 40 563 81 b 547 183 570 147 560 166 b 356 422 487 265 405 330 b 346 442 354 429 350 436 l 346 444 b 318 465 340 456 330 464 l 312 469 b 274 449 294 480 284 461 b 242 413 262 438 253 425 b 56 196 177 343 112 274 b 1 56 26 154 13 105 b 27 20 -4 35 9 20 b 42 23 32 20 37 20 b 84 53 59 29 72 39 b 255 269 141 125 193 200 b 275 229 262 255 266 242 b 448 14 324 151 390 86 b 477 0 456 4 467 0 z',\n        },\n        articMarcatoBelow: {\n            xMin: 0,\n            xMax: 396,\n            yMin: -328,\n            yMax: 0,\n            ha: 328,\n            o: 'm 258 -469 b 297 -449 276 -480 287 -461 b 328 -413 308 -438 317 -425 b 514 -196 393 -343 458 -274 b 569 -56 544 -154 557 -105 b 543 -20 575 -35 562 -20 b 528 -23 539 -20 533 -20 b 487 -53 511 -29 498 -39 b 315 -269 429 -125 377 -200 b 295 -229 308 -255 304 -242 b 122 -14 246 -151 180 -86 b 94 0 114 -4 104 0 b 60 -13 82 0 71 -6 b 0 -124 24 -40 7 -81 b 23 -183 0 -147 10 -166 b 215 -422 84 -265 166 -330 b 225 -442 216 -429 220 -436 l 225 -444 b 252 -465 230 -456 240 -464 z',\n        },\n        fermataAbove: {\n            xMin: 0,\n            xMax: 472,\n            yMin: 2,\n            yMax: 454,\n            ha: 452,\n            o: 'm 39 10 b 78 108 66 37 71 73 b 163 311 92 181 111 252 b 284 423 199 353 239 392 b 373 458 312 444 340 454 b 433 431 395 458 410 446 b 603 153 530 361 596 276 b 595 121 603 144 595 131 l 595 88 b 602 50 596 75 589 55 b 639 73 619 43 631 60 b 651 102 645 82 648 92 b 667 194 660 132 662 163 b 680 278 671 222 672 248 b 560 567 680 386 638 481 b 396 654 508 625 452 649 b 291 632 364 654 325 644 b 161 526 235 613 200 566 b 4 249 85 446 26 357 b 4 174 0 222 -3 196 b 10 19 4 124 4 69 b 29 4 12 6 16 0 b 39 10 35 4 33 4 z m 338 37 b 370 40 350 36 357 36 b 380 75 387 40 380 43 b 389 94 382 79 382 85 b 356 132 389 111 374 122 b 269 154 328 147 300 156 b 225 125 252 154 228 157 b 261 48 222 81 232 56 b 338 37 287 40 312 40 z',\n        },\n        fermataBelow: {\n            xMin: 0,\n            xMax: 519,\n            yMin: -430,\n            yMax: -1,\n            ha: 429,\n            o: 'm 344 -615 b 500 -543 402 -602 452 -576 b 713 -253 605 -471 661 -364 b 746 -98 737 -204 750 -153 b 727 -59 744 -82 744 -59 b 688 -88 711 -59 694 -68 b 678 -109 687 -96 683 -102 b 562 -314 648 -183 611 -252 b 387 -439 516 -373 458 -416 b 328 -449 367 -446 347 -449 b 180 -386 274 -449 225 -423 b 69 -179 111 -330 69 -262 b 75 -121 69 -160 71 -141 b 84 -58 78 -101 84 -79 b 82 -39 84 -52 84 -45 b 68 -1 79 -26 82 -4 b 26 -32 49 0 33 -12 b 20 -52 24 -39 22 -45 b 0 -223 9 -107 -3 -161 b 141 -553 1 -348 27 -468 b 304 -619 192 -590 243 -619 b 344 -615 317 -619 330 -618 z m 415 -190 b 435 -157 429 -192 435 -184 b 308 -27 435 -86 379 -27 b 271 -46 287 -27 272 -35 b 269 -69 269 -55 269 -62 b 364 -183 269 -128 302 -170 z',\n        },\n        fermataLongAbove: {\n            xMin: 0,\n            xMax: 591,\n            yMin: -6,\n            yMax: 337,\n            ha: 343,\n            o: 'm 20 -9 b 36 14 29 -9 35 3 b 49 109 45 45 49 78 b 48 143 49 121 49 131 b 42 312 40 200 45 256 b 63 338 42 331 46 338 b 68 340 65 338 66 338 b 279 333 138 336 209 334 b 760 317 439 330 599 323 b 783 298 775 317 782 315 l 796 161 b 814 17 801 115 802 68 b 851 144 840 45 855 102 b 824 396 842 228 834 312 b 760 468 816 459 812 467 l 55 485 b 1 433 12 487 1 478 l 1 387 b 0 203 1 325 0 264 b 9 17 0 141 3 79 b 20 -9 9 7 6 -9 z m 403 3 b 439 6 413 3 425 4 b 477 42 464 9 474 22 b 478 62 478 49 478 55 l 478 84 b 465 160 478 109 478 135 b 449 173 461 167 459 173 b 354 105 386 179 354 156 b 359 71 354 95 356 84 b 360 65 360 69 360 66 b 403 3 372 14 373 3 z',\n        },\n        fermataLongBelow: {\n            xMin: 0,\n            xMax: 602,\n            yMin: -335,\n            yMax: 7,\n            ha: 342,\n            o: 'm 793 -482 b 851 -444 822 -482 842 -471 b 867 -357 860 -416 867 -387 b 865 -336 867 -350 867 -343 b 851 -189 858 -287 855 -238 b 832 -32 847 -135 840 -84 b 824 -17 832 -26 832 -17 l 822 -17 b 805 -30 816 -19 806 -20 b 798 -88 802 -50 798 -69 b 805 -292 798 -157 801 -225 b 772 -327 806 -318 801 -327 b 360 -324 635 -327 497 -325 b 78 -327 265 -323 171 -327 b 50 -304 59 -327 50 -320 l 50 -297 b 62 -187 55 -261 60 -225 b 71 -60 62 -144 71 -102 b 68 -20 71 -48 71 -33 b 53 10 66 -10 69 10 l 52 10 b 22 -22 37 9 24 -1 b 14 -121 17 -55 16 -89 b 0 -359 10 -200 0 -279 b 6 -452 0 -390 3 -420 b 42 -481 9 -478 20 -481 l 415 -481 l 415 -482 z m 409 -183 b 454 -179 420 -183 435 -181 b 505 -124 487 -176 504 -158 b 505 -89 507 -112 505 -101 b 507 -58 505 -79 507 -68 b 505 -42 507 -52 507 -48 b 485 -10 503 -29 501 -10 b 448 -9 472 -9 461 -9 b 380 -22 425 -9 402 -12 b 363 -46 372 -27 363 -35 l 363 -49 b 364 -114 363 -71 361 -94 b 409 -183 374 -168 377 -183 z',\n        },\n        fermataVeryLongAbove: {\n            xMin: 0,\n            xMax: 715,\n            yMin: -14,\n            yMax: 437,\n            ha: 451,\n            o: 'm 26 -20 b 42 -4 36 -22 39 -12 b 49 53 49 14 49 33 l 49 448 b 69 478 49 467 52 478 l 72 478 b 81 480 75 478 78 478 b 144 477 102 477 122 477 l 207 477 b 943 471 452 477 698 471 b 978 442 966 471 976 467 b 989 99 985 327 985 213 b 999 -19 991 60 995 22 b 1030 62 1028 6 1030 35 b 1021 507 1028 210 1025 359 b 1012 596 1021 537 1017 567 b 976 624 1009 618 998 624 b 507 626 819 624 662 625 b 46 629 353 628 200 629 b 7 590 19 629 7 618 b 0 101 7 428 0 264 b 16 -4 0 65 13 32 b 26 -20 17 -10 22 -19 z m 187 -9 b 207 30 206 -7 204 14 b 207 55 209 37 207 46 b 200 240 210 117 197 179 b 219 262 200 256 203 262 l 223 262 b 456 252 301 258 379 255 l 772 239 b 804 209 792 238 802 235 b 818 69 806 163 809 115 b 834 -4 821 46 816 19 b 857 56 852 13 857 35 b 851 183 857 99 858 141 b 827 360 841 242 841 301 b 786 390 821 383 809 389 b 189 409 588 403 387 402 b 153 377 163 409 153 400 b 173 27 153 259 150 143 b 187 -9 176 13 177 -9 z m 478 3 b 536 10 491 3 510 6 b 582 60 569 14 580 32 l 582 89 l 580 89 b 580 117 580 98 582 107 b 540 171 577 158 572 171 b 521 171 534 171 528 170 b 459 166 500 170 480 168 b 423 132 436 164 423 154 b 428 88 423 118 425 102 b 478 3 438 22 439 4 z',\n        },\n        fermataVeryLongBelow: {\n            xMin: 0,\n            xMax: 686,\n            yMin: -427,\n            yMax: 30,\n            ha: 457,\n            o: 'm 56 -615 b 282 -612 132 -612 207 -613 b 924 -606 497 -608 710 -606 b 973 -570 953 -606 968 -593 b 988 -455 984 -533 991 -494 b 982 -262 984 -390 982 -327 b 976 -69 982 -197 981 -134 b 976 -14 975 -50 976 -33 b 966 43 976 4 975 23 b 940 20 953 37 943 35 b 933 -76 936 -12 933 -45 b 935 -121 933 -91 933 -107 b 940 -307 940 -183 940 -245 l 940 -435 b 919 -458 940 -451 935 -458 b 894 -459 910 -458 903 -458 b 206 -467 665 -461 435 -467 b 88 -467 167 -467 127 -468 b 45 -425 45 -467 42 -465 b 46 -400 46 -416 46 -408 b 43 -325 46 -376 43 -350 b 42 -59 42 -236 42 -148 b 22 17 42 -32 36 -6 b 0 -27 -1 7 0 -10 b 7 -420 0 -158 7 -289 l 7 -474 b 16 -579 7 -510 7 -544 b 56 -615 22 -603 27 -615 z m 789 -390 b 835 -357 816 -392 829 -380 b 850 -256 844 -324 850 -291 b 848 -230 850 -248 850 -239 b 845 -135 845 -199 845 -167 l 845 -72 b 837 23 845 -40 848 -9 b 809 -27 809 14 809 -7 l 809 -222 b 788 -242 809 -238 805 -242 l 203 -229 b 180 -209 186 -229 180 -223 l 180 -160 b 179 -115 180 -145 180 -131 b 179 -50 177 -94 179 -72 b 163 24 179 -26 176 0 b 137 -6 145 19 140 10 b 134 -39 134 -17 134 -27 b 138 -105 134 -60 137 -82 l 138 -197 b 145 -343 138 -246 138 -294 b 179 -377 148 -364 151 -377 b 789 -390 383 -377 586 -380 z m 480 -164 b 566 -65 549 -164 566 -140 b 527 1 566 -10 564 1 b 436 -71 426 1 436 -9 l 436 -88 l 436 -143 b 454 -163 436 -153 439 -161 b 480 -164 464 -163 472 -164 z',\n        },\n        fermataVeryShortAbove: {\n            xMin: 0,\n            xMax: 711,\n            yMin: -31,\n            yMax: 496,\n            ha: 527,\n            o: 'm 1018 -45 b 1024 -1 1021 -29 1024 -14 b 986 105 1024 40 1008 75 b 557 688 845 302 701 495 b 520 714 544 706 531 714 b 480 687 505 714 492 706 b 340 490 433 621 387 556 b 73 127 252 367 168 243 b 0 22 48 95 22 63 b 68 60 33 27 52 42 b 167 170 101 96 132 135 b 494 503 276 279 384 393 b 518 518 504 513 511 518 b 543 501 526 518 533 513 b 923 63 670 356 799 212 b 1018 -45 952 29 984 -4 z m 837 -16 b 838 1 838 -10 838 -4 b 799 82 838 37 818 60 b 560 369 721 179 639 274 b 541 396 553 377 546 386 b 518 422 533 413 527 422 b 491 400 511 422 503 415 b 347 229 445 341 396 285 b 203 45 297 170 239 117 b 184 17 199 36 184 26 b 189 9 184 14 186 12 b 226 26 200 -1 215 19 l 238 35 b 494 245 321 107 408 176 b 510 253 501 251 505 253 b 526 245 514 253 520 251 b 729 73 592 186 660 130 z m 495 0 b 511 6 500 0 505 1 b 556 32 526 16 540 30 b 586 68 583 35 586 50 b 579 115 586 86 582 101 b 533 190 566 168 553 190 b 459 154 516 190 494 177 b 442 122 448 145 442 135 b 445 105 442 117 442 111 b 477 17 456 76 465 46 b 495 0 481 7 487 0 z',\n        },\n        fermataVeryShortBelow: {\n            xMin: 0,\n            xMax: 697,\n            yMin: -475,\n            yMax: 13,\n            ha: 488,\n            o: 'm 507 -383 b 530 -369 514 -383 521 -377 b 775 -130 611 -288 694 -210 b 824 3 811 -94 822 -48 b 789 -7 808 6 799 0 b 521 -212 698 -72 611 -143 b 488 -226 508 -222 498 -226 b 452 -209 477 -226 467 -220 b 202 7 370 -135 285 -65 b 187 19 197 10 193 19 b 179 14 184 19 181 17 b 171 -3 174 10 171 4 b 173 -13 171 -6 171 -9 b 235 -122 186 -53 206 -94 l 484 -370 b 507 -383 492 -379 500 -383 z m 503 -684 b 539 -647 517 -674 528 -661 b 917 -153 665 -482 793 -318 b 999 -24 948 -112 984 -73 b 1004 -10 1001 -20 1004 -16 b 999 -3 1004 -7 1002 -4 b 973 -10 991 1 981 -1 l 963 -23 b 552 -505 825 -184 688 -344 b 528 -521 543 -517 536 -521 b 505 -505 521 -521 514 -516 b 156 -128 393 -374 274 -253 b 27 6 114 -84 72 -39 b 16 17 24 9 22 17 b 9 13 13 17 12 16 b 0 -3 6 10 0 3 b 1 -9 0 -4 0 -7 b 14 -36 4 -17 9 -27 b 117 -179 45 -86 81 -132 b 482 -667 242 -338 360 -504 b 503 -684 487 -672 491 -683 z m 487 -164 b 552 -98 523 -164 552 -137 b 544 -30 550 -78 549 -55 b 521 -1 541 -19 537 -1 l 517 -1 b 446 -29 492 -9 462 0 b 445 -42 444 -32 445 -37 b 464 -145 451 -76 458 -111 b 487 -164 468 -157 467 -164 z',\n        },\n        fermataShortAbove: {\n            xMin: 0,\n            xMax: 545,\n            yMin: -18,\n            yMax: 348,\n            ha: 366,\n            o: 'm 16 -26 b 36 -9 26 -27 30 -16 b 354 340 143 107 249 223 b 369 348 360 346 364 348 b 382 341 373 348 377 346 l 530 199 b 743 0 599 131 672 68 b 753 -7 747 -3 750 -7 b 762 -1 756 -7 759 -6 b 785 84 776 10 785 48 b 768 150 785 112 779 138 l 399 491 b 379 501 392 498 384 501 b 357 488 372 501 364 495 b 27 137 248 370 141 251 b 1 84 12 121 1 105 b 3 69 1 79 1 75 b 0 55 1 65 0 59 b 9 1 0 36 9 20 b 16 -26 10 -7 3 -22 z m 357 24 b 367 27 360 24 363 24 b 431 118 422 42 431 49 b 429 151 431 130 431 141 b 400 193 428 171 429 193 b 333 147 359 193 333 176 b 341 42 333 111 337 78 b 357 24 343 30 346 24 z',\n        },\n        fermataShortBelow: {\n            xMin: 0,\n            xMax: 565,\n            yMin: -335,\n            yMax: 10,\n            ha: 345,\n            o: 'm 386 -482 b 422 -455 395 -482 405 -474 b 732 -117 526 -343 631 -232 b 814 12 765 -79 799 -42 b 752 -22 780 14 768 -7 b 436 -320 645 -120 540 -219 b 419 -328 429 -325 425 -328 b 400 -318 413 -328 408 -325 b 35 0 279 -212 157 -105 b 16 14 29 4 23 14 b 7 12 13 14 10 14 b 0 -3 1 7 0 1 b 7 -23 0 -10 3 -17 b 20 -48 12 -30 14 -39 b 167 -238 60 -117 115 -177 b 351 -455 229 -310 289 -383 b 386 -482 367 -474 377 -482 z m 382 -213 b 406 -207 389 -213 396 -210 b 452 -156 431 -199 446 -180 b 461 -85 456 -132 458 -108 b 448 -32 461 -66 454 -49 b 418 -6 442 -12 431 -6 b 397 -9 410 -6 405 -7 b 348 -50 376 -14 350 -14 b 356 -170 348 -91 354 -130 b 382 -213 357 -199 363 -213 z',\n        },\n        breathMarkComma: {\n            xMin: 0,\n            xMax: 148,\n            yMin: 0,\n            yMax: 275,\n            ha: 275,\n            o: 'm 120 0 b 187 78 156 20 174 48 b 213 209 206 121 213 164 b 206 294 213 238 210 265 b 140 390 200 337 171 367 b 122 396 134 395 128 396 b 68 382 105 396 85 384 b 46 379 60 382 53 382 b 0 328 12 369 0 357 b 1 311 0 323 1 317 b 30 210 4 275 22 243 b 66 167 39 179 46 167 b 94 171 73 167 82 168 b 143 180 109 174 124 180 b 160 179 148 180 154 180 b 120 66 124 145 120 107 b 120 0 120 45 121 23 z',\n        },\n        breathMarkUpbow: {\n            xMin: 0,\n            xMax: 254,\n            yMin: 0,\n            yMax: 595,\n            ha: 595,\n            o: 'm 233 0 b 256 48 251 14 253 30 b 272 183 264 92 265 138 b 311 455 289 274 295 364 b 350 716 327 541 341 628 b 366 815 354 749 366 782 b 359 857 366 829 363 842 b 327 815 334 852 330 832 b 302 674 315 769 310 721 b 248 357 288 567 269 462 b 225 226 240 314 242 268 b 210 251 212 232 213 243 b 69 721 163 408 117 564 b 32 835 58 760 53 801 b 20 851 29 841 27 851 b 14 850 19 851 16 851 b 0 828 6 847 0 838 l 0 825 b 12 765 1 804 7 785 b 194 125 73 552 132 338 b 233 0 206 84 213 42 z',\n        },\n        caesura: {\n            xMin: 0,\n            xMax: 566,\n            yMin: 0,\n            yMax: 562,\n            ha: 563,\n            o: 'm 0 76 b 49 122 24 92 37 107 b 444 613 180 287 305 455 b 528 770 484 660 518 708 b 531 792 530 778 531 785 b 524 808 531 799 530 805 b 490 792 513 815 498 802 b 390 683 456 756 420 721 b 48 262 275 543 164 400 b 0 76 0 207 7 145 z m 226 1 b 248 13 238 -4 243 7 l 353 137 b 759 638 490 302 632 464 b 814 805 795 688 819 740 b 779 786 796 805 788 796 b 628 609 724 732 678 668 b 310 242 523 485 416 363 b 217 69 265 190 217 140 b 222 30 217 58 219 45 b 222 23 222 29 220 26 b 220 12 222 20 220 16 b 226 1 220 7 222 3 z',\n        },\n        caesuraCurved: {\n            xMin: 0,\n            xMax: 386,\n            yMin: -10,\n            yMax: 584,\n            ha: 594,\n            o: 'm 180 -14 b 246 14 213 -13 230 0 b 347 144 288 52 315 99 b 526 471 420 246 488 350 b 556 671 546 537 556 603 b 543 798 556 713 553 756 b 504 837 537 822 521 828 b 490 841 500 840 494 841 b 472 832 482 841 477 838 b 406 678 436 785 406 737 b 410 638 406 665 408 652 b 425 511 419 595 425 553 b 315 186 425 395 387 287 b 180 -14 271 122 228 58 z m 14 24 b 49 39 29 24 40 32 b 120 114 76 60 99 85 b 216 276 156 166 184 223 b 317 626 281 384 317 501 b 315 664 317 639 317 651 b 301 773 314 701 311 737 b 262 808 295 795 278 808 b 245 799 256 808 249 805 b 170 641 209 750 170 706 b 171 621 170 634 170 628 b 177 511 176 585 177 549 b 114 229 177 415 160 320 b 0 26 79 161 42 95 b 14 24 6 24 10 24 z',\n        },\n        restMaxima: {\n            xMin: 0,\n            xMax: 366,\n            yMin: -255,\n            yMax: 255,\n            ha: 510,\n            o: 'm 397 -367 b 504 -343 436 -367 468 -347 b 518 -318 516 -341 518 -330 b 527 -30 518 -217 527 -117 b 526 33 527 -7 527 13 l 526 301 b 501 350 526 323 520 341 b 428 367 477 361 452 367 b 374 359 410 367 393 364 b 357 333 361 354 357 347 b 356 91 357 252 356 171 l 356 30 b 340 -307 357 -82 346 -194 b 397 -367 337 -354 350 -367 z m 46 -357 b 58 -356 49 -357 53 -357 b 154 -333 91 -351 121 -338 b 173 -305 168 -330 173 -320 l 173 302 b 132 356 173 330 157 348 b 68 364 112 363 89 364 b 3 304 19 363 1 348 l 3 4 l 0 4 b 1 -302 0 -98 0 -200 b 46 -357 1 -331 16 -357 z',\n        },\n        restDoubleWhole: {\n            xMin: 0,\n            xMax: 122,\n            yMin: 0,\n            yMax: 249,\n            ha: 249,\n            o: 'm 43 0 b 58 1 48 0 52 0 b 124 20 81 6 102 17 b 176 96 173 27 176 58 b 173 220 174 138 173 179 b 176 304 173 248 176 276 b 140 353 176 331 163 346 b 95 359 125 356 111 359 b 32 346 73 359 52 354 b 0 315 20 340 0 337 b 1 243 0 291 1 268 l 1 174 l 4 174 l 4 48 b 43 0 4 16 17 0 z',\n        },\n        restWhole: {\n            xMin: 1,\n            xMax: 500,\n            yMin: -120,\n            yMax: 14,\n            ha: 134,\n            o: 'm 356 -173 l 356 -171 l 642 -171 b 719 -115 680 -171 717 -145 b 720 -82 719 -104 720 -92 b 711 -20 720 -60 719 -40 b 672 17 704 0 694 10 b 649 20 664 20 657 20 b 605 17 634 20 621 17 b 92 19 433 17 262 17 b 29 7 69 20 49 12 b 9 -17 12 4 9 -6 b 10 -43 9 -26 10 -35 b 1 -84 10 -58 3 -72 b 76 -173 0 -147 7 -173 z',\n        },\n        restWholeLegerLine: {\n            xMin: -197,\n            xMax: 685,\n            yMin: -157,\n            yMax: 29,\n            ha: 186,\n            o: 'm 96 -226 b 167 -223 121 -226 144 -225 b 300 -222 207 -222 252 -222 l 444 -222 b 660 -217 520 -222 595 -222 b 746 -131 703 -216 746 -200 b 744 -62 746 -108 747 -85 b 743 -39 743 -53 743 -46 b 789 -14 743 -16 752 -17 b 883 -16 821 -13 851 -16 b 965 -9 910 -16 937 -14 b 986 3 972 -7 986 -10 l 986 6 b 963 35 984 17 982 32 b 887 42 937 39 913 42 b 39 27 605 42 321 33 l -76 27 b -261 20 -138 27 -200 26 b -282 14 -269 20 -279 23 b -271 -7 -287 4 -276 -1 b -209 -27 -253 -23 -230 -24 b -153 -30 -190 -30 -173 -30 b -48 -29 -118 -30 -82 -27 b 6 -32 -22 -29 -6 -27 b 1 -72 3 -43 1 -58 b 4 -167 1 -105 7 -140 b 53 -223 3 -207 14 -217 b 96 -226 68 -226 82 -226 z',\n        },\n        restHalf: {\n            xMin: 0,\n            xMax: 518,\n            yMin: 0,\n            yMax: 162,\n            ha: 162,\n            o: 'm 98 0 l 556 0 b 665 1 592 0 629 0 b 746 82 720 3 743 29 b 736 174 749 114 740 144 b 670 232 729 215 708 232 b 570 229 636 232 603 229 b 356 233 498 229 426 233 l 73 233 b 0 179 19 233 0 220 b 1 154 0 171 0 164 b 6 95 4 135 6 115 b 98 0 3 27 29 0 z',\n        },\n        restHalfLegerLine: {\n            xMin: -120,\n            xMax: 448,\n            yMin: -20,\n            yMax: 143,\n            ha: 163,\n            o: 'm 397 -29 b 482 -23 426 -29 455 -27 b 526 -24 497 -24 511 -24 b 608 -17 554 -24 582 -23 b 645 -1 622 -14 644 -17 b 615 26 648 13 629 20 b 595 32 608 29 602 30 b 526 37 572 35 549 37 b 498 36 517 37 507 37 b 471 35 487 35 478 35 b 445 53 451 35 445 39 b 449 89 445 60 446 73 l 454 117 b 373 206 456 173 428 206 b 324 204 356 206 340 206 b 209 203 287 203 248 203 b 46 193 156 203 101 202 b 16 170 32 190 19 187 b 9 112 13 151 9 131 b 14 78 9 101 10 89 b 19 59 17 71 19 63 b -4 45 19 49 12 45 l -10 45 b -150 33 -58 45 -104 46 b -173 22 -158 32 -173 33 l -173 19 b -151 -13 -170 6 -168 -10 b -117 -17 -140 -16 -128 -17 b 118 -13 -37 -17 39 -13 b 397 -29 213 -13 308 -29 z',\n        },\n        restQuarter: {\n            xMin: 0,\n            xMax: 263,\n            yMin: -415,\n            yMax: 415,\n            ha: 830,\n            o: 'm 151 -596 b 164 -563 163 -589 161 -575 b 160 -546 164 -557 161 -552 b 124 -396 148 -495 135 -446 b 122 -380 122 -390 122 -384 b 199 -255 122 -331 158 -272 b 228 -256 209 -249 217 -253 b 324 -346 274 -271 298 -310 b 353 -369 331 -356 341 -369 b 360 -367 356 -369 357 -369 b 379 -336 373 -361 379 -348 l 377 -325 b 344 -232 372 -292 366 -258 b 249 -58 301 -180 278 -117 b 242 -36 245 -49 242 -42 b 258 -7 242 -26 248 -17 b 328 78 284 20 311 45 b 354 158 344 104 354 131 b 337 216 354 177 350 196 b 213 435 294 288 249 359 b 115 575 189 487 158 536 b 78 598 105 585 92 598 b 59 592 72 598 66 596 b 39 562 45 583 39 572 b 53 527 39 550 45 539 b 168 344 98 469 125 402 b 187 307 181 328 187 317 b 153 269 187 294 176 284 b 62 213 122 252 91 235 b 40 180 48 203 40 192 b 46 158 40 173 43 166 b 99 65 60 125 79 95 b 183 -79 131 20 160 -29 b 156 -86 173 -88 164 -85 b 0 -261 58 -99 -7 -173 b 96 -557 10 -366 49 -464 b 124 -585 102 -569 109 -580 b 145 -598 132 -588 138 -598 b 151 -596 147 -598 150 -598 z',\n        },\n        rest8th: {\n            xMin: 0,\n            xMax: 289,\n            yMin: -260,\n            yMax: 261,\n            ha: 521,\n            o: 'm 164 -374 b 212 -340 190 -373 203 -357 b 276 -190 238 -292 258 -242 b 410 285 333 -36 359 128 b 416 314 413 294 416 304 l 416 321 b 393 354 415 341 410 354 b 382 353 389 354 386 354 b 292 311 347 347 315 333 b 174 225 256 276 216 251 b 157 219 168 222 163 219 b 140 228 151 219 145 222 b 131 246 134 233 131 240 b 135 262 131 252 132 256 b 147 298 141 272 147 285 b 127 367 147 323 154 354 b 94 376 114 373 102 376 b 48 336 75 376 63 363 b 3 181 20 288 12 235 b 0 150 1 170 0 160 b 109 24 0 84 35 24 b 171 36 127 24 148 27 b 289 101 213 52 248 75 b 164 -374 256 -62 193 -213 z',\n        },\n        rest16th: {\n            xMin: 0,\n            xMax: 333,\n            yMin: -328,\n            yMax: 244,\n            ha: 572,\n            o: 'm 209 -471 b 246 -458 222 -477 236 -468 b 307 -338 279 -425 300 -384 b 324 -226 312 -301 317 -262 b 428 161 350 -94 386 35 b 480 318 445 215 480 259 b 467 347 480 331 477 341 b 445 351 461 350 454 351 b 408 337 432 351 419 347 b 402 333 405 336 403 334 b 223 215 344 294 294 245 b 236 259 229 233 235 246 b 238 276 238 265 238 271 b 212 338 238 302 226 334 b 193 341 206 340 199 341 b 86 289 156 341 104 317 b 59 180 66 255 59 217 b 156 27 59 76 92 27 b 236 46 179 27 204 35 b 338 101 271 59 298 82 b 289 -49 312 49 302 0 b 196 -122 276 -99 235 -107 b 176 -114 187 -127 176 -127 l 176 -111 b 157 -53 177 -88 164 -72 b 69 -9 141 -7 101 -16 b 17 -48 43 -3 29 -27 b 0 -127 4 -73 0 -99 b 6 -186 0 -147 1 -167 b 82 -294 17 -262 37 -294 b 160 -276 102 -294 128 -289 b 219 -242 181 -268 203 -259 b 236 -230 223 -236 229 -230 b 243 -232 239 -230 240 -230 b 235 -275 248 -246 239 -261 b 202 -456 220 -334 202 -395 b 209 -471 202 -462 203 -468 z',\n        },\n        rest32nd: {\n            xMin: 0,\n            xMax: 347,\n            yMin: -498,\n            yMax: 483,\n            ha: 981,\n            o: 'm 177 -716 b 217 -690 194 -720 209 -704 b 233 -655 225 -680 230 -668 b 292 -390 253 -567 275 -480 b 361 -48 312 -275 336 -161 b 452 400 393 102 422 252 b 497 629 467 477 482 553 b 500 647 498 635 500 641 b 480 691 500 665 492 684 b 464 696 475 694 469 696 b 418 674 448 696 431 685 l 361 626 b 333 611 353 618 343 612 b 308 629 325 611 317 616 b 239 667 292 651 265 661 b 204 670 228 668 216 670 b 86 559 141 670 95 628 b 85 537 86 552 85 544 b 107 416 85 495 95 455 b 161 372 114 389 134 372 b 174 373 166 372 170 372 b 226 383 192 374 209 377 b 387 478 285 402 330 444 b 364 386 379 444 364 415 b 276 271 364 323 320 298 b 265 266 272 268 268 266 b 252 276 261 266 256 269 b 143 333 229 311 186 333 b 107 327 130 333 118 330 b 43 243 62 314 46 291 b 58 145 43 210 52 179 b 150 63 68 92 99 63 b 315 132 213 63 259 98 b 266 -58 297 63 281 4 b 207 -101 259 -91 230 -96 b 186 -66 186 -107 199 -75 b 180 -50 181 -63 183 -55 b 101 -3 160 -23 135 -3 b 9 -66 59 -3 20 -32 b 0 -118 3 -84 0 -101 b 10 -196 0 -144 6 -170 b 104 -287 20 -256 52 -287 b 137 -282 114 -287 125 -287 b 184 -269 151 -281 171 -269 b 196 -275 190 -269 193 -271 b 199 -287 197 -278 199 -282 b 184 -343 199 -304 189 -325 b 181 -348 184 -346 183 -347 b 134 -595 158 -429 131 -508 b 156 -677 134 -624 150 -648 b 177 -716 158 -693 160 -713 z',\n        },\n        rest64th: {\n            xMin: 0,\n            xMax: 428,\n            yMin: -720,\n            yMax: 474,\n            ha: 1194,\n            o: 'm 200 -1037 b 229 -1012 215 -1037 222 -1025 b 238 -984 233 -1004 236 -994 b 282 -780 248 -914 265 -848 b 386 -369 317 -644 354 -507 b 491 104 422 -212 451 -53 b 600 541 528 249 550 399 b 616 629 611 570 616 599 b 600 680 616 648 615 671 b 550 665 586 687 566 677 b 480 618 527 649 501 635 b 464 611 474 613 468 611 b 448 622 458 611 454 615 b 366 662 425 651 397 662 b 331 658 354 662 343 661 b 242 572 285 647 253 619 b 236 528 239 557 236 543 b 266 400 236 484 251 442 b 325 373 274 377 301 373 b 436 409 366 373 403 383 l 494 452 b 474 360 485 416 474 389 b 383 248 474 297 435 269 b 320 328 377 288 351 310 b 276 341 305 337 291 341 b 186 269 235 341 194 311 b 181 230 183 256 181 243 b 187 153 181 204 186 179 b 279 63 192 86 233 63 b 304 65 288 63 295 63 b 416 115 344 72 379 92 b 387 -14 406 69 397 27 b 320 -95 380 -52 369 -86 b 318 -79 320 -89 320 -84 b 223 0 305 -29 271 0 b 122 -81 171 0 135 -30 b 118 -127 120 -96 118 -112 l 118 -196 b 137 -242 118 -215 125 -229 b 209 -275 157 -266 181 -275 b 249 -269 222 -275 235 -274 b 318 -248 272 -264 294 -255 b 281 -390 315 -301 292 -344 b 276 -400 279 -393 279 -397 b 259 -420 272 -408 266 -416 b 246 -429 255 -425 251 -429 b 233 -415 242 -429 238 -426 b 176 -359 225 -389 200 -372 b 121 -346 158 -348 140 -346 b 14 -408 73 -346 27 -370 b 0 -498 4 -438 0 -468 b 6 -564 0 -520 3 -543 b 91 -635 12 -611 45 -635 b 131 -629 104 -635 117 -634 b 223 -590 163 -622 190 -603 b 166 -824 203 -671 189 -747 b 148 -912 157 -852 148 -881 b 156 -955 148 -926 150 -940 b 177 -1008 161 -972 170 -991 b 200 -1037 181 -1020 183 -1037 z',\n        },\n        rest128th: {\n            xMin: 1,\n            xMax: 491,\n            yMin: -711,\n            yMax: 719,\n            ha: 1430,\n            o: 'm 233 -1015 b 271 -956 256 -1002 266 -981 l 314 -723 b 393 -350 337 -598 366 -474 b 543 312 442 -128 492 91 b 687 841 583 490 635 665 b 707 958 698 880 707 919 b 706 986 707 968 707 976 b 688 1025 704 999 704 1024 b 670 1027 683 1025 677 1027 b 629 1007 655 1027 639 1022 b 559 945 613 981 586 968 b 541 1004 553 968 559 991 b 456 1035 516 1024 488 1035 b 419 1030 444 1035 431 1034 b 344 953 379 1018 353 995 b 340 900 341 936 340 917 b 341 847 340 881 341 864 b 380 779 340 815 354 793 b 464 763 406 765 435 762 b 592 814 510 763 549 786 b 546 660 575 757 556 710 b 480 585 537 619 517 598 b 478 599 480 590 478 595 b 386 678 472 641 428 678 b 294 612 343 678 304 651 b 279 477 282 567 278 521 b 363 395 281 428 317 395 b 380 396 369 395 374 395 b 488 436 416 403 449 419 b 384 233 469 357 468 275 b 359 291 373 252 377 276 b 282 318 337 310 310 318 b 181 264 243 318 203 298 b 154 107 153 216 154 161 b 242 6 154 42 187 6 b 278 10 253 6 265 7 b 408 88 330 22 366 55 b 387 -1 400 56 393 27 b 301 -112 379 -55 354 -94 b 289 -65 297 -95 302 -79 b 219 -32 269 -42 245 -32 b 183 -37 207 -32 196 -35 b 112 -109 144 -46 121 -71 b 105 -219 104 -145 108 -183 b 186 -315 101 -276 134 -315 b 230 -307 199 -315 215 -312 b 324 -256 264 -295 292 -275 b 180 -491 323 -383 266 -471 b 183 -459 180 -480 180 -469 b 184 -442 184 -454 184 -448 l 184 -436 b 135 -369 184 -403 170 -383 b 102 -363 125 -364 114 -363 b 29 -399 73 -363 45 -376 b 1 -556 -4 -448 6 -503 b 109 -670 -4 -625 43 -670 b 140 -667 118 -670 130 -668 b 253 -616 180 -658 213 -638 b 238 -688 248 -644 242 -665 b 192 -959 220 -779 192 -867 b 193 -992 192 -971 192 -981 b 210 -1024 194 -1014 199 -1024 b 233 -1015 216 -1024 223 -1021 z',\n        },\n        dynamicPiano: {\n            xMin: -49,\n            xMax: 327,\n            yMin: -142,\n            yMax: 515,\n            ha: 657,\n            o: 'm -56 -204 b -42 -202 -52 -204 -46 -203 b -19 -194 -35 -202 -26 -197 b 147 -138 35 -170 91 -151 b 249 -58 194 -127 223 -95 b 262 -29 255 -50 262 -39 b 258 -17 262 -24 261 -20 b 232 -7 252 -10 242 -7 b 210 -12 225 -7 217 -9 b 125 -40 184 -23 157 -30 b 183 140 153 19 171 79 b 251 167 207 144 230 153 b 469 518 383 262 480 382 b 357 687 472 626 420 687 b 315 678 344 687 330 684 b 204 600 279 664 240 634 b 210 704 206 635 209 670 b 215 721 212 710 215 716 b 206 733 215 727 212 730 b 180 742 197 736 189 742 b 164 734 176 742 170 740 b 1 575 108 684 36 645 b -7 557 -1 569 -7 563 b -6 553 -7 556 -7 554 b 7 547 -3 547 3 547 l 17 547 b 82 575 43 547 59 567 l 82 452 b 56 46 82 317 81 180 b 17 -66 49 7 46 -36 b -62 -173 -13 -99 -37 -135 b -71 -192 -66 -179 -71 -184 b -68 -199 -71 -193 -69 -196 b -56 -204 -65 -203 -60 -204 z m 196 258 b 197 266 197 261 197 264 b 200 510 200 347 199 429 b 233 543 210 521 222 533 b 281 560 249 554 266 560 b 340 503 310 560 333 540 b 344 461 343 488 344 474 b 321 323 344 413 333 369 b 268 272 315 300 295 281 b 196 258 245 265 220 261 z',\n        },\n        dynamicMezzo: {\n            xMin: -18,\n            xMax: 559,\n            yMin: -50,\n            yMax: 365,\n            ha: 415,\n            o: 'm 43 -71 b 160 19 86 -71 143 -26 b 230 264 189 99 200 184 b 282 363 243 297 259 327 b 287 320 285 347 287 333 b 284 279 287 305 285 292 l 249 -12 b 275 -43 248 -29 245 -43 b 395 45 321 -43 389 3 b 462 271 406 124 436 197 b 523 387 475 310 490 348 l 523 346 b 504 130 521 274 513 202 b 501 81 501 114 501 98 b 510 3 501 55 504 29 b 580 -72 521 -48 543 -72 b 625 -63 593 -72 608 -69 b 789 50 690 -43 744 -3 b 805 72 795 56 805 63 b 798 85 805 76 802 81 b 778 94 792 91 785 94 b 755 85 770 94 763 91 l 693 40 b 675 33 685 36 680 33 b 658 52 668 33 662 39 b 645 144 651 82 645 112 b 658 448 641 246 660 346 b 606 507 658 485 638 507 b 583 504 599 507 592 505 b 495 446 547 497 521 471 b 420 373 471 423 448 399 b 413 458 418 406 418 432 b 361 507 408 490 386 507 b 320 491 347 507 333 501 b 160 307 256 444 207 382 l 160 337 b 174 488 160 387 174 438 b 156 521 174 501 173 513 b 137 526 148 524 143 526 b 109 513 127 526 118 520 b -16 399 66 477 23 439 b -26 383 -20 395 -26 389 l -26 379 b -14 370 -24 372 -20 370 b -6 372 -12 370 -9 372 b 19 376 4 374 12 376 b 36 359 32 376 36 370 b 30 330 36 350 35 341 l 30 323 b 9 -35 23 203 17 85 b 43 -71 6 -65 19 -71 z',\n        },\n        dynamicForte: {\n            xMin: -144,\n            xMax: 311,\n            yMin: -115,\n            yMax: 504,\n            ha: 619,\n            o: 'm -101 -166 b 173 76 7 -153 150 -30 b 206 344 192 164 202 253 b 268 338 226 343 246 341 b 384 395 317 333 353 361 b 397 419 393 405 397 412 b 367 442 397 429 387 436 b 350 444 361 444 356 444 b 206 455 302 449 255 454 l 206 474 b 202 540 204 495 202 518 b 209 593 202 557 203 576 b 236 624 215 613 225 624 b 265 612 245 624 253 619 b 308 552 287 596 302 577 b 336 533 312 534 323 533 b 448 611 366 533 444 583 b 399 696 452 648 423 671 b 382 706 395 700 387 703 b 308 726 357 720 333 726 b 207 684 272 726 239 711 b 60 455 135 622 60 560 l 10 455 b -23 448 -1 455 -13 454 b -102 372 -55 426 -76 397 b -109 357 -108 367 -109 361 b -95 347 -109 353 -105 348 b -63 346 -84 346 -73 346 b 0 344 -43 344 -22 344 l 63 344 b 53 186 63 291 59 239 b 23 0 46 124 42 60 b -35 -60 10 -42 -6 -60 b -73 -52 -45 -60 -58 -58 b -91 -48 -79 -49 -85 -48 b -109 -53 -96 -48 -102 -49 b -199 -124 -143 -72 -168 -99 b -207 -137 -203 -128 -207 -132 b -194 -148 -207 -141 -203 -145 b -101 -166 -164 -160 -132 -168 z',\n        },\n        dynamicRinforzando: {\n            xMin: -75,\n            xMax: 322,\n            yMin: -90,\n            yMax: 325,\n            ha: 415,\n            o: 'm 23 -130 b 40 -125 27 -130 33 -128 b 128 -9 81 -114 125 -53 b 145 200 132 62 141 130 b 148 238 147 212 148 225 b 308 321 184 291 245 321 b 363 314 325 321 344 318 b 377 310 369 312 373 310 b 384 311 380 310 382 310 b 464 415 410 317 464 389 b 446 433 465 429 455 429 b 390 445 428 441 409 445 b 305 429 361 445 334 438 b 167 346 252 413 202 393 b 153 325 163 338 158 333 b 148 438 154 363 151 399 b 121 468 147 456 134 468 b 101 458 115 468 108 465 b -63 310 46 409 -16 367 b -108 240 -78 289 -98 271 b 32 330 -50 256 -13 297 b 37 304 37 320 37 312 l 37 292 b 10 -101 27 161 20 30 b 23 -130 9 -120 12 -130 z',\n        },\n        dynamicSforzando: {\n            xMin: 0,\n            xMax: 296,\n            yMin: 0,\n            yMax: 379,\n            ha: 379,\n            o: 'm 151 0 b 174 1 160 0 166 0 b 392 158 272 14 346 71 b 405 207 400 174 405 190 b 359 287 405 236 389 265 b 261 325 328 308 294 315 b 168 413 216 340 181 366 b 166 426 167 418 166 423 b 176 438 166 432 167 436 b 199 441 183 441 190 441 b 310 393 238 441 295 422 b 334 370 317 376 325 370 b 363 386 343 370 353 379 b 422 445 386 402 408 420 b 426 458 425 449 426 454 b 422 469 426 462 425 465 b 274 546 395 518 333 546 b 161 503 232 546 190 531 b 86 405 132 472 108 439 b 71 347 75 387 71 367 b 112 256 71 312 85 279 b 209 215 141 232 176 226 b 284 168 238 206 266 197 b 300 131 291 157 300 144 b 298 120 300 127 298 122 b 278 107 294 109 285 108 b 262 108 271 107 266 108 l 259 108 b 114 157 200 107 156 125 b 96 181 104 163 96 170 l 96 184 b 102 202 96 190 102 196 b 96 209 102 204 101 207 b 63 194 82 215 72 204 b 7 109 42 168 26 138 b 0 86 3 101 0 94 b 13 60 0 78 4 68 b 151 0 53 23 101 0 z',\n        },\n        dynamicZ: {\n            xMin: -43,\n            xMax: 331,\n            yMin: 0,\n            yMax: 328,\n            ha: 328,\n            o: 'm -45 0 b -6 16 -32 0 -17 10 b 3 20 -3 16 0 19 b 144 60 49 48 96 60 b 284 22 190 60 238 46 b 348 4 305 10 327 4 b 461 75 393 4 435 30 b 468 91 464 81 467 86 b 456 104 468 95 465 99 b 287 173 402 131 348 167 b 239 176 271 174 255 176 b 168 174 217 176 194 174 b 367 340 236 236 298 294 b 459 423 402 363 432 392 b 477 454 467 431 475 442 b 474 462 477 456 475 459 b 454 472 469 469 462 472 b 432 468 446 472 439 469 b 356 448 406 461 380 455 b 210 422 307 433 258 422 b 109 442 177 422 144 428 b 94 445 104 444 99 445 b 69 433 85 445 76 442 b 27 390 56 419 39 406 b -9 343 16 373 -17 357 b 63 311 3 320 36 314 l 78 311 b 132 307 95 308 114 307 b 240 314 168 307 203 311 l 193 271 b -37 50 117 196 19 145 b -59 7 -46 36 -69 20 b -45 0 -55 3 -50 0 z',\n        },\n        ornamentTrill: {\n            xMin: 1,\n            xMax: 551,\n            yMin: -18,\n            yMax: 539,\n            ha: 557,\n            o: 'm 321 612 b 190 602 278 605 235 605 l 190 638 b 187 693 190 652 190 667 b 161 776 184 717 193 776 b 137 747 150 776 137 766 b 130 654 135 716 131 685 l 130 596 l 52 588 b 4 539 23 585 7 570 b 1 477 3 530 1 500 b 3 448 1 461 3 448 l 3 452 b 53 432 6 436 23 432 b 134 435 75 432 102 433 b 151 117 138 328 147 223 b 170 13 153 82 157 46 b 209 -26 179 -10 193 -26 b 222 -22 213 -26 217 -24 b 269 -17 233 -16 253 -27 b 343 135 325 19 346 66 b 343 158 343 147 344 147 b 323 192 341 171 337 187 b 291 176 311 194 300 184 l 264 148 b 229 131 261 145 238 131 b 212 170 209 131 213 154 b 194 438 203 259 199 348 l 272 442 b 284 452 276 441 279 441 b 305 462 287 461 295 462 l 312 462 b 346 477 325 462 340 464 b 366 560 357 503 366 531 b 321 612 366 598 356 618 z m 759 588 b 711 560 749 592 733 570 b 588 500 671 541 631 521 b 583 533 586 514 586 524 b 560 576 577 549 577 572 b 517 550 541 582 528 564 b 416 423 482 508 452 462 b 382 353 392 397 384 370 b 387 305 380 341 386 318 b 392 275 389 295 392 285 b 409 243 393 262 393 243 b 431 262 419 243 425 255 b 521 373 459 298 488 333 b 523 354 521 366 523 360 b 520 337 523 346 521 340 b 508 295 513 323 508 310 b 530 102 508 279 524 122 b 549 66 533 88 530 66 b 577 99 563 66 572 84 b 580 131 580 109 580 121 l 580 302 b 600 347 580 318 582 337 b 701 392 632 364 665 384 b 793 518 785 409 793 435 b 759 588 793 559 785 576 z',\n        },\n        ornamentTurn: {\n            xMin: 0,\n            xMax: 574,\n            yMin: 0,\n            yMax: 312,\n            ha: 312,\n            o: 'm 651 0 b 816 132 727 0 796 46 b 827 223 822 163 827 193 b 808 340 827 262 821 301 b 665 449 785 408 729 449 b 636 446 655 449 647 448 b 589 384 600 441 586 422 l 602 300 b 611 285 603 291 605 285 b 621 288 613 285 616 287 b 655 295 632 294 644 295 b 711 284 674 295 693 289 b 773 209 740 275 773 232 b 697 156 773 184 734 160 b 664 154 685 154 675 154 b 579 168 635 154 608 158 b 455 242 533 186 495 213 b 261 400 387 291 331 354 b 160 432 225 422 190 432 b 20 328 98 432 49 392 b 0 229 6 295 0 262 b 30 71 0 176 14 122 b 144 3 43 29 96 3 b 168 6 153 3 160 4 b 248 122 233 20 248 39 b 246 147 248 124 248 135 b 226 177 243 164 239 177 b 206 170 220 177 215 174 b 144 154 186 158 166 154 b 79 170 122 154 101 160 b 53 202 62 179 53 189 b 60 228 53 209 55 217 b 161 281 81 261 120 281 b 183 279 168 281 176 281 b 325 190 243 269 284 229 b 572 16 402 124 475 53 b 651 0 598 6 625 0 z',\n        },\n        ornamentTurnSlash: {\n            xMin: 0,\n            xMax: 574,\n            yMin: -106,\n            yMax: 405,\n            ha: 511,\n            o: 'm 441 -153 b 456 -60 455 -118 456 -89 b 455 81 455 -14 455 33 b 572 14 491 55 530 30 b 651 -1 598 4 625 -1 b 816 131 727 -1 796 45 b 827 222 822 161 827 192 b 808 338 827 261 821 300 b 665 448 785 406 729 448 b 636 445 655 448 647 446 b 589 383 600 439 586 420 l 602 298 b 611 284 603 289 605 284 b 621 287 613 284 616 285 b 655 294 632 292 644 294 b 711 282 674 294 693 288 b 773 207 740 274 773 230 b 697 154 773 183 734 158 b 664 153 685 153 675 153 b 579 167 635 153 608 157 b 455 240 533 183 495 212 b 454 242 455 240 455 242 l 454 337 b 452 488 454 386 452 439 b 433 570 452 517 451 546 b 425 583 431 575 431 583 l 422 583 b 403 566 415 582 408 573 b 402 546 400 560 402 553 l 397 287 b 261 399 353 325 310 366 b 160 431 225 420 190 431 b 20 327 98 431 48 390 b 0 228 6 294 0 261 b 30 69 0 174 14 121 b 144 1 43 27 96 1 b 168 4 153 1 160 3 b 248 121 233 19 248 37 b 246 145 248 122 248 134 b 226 176 243 163 239 176 b 206 168 220 176 215 173 b 144 153 186 157 166 153 b 79 168 122 153 101 158 b 53 200 62 177 53 187 b 60 226 53 207 55 216 b 161 279 79 259 120 279 b 183 278 168 279 176 279 b 325 189 243 266 282 226 b 395 130 348 168 372 148 b 393 71 393 109 393 89 b 441 -153 390 -6 402 -78 z',\n        },\n        ornamentMordent: {\n            xMin: 0,\n            xMax: 700,\n            yMin: 0,\n            yMax: 497,\n            ha: 497,\n            o: 'm 513 0 b 528 39 526 14 527 27 b 531 72 531 50 531 60 b 528 138 531 94 528 117 l 528 347 b 552 359 537 354 544 359 b 579 338 560 359 569 353 b 674 217 609 297 639 255 b 719 190 690 200 704 190 b 759 215 732 190 744 197 b 940 395 815 279 877 337 b 1001 490 968 422 986 455 b 1008 513 1004 495 1008 505 b 1002 524 1008 517 1007 521 b 968 516 994 530 978 524 b 960 508 965 513 963 510 b 798 356 900 464 848 410 b 778 341 791 347 783 341 b 757 354 772 341 765 346 b 661 475 720 392 690 432 b 611 517 644 504 629 517 b 563 498 598 517 583 511 b 527 471 550 490 539 481 l 527 570 b 492 716 526 619 523 671 b 472 677 480 704 472 694 b 465 399 474 585 468 491 b 439 366 456 387 448 376 b 384 320 415 336 399 320 b 330 367 369 320 354 336 b 325 376 328 369 327 373 b 226 490 291 413 265 456 b 189 505 213 500 202 505 b 157 491 177 505 167 500 b 0 229 75 420 0 346 b 1 202 0 220 0 212 b 22 215 12 203 16 209 b 124 327 55 252 89 289 b 147 343 132 337 140 343 b 171 323 156 343 164 336 b 266 197 196 276 232 236 b 337 157 291 170 314 157 b 410 207 361 157 386 174 b 461 274 428 229 444 252 b 462 166 461 238 461 202 b 513 0 465 108 487 55 z',\n        },\n        ornamentShortTrill: {\n            xMin: 0,\n            xMax: 747,\n            yMin: 0,\n            yMax: 243,\n            ha: 243,\n            o: 'm 379 0 b 428 14 395 0 410 4 b 474 56 445 26 461 39 b 552 157 500 89 526 122 b 566 168 556 163 560 168 b 575 157 569 168 572 166 b 664 36 592 107 628 72 b 733 1 685 13 710 1 b 802 35 757 1 780 13 b 1007 249 871 105 940 177 b 1067 324 1028 272 1054 295 b 1076 340 1068 330 1076 334 b 1073 346 1076 341 1076 343 b 1057 350 1068 348 1063 350 b 1047 347 1053 350 1050 350 b 1001 310 1031 336 1015 324 l 857 157 b 844 143 852 153 848 143 b 835 150 841 143 838 144 b 757 242 815 186 780 209 b 685 298 739 268 713 284 b 641 310 670 305 655 310 b 590 288 625 310 608 304 b 497 179 554 256 527 215 b 480 164 490 170 485 164 b 462 179 474 164 469 168 b 372 295 436 220 405 258 b 278 344 346 324 312 344 b 199 310 252 344 226 334 b 92 196 161 274 128 233 b 0 24 46 148 23 89 b 42 48 22 27 32 37 b 156 168 84 85 114 132 b 196 192 174 184 186 192 b 228 158 206 192 215 181 b 312 36 252 114 282 75 b 379 0 331 12 354 0 z',\n        },\n        ornamentTremblement: {\n            xMin: 0,\n            xMax: 982,\n            yMin: 0,\n            yMax: 224,\n            ha: 224,\n            o: 'm 0 0 b 63 36 30 12 48 23 b 157 124 94 66 125 94 b 177 135 164 131 170 135 b 196 122 183 135 189 131 b 268 40 217 94 245 68 b 323 6 288 16 304 6 b 369 20 336 6 350 10 b 412 53 384 29 399 40 b 501 145 442 84 472 114 b 523 158 508 154 516 158 b 543 145 528 158 536 154 b 641 45 576 112 608 78 b 698 17 658 27 677 17 b 729 23 708 17 719 20 b 804 65 756 32 780 46 b 904 154 837 95 871 124 b 920 163 910 160 916 163 b 936 153 924 163 930 160 b 1024 60 965 121 996 92 b 1112 13 1053 29 1080 13 b 1184 39 1135 13 1158 22 b 1359 194 1248 84 1305 138 b 1413 301 1388 223 1403 261 b 1404 323 1417 315 1413 323 b 1391 320 1400 323 1395 321 b 1344 294 1375 314 1358 307 b 1224 186 1305 258 1269 216 b 1194 173 1212 179 1202 173 b 1165 193 1184 173 1175 179 b 1096 271 1145 222 1122 248 b 1001 318 1061 302 1031 318 b 903 268 969 318 937 301 b 806 186 871 239 841 210 b 782 174 796 179 789 174 b 756 193 773 174 765 180 b 652 291 729 232 693 266 b 596 308 634 302 615 308 b 530 278 573 308 552 298 l 415 168 b 393 157 408 161 400 157 b 373 171 387 157 380 161 b 305 245 353 197 330 222 b 248 276 285 266 266 278 b 189 245 229 276 210 266 b 81 144 156 209 120 174 b 0 0 33 109 26 56 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            xMin: 0,\n            xMax: 1066,\n            yMin: -50,\n            yMax: 533,\n            ha: 583,\n            o: 'm 187 -46 b 213 -14 197 -37 204 -26 b 285 151 251 36 266 94 b 304 189 294 177 297 189 b 337 168 311 189 320 181 b 458 33 386 131 415 76 b 495 12 472 19 484 12 b 531 40 508 12 518 22 b 580 168 557 79 569 124 b 622 235 592 213 603 235 b 683 194 636 235 655 222 b 838 26 737 140 791 86 b 919 -33 860 -1 881 -39 b 984 53 960 -27 971 19 b 1022 156 998 86 1008 122 b 1054 190 1032 179 1041 190 b 1089 167 1063 190 1074 183 b 1208 32 1129 122 1171 78 b 1244 10 1221 17 1231 10 b 1273 22 1253 10 1263 14 b 1496 206 1352 78 1427 137 b 1535 310 1526 236 1535 272 b 1531 359 1535 325 1534 343 b 1496 343 1515 360 1506 351 l 1309 192 b 1269 167 1289 176 1279 167 b 1234 199 1260 167 1251 177 b 1122 324 1200 243 1168 289 b 1074 344 1106 337 1089 344 b 1014 301 1051 344 1030 328 b 952 144 985 252 971 197 b 933 121 946 128 940 121 b 910 137 927 121 920 125 b 850 210 888 161 870 186 b 687 369 799 266 750 325 b 631 390 665 383 647 390 b 567 327 602 390 580 369 b 527 199 554 284 543 242 b 508 168 520 179 514 168 b 482 192 503 168 495 177 b 353 328 444 240 405 292 b 312 343 338 338 324 343 b 266 297 292 343 276 327 b 204 125 248 239 232 180 b 143 79 193 102 173 79 b 92 122 117 79 105 102 b 81 154 86 131 84 143 b 48 423 59 242 50 333 b 45 544 46 464 45 504 b 53 730 45 606 48 668 b 40 768 55 744 52 766 b 13 730 19 770 14 747 b 0 514 7 658 -1 586 b 26 122 3 383 6 252 b 75 -36 35 66 40 10 b 134 -72 92 -59 112 -72 b 187 -46 151 -72 170 -63 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            xMin: 0,\n            xMax: 1088,\n            yMin: -380,\n            yMax: 252,\n            ha: 632,\n            o: 'm 560 -539 b 439 -481 527 -497 484 -485 b 354 -461 409 -478 380 -477 b 131 -154 236 -389 161 -285 b 124 -98 127 -135 124 -117 b 196 55 124 -40 148 10 b 308 99 230 86 268 99 b 399 81 337 99 367 92 b 514 22 441 66 477 43 b 619 -30 567 -9 590 -30 b 719 17 642 -30 670 -16 b 861 131 769 52 818 88 b 899 150 874 144 887 150 b 936 117 913 150 926 138 b 965 43 948 94 956 68 b 1007 -1 973 24 978 -1 b 1048 30 1025 -1 1037 16 b 1070 65 1057 40 1064 52 b 1110 148 1084 92 1096 121 b 1145 190 1120 164 1120 190 b 1191 153 1169 192 1179 168 b 1256 29 1218 115 1231 68 b 1292 1 1267 10 1277 1 b 1320 10 1300 1 1309 4 b 1369 48 1339 19 1355 33 b 1515 196 1418 96 1464 148 b 1567 343 1558 238 1567 287 b 1555 363 1565 357 1562 363 b 1539 356 1551 363 1547 360 b 1433 268 1502 330 1466 301 b 1335 171 1401 236 1374 199 b 1310 163 1325 166 1318 163 b 1286 183 1302 163 1293 168 b 1218 311 1264 226 1247 272 b 1164 351 1200 337 1182 351 b 1110 308 1146 351 1128 337 b 1031 176 1084 265 1058 219 b 1015 161 1025 166 1021 161 b 999 179 1009 161 1005 167 b 955 279 985 213 973 248 b 913 307 943 300 930 307 b 887 302 904 307 896 305 b 852 281 874 298 863 291 b 693 167 804 236 747 204 b 612 140 667 150 639 140 b 549 157 592 140 570 145 b 403 220 503 181 452 202 b 271 248 360 236 315 248 b 179 229 239 248 209 242 b 0 -29 65 180 0 85 b 9 -104 0 -53 3 -78 b 397 -526 56 -317 183 -464 b 505 -547 432 -536 468 -547 b 560 -539 524 -547 541 -544 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            xMin: 0,\n            xMax: 1185,\n            yMin: -380,\n            yMax: 465,\n            ha: 845,\n            o: 'm 624 -544 b 642 -528 638 -543 642 -537 b 639 -514 642 -524 642 -520 b 590 -444 629 -487 609 -467 b 523 -413 573 -422 553 -410 b 498 -415 514 -415 507 -415 b 399 -389 464 -415 431 -405 b 89 -157 281 -330 176 -255 b 72 -117 78 -144 72 -131 b 73 -101 72 -111 72 -107 b 187 186 91 3 147 91 b 246 230 200 216 222 230 b 300 209 262 230 281 223 b 456 48 359 163 403 101 b 540 -10 494 10 518 -10 b 625 59 566 -10 589 13 b 690 148 648 88 668 118 b 711 167 697 160 704 167 b 733 153 719 167 724 163 b 844 14 769 105 808 60 b 903 -42 873 -23 886 -42 b 973 -1 919 -42 937 -27 b 1008 33 986 7 996 20 b 1048 81 1021 48 1035 65 b 1050 37 1048 66 1050 52 b 1047 -24 1050 17 1048 -3 b 1038 -275 1038 -108 1040 -192 l 1037 -289 b 1045 -302 1037 -295 1038 -301 b 1068 -284 1056 -304 1064 -292 b 1084 -242 1076 -271 1081 -256 b 1099 -109 1096 -199 1099 -154 b 1106 158 1099 -19 1106 71 b 1128 187 1113 167 1120 177 b 1168 223 1143 212 1155 223 b 1210 193 1179 223 1191 213 b 1220 183 1214 190 1215 186 b 1329 36 1261 138 1292 84 b 1374 7 1345 16 1358 7 b 1411 20 1384 7 1395 12 b 1479 84 1437 37 1459 59 b 1610 235 1521 135 1564 186 b 1706 403 1655 282 1695 334 b 1614 346 1663 400 1637 373 b 1464 170 1564 287 1515 228 b 1440 150 1453 156 1447 150 b 1414 173 1433 150 1426 158 b 1283 336 1371 228 1333 288 b 1220 366 1261 356 1240 366 b 1148 318 1194 366 1169 350 b 1103 255 1133 297 1119 275 b 1097 301 1102 271 1100 285 b 1099 334 1099 312 1099 324 b 1092 428 1099 367 1094 397 b 1071 647 1087 501 1079 575 b 1058 670 1071 657 1071 670 b 1035 648 1047 670 1038 661 b 1018 516 1024 605 1015 560 b 1041 203 1025 412 1037 307 b 1043 180 1041 196 1043 187 b 992 127 1027 161 1009 143 b 965 111 981 117 972 111 b 936 132 955 111 946 120 b 829 268 900 179 867 225 b 760 317 801 301 780 317 b 691 258 739 317 719 297 b 605 147 664 219 641 177 b 589 138 599 141 593 138 b 572 148 583 138 579 141 b 415 317 520 206 467 261 b 327 372 390 343 366 366 b 300 373 317 373 308 373 b 154 295 239 373 190 348 b 55 138 120 243 85 192 b 0 -53 22 79 0 13 b 160 -317 0 -156 49 -252 b 209 -354 177 -327 192 -343 b 510 -531 305 -419 397 -495 b 593 -547 537 -540 564 -547 b 624 -544 603 -547 613 -546 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            xMin: 0,\n            xMax: 1003,\n            yMin: -20,\n            yMax: 521,\n            ha: 541,\n            o: 'm 791 -16 b 844 33 812 -3 829 14 b 981 271 900 107 937 190 b 994 288 984 278 985 288 b 1009 269 1004 288 1007 278 b 1077 112 1034 217 1051 163 b 1158 43 1103 62 1129 43 b 1231 69 1179 43 1204 55 b 1348 189 1280 98 1315 143 b 1444 451 1407 271 1444 357 b 1431 547 1444 482 1440 514 b 1188 750 1401 665 1299 750 b 1158 747 1178 750 1168 749 b 1079 684 1119 742 1089 727 b 1063 632 1076 665 1071 648 b 1056 609 1058 622 1056 615 b 1071 599 1056 602 1060 599 b 1086 600 1076 599 1080 600 b 1130 605 1102 603 1116 605 b 1244 569 1171 605 1210 595 b 1349 346 1322 511 1349 433 b 1348 312 1349 334 1349 324 b 1289 197 1345 266 1325 228 b 1238 174 1270 181 1253 174 b 1188 215 1220 174 1202 187 b 1145 308 1172 245 1159 276 b 1096 413 1129 343 1120 382 b 1053 438 1084 431 1068 438 b 1011 413 1038 438 1022 431 b 955 324 989 384 971 354 b 850 127 920 258 886 192 b 838 112 847 121 842 112 b 824 128 828 109 825 121 b 802 193 815 150 809 171 b 730 400 779 264 766 337 b 688 431 719 420 703 431 b 647 403 674 431 660 422 b 606 338 632 383 619 361 b 513 167 575 282 546 223 b 480 122 503 150 498 122 b 452 171 459 122 459 153 b 420 255 442 199 432 228 b 337 408 399 308 380 364 b 276 436 317 428 297 436 b 215 397 253 436 230 423 b 23 72 148 289 81 184 b 0 29 17 59 0 40 b 7 17 0 23 1 20 b 59 58 26 7 46 39 b 190 276 111 127 143 206 b 216 301 202 292 207 301 b 245 279 223 301 232 294 b 311 166 278 248 292 206 b 367 16 331 117 346 65 b 402 -19 377 -7 387 -19 b 438 -4 412 -19 423 -13 b 518 88 474 17 495 55 b 628 284 562 150 592 216 b 657 223 648 266 651 243 b 717 13 677 154 696 84 b 755 -29 726 -16 737 -29 b 791 -16 765 -29 776 -24 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            xMin: 0,\n            xMax: 1246,\n            yMin: -30,\n            yMax: 296,\n            ha: 326,\n            o: 'm 360 -43 b 559 59 445 -43 503 7 b 698 236 615 111 652 179 b 714 248 704 243 710 248 b 727 235 719 248 721 243 l 848 42 b 883 12 860 22 870 12 b 917 32 891 12 903 19 b 946 62 927 42 939 50 b 1037 192 972 108 1009 147 b 1057 210 1044 204 1051 210 b 1076 190 1063 210 1068 203 l 1176 12 b 1215 -19 1188 -9 1201 -19 b 1250 -6 1225 -19 1237 -14 b 1284 27 1264 3 1274 16 b 1380 190 1323 78 1351 135 b 1395 210 1384 197 1385 210 b 1413 190 1405 210 1410 197 b 1508 40 1436 134 1467 85 b 1564 3 1529 14 1547 3 b 1617 32 1580 3 1597 12 b 1767 238 1678 92 1719 167 b 1794 310 1781 259 1791 282 b 1752 294 1776 317 1764 304 b 1656 164 1711 258 1689 206 b 1629 144 1646 151 1637 144 b 1603 161 1620 144 1613 150 b 1502 315 1562 207 1525 258 b 1452 357 1490 344 1470 357 b 1397 320 1431 357 1411 344 b 1316 170 1368 271 1345 219 b 1280 127 1306 154 1303 127 b 1244 171 1256 127 1254 154 b 1145 337 1210 226 1179 282 b 1110 363 1135 354 1122 363 b 1070 338 1097 363 1084 354 b 1050 311 1063 330 1057 320 b 959 181 1017 271 992 223 b 939 167 950 173 945 167 b 920 184 933 167 927 173 b 818 343 887 238 852 291 b 759 395 795 377 778 395 b 701 344 742 395 724 377 b 698 338 700 341 700 340 b 544 154 652 272 605 207 b 412 98 501 117 458 98 b 304 130 377 98 341 108 b 95 373 204 187 144 275 b 58 426 85 393 82 428 b 19 366 26 426 26 389 b 0 307 13 346 0 327 b 4 287 0 300 1 294 b 174 36 49 194 91 102 b 360 -43 230 -9 289 -43 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefixTurn: {\n            xMin: 0,\n            xMax: 1226,\n            yMin: -237,\n            yMax: 436,\n            ha: 673,\n            o: 'm 1279 -341 b 1293 -252 1293 -307 1295 -278 b 1277 36 1287 -156 1282 -59 l 1273 118 b 1318 176 1289 137 1303 157 b 1349 203 1332 193 1342 203 b 1378 168 1359 203 1367 192 b 1456 35 1401 122 1428 78 b 1511 -12 1476 3 1493 -12 b 1568 23 1526 -12 1544 0 b 1597 53 1578 32 1588 42 b 1705 186 1629 101 1669 143 b 1761 284 1728 216 1751 246 b 1765 300 1763 288 1765 295 b 1763 307 1765 302 1765 305 b 1737 302 1754 311 1744 308 b 1718 287 1729 298 1725 292 b 1598 145 1673 245 1637 194 b 1578 130 1590 135 1584 130 b 1557 147 1571 130 1565 135 b 1447 321 1516 202 1488 265 b 1403 351 1433 341 1417 351 b 1358 323 1388 351 1372 341 b 1269 209 1329 285 1299 248 b 1254 521 1264 314 1259 418 b 1228 616 1253 554 1247 588 b 1218 628 1224 621 1223 628 l 1215 628 b 1201 613 1210 626 1202 619 b 1200 600 1200 609 1200 605 l 1200 586 b 1211 348 1204 507 1207 428 b 1217 166 1214 288 1215 226 b 1202 181 1212 168 1208 174 b 1094 334 1168 233 1130 284 b 1048 366 1079 356 1064 366 b 1004 331 1034 366 1018 354 b 904 154 969 275 930 220 b 873 202 887 171 880 187 b 778 356 845 256 819 311 b 737 379 763 372 750 379 b 698 353 724 379 711 370 l 621 232 b 415 114 570 154 495 114 b 302 138 377 114 340 121 b 73 400 187 192 117 284 b 55 420 69 415 62 420 b 42 410 50 420 45 416 b 0 292 23 373 0 334 b 4 262 0 282 1 272 b 168 39 32 168 92 99 b 359 -26 225 -6 292 -26 b 585 76 446 -26 530 10 b 668 202 616 115 641 160 b 693 228 680 219 687 228 b 720 203 700 228 707 219 b 801 63 752 160 775 111 b 844 7 812 42 818 7 b 910 66 877 6 894 39 b 923 94 916 75 919 85 b 995 219 945 137 968 179 b 1025 184 1009 210 1017 197 b 1119 56 1054 141 1087 98 b 1166 20 1138 32 1152 20 b 1215 50 1181 20 1195 30 b 1221 56 1217 52 1218 55 b 1228 -163 1223 -17 1225 -89 b 1279 -341 1231 -223 1251 -278 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            xMin: 0,\n            xMax: 833,\n            yMin: -309,\n            yMax: 319,\n            ha: 628,\n            o: 'm 778 -444 b 801 -445 785 -444 793 -445 b 1037 -338 894 -445 969 -397 b 1200 37 1149 -240 1200 -109 b 1084 406 1200 171 1172 300 b 1024 444 1064 431 1043 444 b 960 390 999 444 978 426 b 841 163 923 314 886 236 b 812 128 832 150 827 128 b 786 167 796 130 793 153 b 660 418 744 251 716 341 b 599 459 639 445 619 459 b 541 410 577 459 557 444 b 439 197 507 340 474 269 b 422 179 435 190 435 179 b 338 393 392 251 379 328 b 275 439 320 423 298 439 b 212 396 253 439 230 425 b 71 219 170 333 128 268 b 0 45 17 173 16 112 b 68 98 32 62 50 78 b 194 264 112 150 153 209 b 230 292 209 282 219 292 b 264 261 240 292 251 282 b 274 242 268 255 269 248 b 346 46 304 179 325 112 b 376 10 351 32 354 10 b 412 35 392 10 403 22 b 452 107 429 56 441 82 b 541 291 481 168 511 230 b 556 307 547 302 552 307 b 573 295 562 307 567 302 b 624 217 595 272 611 246 b 721 1 657 145 685 72 b 755 -27 732 -19 742 -27 b 786 -16 765 -27 775 -24 b 857 73 819 7 840 39 b 952 256 887 134 920 194 b 978 289 963 279 969 289 b 1009 262 985 289 994 281 b 1030 235 1017 253 1024 245 b 1110 -4 1071 161 1099 81 b 1116 -68 1113 -26 1116 -48 b 1009 -243 1116 -140 1090 -200 b 848 -291 956 -272 901 -291 b 730 -261 809 -291 770 -282 b 696 -248 714 -252 703 -248 b 671 -284 684 -248 678 -258 l 662 -312 b 657 -357 658 -330 657 -344 b 744 -439 657 -403 683 -425 z',\n        },\n        brassScoop: {\n            xMin: 0,\n            xMax: 312,\n            yMin: -390,\n            yMax: 28,\n            ha: 418,\n            o: 'm 0 -562 b 393 -256 171 -504 307 -412 b 449 -39 431 -189 449 -115 b 448 -1 449 -26 449 -14 b 433 40 446 14 448 40 b 408 -3 410 40 412 14 b 396 -66 403 -23 402 -46 b 45 -397 346 -243 209 -337 b 0 -451 13 -409 1 -423 b 0 -562 -1 -485 0 -520 z',\n        },\n        brassDoitMedium: {\n            xMin: 0,\n            xMax: 476,\n            yMin: -50,\n            yMax: 333,\n            ha: 383,\n            o: 'm 16 -72 b 27 -71 19 -72 23 -72 b 215 -33 89 -56 153 -48 b 521 114 327 -7 435 35 b 685 432 615 199 691 295 b 670 480 684 449 688 475 b 642 441 654 482 648 456 b 403 183 599 321 513 240 b 79 89 301 130 192 105 b 0 -1 -12 76 0 76 b 0 -50 0 -17 1 -33 b 16 -72 0 -65 3 -72 z',\n        },\n        brassFallLipShort: {\n            xMin: 0,\n            xMax: 298,\n            yMin: -344,\n            yMax: 65,\n            ha: 409,\n            o: 'm 396 -495 b 420 -461 412 -487 418 -474 b 429 -382 428 -435 429 -409 b 426 -330 429 -364 428 -347 b 285 -6 410 -209 356 -104 b 98 94 239 59 173 94 b 39 86 79 94 58 92 b 0 49 20 81 0 73 l 0 -52 b 10 -69 0 -62 1 -69 b 20 -68 13 -69 16 -69 b 88 -56 45 -59 66 -56 b 261 -160 156 -56 213 -95 b 396 -495 333 -259 382 -369 z',\n        },\n        brassLiftMedium: {\n            xMin: 0,\n            xMax: 807,\n            yMin: 0,\n            yMax: 838,\n            ha: 838,\n            o: 'm 50 0 b 55 1 52 0 53 0 b 58 23 65 7 59 16 b 55 58 56 36 55 48 b 130 117 55 99 75 112 b 220 213 202 121 220 141 b 315 308 220 289 238 308 l 336 308 b 408 380 393 310 406 321 b 461 452 409 438 416 452 b 485 451 468 452 477 451 b 569 510 531 448 556 464 b 573 543 572 520 572 531 b 657 619 580 605 595 618 b 698 621 670 619 684 619 b 788 700 749 625 778 649 b 798 778 792 726 793 752 b 873 857 806 841 809 845 b 985 950 927 867 973 887 b 1084 1047 1002 1035 1004 1034 b 1162 1128 1133 1056 1162 1087 b 1146 1182 1162 1145 1158 1164 b 1125 1207 1140 1191 1136 1207 l 1122 1207 b 1110 1191 1113 1205 1110 1198 b 1112 1174 1110 1185 1112 1178 b 1048 1110 1109 1126 1096 1113 b 1028 1109 1043 1110 1035 1109 b 939 1022 969 1102 948 1081 b 845 922 929 949 917 936 b 746 812 773 909 753 886 b 744 780 744 802 744 791 b 635 681 737 700 717 683 b 524 583 553 680 536 665 b 439 510 514 520 503 510 b 357 431 377 510 360 492 l 357 406 b 314 364 356 379 343 364 b 238 361 288 364 264 364 b 173 300 202 357 180 334 b 167 245 168 281 167 262 b 105 174 166 192 157 180 b 75 171 95 173 85 171 b 6 112 30 166 14 153 b 0 73 1 98 0 85 b 37 10 0 45 13 26 b 50 0 42 7 46 0 z',\n        },\n        brassFallRoughMedium: {\n            xMin: 0,\n            xMax: 791,\n            yMin: 0,\n            yMax: 819,\n            ha: 819,\n            o: 'm 1117 0 b 1139 101 1129 26 1139 71 b 1138 121 1139 109 1139 115 b 1084 193 1125 171 1110 193 b 1044 183 1073 193 1060 189 b 1022 177 1035 179 1028 177 b 1007 209 1012 177 1008 186 b 876 324 1004 292 959 330 b 799 317 850 321 825 320 b 759 354 772 314 755 320 b 760 373 760 360 760 366 b 759 392 760 379 760 384 b 681 477 753 451 730 477 b 654 474 672 477 664 475 b 606 467 638 471 622 468 b 586 465 599 465 592 465 b 564 481 570 465 564 469 b 569 505 564 487 566 495 b 575 553 572 521 575 537 b 572 585 575 564 573 575 b 481 665 560 657 539 668 b 412 665 458 664 435 665 b 382 690 392 667 382 672 b 383 700 382 693 383 696 b 386 773 387 724 387 749 b 297 858 382 828 351 857 b 229 861 274 858 251 858 b 190 897 207 863 193 871 b 163 1012 186 936 180 976 b 79 1084 145 1050 124 1084 b 66 1083 75 1084 71 1083 b 43 1096 49 1081 43 1087 b 48 1112 43 1100 45 1106 b 53 1130 52 1119 53 1125 b 39 1169 53 1145 45 1158 b 26 1179 36 1175 30 1179 b 16 1171 22 1179 17 1176 b 0 1103 10 1149 0 1126 b 9 1067 0 1092 1 1079 b 91 1021 26 1031 52 1018 b 145 978 122 1024 141 1011 b 156 913 147 956 151 935 b 291 795 170 831 210 795 b 346 768 337 795 346 796 b 344 743 346 760 344 753 b 343 716 344 733 343 724 b 455 600 343 651 390 602 b 505 605 471 599 490 605 b 528 598 514 605 523 603 b 536 579 534 592 536 586 b 524 523 536 562 526 541 b 523 505 524 517 523 511 b 621 405 523 442 560 405 b 639 406 626 405 634 406 b 677 413 652 408 664 410 b 701 416 687 415 696 416 b 721 392 716 416 721 410 b 720 373 721 386 720 380 b 831 255 714 301 759 252 b 897 261 854 255 876 261 b 926 262 909 261 919 262 b 969 197 963 262 965 252 b 971 184 969 193 971 189 b 1031 115 979 137 998 115 b 1071 122 1043 115 1056 118 b 1096 130 1079 125 1086 127 b 1087 59 1094 107 1087 82 b 1117 0 1087 37 1094 17 z',\n        },\n        brassBend: {\n            xMin: 0,\n            xMax: 381,\n            yMin: 0,\n            yMax: 367,\n            ha: 367,\n            o: 'm 298 0 b 472 50 359 0 418 14 b 537 135 501 71 530 92 b 543 216 543 163 543 190 l 543 266 b 544 308 543 281 543 295 b 549 433 546 354 549 395 b 543 507 549 459 547 482 b 533 528 541 516 544 528 b 511 508 524 528 514 520 b 508 478 510 498 508 488 b 504 318 507 425 504 372 b 505 264 504 300 505 282 b 446 181 505 220 484 199 b 294 150 396 160 344 150 b 92 194 226 150 158 167 b 45 269 62 207 45 230 b 46 359 46 300 46 328 b 37 497 46 405 45 451 b 27 523 36 507 37 523 b 4 498 14 524 6 513 b 3 481 3 492 3 487 b 0 409 1 456 0 433 b 4 228 0 348 4 288 b 3 177 4 210 4 194 b 68 53 1 125 20 84 b 200 10 108 27 154 17 b 298 0 233 4 266 0 z',\n        },\n        brassMuteClosed: {\n            xMin: 0,\n            xMax: 274,\n            yMin: 0,\n            yMax: 260,\n            ha: 260,\n            o: 'm 203 0 b 209 1 206 0 207 0 b 216 13 215 4 216 9 l 215 27 l 215 153 b 216 161 216 156 216 158 b 372 164 268 163 318 164 b 395 184 383 164 395 166 l 395 189 b 357 229 392 209 386 229 b 219 228 311 229 265 228 l 223 310 b 209 357 225 328 219 344 b 189 374 203 364 197 374 b 184 373 187 374 186 373 b 177 359 179 372 177 366 l 177 348 l 173 222 l 39 222 b 0 206 12 222 0 219 b 10 174 0 199 3 189 b 46 157 19 157 30 157 b 108 160 68 158 88 160 b 171 161 130 161 150 161 l 167 58 b 184 16 167 40 171 26 b 203 0 192 12 196 0 z',\n        },\n        brassMuteOpen: {\n            xMin: 1,\n            xMax: 313,\n            yMin: 0,\n            yMax: 309,\n            ha: 309,\n            o: 'm 265 0 b 451 189 363 7 452 88 l 451 215 b 348 383 441 285 405 343 b 209 445 288 426 248 445 b 84 379 168 445 132 420 b 69 364 79 373 73 369 b 1 213 30 323 1 275 b 230 0 1 88 94 0 z m 210 62 b 128 73 181 62 154 66 b 40 171 71 91 42 125 b 52 226 40 187 45 206 b 197 374 79 295 130 344 b 228 382 207 380 217 382 b 300 361 252 382 276 370 b 374 308 328 350 353 331 b 410 223 397 284 410 253 b 393 163 410 202 405 181 b 210 62 354 91 288 63 z',\n        },\n        brassFlip: {\n            xMin: 0,\n            xMax: 402,\n            yMin: 0,\n            yMax: 361,\n            ha: 361,\n            o: 'm 579 0 b 511 153 579 68 557 117 b 52 504 359 271 206 387 b 29 520 45 510 39 520 b 20 517 26 520 23 518 b 0 477 3 510 0 494 l 0 125 b 17 20 1 92 1 56 b 40 84 37 40 40 60 b 42 287 40 151 42 219 l 42 363 z',\n        },\n        brassJazzTurn: {\n            xMin: 0,\n            xMax: 646,\n            yMin: 0,\n            yMax: 212,\n            ha: 212,\n            o: 'm 310 0 b 367 33 327 0 344 10 b 389 55 374 40 382 49 b 490 145 423 85 456 114 b 507 154 495 151 501 154 b 524 144 513 154 517 151 b 598 72 547 120 575 98 b 700 24 625 42 662 24 b 765 43 721 24 744 30 b 893 147 812 72 855 105 b 930 212 910 166 923 186 b 912 215 923 213 917 215 b 871 199 896 215 883 209 b 812 153 852 183 832 167 b 789 144 805 148 796 144 b 773 156 782 144 776 147 b 691 251 757 199 720 222 b 603 301 658 282 631 301 b 527 258 580 301 556 288 b 420 156 494 222 455 190 b 399 143 412 147 405 143 b 377 157 392 143 386 147 b 259 282 340 200 300 242 b 219 305 245 298 232 305 b 177 279 204 305 192 297 b 55 127 137 228 95 177 b 0 52 36 104 20 79 b 14 50 6 50 10 50 b 53 66 32 50 45 58 b 115 131 75 88 98 108 b 135 148 124 143 130 148 b 157 132 141 148 148 143 b 252 33 186 96 219 65 b 310 0 275 12 292 0 z',\n        },\n        brassSmear: {\n            xMin: 0,\n            xMax: 334,\n            yMin: 0,\n            yMax: 151,\n            ha: 151,\n            o: 'm 321 0 b 475 125 390 0 436 43 b 481 143 478 131 481 137 b 475 154 481 147 480 151 b 449 148 468 158 458 154 b 395 132 432 137 413 132 b 343 140 377 132 360 137 b 229 194 301 148 266 173 b 168 217 206 209 186 217 b 109 192 148 217 130 209 b 0 26 59 148 32 89 b 59 63 32 29 45 48 b 98 84 72 78 84 84 b 130 73 108 84 118 81 b 213 26 157 58 183 37 b 321 0 255 9 289 0 z',\n        },\n        stringsDownBow: {\n            xMin: 0,\n            xMax: 306,\n            yMin: 0,\n            yMax: 366,\n            ha: 366,\n            o: 'm 405 0 b 425 17 413 -1 420 9 b 439 66 435 32 439 48 b 441 268 439 137 441 202 b 436 412 441 314 439 361 l 435 413 b 423 469 435 436 431 456 b 344 508 406 501 373 501 b 204 527 298 520 251 527 b 60 498 156 527 108 518 b 7 438 32 485 10 468 l 7 426 b 4 337 7 396 7 367 b 0 140 0 272 0 206 b 1 42 0 107 0 73 b 13 3 1 27 -3 4 b 40 39 29 3 35 24 b 42 53 42 43 40 49 b 49 141 48 84 49 112 b 48 215 49 167 48 192 b 49 252 48 228 48 240 l 49 312 b 130 343 72 331 99 340 b 206 347 156 346 180 347 b 372 314 262 347 318 338 l 390 307 l 390 245 b 390 138 392 212 390 176 b 397 23 390 101 392 62 b 405 0 399 14 393 1 z',\n        },\n        stringsUpBow: {\n            xMin: 0,\n            xMax: 219,\n            yMin: 0,\n            yMax: 489,\n            ha: 489,\n            o: 'm 151 0 b 184 42 170 12 180 26 b 297 554 223 212 261 382 b 315 690 305 598 318 645 b 304 704 315 697 311 704 b 276 670 288 704 282 697 b 157 131 236 490 196 311 l 157 144 b 73 526 134 276 104 396 b 30 677 60 576 52 638 b 13 694 26 684 22 694 b 0 674 9 694 0 691 l 0 671 b 10 603 3 649 6 626 b 105 174 42 461 72 317 b 150 0 117 117 128 58 z',\n        },\n        stringsHarmonic: {\n            xMin: 0,\n            xMax: 191,\n            yMin: 0,\n            yMax: 202,\n            ha: 202,\n            o: 'm 143 0 b 275 122 217 0 275 53 b 127 291 275 206 202 291 b 0 154 63 291 0 222 b 143 0 0 76 71 0 z m 122 68 b 43 105 89 66 59 75 b 39 124 40 111 39 117 b 79 199 39 148 56 180 b 145 226 101 216 122 226 b 199 210 163 226 180 220 b 235 150 223 196 235 173 b 203 92 235 128 225 107 b 122 68 181 76 150 68 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            xMin: 0,\n            xMax: 201,\n            yMin: 0,\n            yMax: 325,\n            ha: 325,\n            o: 'm 171 0 b 289 99 240 0 289 45 b 258 183 289 130 274 156 b 174 269 236 217 203 240 l 174 408 b 174 429 174 415 176 422 b 131 468 168 451 153 468 b 117 451 120 468 117 461 b 118 429 117 444 118 435 b 115 307 117 389 115 347 b 0 166 59 295 0 223 b 171 0 0 85 89 0 z m 134 55 b 52 131 84 55 52 85 b 115 233 52 179 81 209 b 114 192 114 220 114 206 b 174 120 114 137 114 137 l 174 228 b 233 148 200 207 223 183 b 236 130 235 143 236 135 b 197 72 236 105 223 85 b 134 55 177 60 157 55 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            xMin: 0,\n            xMax: 211,\n            yMin: 0,\n            yMax: 307,\n            ha: 307,\n            o: 'm 145 7 b 163 0 153 3 158 0 b 173 23 170 0 173 7 l 173 140 l 170 140 l 170 163 l 171 163 b 206 170 179 164 193 166 b 304 287 264 186 304 233 b 281 354 304 308 297 333 b 118 442 240 412 186 439 b 0 324 69 442 0 370 b 115 176 0 266 55 202 l 115 56 b 145 7 114 33 125 19 z m 115 220 b 62 256 92 223 73 230 b 53 292 56 269 53 281 b 78 344 53 311 60 328 b 168 384 105 372 135 384 b 213 376 183 384 199 382 b 253 321 239 366 253 346 b 246 291 253 311 251 301 b 170 226 230 256 203 236 l 170 258 b 148 305 171 278 163 292 b 128 315 143 310 135 315 l 124 315 b 115 301 117 314 115 308 z',\n        },\n        pluckedLeftHandPizzicato: {\n            xMin: 0,\n            xMax: 271,\n            yMin: 0,\n            yMax: 284,\n            ha: 284,\n            o: 'm 213 0 b 223 14 222 0 223 7 b 222 35 223 22 222 29 l 222 176 b 373 170 272 174 323 170 b 390 180 382 170 390 171 l 390 184 b 347 232 386 207 382 232 b 219 238 307 233 266 235 l 219 364 b 171 409 219 395 193 409 b 156 393 160 409 156 402 b 158 370 156 384 158 376 l 158 240 b 16 239 115 240 66 239 b 0 226 7 239 0 238 l 0 223 b 50 179 1 203 29 179 b 158 177 86 179 122 179 l 158 63 b 161 29 158 52 158 40 b 213 0 166 -1 194 1 z',\n        },\n        keyboardPedalPed: {\n            xMin: 0,\n            xMax: 944,\n            yMin: -13,\n            yMax: 550,\n            ha: 563,\n            o: 'm 22 0 b 109 78 53 0 105 46 l 144 333 b 163 376 147 347 140 372 b 364 465 238 390 301 426 b 454 599 416 497 454 540 b 452 618 454 605 454 612 b 320 770 442 694 396 747 b 248 779 295 778 272 779 b 193 778 229 779 212 779 b 160 780 181 778 167 775 b 137 792 153 789 144 791 b 109 789 128 792 118 789 b 7 719 59 789 48 737 b 23 708 16 714 20 708 b 36 710 29 710 33 710 b 53 684 52 710 53 698 l 53 674 b 43 386 53 577 53 482 b 20 164 36 312 30 238 b 1 30 14 120 7 75 b 0 19 0 26 0 22 b 22 0 0 9 4 0 z m 171 425 b 156 442 160 425 156 429 b 157 475 157 452 157 464 b 164 602 161 517 164 560 b 161 698 164 635 163 667 b 184 729 161 720 167 729 l 193 729 b 348 563 278 719 348 641 b 346 539 348 554 347 547 b 171 425 328 459 229 422 z m 979 6 b 1008 13 986 6 995 9 b 1081 101 1047 29 1079 46 b 1116 449 1087 217 1104 333 b 1143 654 1123 518 1133 586 b 1148 685 1145 664 1148 675 b 1140 704 1148 693 1146 700 b 1107 716 1130 713 1119 716 b 1056 706 1092 716 1073 710 b 1037 671 1035 703 1038 685 b 1004 439 1025 595 1014 517 b 986 419 1001 428 999 419 b 979 419 985 419 982 420 b 935 426 965 423 949 425 b 795 376 884 426 838 405 b 664 153 714 323 664 249 b 665 130 664 145 665 138 b 753 29 671 65 704 29 b 815 40 773 29 792 33 b 975 147 873 65 923 101 b 965 45 971 108 968 76 b 979 6 963 17 966 6 z m 393 -17 b 634 145 494 16 579 52 b 638 160 636 151 638 156 b 625 168 638 166 634 168 b 621 167 624 168 622 168 b 524 118 582 164 544 160 b 495 79 517 104 505 92 b 435 33 471 49 452 33 b 380 96 416 33 397 55 b 369 145 373 114 369 131 b 442 225 369 186 395 213 b 468 232 451 228 459 229 b 654 344 539 255 606 285 b 677 395 667 360 677 376 b 672 415 677 402 675 408 b 612 459 661 442 639 455 b 589 461 602 461 592 461 b 348 328 500 461 409 408 b 269 120 302 268 269 199 b 379 -19 269 45 318 -19 b 393 -17 383 -19 389 -19 z m 395 240 b 494 383 418 300 452 344 l 521 405 b 544 419 528 409 536 418 b 554 415 547 419 550 418 b 570 383 564 406 570 396 l 570 379 b 552 331 570 360 562 344 b 395 240 511 285 462 253 z m 827 89 b 792 111 815 89 804 96 b 766 204 775 131 766 158 b 845 360 772 256 799 314 b 871 372 854 369 863 372 b 897 366 880 372 888 369 b 978 279 942 353 963 320 b 976 259 981 272 981 265 b 858 104 942 203 909 147 b 827 89 847 94 837 89 z m 1282 12 b 1336 35 1303 14 1320 23 b 1359 71 1351 45 1359 58 b 1338 102 1359 82 1352 95 b 1254 130 1312 118 1284 130 b 1187 88 1223 130 1202 109 b 1178 65 1182 81 1178 72 b 1195 37 1178 55 1182 45 b 1282 12 1223 23 1253 19 z',\n        },\n        keyboardPedalUp: {\n            xMin: 0,\n            xMax: 437,\n            yMin: 0,\n            yMax: 461,\n            ha: 461,\n            o: 'm 330 0 b 334 1 331 0 333 0 b 340 12 338 4 340 7 l 338 26 b 340 264 338 105 338 184 b 526 95 400 206 461 148 b 559 71 536 88 547 71 b 564 72 560 71 563 71 b 580 121 580 79 580 102 l 580 127 b 543 203 585 158 573 184 b 472 259 518 219 495 238 l 445 285 b 590 292 494 288 541 291 b 622 318 609 294 618 302 b 628 359 625 331 626 346 b 586 402 632 393 621 405 b 464 395 546 399 504 396 l 559 491 b 567 524 567 500 567 510 b 564 543 567 527 567 536 b 539 596 559 563 560 590 b 494 564 521 600 508 577 b 340 413 442 514 390 464 l 340 560 b 287 664 340 600 321 632 b 271 518 274 612 272 566 b 268 445 269 494 269 469 b 117 569 219 488 168 530 b 96 579 109 575 102 579 b 85 560 89 579 85 573 b 124 446 85 518 82 477 b 209 380 153 426 181 403 b 45 374 154 377 99 376 b 0 324 9 374 0 359 b 63 266 0 265 1 265 b 144 272 89 269 117 272 l 196 272 b 108 193 167 246 138 219 b 60 135 76 164 60 151 b 99 73 60 121 73 105 b 104 68 101 72 102 71 b 114 58 107 60 111 58 b 130 66 120 58 124 62 b 259 186 173 107 217 145 b 256 117 259 163 256 140 b 311 13 256 72 271 37 b 330 0 317 10 323 0 z',\n        },\n        pictChokeCymbal: {\n            xMin: 1,\n            xMax: 147,\n            yMin: 0,\n            yMax: 242,\n            ha: 242,\n            o: 'm 79 4 b 207 158 153 32 192 88 b 212 200 210 173 212 187 b 143 336 212 253 187 298 b 98 348 131 344 115 348 b 4 295 60 348 16 327 b 1 276 1 289 1 282 b 9 249 1 266 3 258 b 121 183 35 206 72 183 b 156 186 132 183 144 183 b 26 53 134 115 91 73 b 7 39 13 49 7 45 b 19 20 7 33 12 27 b 59 0 30 9 43 0 b 79 4 65 0 72 1 z',\n        },\n        wiggleArpeggiatoUp: {\n            xMin: -22,\n            xMax: 300,\n            yMin: 0,\n            yMax: 176,\n            ha: 176,\n            o: 'm 173 4 b 196 0 180 1 189 0 b 246 26 215 0 230 9 b 301 117 271 53 285 85 b 312 131 305 125 307 131 b 327 124 315 131 321 128 b 373 86 341 112 353 101 b 412 69 389 75 402 69 b 432 94 425 69 432 79 b 373 181 432 117 413 154 b 235 252 323 216 285 245 b 220 253 229 253 225 253 b 168 215 196 253 181 240 b 111 112 151 180 140 141 b 94 102 105 105 99 102 b 78 111 89 102 84 105 b 0 181 55 135 35 160 b -32 153 -20 194 -32 168 b 0 86 -32 124 -32 109 b 94 36 22 71 73 46 b 173 4 134 16 131 17 z',\n        },\n        arpeggiatoUp: {\n            xMin: 0,\n            xMax: 262,\n            yMin: 0,\n            yMax: 1459,\n            ha: 1459,\n            o: 'm 190 0 b 160 63 187 29 170 45 b 145 108 150 81 145 95 b 183 163 145 128 157 145 b 300 246 222 190 262 216 b 347 318 333 272 347 295 b 301 393 347 341 331 364 b 258 413 289 403 272 408 b 145 449 220 425 183 436 b 117 464 135 452 120 452 b 140 491 115 477 128 484 b 294 593 192 526 243 557 b 330 647 318 611 330 626 b 314 693 330 660 324 675 b 262 736 302 714 285 729 b 170 763 230 744 200 753 b 122 783 153 768 125 768 b 160 831 120 804 143 818 b 288 922 202 861 246 890 b 333 999 318 945 333 972 b 266 1083 333 1032 310 1064 b 189 1115 240 1094 215 1103 b 122 1178 145 1133 122 1153 b 168 1250 122 1200 138 1223 l 180 1257 b 269 1333 210 1283 240 1306 b 305 1405 294 1356 305 1381 b 284 1469 305 1426 298 1447 b 228 1525 269 1492 251 1511 b 183 1600 197 1545 183 1571 b 190 1640 183 1613 184 1626 b 197 1670 193 1650 194 1660 b 272 1735 213 1719 230 1735 b 295 1734 279 1735 287 1735 b 323 1732 305 1732 314 1732 b 350 1731 333 1732 341 1732 b 377 1742 369 1729 377 1732 b 370 1761 377 1747 374 1754 l 301 1898 b 217 2066 274 1954 248 2012 b 186 2101 204 2089 196 2101 b 154 2069 177 2101 167 2091 b 12 1824 105 1987 59 1907 b 0 1787 4 1810 0 1797 b 59 1744 0 1761 20 1745 b 160 1738 92 1744 125 1740 b 145 1692 156 1721 151 1706 b 135 1633 138 1672 135 1652 b 184 1518 135 1591 151 1552 b 229 1475 199 1503 213 1488 b 259 1431 249 1456 259 1444 b 229 1388 259 1420 249 1407 b 151 1325 203 1365 177 1345 b 105 1279 134 1310 118 1296 b 73 1202 84 1251 73 1227 b 108 1123 73 1176 85 1152 b 255 1031 148 1077 199 1051 b 282 1014 274 1025 282 1021 b 262 991 282 1008 275 1001 b 151 914 226 963 189 939 b 79 851 125 896 99 877 b 63 809 69 837 63 824 b 79 769 63 796 68 783 b 202 697 111 729 154 710 b 266 670 225 690 266 688 b 210 622 266 648 232 635 b 82 534 167 593 120 570 b 55 491 63 518 55 505 b 79 448 55 478 63 465 b 255 361 127 395 192 380 b 288 343 269 359 288 357 b 266 312 288 331 275 320 b 144 223 229 278 184 253 b 85 134 104 193 85 166 b 118 53 85 111 96 85 b 190 0 135 29 160 14 z',\n        },\n        arpeggiatoDown: {\n            xMin: 0,\n            xMax: 218,\n            yMin: 0,\n            yMax: 1440,\n            ha: 1440,\n            o: 'm 161 16 b 310 261 210 98 259 180 b 314 275 312 266 314 271 b 302 295 314 282 310 289 b 252 311 287 308 269 311 b 217 310 240 311 229 310 b 190 333 202 310 194 315 b 151 412 186 363 171 389 b 102 501 120 452 102 477 b 150 588 102 524 118 547 b 161 603 154 592 158 598 b 181 661 176 622 181 641 b 173 704 181 675 179 690 b 86 795 156 746 121 770 b 53 829 63 811 53 819 b 78 868 53 840 62 851 b 102 888 85 876 94 883 b 180 956 128 912 156 933 b 216 1028 204 979 216 1002 b 203 1081 216 1044 212 1061 b 115 1171 186 1123 148 1145 b 75 1221 88 1191 75 1207 b 114 1272 75 1237 88 1251 b 173 1308 132 1284 154 1296 b 226 1339 190 1318 209 1328 b 265 1405 253 1359 265 1380 b 258 1447 265 1418 264 1431 b 154 1541 242 1499 199 1521 b 109 1581 124 1555 109 1567 b 141 1627 109 1594 121 1608 b 204 1680 163 1646 184 1662 b 233 1742 223 1699 233 1719 b 226 1777 233 1752 230 1764 b 135 1862 210 1822 173 1840 b 104 1895 114 1875 104 1884 b 118 1930 104 1904 109 1914 b 192 2006 135 1961 161 1986 b 206 2029 203 2013 206 2022 b 192 2064 206 2040 197 2052 b 180 2074 187 2071 184 2074 b 156 2061 171 2074 163 2065 b 84 1983 125 2040 102 2013 b 65 1921 71 1961 65 1941 b 88 1853 65 1899 72 1876 b 171 1784 108 1820 138 1801 b 190 1764 184 1777 190 1770 b 174 1741 190 1757 184 1750 b 107 1683 153 1722 128 1704 b 68 1610 81 1659 68 1636 b 88 1548 68 1591 75 1571 b 177 1470 109 1512 141 1489 b 223 1431 209 1453 223 1443 b 179 1390 223 1420 209 1408 b 128 1361 163 1380 145 1371 b 71 1322 108 1348 88 1338 b 32 1253 45 1300 32 1277 b 48 1198 32 1236 37 1218 b 147 1090 71 1152 108 1120 b 174 1057 166 1076 174 1067 b 153 1022 174 1047 167 1037 b 109 982 140 1008 124 995 b 37 919 85 962 59 942 b 9 860 17 899 9 880 b 26 806 9 844 14 827 b 120 717 50 769 84 740 b 138 691 132 708 138 700 b 130 668 138 684 135 677 b 92 618 118 651 105 635 b 59 531 71 589 59 560 b 84 455 59 507 68 481 b 132 386 98 431 115 408 b 148 341 144 372 148 357 b 144 317 148 333 147 324 b 121 305 140 307 131 305 l 98 305 b 82 304 94 304 88 304 l 32 304 b 0 292 10 304 0 302 b 12 266 0 287 4 279 b 60 164 32 233 46 199 b 127 20 84 117 105 68 b 144 0 132 9 137 0 b 161 16 150 0 154 4 z',\n        },\n        repeat1Bar: {\n            xMin: 0,\n            xMax: 599,\n            yMin: -250,\n            yMax: 175,\n            ha: 425,\n            o: 'm 216 98 b 255 75 236 84 246 75 b 291 104 265 75 274 85 b 323 147 304 117 327 125 b 289 215 323 168 314 184 b 238 252 269 239 253 252 b 187 222 222 252 207 242 b 173 206 183 216 177 212 b 157 170 163 194 157 183 b 174 138 157 160 161 150 b 216 98 189 127 200 109 z m 76 -334 b 181 -285 111 -315 148 -302 b 831 52 396 -168 613 -58 b 863 114 855 63 864 82 b 828 202 855 140 855 176 b 808 213 821 209 815 213 b 793 209 804 213 799 212 l 422 19 b 26 -179 291 -48 164 -124 b 0 -213 10 -186 0 -196 b 3 -232 0 -219 0 -225 b 52 -325 14 -265 37 -294 b 66 -337 55 -331 59 -337 b 76 -334 69 -337 72 -336 z m 769 -360 b 829 -264 779 -360 829 -284 b 769 -176 822 -232 799 -200 b 742 -163 760 -167 750 -163 b 716 -184 733 -163 723 -168 b 683 -228 708 -202 693 -213 b 672 -253 675 -236 672 -245 b 683 -281 672 -262 675 -271 b 752 -353 703 -308 732 -327 b 769 -360 756 -357 763 -360 z',\n        },\n        repeat2Bars: {\n            xMin: 0,\n            xMax: 775,\n            yMin: -247,\n            yMax: 363,\n            ha: 610,\n            o: 'm 909 412 b 873 351 906 384 893 367 b 436 50 729 249 585 147 l 91 -179 b 62 -174 76 -189 68 -183 b 12 -96 48 -147 24 -125 b 36 -16 -7 -53 -6 -43 b 220 104 96 24 158 65 b 819 507 425 232 624 369 b 881 495 852 530 861 528 b 909 412 899 469 900 439 z m 333 338 b 302 240 330 307 317 274 b 276 235 297 225 287 228 l 233 269 b 203 376 186 307 183 318 b 225 441 212 397 217 419 b 246 454 228 452 232 458 b 333 338 284 441 333 380 z m 1116 228 b 1067 158 1115 192 1092 174 b 910 59 1015 125 963 92 b 478 -240 762 -33 622 -140 b 311 -350 423 -279 366 -314 b 285 -344 298 -360 289 -356 b 239 -258 272 -314 251 -288 b 261 -196 228 -228 235 -210 b 517 -29 348 -144 436 -91 b 1030 321 681 98 861 202 b 1093 307 1060 343 1076 340 b 1116 228 1107 281 1109 252 z m 1070 -105 b 1020 -210 1057 -143 1038 -176 b 998 -210 1014 -219 1004 -215 l 924 -153 b 913 -88 899 -135 897 -112 b 949 -22 926 -66 939 -45 b 998 -7 960 6 976 9 b 1070 -105 1032 -32 1058 -63 z',\n        },\n        repeat4Bars: {\n            xMin: 0,\n            xMax: 1374,\n            yMin: -304,\n            yMax: 304,\n            ha: 608,\n            o: 'm 78 -266 b 92 -258 82 -266 88 -264 b 114 -240 98 -251 107 -246 b 638 107 289 -125 467 -14 b 873 271 716 161 793 216 b 907 337 894 285 906 305 b 887 400 901 354 897 379 b 852 438 877 426 867 438 b 814 420 842 438 829 432 b 135 -33 592 262 366 111 b 12 -121 92 -60 48 -84 b 0 -144 4 -128 0 -135 b 4 -160 0 -148 1 -154 b 63 -255 17 -196 45 -223 b 78 -266 68 -262 72 -266 z m 291 148 b 325 223 302 148 308 170 b 333 256 328 235 330 246 b 264 363 330 305 298 336 b 242 373 255 369 248 373 b 220 347 232 373 225 364 b 202 288 216 327 213 305 b 190 252 193 275 190 262 b 222 200 190 232 202 215 b 291 148 264 170 279 148 z m 815 -367 b 829 -359 819 -367 824 -364 b 851 -343 835 -353 844 -347 b 1375 6 1027 -228 1205 -117 l 1610 170 b 1644 235 1632 184 1643 203 b 1626 300 1639 253 1634 276 b 1590 337 1614 325 1604 337 b 1551 320 1580 337 1567 330 b 873 -135 1329 161 1103 10 b 749 -222 829 -161 785 -184 b 737 -245 742 -230 737 -238 b 742 -261 737 -249 739 -255 b 802 -357 755 -297 782 -325 b 815 -367 805 -363 809 -367 z m 396 -360 b 408 -356 400 -360 403 -359 b 609 -223 471 -307 543 -269 b 896 -19 706 -156 795 -81 b 1164 154 985 37 1074 96 b 1214 223 1189 170 1211 187 b 1176 321 1204 253 1205 292 b 1159 330 1169 327 1165 330 b 1145 324 1155 330 1151 328 b 1048 258 1113 302 1081 278 b 357 -202 809 117 598 -65 b 333 -238 341 -212 333 -223 b 338 -262 333 -245 334 -253 b 384 -350 350 -294 372 -318 b 396 -360 386 -354 390 -360 z m 1162 -438 b 1174 -433 1166 -438 1169 -436 b 1374 -300 1237 -384 1309 -346 b 1660 -96 1470 -233 1561 -158 b 1930 76 1751 -39 1840 19 b 1979 147 1954 92 1977 109 b 1943 243 1968 177 1971 216 b 1924 253 1935 251 1930 253 b 1911 248 1920 253 1915 252 b 1814 181 1878 225 1848 202 b 1123 -279 1575 40 1364 -141 b 1099 -315 1106 -289 1099 -300 b 1103 -338 1099 -321 1100 -330 b 1149 -426 1115 -370 1138 -396 b 1162 -438 1151 -432 1156 -438 z m 1875 -295 b 1882 -291 1878 -295 1879 -294 b 1934 -189 1904 -258 1921 -223 b 1872 -96 1925 -147 1901 -120 b 1840 -78 1858 -84 1848 -78 b 1812 -109 1830 -78 1823 -88 l 1777 -173 b 1770 -199 1773 -181 1770 -190 b 1786 -230 1770 -210 1774 -220 b 1862 -289 1809 -253 1837 -269 b 1875 -295 1865 -292 1871 -295 z',\n        },\n        repeatBarSlash: {\n            xMin: 0,\n            xMax: 630,\n            yMin: -225,\n            yMax: 265,\n            ha: 490,\n            o: 'm 78 -324 b 92 -314 82 -325 88 -321 b 114 -298 96 -307 107 -302 b 638 49 289 -183 467 -72 b 873 215 716 104 792 161 b 907 279 894 229 906 248 b 887 344 901 298 897 321 b 852 382 877 369 867 380 b 814 363 842 383 829 376 b 135 -91 603 192 364 55 b 12 -177 92 -118 45 -137 b 0 -202 4 -186 0 -192 b 4 -217 0 -206 1 -212 b 63 -312 17 -253 42 -284 b 78 -324 68 -318 72 -323 z',\n        },\n        csymDiminished: {\n            xMin: 0,\n            xMax: 506,\n            yMin: 0,\n            yMax: 500,\n            ha: 500,\n            o: 'm 397 0 b 729 265 576 -1 729 95 b 711 367 729 297 723 331 b 472 670 668 498 586 595 b 315 720 423 701 372 720 b 253 713 295 720 275 719 b 32 514 144 687 75 615 b 0 374 12 468 0 420 b 27 251 0 333 9 292 b 140 117 52 196 92 153 b 397 0 223 52 317 4 z m 340 95 b 132 314 233 84 122 216 b 324 589 145 438 200 539 b 415 611 360 603 389 611 b 544 505 469 611 505 576 b 590 392 564 471 583 432 b 596 343 593 374 596 359 b 340 95 596 210 485 96 z',\n        },\n        csymHalfDiminished: {\n            xMin: -32,\n            xMax: 496,\n            yMin: -33,\n            yMax: 492,\n            ha: 525,\n            o: 'm -29 -48 b 0 -36 -19 -48 -9 -40 b 17 -20 7 -32 12 -24 b 134 94 56 19 95 56 b 372 0 207 43 282 0 b 455 13 397 0 426 4 b 677 258 556 45 671 141 b 678 289 677 268 678 278 b 593 539 678 380 654 467 b 592 541 593 540 592 540 l 684 632 b 713 678 700 647 711 665 b 714 691 714 684 714 688 b 707 704 714 698 711 701 b 691 708 701 707 696 708 b 660 691 680 708 670 701 l 552 585 b 478 634 530 606 507 624 b 361 684 438 648 397 661 b 301 703 341 697 320 703 b 226 677 275 703 251 693 b 27 449 140 618 72 543 b 0 324 9 410 -4 370 b 88 128 -1 243 30 177 b -30 -7 43 86 0 46 b -46 -33 -35 -16 -46 -24 b -42 -42 -46 -36 -45 -39 b -29 -48 -37 -46 -33 -48 z m 141 179 b 121 251 128 200 121 225 b 128 297 121 265 124 281 b 351 575 163 420 248 505 b 377 582 359 579 369 580 b 501 536 422 586 468 567 b 141 179 382 416 261 298 z m 281 105 b 179 137 240 105 206 117 b 210 168 189 147 200 157 l 537 487 b 547 455 541 477 544 467 b 556 370 552 426 556 397 b 429 154 556 274 503 207 b 281 105 384 122 336 105 z',\n        },\n        csymAugmented: {\n            xMin: 0,\n            xMax: 530,\n            yMin: 0,\n            yMax: 539,\n            ha: 539,\n            o: 'm 380 0 b 393 14 384 4 390 9 b 397 46 397 24 397 36 l 397 333 b 736 327 511 331 624 330 b 763 343 755 327 763 333 b 755 361 763 348 760 354 b 635 431 726 402 688 431 l 390 431 l 390 485 b 386 606 392 526 386 566 b 392 664 386 625 387 645 b 395 690 393 672 395 681 b 376 753 395 711 389 734 b 357 776 372 762 369 776 b 350 775 354 776 353 776 b 327 740 337 769 327 759 b 327 621 328 700 327 661 b 330 438 328 559 328 498 l 29 438 b 4 431 20 438 7 442 b 0 413 3 425 0 419 b 7 399 0 408 1 403 b 131 338 45 369 85 340 b 331 334 199 336 265 334 b 333 163 333 276 333 220 b 366 13 333 109 348 63 b 380 0 367 7 374 4 z',\n        },\n        csymMajorSeventh: {\n            xMin: 0,\n            xMax: 593,\n            yMin: 0,\n            yMax: 569,\n            ha: 569,\n            o: 'm 124 1 l 497 27 b 819 50 605 35 711 43 b 854 98 847 52 855 63 b 812 200 845 128 835 166 b 564 585 730 328 648 456 b 435 786 521 652 480 720 b 397 819 419 809 408 819 b 369 792 387 819 379 811 b 7 173 248 585 128 379 b 0 150 3 166 0 158 b 7 128 0 143 3 135 b 89 10 30 86 65 50 b 109 0 95 1 102 0 z m 163 147 b 153 153 158 147 156 148 b 164 179 147 163 158 170 b 426 644 251 334 338 488 b 442 660 432 655 436 660 b 458 645 446 660 452 655 b 727 220 547 503 636 361 b 736 202 732 213 736 206 b 714 190 736 196 730 192 b 179 148 537 177 359 163 b 163 147 174 150 168 147 z',\n        },\n        csymMinor: {\n            xMin: 0,\n            xMax: 482,\n            yMin: 193,\n            yMax: 265,\n            ha: 72,\n            o: 'm 168 278 b 197 279 177 278 187 278 b 431 292 275 287 353 288 l 431 291 b 661 302 508 295 585 300 b 693 311 672 304 688 300 b 674 346 697 324 685 338 b 564 382 641 366 606 384 l 27 360 b 0 347 17 360 1 366 b 19 314 0 333 3 321 b 168 278 66 291 115 278 z',\n        },\n        csymParensLeftTall: {\n            xMin: 0,\n            xMax: 185,\n            yMin: 0,\n            yMax: 1034,\n            ha: 1034,\n            o: 'm 215 0 b 226 17 223 1 223 10 b 229 37 229 24 229 32 b 220 81 229 52 225 66 b 167 203 206 124 181 160 b 86 616 124 338 89 474 b 82 765 85 665 82 716 b 91 886 82 805 84 845 b 245 1319 120 1038 171 1184 b 266 1397 259 1346 266 1371 b 259 1443 266 1411 264 1427 b 226 1489 253 1463 248 1489 b 193 1454 212 1489 203 1467 b 114 1292 158 1404 140 1346 b 0 806 40 1138 0 978 b 3 721 0 779 0 750 b 1 677 1 707 1 693 b 36 418 1 593 16 504 b 144 96 62 307 95 199 b 196 12 158 66 179 39 b 212 0 200 7 204 0 z',\n        },\n        csymParensRightTall: {\n            xMin: -40,\n            xMax: 189,\n            yMin: 0,\n            yMax: 1058,\n            ha: 1058,\n            o: 'm 30 1 b 63 14 42 -3 55 6 b 122 99 86 40 108 68 b 189 258 145 153 166 204 b 271 667 239 379 268 503 b 246 852 275 708 261 780 b 10 1495 197 1077 128 1295 b -14 1524 4 1505 1 1524 b -16 1522 -14 1524 -16 1524 b -46 1489 -33 1521 -43 1503 b -58 1417 -53 1464 -58 1440 b -36 1335 -58 1390 -52 1364 b 68 1138 0 1270 35 1204 b 163 883 108 1056 137 969 b 206 668 184 814 200 742 b 207 631 207 655 207 642 b 166 426 207 560 192 492 b 46 143 130 330 111 228 b 19 29 19 109 17 69 b 30 1 20 19 24 3 z',\n        },\n        csymBracketLeftTall: {\n            xMin: 0,\n            xMax: 328,\n            yMin: 2,\n            yMax: 807,\n            ha: 805,\n            o: 'm 68 3 b 76 4 71 3 73 3 b 186 13 112 12 150 13 b 240 13 204 13 222 13 l 287 13 b 379 17 317 13 348 13 b 472 121 435 24 472 69 b 467 156 472 132 469 144 b 446 174 462 168 456 174 l 439 174 b 327 166 402 167 364 166 b 265 167 307 166 285 167 l 209 167 b 187 475 199 269 189 372 b 166 985 186 645 187 815 l 377 1002 b 415 1001 389 1002 402 1001 b 456 1027 432 1001 448 1005 b 472 1096 467 1048 472 1073 b 464 1146 472 1113 469 1130 b 439 1162 459 1161 452 1162 b 40 1129 305 1151 173 1139 b 1 1093 17 1128 1 1120 b 0 1009 0 1064 0 1037 b 13 975 0 991 3 981 b 30 670 23 873 30 772 b 29 608 30 649 29 628 l 29 563 b 56 88 29 405 49 246 b 53 22 55 66 55 43 b 68 3 53 12 56 3 z',\n        },\n        csymBracketRightTall: {\n            xMin: 1,\n            xMax: 306,\n            yMin: 0,\n            yMax: 829,\n            ha: 829,\n            o: 'm 117 0 b 372 29 203 -3 287 20 l 373 29 b 406 32 383 30 395 30 b 436 60 428 33 432 43 b 441 109 439 76 441 92 b 433 200 441 140 436 170 b 409 696 422 366 409 530 b 416 887 409 763 416 831 b 415 920 416 899 415 910 l 415 1106 b 412 1135 415 1116 415 1126 l 412 1145 b 373 1189 413 1171 408 1192 b 321 1189 356 1189 338 1189 l 215 1189 l 215 1194 l 56 1194 b 6 1153 27 1195 10 1187 b 1 1064 3 1123 4 1093 b 22 1043 0 1050 6 1043 b 84 1044 42 1044 63 1044 b 264 1038 144 1044 203 1040 b 265 958 264 1011 265 985 b 262 845 265 920 264 883 b 259 710 259 801 259 755 b 279 243 259 554 271 399 b 285 170 281 219 284 194 b 95 151 222 161 158 156 b 29 81 27 147 27 147 l 29 73 b 105 0 33 0 33 0 z',\n        },\n        csymParensLeftVeryTall: {\n            xMin: 0,\n            xMax: 116,\n            yMin: 0,\n            yMax: 934,\n            ha: 934,\n            o: 'm 128 0 b 147 17 137 0 144 9 b 167 102 160 45 167 73 b 158 154 167 120 164 137 b 117 307 141 204 130 256 b 63 698 84 435 71 567 b 62 788 62 729 62 757 b 69 916 62 829 63 873 b 109 1172 81 1001 94 1087 b 132 1320 118 1221 137 1269 b 124 1345 131 1329 134 1342 b 96 1332 114 1346 102 1341 b 71 1269 82 1313 75 1292 b 39 1104 59 1214 48 1159 b 0 742 19 988 0 871 b 10 559 3 688 6 624 b 58 226 16 446 33 336 b 112 20 73 157 94 89 b 128 0 115 13 118 0 z',\n        },\n        csymParensRightVeryTall: {\n            xMin: -20,\n            xMax: 111,\n            yMin: 0,\n            yMax: 1009,\n            ha: 1009,\n            o: 'm -3 0 b 20 22 9 -1 14 12 b 36 56 26 33 32 45 b 99 274 58 128 84 199 b 160 788 135 439 163 605 b 122 1181 164 912 145 1047 b 50 1431 108 1267 86 1351 b 36 1453 48 1439 46 1453 l 35 1453 l 30 1453 b 7 1423 17 1449 7 1440 b 27 1287 9 1377 10 1331 b 96 963 71 1184 85 1074 b 105 818 102 914 105 867 b 91 624 105 753 99 688 b -4 213 72 484 48 344 b -29 101 -19 174 -29 138 b -16 27 -29 76 -24 52 b -3 0 -13 17 -14 3 z',\n        },\n        csymDiagonalArrangementSlash: {\n            xMin: 0,\n            xMax: 990,\n            yMin: -27,\n            yMax: 1028,\n            ha: 1054,\n            o: 'm 14 -37 b 58 -9 35 -45 46 -22 b 392 333 170 105 279 217 l 765 711 b 1372 1329 968 916 1168 1125 b 1424 1439 1403 1359 1417 1397 b 1426 1457 1424 1444 1426 1450 b 1416 1477 1426 1466 1423 1475 b 1374 1462 1400 1485 1385 1473 b 1181 1269 1309 1397 1246 1331 b 736 831 1031 1122 884 979 b 356 452 609 704 485 576 b 32 132 246 347 143 236 b 0 50 7 109 1 84 b 6 9 -1 37 3 23 b 14 -37 10 -9 0 -32 z',\n        },\n        accidentalNarrowReversedFlat: {\n            xMin: 0,\n            xMax: 208,\n            yMin: -231,\n            yMax: 449,\n            ha: 680,\n            o: 'm 272 -333 b 284 -320 278 -333 281 -328 b 300 -174 297 -272 300 -222 b 275 190 298 -52 279 68 b 268 445 272 275 268 360 l 268 490 b 264 612 269 530 265 572 b 236 647 264 632 252 645 l 235 647 b 217 618 220 647 220 628 b 207 526 210 588 207 556 b 210 432 207 494 210 464 b 216 268 213 377 215 323 l 216 230 l 215 232 b 154 256 194 240 174 251 b 111 264 138 261 124 264 b 3 153 50 264 10 223 b 0 94 0 132 0 114 b 194 -276 0 -63 68 -186 b 255 -323 215 -291 236 -307 b 272 -333 262 -330 268 -333 z m 233 -138 b 71 30 168 -92 105 -45 b 63 59 65 42 63 50 b 96 95 62 75 73 86 b 130 102 108 99 120 102 b 215 76 160 102 187 88 l 220 73 b 225 -22 220 42 222 10 b 233 -138 229 -62 230 -101 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            xMin: 0,\n            xMax: 335,\n            yMin: -231,\n            yMax: 449,\n            ha: 680,\n            o: 'm 151 490 b 148 612 151 530 150 572 b 132 647 148 632 141 645 b 122 618 124 647 124 628 b 117 526 118 588 117 556 b 118 432 117 494 118 464 b 121 268 120 377 121 323 l 121 232 b 86 256 109 240 98 251 b 62 264 78 261 69 264 b 1 153 29 264 6 223 b 0 94 0 132 0 114 b 109 -276 0 -63 37 -186 b 144 -323 121 -291 132 -307 b 153 -333 147 -330 151 -333 b 160 -320 157 -333 158 -328 b 168 -174 167 -272 168 -222 b 154 190 168 -52 157 68 b 151 445 153 275 151 360 z m 480 153 b 372 264 472 223 432 264 b 328 256 359 264 344 261 b 268 232 308 251 288 240 l 266 230 l 266 268 b 272 432 266 323 269 377 b 275 526 272 464 275 494 b 265 618 275 556 272 588 b 248 647 262 628 262 647 l 246 647 b 219 612 230 645 219 632 b 215 490 217 572 213 530 l 215 445 b 207 190 215 360 210 275 b 183 -174 203 68 183 -52 b 199 -320 183 -222 186 -272 b 210 -333 202 -328 204 -333 b 228 -323 215 -333 220 -330 b 288 -276 246 -307 268 -291 b 482 94 415 -186 482 -63 b 480 153 482 114 482 132 z m 40 30 b 36 59 36 42 36 50 b 55 95 35 75 42 86 b 73 102 60 99 68 102 b 121 76 89 102 105 88 l 124 73 b 127 -22 124 42 125 10 l 131 -138 b 40 30 95 -92 60 -43 z m 419 59 b 412 30 419 50 418 42 b 249 -138 374 -43 314 -92 b 258 -22 252 -101 253 -62 b 262 73 261 10 262 42 l 268 76 b 353 102 295 88 323 102 b 386 95 363 102 374 99 b 419 59 409 86 420 75 z',\n        },\n        accidentalWilsonPlus: {\n            xMin: 0,\n            xMax: 298,\n            yMin: -218,\n            yMax: 218,\n            ha: 436,\n            o: 'm 232 -314 b 236 -301 236 -310 236 -305 l 236 -295 b 243 -52 239 -213 242 -132 l 369 62 b 429 200 413 101 425 147 b 416 243 429 216 428 236 b 383 225 406 251 393 232 l 377 220 b 246 98 336 177 291 138 b 249 242 248 145 246 193 b 225 304 251 265 242 287 b 209 314 220 308 215 314 b 204 312 207 314 206 312 b 196 292 196 310 196 300 b 193 184 194 256 194 220 b 187 48 192 140 190 94 b 46 -72 141 7 94 -32 b 0 -163 13 -98 0 -127 b 1 -187 0 -170 0 -179 b 10 -235 4 -203 6 -219 b 20 -255 12 -242 14 -251 b 36 -245 26 -259 30 -249 b 181 -109 85 -200 132 -154 b 176 -258 180 -158 176 -209 b 232 -314 176 -298 186 -307 z',\n        },\n        accidentalWilsonMinus: {\n            xMin: 0,\n            xMax: 284,\n            yMin: -163,\n            yMax: 163,\n            ha: 326,\n            o: 'm 386 -232 b 409 -163 415 -222 408 -180 b 382 -69 410 -120 408 -89 b 32 228 264 30 141 118 b 17 235 26 233 22 235 b 3 219 9 235 3 228 b 0 157 3 199 0 179 b 29 69 0 125 6 95 b 323 -194 115 -29 222 -111 b 374 -235 338 -206 353 -235 b 386 -232 377 -235 382 -233 z',\n        },\n    },\n    fontFamily: 'Petaluma',\n    resolution: 1000,\n    generatedOn: '2022-12-18T09:07:50.817Z',\n};\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element with id `canvasId`.\n    static getCanvasContext(canvasId) {\n        if (!canvasId) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasId);\n        }\n        const canvas = document.getElementById(canvasId);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const startTime = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - startTime;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\nexport function loadBravura() {\n    Font.load('Bravura', BravuraFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\nexport function loadFinaleAsh() {\n    Font.load('Finale Ash', BravuraFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\nexport function loadFinaleBroadway() {\n    Font.load('Finale Broadway', BravuraFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\nexport function loadFinaleMaestro() {\n    Font.load('Finale Maestro', BravuraFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { GonvilleSmuflFont } from './gonville_glyphs';\nexport function loadGonville() {\n    Font.load('Gonville', GonvilleSmuflFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\nexport function loadGootville() {\n    Font.load('Gootville', BravuraFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { PetalumaFont } from './petaluma_glyphs';\nexport function loadPetaluma() {\n    const metrics = JSON.parse(JSON.stringify(CommonMetrics));\n    Font.load('Petaluma', PetalumaFont, metrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// vexflow.js statically bundles & preloads all of our music engraving fonts.\nimport { loadBravura } from './load_bravura';\nimport { loadCustom } from './load_custom';\nimport { loadFinaleAsh } from './load_finaleash';\nimport { loadFinaleBroadway } from './load_finalebroadway';\nimport { loadFinaleMaestro } from './load_finalemaestro';\nimport { loadGonville } from './load_gonville';\nimport { loadGootville } from './load_gootville';\nimport { loadLeland } from './load_leland';\nimport { loadMuseJazz } from './load_musejazz';\nimport { loadPetaluma } from './load_petaluma';\n// ADD_MUSIC_FONT\n// import { loadXXX } from './load_xxx';\n// Populate our font \"database\" with all our music fonts.\nexport function loadAllMusicFonts() {\n    loadBravura();\n    loadFinaleAsh();\n    loadFinaleBroadway();\n    loadFinaleMaestro();\n    loadGonville();\n    loadGootville();\n    loadPetaluma();\n    loadCustom();\n    loadLeland();\n    loadMuseJazz();\n    // ADD_MUSIC_FONT\n    // loadXXX();\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { CustomFont } from './custom_glyphs';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { LelandFont } from './leland_glyphs';\nexport function loadLeland() {\n    Font.load('Leland', LelandFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n// If you are adding a new music engraving font, search for instances of ADD_MUSIC_FONT throughout the code base.\n// To compile your new font into vexflow.js, take a look at src/fonts/load_all.ts\n// You can export a font module which can be dynamically loaded by vexflow-core.js (see: Gruntfile.js).\n// ADD_MUSIC_FONT\n// To add a new music engraving font XXX, make a copy of this file and name it load_xxx.ts.\n// Then you will need to generate xxx_glyphs.ts and xxx_metrics.ts.\n// xxx_glyphs.ts is created by tools/fonts/fontgen_smufl.js\n// xxx_metrics.ts is created by hand. You could copy bravura_metrics.ts and modify/remove/add entries where necessary.\nimport { Font } from '../font';\nimport { BravuraFont } from './bravura_glyphs';\nimport { CommonMetrics } from './common_metrics';\nexport function loadMuseJazz() {\n    Font.load('MuseJazz', BravuraFont, CommonMetrics);\n}\n","// Copyright (c) 2023-present VexFlow contributors: https://github.com/vexflow/vexflow/graphs/contributors\n// MIT License\n//\n// vexflow.ts is the entry point for the build output file vexflow.js.\n// It statically bundles all the music engraving fonts, and sets the music font stack to:\n// Flow.setMusicFont('Bravura', 'Gonville', 'Custom');\n// The webpack config inside Gruntfile.js sets the mode to 'production' to produce a minified build.\nimport { Flow } from '../src/flow';\nimport { loadAllMusicFonts } from '../src/fonts/load_all';\nloadAllMusicFonts();\nFlow.setMusicFont('Bravura', 'Gonville', 'Custom');\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","n","parseInt","prefix","text","upperFirst","s","charAt","toUpperCase","normalizeAngle","Math","PI","sumArray","arr","reduce","_a","_Fraction_fractionA","_Fraction_fractionB","__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","Fraction","GCD","Number","isNaN","t","LCM","LCMM","length","shift","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","copy","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","toMixedString","q","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","newX","newY","newW","max","newH","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","convertSizeToPixelValue","fontSize","SIZE","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","convertSizeToPointValue","validate","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","toCSSString","fontInfo","st","trim","wt","sz","scaleSize","scaleFactor","isBold","parsedWeight","isItalic","ITALIC","loadWebFont","fontName","woffURL","fontFace","FontFace","load","fonts","loadWebFonts","fontNames","allFiles","WEB_FONT_FILES","keys","host","WEB_FONT_HOST","fontPath","data","metrics","setData","setMetrics","name","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","Academico","Bravura","BravuraText","GonvilleSmufl","Gootville","GootvilleText","Leland","LelandText","Petaluma","MuseJazz","MuseJazzText","FinaleAsh","FinaleAshText","FinaleJazz","FinaleJazzText","FinaleBroadway","FinaleBroadwayText","FinaleMaestro","FinaleMaestroText","_Registry_defaultRegistry","Glyphs","__classPrivateFieldSet","Index","id","type","class","Registry","getDefaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","index","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","_c","getElementsByAttribute","attribute","indexAttr","indexAttrVal","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","RESOLUTION","CommonMetrics","cautionary","grace","noteheadAccidentalPadding","leftPadding","accidentalSpacing","Bend","ChordSymbol","spacing","subscriptOffset","superscriptOffset","superSubRatio","FretHandFinger","NoteHead","minPadding","PedalMarking","Repetition","offsetX","offsetY","coda","segno","Stave","padding","endPaddingMax","endPaddingMin","unalignedNotePadding","StaveConnector","StaveLine","StaveSection","StaveTempo","glyph","StaveText","StaveTie","StringNumber","verticalPadding","stemPadding","rightPadding","Stroke","TabSlide","TabTie","TextBracket","TextNote","Tremolo","Volta","durations","durationAliases","keySignatures","C","num","Am","F","accidental","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","G","Em","D","Bm","A","E","B","clefs","treble","lineShift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","intVal","CN","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","X","accidentals","bb","db","bs","bss","bbs","ashs","afhf","articulations","betweenLines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordentInverted","turn","turnInverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","currentMusicFont","MUSIC_FONT_STACK","clefProperties","clef","lookupMetricFontInfo","lastKeyPart","pop","curr","retVal","keyPart","keyProperties","keyOctaveGlyph","params","options","octaveShift","duration","assign","sanitizeDuration","pieces","octave","intValue","glyphName","codeNoteHead","displaced","integerToNote","integer","noteValue","textWidth","articulationCodes","artic","accidentalCodes","ornamentCodes","ornament","keySignature","spec","keySpec","notes","accList","push","getKeySignatures","hasKeySignature","durationNumber","durationToFraction","durationToNumber","durationToTicks","ticks","null","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","durationCodes","stem","beamCount","stemBeamExtension","codeFlagUp","NOTATION_FONT_SCALE","TABLATURE_FONT_SCALE","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalColumnsTable","secondOnBottom","spacedOutTetrachord","spacedOutPentachord","verySpacedOutPentachord","spacedOutHexachord","verySpacedOutHexachord","unicode","sharp","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","numBeats","beatValue","_Element_context","_Element_attrs","_Element_txtCanvas","Element","newID","ID","children","textMetrics","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","actualBoundingBoxLeft","actualBoundingBoxRight","width","height","xShift","yShift","rendered","textFont","addChildElement","child","getCategory","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","defaultTextFont","fontIsObject","fontIsString","sizeWeightStyleAreUndefined","measureText","getFont","setFontSize","getFontSize","fontSizeInPoints","fontSizeInPixels","getWidth","setWidth","setYShift","getYShift","setXShift","getXShift","setText","getText","renderText","ctx","xPos","yPos","fillText","txtCanvas","ascent","getTextMetrics","getHeight","setOriginX","bbox","setOriginY","setOrigin","WeakMap","_Modifier_spacingFromNextModifier","_Modifier_modifierContext","ModifierPosition","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","textLine","position","reset","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","checkModifierContext","setModifierContext","c","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","stave","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setStave","setXOffset","Music","NUM_TONES","canonicalNotes","roots","rootValues","rootIndexes","diatonicIntervals","diatonicAccidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","rootIndex","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","parts","rootValue","multiplier","reverseInterval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","keySigString","scale","noteLocation","scaleMap","rootName","noteName","_Accidental_checkCollision","AnnotationHorizontalJustify","AnnotationVerticalJustify","L","DEBUG","format","leftShift","additionalPadding","accidentalLinePositionsAndSpaceNeeds","prevNote","extraXSpaceNeededForLeftDisplacedNotehead","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","round","extraXSpaceNeeded","spacingBetweenStaveLines","sort","staveLineAccidentalLayoutMetrics","maxExtraXSpaceNeeded","accidentalLinePositionAndSpaceNeeds","accidentalType","priorLineMetric","currentLineMetric","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","applyAccidentals","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","setAsCautionary","start","getModifierStartXY","accX","accY","clearance","clearanceRequired","collision","Stem","UP","DOWN","WIDTH","HEIGHT","_d","_e","_f","_g","stemUpYOffset","stemDownYOffset","stemUpYBaseOffset","stemDownYBaseOffset","xBegin","xEnd","yTop","yBottom","stemExtension","stemDirection","hide","isStemlet","stemletHeight","renderHeightAdjustment","setOptions","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","yOffset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","min","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stemX","stemY","yBaseOffset","stemletYOffset","openGroup","pointerBBox","beginPath","moveTo","lineTo","stroke","closeGroup","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","verticalSpaceNeeded","glyphWidth","getGlyphWidth","horizontalJustification","hasStem","getStemDirection","lines","renderOptions","drawStem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","topTextLine","BOTTOM","greatestString","curBottom","rightOverlap","rightShift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","textHeight","getStemX","stemExt","checkStave","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","getTopY","stemTipY","stemBaseY","getBottomY","getInitialOffset","isOnStemTip","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","easyScoreHook","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","heightShift","codePointAt","setBetweenLines","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","INITIAL_OFFSET","offsetDirection","articLine","snappedLine","snapLineToStaff","drawDot","color","arc","closePath","fill","_Tickable_preFormatted","_Tickable_postFormatted","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolModifiers","Tickable","intrinsicTicks","tickMultiplier","modifiers","tupletStack","alignCenter","centerXShift","ignoreTicks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","flag","modifierContext","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","getGlyphProps","codeHead","plotMetrics","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xFreedomRight","xWidth","x1","x2","yy","spaceDeviation","parseDuration","durationString","dots","parseNoteStruct","noteStruct","durationProps","customTypes","currentTicks","parsedNoteStruct","JSON","stringify","keyProps","noteType","durationOverride","glyphProps","customGlyphs","playNote","annotationSpacing","glyphFontScale","strokePx","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","parentheses","getMembers","getState","glyphPx","getNoteStartX","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifier","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","doubleBar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dotX","dotRadius","dotY","BarNote","barline","bends","lastWidth","stringPos","phrase","tap","lineStyle","bendWidth","releaseWidth","updateWidth","setTap","getTextHeight","totalWidth","additionalWidth","drawWidth","lowestY","bendHeight","annotationY","renderBend","cpX","cpY","quadraticCurveTo","renderRelease","renderArrowHead","yBase","renderX","lastBend","lastBendDrawWidth","lastDrawnWidth","ChordSymbolBlock","symbolModifier","vAlign","isSuperscript","SUPERSCRIPT","isSubscript","SUBSCRIPT","spacingBetweenBlocks","symbols","symbol","lineSpaces","j","symbolBlocks","sup","sub","prev","getVertical","getReportWidth","getHorizontal","horizontal","vertical","reportWidth","setReportWidth","getSymbolBlock","symbolBlock","smallerFontSize","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stemBase","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","over","symbolModifiers","getDots","buildAndAttach","all","dot","dotList","maxShiftMap","noteId","dotShift","lastLine","lastNote","prevDottedSpace","halfShiftY","dotShiftY","radius","setDotShiftY","forceFlagRight","nums","numsList","shiftLeft","shiftRight","pos","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","numShift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","setFretHandFinger","xOffset","getFretHandFinger","setOffsetX","setOffsetY","customGlyph","ledger","customGlyphCode","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","getYForNote","flagStyle","setStem","buildStem","buildFlag","hasFlag","flagCode","String","fromCodePoint","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","frac","beamIsUndefined","setStemDirection","getCenterGlyphX","getStaveNoteScale","flagHeight","stemExtensionOverride","setStemLength","stemOptions","_StaveNote_noteHeads","_StaveNote_sortedKeyProps","shiftRestVertical","rest","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","minL","stemMax","stemMin","maxL","isrest","voiceShift","getVoiceShiftWidth","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","useDefaultHeadX","calculateKeyProps","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","getNoteHeadBounds","noteStemHeight","flagX","flagY","bbFlag","resultLine","thisLine","val","isChord","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","restShift","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","noteHeads","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","Infinity","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","getNoteHeadBeginX","getNoteHeadEndX","drawLedgerLines","doubleWidth","minX","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","drawNoteHeads","superStemExtension","midLineDistance","linesOverOctaveFromMidLine","spacingBetweenLines","shouldRenderStem","setNotes","cp1","cp2","textShiftX","firstXShift","lastXShift","tieSpacing","firstNote","firstIndexes","lastIndexes","isPartial","renderTie","firstYs","lastYs","lastX","firstX","firstY","lastY","topControlPointY","bottomControlPointY","renderTieText","centerX","getNotes","getTieStartX","getTieEndX","createHammeron","createPulloff","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","pow","softmax","tickValue","v","exp","addTickable","addTickables","gracenoteGroups","groupList","gracenoteGroup","isStavenote","formatWidth","groupShift","graceNotes","showSlur","slur","slurYShift","beams","formatter","Formatter","joinVoices","getMinTotalWidth","beamNotes","Beam","beamWidth","partialBeamLength","graceNote","TieClass","NoteSubGroup","groups","group","TickContext","getNextContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","tick","Ornament","ornamentNoteTransition","ornamentAttack","ornamentAlignWithNoteHead","ornamentRelease","ornamentLeft","ornamentRight","ornamentYShift","ornamentArticulation","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","glyphX","glyphY","delayXShift","startX","nextContext","charCodeAt","Parenthesis","parenthesis","isHTMLCanvas","global","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","sanitizeCanvasDims","limit","context2D","curTransfrom","getTransform","canvas","clearRect","cls","attrs","openRotation","angleDegrees","translate","rotate","closeRotation","setTransform","setBackgroundFillStyle","blur","sqrt","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","dpr","rect","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","_SVGContext_instances","_SVGContext_getShadowStyle","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","precision","backgroundFillStyle","fontCSSString","svg","create","parent","pen","NaN","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadowAttributes","stateStack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBoxOrMinX","minY","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","y1","y2","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","measureTextCache","lookup","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","WeakSet","sa","cache","entries","entry","measureImpl","getBBox","Renderer","buildContext","elementId","backend","background","renderer","lastContext","getCanvasContext","Backends","CANVAS","getSVGContext","SVG","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","extraXSpaceForDisplacedNotehead","glyphLine","numXShift","stringNumber","stemOffset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","strokes","strokeList","string","getPositions","strokeShift","allVoices","fontScale","addEndNote","noteEnd","yPositions","arrow","arrowY","textY","Type","BRUSH_DOWN","ROLL_DOWN","RASQUEDO_DOWN","BRUSH_UP","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","lineGlyph","el","Vibrato","vibratos","vibrato","setVibratoWidth","items","setVibratoCode","vx","vy","ModifierContext","members","formatted","member","getLeftShift","Clef","types","gClef","fClef","cClef","unpitchedPercussionClef1","sixStringTabClef","tab","gClef8va","fClef8va","gClef8vb","fClef8vb","getPoint","KeySignature","cancelKeySpec","alterKeySpec","setKeySig","paddingForced","convertToGlyph","acc","nextAcc","prevGlyph","cancelKey","convertToCancelAccList","cancelAccList","differentTypes","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","getEndClef","getClef","symbolType","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSegnoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","drawCoda","textX","getVerticalBarWidth","section","drawRect","setStaveSection","headroom","_StaveTempo_durationToCode","TextJustification","VoltaType","tempo","shiftY","setTempo","shiftX","bpm","GLYPHS","mordentUpper","mordentLower","p","z","pedalOpen","pedalClose","caesuraStraight","caesuraCurved","breath","superscript","subscript","smooth","justification","Justification","getBottomLineY","label","vertHeight","BEGIN_END","TimeSignature","timeSpec","customPadding","validateArgs","isNumeric","topStartX","botStartX","topText","botText","topLine","bottomLine","setTimeSig","getTimeSigCode","smallSig","timeSigCommon","timeSigCutCommon","timeSigPlusSmall","timeSigPlus","timeSigMinus","timeSigParensLeftSmall","timeSigParensLeft","timeSigParensRightSmall","timeSigParensRight","makeTimeSignatureGlyph","topDigits","botDigits","topWidth","botWidth","numbers","test","assertIsValidTimeSig","getTimeSpec","getIsNumeric","setIsNumeric","drawAt","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","defaultPadding","endX","measure","endClef","verticalBarWidth","numLines","leftBar","rightBar","spacingBetweenLinesPx","spaceAboveStaffLn","spaceBelowStaffLn","topTextPosition","bottomTextPosition","lineConfig","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","setSection","staveSection","setStaveText","getLineForY","getYForGlyphs","setBegBarType","setEndBarType","setClef","clefSpec","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","lineNumber","setConfigForLines","linesConfiguration","formatBegModifiers","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","topStave","bottomStave","texts","newType","values","textElement","SINGLE_RIGHT","THIN_DOUBLE","attachmentHeight","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","SimpleFormat","paddingBetween","accumulator","plotDebugging","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","FormatAndDraw","autoBeam","alignRests","applyAndGetBeams","formatToStave","FormatAndDrawTab","tabstave","tabnotes","opts","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","Map","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","numNotes","bracketed","some","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","setNotesOccupied","fromCharCode","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nestedTupletYOffset","yPosition","modLines","modY","lineCheck","nn","bottomY","notationStartX","_Beam_stemDirection","_Beam_ticks","_Beam_yShift","_Beam_breakOnIndexes","_Beam_beamCount","_Beam_unbeamable","_Beam_forcedPartialDirections","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","getDefaultBeamGroups","timeSig","beatTotal","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","memo","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beamRests","breaksOnFirstOrLastRest","beamMiddleOnly","breakOnStemChange","maintainStemDirections","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","showStemlets","secondaryBreaks","secondaryBreakTicks","flatBeams","flatBeamOffset","slope","stemWeight","maxSlope","minSlope","slopeIterations","slopeCost","stemletExtension","minFlatBeamOffset","breakSecondaryAt","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","nextTick","forcedBeamDirection","lookupDuration","prevNoteGetsBeam","nextNoteGetsBeam","noteGetsBeam","getBeamLines","tickOfDuration","beamStarted","beamLines","currentBeam","previousShouldBreak","tickTally","shouldBreak","beamAlone","beamDirection","lastBeam","drawStems","drawBeamLines","validBeamDurations","beamThickness","beamLine","startBeamX","startBeamY","lastBeamX","lastBeamY","BoundingBoxComputation","getX1","getY1","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","b2ac","t1","t2","ClefNote","Crescendo","extendLeft","extendRight","decrescendo","setHeight","setDecrescendo","decresc","beginX","halfHeight","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","positionEnd","invert","cps","renderCurve","cp0x","cp0y","controlPointSpacing","metric","endMetric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","LINE","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","setId","commaSeparatedRegex","setClass","defaults","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","setGlyph","SCALE","slash","ret","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","noteHeadWidth","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beamSlope","beamAngle","atan","iPointOnBeam","slashAngle","protrusionStemDeltaX","protrusionStemDeltaY","protrusionBeamDeltaX","protrusionBeamDeltaY","stem0X","KeySigNote","_MultiMeasureRest_hasPaddingLeft","_MultiMeasureRest_hasPaddingRight","_MultiMeasureRest_hasLineThickness","_MultiMeasureRest_hasSymbolSpacing","MultiMeasureRest","numberOfMeasures","xs","numberGlyphPoint","digit","lineThickness","symbolSpacing","useSymbols","showNumber","numberLine","serifThickness","semibreveRestGlyphScale","getXs","drawLine","drawSymbols","n4","n2","n1","elMiddle","elTop","yMiddle","drawPedalGlyph","createSustain","createSostenuto","pedal","MIXED","setCustomText","createUnaCorda","TEXT","customDepressText","customReleaseText","bracketHeight","textMarginRight","bracketLineWidth","depress","release","drawBracketed","prevX","prevY","isPedalDepressed","nextNoteIsSame","prevNoteIsSame","drawText","pedalDepress","pedalRelease","mixed","CODES","RepeatNote","drawArrowHead","roundedEnd","drawStartArrow","drawEndArrow","arrowheadLength","arrowheadAngle","textPositionVertical","TextVerticalPosition","textJustification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","bothArrows","distance","ratio","endY","startY","lineAngle","angle1","angle2","bottomX","startPosition","endPosition","firstIndex","lastIndex","upwardsSlope","noteheadWidth","verticalPosition","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","optionsDetails","debugNoteMetricsYs","part","fretElement","positions","ghost","drawDots","drawStemThroughStave","setGhost","tabToElement","fret","getStemY","stemDownLine","stemStartLine","drawStemThrough","stemThrough","unusedStrings","stringsUsed","getUnusedStringGroups","stemLines","upStem","downStem","totalLines","strings","containsLastString","containsFirstString","lineYs","isTopBound","isBottomBound","getPartialStemLines","drawPositions","tabX","renderStem","TabStave","addTabGlyph","TextBracketPosition","Positions","PositionsString","stop","showBracket","underlineSuperscript","mainMeasure","mainWidth","mainHeight","superY","superMeasure","superWidth","superHeight","lineY","TextDynamics","sequence","glyphFontSize","letter","TimeSigNote","VibratoBracket","bracketData","stopX","Factory","newFromElementId","renderQ","systems","initRenderer","staveSpace","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","chordSymbol","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","_GlyphOutline_i","_GlyphOutline_outline","_GlyphOutline_originX","_GlyphOutline_originY","_GlyphOutline_scale","_GlyphOutline_precision","OutlineCode","GlyphCacheEntry","fontStack","point","Glyph","loadMetrics","getOutlineBoundingBox","outline","lookupFontMetric","GlyphOutline","originX","originY","nextX","nextY","MOVE","QUADRATIC","BEZIER","lookupGlyph","ha","cachedOutline","renderGlyph","customScale","renderOutline","go","bboxComp","penX","penY","topGlyphs","botGlyphs","originShift","getCode","setPoint","getYshift","checkMetrics","metricsScale","render","renderToStave","CURRENT_CACHE_KEY","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","FormatByTicksAndDraw","ppt","pixelsPerTick","leftShiftPx","leftShiftTicks","rightShiftPx","rightShiftTicks","hairpinOptions","setRenderOptions","hairpin","dis","staffHeight","CRESC","DECRESC","SLIDE_UP","SLIDE_DOWN","createSlideUp","createSlideDown","firstFret","lastFret","slideY","ySpacing","Tuning","names","standard","dagdad","dropd","standardBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","Flow","BUILD","VERSION","DATE","setMusicFont","fetchMusicFont","fontModuleOrPath","getMusicFont","getMusicFontStack","BravuraFont","bracketTop","yMin","yMax","bracketBottom","barlineTick","breathMarkTick","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","noteheadDoubleWhole","noteheadWhole","noteheadHalf","noteheadBlack","noteheadXDoubleWhole","noteheadXWhole","noteheadXHalf","noteheadXBlack","noteheadCircleXDoubleWhole","noteheadCircleXWhole","noteheadCircleXHalf","noteheadCircleX","noteheadCircledDoubleWhole","noteheadCircledWhole","noteheadCircledHalf","noteheadCircledBlack","noteheadDoubleWholeSquare","noteheadSquareWhite","noteheadSquareBlack","noteheadTriangleDownDoubleWhole","noteheadTriangleDownWhole","noteheadTriangleDownHalf","noteheadTriangleDownBlack","noteheadTriangleUpDoubleWhole","noteheadTriangleUpWhole","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadSlashedDoubleWhole1","noteheadSlashedWhole1","noteheadSlashedHalf1","noteheadSlashedBlack1","noteheadSlashedDoubleWhole2","noteheadSlashedWhole2","noteheadSlashedHalf2","noteheadSlashedBlack2","noteheadDiamondDoubleWhole","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadParenthesis","noteheadParenthesisRight","noteheadParenthesisLeft","noteheadMoonBlack","noteheadTriangleLeftBlack","noteheadTriangleRightBlack","noteheadTriangleRoundDownBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalFlat","accidentalNatural","accidentalSharp","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBuyukMucennebSharp","accidentalBakiyeFlat","accidentalKomaSharp","accidentalKucukMucennebSharp","accidentalKoron","accidentalSori","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articStaccatissimoAbove","articStaccatissimoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataVeryShortAbove","fermataVeryShortBelow","fermataShortAbove","fermataShortBelow","breathMarkComma","breathMarkUpbow","caesura","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompDoubleCadenceUpperPrefixTurn","ornamentPrecompTrillLowerSuffix","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","pluckedLeftHandPizzicato","keyboardPedalPed","keyboardPedalUp","pictChokeCymbal","wiggleArpeggiatoUp","arrowheadBlackUp","arrowheadBlackDown","arpeggiatoUp","arpeggiatoDown","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","csymDiminished","csymHalfDiminished","csymAugmented","csymMajorSeventh","csymMinor","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","generatedOn","smufl","digits","shiftLine","noteHeadOffset","topModifierOffset","staveTempo","CustomFont","vexAccidentalMicrotonal1","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","vexWiggleArpeggioUp","GonvilleSmuflFont","LelandFont","PetalumaFont","Vex","sortAndUnique","cmp","eq","newArr","last","contains","canvasId","benchmark","startTime","Date","getTime","stackTrace","loadPetaluma"],"sourceRoot":""}